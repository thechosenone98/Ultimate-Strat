

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri May 28 08:44:41 2021

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9f 
     1                           	processor	16LF1769
     2                           	pagewidth 120
     3                           	opt	plic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    29                           	psect	_configurations_text,global,class=STRCODE,delta=2,noexec
    30                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    31                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    32                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    33                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    34                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    35                           	psect	stringtext27,global,class=STRCODE,delta=2,noexec
    36                           	psect	cinit,global,class=CODE,merge=1,delta=2
    37                           	psect	dataBIGRAM,global,delta=1
    38                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    39                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    40                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    41                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    42                           	psect	inittext,global,class=CODE,delta=2
    43                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    44                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    45                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    46                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    47                           	psect	text3,local,class=CODE,merge=1,delta=2
    48                           	psect	text4,local,class=CODE,merge=1,delta=2
    49                           	psect	text6,local,class=CODE,merge=1,delta=2
    50                           	psect	text9,local,class=CODE,merge=1,delta=2
    51                           	psect	text12,local,class=CODE,merge=1,delta=2
    52                           	psect	text15,local,class=CODE,merge=1,delta=2
    53                           	psect	swtext1,local,class=CONST,delta=2
    54                           	psect	text20,local,class=CODE,merge=1,delta=2
    55                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text28,local,class=CODE,merge=1,delta=2
    57                           	psect	text35,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text54,local,class=CODE,merge=1,delta=2
    62                           	psect	text56,local,class=CODE,merge=1,delta=2
    63                           	psect	text57,local,class=CODE,merge=1,delta=2
    64                           	psect	text58,local,class=CODE,merge=1,delta=2
    65                           	psect	text60,local,class=CODE,merge=1,delta=2
    66                           	psect	text61,local,class=CODE,merge=1,delta=2
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    68                           	dabs	1,0x620,48
    69                           	dabs	1,0x5A9,71
    70                           	dabs	1,0x5A0,9
    71                           	dabs	1,0x520,80
    72                           	dabs	1,0x4A0,80
    73                           	dabs	1,0x420,80
    74                           	dabs	1,0x3EC,4
    75                           	dabs	1,0x227C,0,_gpci
    76                           	dabs	1,0x2379,0,_pci
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 12/02/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16LF1769 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0095                     	;# 
   154  0096                     	;# 
   155  0097                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009A                     	;# 
   159  009B                     	;# 
   160  009B                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  0110                     	;# 
   170  0111                     	;# 
   171  0112                     	;# 
   172  0113                     	;# 
   173  0114                     	;# 
   174  0115                     	;# 
   175  0116                     	;# 
   176  0117                     	;# 
   177  0118                     	;# 
   178  0119                     	;# 
   179  011A                     	;# 
   180  011B                     	;# 
   181  011C                     	;# 
   182  011D                     	;# 
   183  011E                     	;# 
   184  011F                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  018E                     	;# 
   188  0191                     	;# 
   189  0191                     	;# 
   190  0192                     	;# 
   191  0193                     	;# 
   192  0193                     	;# 
   193  0194                     	;# 
   194  0195                     	;# 
   195  0196                     	;# 
   196  0199                     	;# 
   197  0199                     	;# 
   198  0199                     	;# 
   199  019A                     	;# 
   200  019A                     	;# 
   201  019A                     	;# 
   202  019B                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019C                     	;# 
   208  019C                     	;# 
   209  019C                     	;# 
   210  019D                     	;# 
   211  019D                     	;# 
   212  019D                     	;# 
   213  019E                     	;# 
   214  019E                     	;# 
   215  019E                     	;# 
   216  019F                     	;# 
   217  019F                     	;# 
   218  019F                     	;# 
   219  019F                     	;# 
   220  019F                     	;# 
   221  020C                     	;# 
   222  020D                     	;# 
   223  020E                     	;# 
   224  0211                     	;# 
   225  0211                     	;# 
   226  0212                     	;# 
   227  0212                     	;# 
   228  0213                     	;# 
   229  0213                     	;# 
   230  0214                     	;# 
   231  0214                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0215                     	;# 
   235  0215                     	;# 
   236  0216                     	;# 
   237  0216                     	;# 
   238  0217                     	;# 
   239  0217                     	;# 
   240  021D                     	;# 
   241  021E                     	;# 
   242  021F                     	;# 
   243  028C                     	;# 
   244  028D                     	;# 
   245  028E                     	;# 
   246  0291                     	;# 
   247  0291                     	;# 
   248  0292                     	;# 
   249  0293                     	;# 
   250  0294                     	;# 
   251  0298                     	;# 
   252  0298                     	;# 
   253  0299                     	;# 
   254  029A                     	;# 
   255  029B                     	;# 
   256  029E                     	;# 
   257  030C                     	;# 
   258  030D                     	;# 
   259  030E                     	;# 
   260  031B                     	;# 
   261  031C                     	;# 
   262  031D                     	;# 
   263  031E                     	;# 
   264  031F                     	;# 
   265  038C                     	;# 
   266  038D                     	;# 
   267  038E                     	;# 
   268  0391                     	;# 
   269  0392                     	;# 
   270  0393                     	;# 
   271  0394                     	;# 
   272  0395                     	;# 
   273  0396                     	;# 
   274  0397                     	;# 
   275  0398                     	;# 
   276  0399                     	;# 
   277  039B                     	;# 
   278  039C                     	;# 
   279  039D                     	;# 
   280  039E                     	;# 
   281  039F                     	;# 
   282  040E                     	;# 
   283  0413                     	;# 
   284  0413                     	;# 
   285  0414                     	;# 
   286  0414                     	;# 
   287  0415                     	;# 
   288  0416                     	;# 
   289  0417                     	;# 
   290  0418                     	;# 
   291  041A                     	;# 
   292  041A                     	;# 
   293  041B                     	;# 
   294  041B                     	;# 
   295  041C                     	;# 
   296  041D                     	;# 
   297  041E                     	;# 
   298  041F                     	;# 
   299  0493                     	;# 
   300  0493                     	;# 
   301  0494                     	;# 
   302  0495                     	;# 
   303  0496                     	;# 
   304  049A                     	;# 
   305  049A                     	;# 
   306  049B                     	;# 
   307  049C                     	;# 
   308  049D                     	;# 
   309  050F                     	;# 
   310  0510                     	;# 
   311  0511                     	;# 
   312  0512                     	;# 
   313  0513                     	;# 
   314  0514                     	;# 
   315  0515                     	;# 
   316  0516                     	;# 
   317  0590                     	;# 
   318  0591                     	;# 
   319  0592                     	;# 
   320  0592                     	;# 
   321  0592                     	;# 
   322  0593                     	;# 
   323  0593                     	;# 
   324  0594                     	;# 
   325  0595                     	;# 
   326  0595                     	;# 
   327  0595                     	;# 
   328  0596                     	;# 
   329  0596                     	;# 
   330  0597                     	;# 
   331  0598                     	;# 
   332  0598                     	;# 
   333  0599                     	;# 
   334  059A                     	;# 
   335  059A                     	;# 
   336  0617                     	;# 
   337  0617                     	;# 
   338  0618                     	;# 
   339  0619                     	;# 
   340  061A                     	;# 
   341  061A                     	;# 
   342  061B                     	;# 
   343  061C                     	;# 
   344  068D                     	;# 
   345  068E                     	;# 
   346  068F                     	;# 
   347  0690                     	;# 
   348  0691                     	;# 
   349  0692                     	;# 
   350  0693                     	;# 
   351  0694                     	;# 
   352  0695                     	;# 
   353  0696                     	;# 
   354  0697                     	;# 
   355  0698                     	;# 
   356  0699                     	;# 
   357  069A                     	;# 
   358  069B                     	;# 
   359  069C                     	;# 
   360  069D                     	;# 
   361  069E                     	;# 
   362  069F                     	;# 
   363  070D                     	;# 
   364  070E                     	;# 
   365  070F                     	;# 
   366  0710                     	;# 
   367  0711                     	;# 
   368  0712                     	;# 
   369  0713                     	;# 
   370  0714                     	;# 
   371  0715                     	;# 
   372  0716                     	;# 
   373  0717                     	;# 
   374  0718                     	;# 
   375  0719                     	;# 
   376  071A                     	;# 
   377  071B                     	;# 
   378  071C                     	;# 
   379  071D                     	;# 
   380  071E                     	;# 
   381  071F                     	;# 
   382  0794                     	;# 
   383  0795                     	;# 
   384  0796                     	;# 
   385  0797                     	;# 
   386  0798                     	;# 
   387  0799                     	;# 
   388  079A                     	;# 
   389  079B                     	;# 
   390  079C                     	;# 
   391  079D                     	;# 
   392  079E                     	;# 
   393  079F                     	;# 
   394  0D8E                     	;# 
   395  0D8F                     	;# 
   396  0D90                     	;# 
   397  0D91                     	;# 
   398  0D91                     	;# 
   399  0D92                     	;# 
   400  0D93                     	;# 
   401  0D93                     	;# 
   402  0D94                     	;# 
   403  0D95                     	;# 
   404  0D95                     	;# 
   405  0D96                     	;# 
   406  0D97                     	;# 
   407  0D97                     	;# 
   408  0D98                     	;# 
   409  0D99                     	;# 
   410  0D99                     	;# 
   411  0D9A                     	;# 
   412  0D9B                     	;# 
   413  0D9C                     	;# 
   414  0D9C                     	;# 
   415  0D9D                     	;# 
   416  0D9D                     	;# 
   417  0D9E                     	;# 
   418  0D9F                     	;# 
   419  0DA0                     	;# 
   420  0DA1                     	;# 
   421  0DA1                     	;# 
   422  0DA2                     	;# 
   423  0DA3                     	;# 
   424  0DA3                     	;# 
   425  0DA4                     	;# 
   426  0DA5                     	;# 
   427  0DA5                     	;# 
   428  0DA6                     	;# 
   429  0DA7                     	;# 
   430  0DA7                     	;# 
   431  0DA8                     	;# 
   432  0DA9                     	;# 
   433  0DA9                     	;# 
   434  0DAA                     	;# 
   435  0DAB                     	;# 
   436  0DAC                     	;# 
   437  0DAC                     	;# 
   438  0DAD                     	;# 
   439  0DAD                     	;# 
   440  0DAE                     	;# 
   441  0DAF                     	;# 
   442  0DB0                     	;# 
   443  0E0F                     	;# 
   444  0E10                     	;# 
   445  0E11                     	;# 
   446  0E12                     	;# 
   447  0E13                     	;# 
   448  0E14                     	;# 
   449  0E15                     	;# 
   450  0E16                     	;# 
   451  0E17                     	;# 
   452  0E19                     	;# 
   453  0E19                     	;# 
   454  0E19                     	;# 
   455  0E1A                     	;# 
   456  0E1B                     	;# 
   457  0E1C                     	;# 
   458  0E1C                     	;# 
   459  0E1C                     	;# 
   460  0E1D                     	;# 
   461  0E1E                     	;# 
   462  0E1F                     	;# 
   463  0E1F                     	;# 
   464  0E1F                     	;# 
   465  0E20                     	;# 
   466  0E21                     	;# 
   467  0E22                     	;# 
   468  0E24                     	;# 
   469  0E25                     	;# 
   470  0E28                     	;# 
   471  0E29                     	;# 
   472  0E2A                     	;# 
   473  0E2B                     	;# 
   474  0E2C                     	;# 
   475  0E2D                     	;# 
   476  0E2E                     	;# 
   477  0E2F                     	;# 
   478  0E30                     	;# 
   479  0E31                     	;# 
   480  0E32                     	;# 
   481  0E33                     	;# 
   482  0E34                     	;# 
   483  0E35                     	;# 
   484  0E90                     	;# 
   485  0E91                     	;# 
   486  0E92                     	;# 
   487  0E94                     	;# 
   488  0E95                     	;# 
   489  0E9C                     	;# 
   490  0E9D                     	;# 
   491  0E9E                     	;# 
   492  0E9F                     	;# 
   493  0EA0                     	;# 
   494  0EA1                     	;# 
   495  0EA2                     	;# 
   496  0EA3                     	;# 
   497  0EA4                     	;# 
   498  0EA5                     	;# 
   499  0EA6                     	;# 
   500  0EA7                     	;# 
   501  0F0F                     	;# 
   502  0F10                     	;# 
   503  0F11                     	;# 
   504  0F12                     	;# 
   505  0F13                     	;# 
   506  0F14                     	;# 
   507  0F15                     	;# 
   508  0F16                     	;# 
   509  0F17                     	;# 
   510  0F18                     	;# 
   511  0F19                     	;# 
   512  0F1A                     	;# 
   513  0F1B                     	;# 
   514  0F1C                     	;# 
   515  0F1D                     	;# 
   516  0F1E                     	;# 
   517  0F1F                     	;# 
   518  0F20                     	;# 
   519  0F21                     	;# 
   520  0F22                     	;# 
   521  0F23                     	;# 
   522  0F24                     	;# 
   523  0F25                     	;# 
   524  0F26                     	;# 
   525  0F27                     	;# 
   526  0F28                     	;# 
   527  0F29                     	;# 
   528  0F2A                     	;# 
   529  0F2B                     	;# 
   530  0F2C                     	;# 
   531  0F2D                     	;# 
   532  0FE4                     	;# 
   533  0FE5                     	;# 
   534  0FE6                     	;# 
   535  0FE7                     	;# 
   536  0FE8                     	;# 
   537  0FE9                     	;# 
   538  0FEA                     	;# 
   539  0FEB                     	;# 
   540  0FED                     	;# 
   541  0FEE                     	;# 
   542  0FEF                     	;# 
   543  0000                     	;# 
   544  0001                     	;# 
   545  0002                     	;# 
   546  0003                     	;# 
   547  0004                     	;# 
   548  0005                     	;# 
   549  0006                     	;# 
   550  0007                     	;# 
   551  0008                     	;# 
   552  0009                     	;# 
   553  000A                     	;# 
   554  000B                     	;# 
   555  000C                     	;# 
   556  000D                     	;# 
   557  000E                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001A                     	;# 
   570  001B                     	;# 
   571  001B                     	;# 
   572  001C                     	;# 
   573  001D                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  008C                     	;# 
   577  008D                     	;# 
   578  008E                     	;# 
   579  0091                     	;# 
   580  0092                     	;# 
   581  0093                     	;# 
   582  0094                     	;# 
   583  0095                     	;# 
   584  0096                     	;# 
   585  0097                     	;# 
   586  0098                     	;# 
   587  0099                     	;# 
   588  009A                     	;# 
   589  009B                     	;# 
   590  009B                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  009F                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  010E                     	;# 
   598  010F                     	;# 
   599  0110                     	;# 
   600  0111                     	;# 
   601  0112                     	;# 
   602  0113                     	;# 
   603  0114                     	;# 
   604  0115                     	;# 
   605  0116                     	;# 
   606  0117                     	;# 
   607  0118                     	;# 
   608  0119                     	;# 
   609  011A                     	;# 
   610  011B                     	;# 
   611  011C                     	;# 
   612  011D                     	;# 
   613  011E                     	;# 
   614  011F                     	;# 
   615  018C                     	;# 
   616  018D                     	;# 
   617  018E                     	;# 
   618  0191                     	;# 
   619  0191                     	;# 
   620  0192                     	;# 
   621  0193                     	;# 
   622  0193                     	;# 
   623  0194                     	;# 
   624  0195                     	;# 
   625  0196                     	;# 
   626  0199                     	;# 
   627  0199                     	;# 
   628  0199                     	;# 
   629  019A                     	;# 
   630  019A                     	;# 
   631  019A                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019B                     	;# 
   637  019C                     	;# 
   638  019C                     	;# 
   639  019C                     	;# 
   640  019D                     	;# 
   641  019D                     	;# 
   642  019D                     	;# 
   643  019E                     	;# 
   644  019E                     	;# 
   645  019E                     	;# 
   646  019F                     	;# 
   647  019F                     	;# 
   648  019F                     	;# 
   649  019F                     	;# 
   650  019F                     	;# 
   651  020C                     	;# 
   652  020D                     	;# 
   653  020E                     	;# 
   654  0211                     	;# 
   655  0211                     	;# 
   656  0212                     	;# 
   657  0212                     	;# 
   658  0213                     	;# 
   659  0213                     	;# 
   660  0214                     	;# 
   661  0214                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0215                     	;# 
   665  0215                     	;# 
   666  0216                     	;# 
   667  0216                     	;# 
   668  0217                     	;# 
   669  0217                     	;# 
   670  021D                     	;# 
   671  021E                     	;# 
   672  021F                     	;# 
   673  028C                     	;# 
   674  028D                     	;# 
   675  028E                     	;# 
   676  0291                     	;# 
   677  0291                     	;# 
   678  0292                     	;# 
   679  0293                     	;# 
   680  0294                     	;# 
   681  0298                     	;# 
   682  0298                     	;# 
   683  0299                     	;# 
   684  029A                     	;# 
   685  029B                     	;# 
   686  029E                     	;# 
   687  030C                     	;# 
   688  030D                     	;# 
   689  030E                     	;# 
   690  031B                     	;# 
   691  031C                     	;# 
   692  031D                     	;# 
   693  031E                     	;# 
   694  031F                     	;# 
   695  038C                     	;# 
   696  038D                     	;# 
   697  038E                     	;# 
   698  0391                     	;# 
   699  0392                     	;# 
   700  0393                     	;# 
   701  0394                     	;# 
   702  0395                     	;# 
   703  0396                     	;# 
   704  0397                     	;# 
   705  0398                     	;# 
   706  0399                     	;# 
   707  039B                     	;# 
   708  039C                     	;# 
   709  039D                     	;# 
   710  039E                     	;# 
   711  039F                     	;# 
   712  040E                     	;# 
   713  0413                     	;# 
   714  0413                     	;# 
   715  0414                     	;# 
   716  0414                     	;# 
   717  0415                     	;# 
   718  0416                     	;# 
   719  0417                     	;# 
   720  0418                     	;# 
   721  041A                     	;# 
   722  041A                     	;# 
   723  041B                     	;# 
   724  041B                     	;# 
   725  041C                     	;# 
   726  041D                     	;# 
   727  041E                     	;# 
   728  041F                     	;# 
   729  0493                     	;# 
   730  0493                     	;# 
   731  0494                     	;# 
   732  0495                     	;# 
   733  0496                     	;# 
   734  049A                     	;# 
   735  049A                     	;# 
   736  049B                     	;# 
   737  049C                     	;# 
   738  049D                     	;# 
   739  050F                     	;# 
   740  0510                     	;# 
   741  0511                     	;# 
   742  0512                     	;# 
   743  0513                     	;# 
   744  0514                     	;# 
   745  0515                     	;# 
   746  0516                     	;# 
   747  0590                     	;# 
   748  0591                     	;# 
   749  0592                     	;# 
   750  0592                     	;# 
   751  0592                     	;# 
   752  0593                     	;# 
   753  0593                     	;# 
   754  0594                     	;# 
   755  0595                     	;# 
   756  0595                     	;# 
   757  0595                     	;# 
   758  0596                     	;# 
   759  0596                     	;# 
   760  0597                     	;# 
   761  0598                     	;# 
   762  0598                     	;# 
   763  0599                     	;# 
   764  059A                     	;# 
   765  059A                     	;# 
   766  0617                     	;# 
   767  0617                     	;# 
   768  0618                     	;# 
   769  0619                     	;# 
   770  061A                     	;# 
   771  061A                     	;# 
   772  061B                     	;# 
   773  061C                     	;# 
   774  068D                     	;# 
   775  068E                     	;# 
   776  068F                     	;# 
   777  0690                     	;# 
   778  0691                     	;# 
   779  0692                     	;# 
   780  0693                     	;# 
   781  0694                     	;# 
   782  0695                     	;# 
   783  0696                     	;# 
   784  0697                     	;# 
   785  0698                     	;# 
   786  0699                     	;# 
   787  069A                     	;# 
   788  069B                     	;# 
   789  069C                     	;# 
   790  069D                     	;# 
   791  069E                     	;# 
   792  069F                     	;# 
   793  070D                     	;# 
   794  070E                     	;# 
   795  070F                     	;# 
   796  0710                     	;# 
   797  0711                     	;# 
   798  0712                     	;# 
   799  0713                     	;# 
   800  0714                     	;# 
   801  0715                     	;# 
   802  0716                     	;# 
   803  0717                     	;# 
   804  0718                     	;# 
   805  0719                     	;# 
   806  071A                     	;# 
   807  071B                     	;# 
   808  071C                     	;# 
   809  071D                     	;# 
   810  071E                     	;# 
   811  071F                     	;# 
   812  0794                     	;# 
   813  0795                     	;# 
   814  0796                     	;# 
   815  0797                     	;# 
   816  0798                     	;# 
   817  0799                     	;# 
   818  079A                     	;# 
   819  079B                     	;# 
   820  079C                     	;# 
   821  079D                     	;# 
   822  079E                     	;# 
   823  079F                     	;# 
   824  0D8E                     	;# 
   825  0D8F                     	;# 
   826  0D90                     	;# 
   827  0D91                     	;# 
   828  0D91                     	;# 
   829  0D92                     	;# 
   830  0D93                     	;# 
   831  0D93                     	;# 
   832  0D94                     	;# 
   833  0D95                     	;# 
   834  0D95                     	;# 
   835  0D96                     	;# 
   836  0D97                     	;# 
   837  0D97                     	;# 
   838  0D98                     	;# 
   839  0D99                     	;# 
   840  0D99                     	;# 
   841  0D9A                     	;# 
   842  0D9B                     	;# 
   843  0D9C                     	;# 
   844  0D9C                     	;# 
   845  0D9D                     	;# 
   846  0D9D                     	;# 
   847  0D9E                     	;# 
   848  0D9F                     	;# 
   849  0DA0                     	;# 
   850  0DA1                     	;# 
   851  0DA1                     	;# 
   852  0DA2                     	;# 
   853  0DA3                     	;# 
   854  0DA3                     	;# 
   855  0DA4                     	;# 
   856  0DA5                     	;# 
   857  0DA5                     	;# 
   858  0DA6                     	;# 
   859  0DA7                     	;# 
   860  0DA7                     	;# 
   861  0DA8                     	;# 
   862  0DA9                     	;# 
   863  0DA9                     	;# 
   864  0DAA                     	;# 
   865  0DAB                     	;# 
   866  0DAC                     	;# 
   867  0DAC                     	;# 
   868  0DAD                     	;# 
   869  0DAD                     	;# 
   870  0DAE                     	;# 
   871  0DAF                     	;# 
   872  0DB0                     	;# 
   873  0E0F                     	;# 
   874  0E10                     	;# 
   875  0E11                     	;# 
   876  0E12                     	;# 
   877  0E13                     	;# 
   878  0E14                     	;# 
   879  0E15                     	;# 
   880  0E16                     	;# 
   881  0E17                     	;# 
   882  0E19                     	;# 
   883  0E19                     	;# 
   884  0E19                     	;# 
   885  0E1A                     	;# 
   886  0E1B                     	;# 
   887  0E1C                     	;# 
   888  0E1C                     	;# 
   889  0E1C                     	;# 
   890  0E1D                     	;# 
   891  0E1E                     	;# 
   892  0E1F                     	;# 
   893  0E1F                     	;# 
   894  0E1F                     	;# 
   895  0E20                     	;# 
   896  0E21                     	;# 
   897  0E22                     	;# 
   898  0E24                     	;# 
   899  0E25                     	;# 
   900  0E28                     	;# 
   901  0E29                     	;# 
   902  0E2A                     	;# 
   903  0E2B                     	;# 
   904  0E2C                     	;# 
   905  0E2D                     	;# 
   906  0E2E                     	;# 
   907  0E2F                     	;# 
   908  0E30                     	;# 
   909  0E31                     	;# 
   910  0E32                     	;# 
   911  0E33                     	;# 
   912  0E34                     	;# 
   913  0E35                     	;# 
   914  0E90                     	;# 
   915  0E91                     	;# 
   916  0E92                     	;# 
   917  0E94                     	;# 
   918  0E95                     	;# 
   919  0E9C                     	;# 
   920  0E9D                     	;# 
   921  0E9E                     	;# 
   922  0E9F                     	;# 
   923  0EA0                     	;# 
   924  0EA1                     	;# 
   925  0EA2                     	;# 
   926  0EA3                     	;# 
   927  0EA4                     	;# 
   928  0EA5                     	;# 
   929  0EA6                     	;# 
   930  0EA7                     	;# 
   931  0F0F                     	;# 
   932  0F10                     	;# 
   933  0F11                     	;# 
   934  0F12                     	;# 
   935  0F13                     	;# 
   936  0F14                     	;# 
   937  0F15                     	;# 
   938  0F16                     	;# 
   939  0F17                     	;# 
   940  0F18                     	;# 
   941  0F19                     	;# 
   942  0F1A                     	;# 
   943  0F1B                     	;# 
   944  0F1C                     	;# 
   945  0F1D                     	;# 
   946  0F1E                     	;# 
   947  0F1F                     	;# 
   948  0F20                     	;# 
   949  0F21                     	;# 
   950  0F22                     	;# 
   951  0F23                     	;# 
   952  0F24                     	;# 
   953  0F25                     	;# 
   954  0F26                     	;# 
   955  0F27                     	;# 
   956  0F28                     	;# 
   957  0F29                     	;# 
   958  0F2A                     	;# 
   959  0F2B                     	;# 
   960  0F2C                     	;# 
   961  0F2D                     	;# 
   962  0FE4                     	;# 
   963  0FE5                     	;# 
   964  0FE6                     	;# 
   965  0FE7                     	;# 
   966  0FE8                     	;# 
   967  0FE9                     	;# 
   968  0FEA                     	;# 
   969  0FEB                     	;# 
   970  0FED                     	;# 
   971  0FEE                     	;# 
   972  0FEF                     	;# 
   973  0000                     	;# 
   974  0001                     	;# 
   975  0002                     	;# 
   976  0003                     	;# 
   977  0004                     	;# 
   978  0005                     	;# 
   979  0006                     	;# 
   980  0007                     	;# 
   981  0008                     	;# 
   982  0009                     	;# 
   983  000A                     	;# 
   984  000B                     	;# 
   985  000C                     	;# 
   986  000D                     	;# 
   987  000E                     	;# 
   988  0011                     	;# 
   989  0012                     	;# 
   990  0013                     	;# 
   991  0014                     	;# 
   992  0015                     	;# 
   993  0016                     	;# 
   994  0016                     	;# 
   995  0017                     	;# 
   996  0018                     	;# 
   997  0019                     	;# 
   998  001A                     	;# 
   999  001A                     	;# 
  1000  001B                     	;# 
  1001  001B                     	;# 
  1002  001C                     	;# 
  1003  001D                     	;# 
  1004  001E                     	;# 
  1005  001F                     	;# 
  1006  008C                     	;# 
  1007  008D                     	;# 
  1008  008E                     	;# 
  1009  0091                     	;# 
  1010  0092                     	;# 
  1011  0093                     	;# 
  1012  0094                     	;# 
  1013  0095                     	;# 
  1014  0096                     	;# 
  1015  0097                     	;# 
  1016  0098                     	;# 
  1017  0099                     	;# 
  1018  009A                     	;# 
  1019  009B                     	;# 
  1020  009B                     	;# 
  1021  009C                     	;# 
  1022  009D                     	;# 
  1023  009E                     	;# 
  1024  009F                     	;# 
  1025  010C                     	;# 
  1026  010D                     	;# 
  1027  010E                     	;# 
  1028  010F                     	;# 
  1029  0110                     	;# 
  1030  0111                     	;# 
  1031  0112                     	;# 
  1032  0113                     	;# 
  1033  0114                     	;# 
  1034  0115                     	;# 
  1035  0116                     	;# 
  1036  0117                     	;# 
  1037  0118                     	;# 
  1038  0119                     	;# 
  1039  011A                     	;# 
  1040  011B                     	;# 
  1041  011C                     	;# 
  1042  011D                     	;# 
  1043  011E                     	;# 
  1044  011F                     	;# 
  1045  018C                     	;# 
  1046  018D                     	;# 
  1047  018E                     	;# 
  1048  0191                     	;# 
  1049  0191                     	;# 
  1050  0192                     	;# 
  1051  0193                     	;# 
  1052  0193                     	;# 
  1053  0194                     	;# 
  1054  0195                     	;# 
  1055  0196                     	;# 
  1056  0199                     	;# 
  1057  0199                     	;# 
  1058  0199                     	;# 
  1059  019A                     	;# 
  1060  019A                     	;# 
  1061  019A                     	;# 
  1062  019B                     	;# 
  1063  019B                     	;# 
  1064  019B                     	;# 
  1065  019B                     	;# 
  1066  019B                     	;# 
  1067  019C                     	;# 
  1068  019C                     	;# 
  1069  019C                     	;# 
  1070  019D                     	;# 
  1071  019D                     	;# 
  1072  019D                     	;# 
  1073  019E                     	;# 
  1074  019E                     	;# 
  1075  019E                     	;# 
  1076  019F                     	;# 
  1077  019F                     	;# 
  1078  019F                     	;# 
  1079  019F                     	;# 
  1080  019F                     	;# 
  1081  020C                     	;# 
  1082  020D                     	;# 
  1083  020E                     	;# 
  1084  0211                     	;# 
  1085  0211                     	;# 
  1086  0212                     	;# 
  1087  0212                     	;# 
  1088  0213                     	;# 
  1089  0213                     	;# 
  1090  0214                     	;# 
  1091  0214                     	;# 
  1092  0215                     	;# 
  1093  0215                     	;# 
  1094  0215                     	;# 
  1095  0215                     	;# 
  1096  0216                     	;# 
  1097  0216                     	;# 
  1098  0217                     	;# 
  1099  0217                     	;# 
  1100  021D                     	;# 
  1101  021E                     	;# 
  1102  021F                     	;# 
  1103  028C                     	;# 
  1104  028D                     	;# 
  1105  028E                     	;# 
  1106  0291                     	;# 
  1107  0291                     	;# 
  1108  0292                     	;# 
  1109  0293                     	;# 
  1110  0294                     	;# 
  1111  0298                     	;# 
  1112  0298                     	;# 
  1113  0299                     	;# 
  1114  029A                     	;# 
  1115  029B                     	;# 
  1116  029E                     	;# 
  1117  030C                     	;# 
  1118  030D                     	;# 
  1119  030E                     	;# 
  1120  031B                     	;# 
  1121  031C                     	;# 
  1122  031D                     	;# 
  1123  031E                     	;# 
  1124  031F                     	;# 
  1125  038C                     	;# 
  1126  038D                     	;# 
  1127  038E                     	;# 
  1128  0391                     	;# 
  1129  0392                     	;# 
  1130  0393                     	;# 
  1131  0394                     	;# 
  1132  0395                     	;# 
  1133  0396                     	;# 
  1134  0397                     	;# 
  1135  0398                     	;# 
  1136  0399                     	;# 
  1137  039B                     	;# 
  1138  039C                     	;# 
  1139  039D                     	;# 
  1140  039E                     	;# 
  1141  039F                     	;# 
  1142  040E                     	;# 
  1143  0413                     	;# 
  1144  0413                     	;# 
  1145  0414                     	;# 
  1146  0414                     	;# 
  1147  0415                     	;# 
  1148  0416                     	;# 
  1149  0417                     	;# 
  1150  0418                     	;# 
  1151  041A                     	;# 
  1152  041A                     	;# 
  1153  041B                     	;# 
  1154  041B                     	;# 
  1155  041C                     	;# 
  1156  041D                     	;# 
  1157  041E                     	;# 
  1158  041F                     	;# 
  1159  0493                     	;# 
  1160  0493                     	;# 
  1161  0494                     	;# 
  1162  0495                     	;# 
  1163  0496                     	;# 
  1164  049A                     	;# 
  1165  049A                     	;# 
  1166  049B                     	;# 
  1167  049C                     	;# 
  1168  049D                     	;# 
  1169  050F                     	;# 
  1170  0510                     	;# 
  1171  0511                     	;# 
  1172  0512                     	;# 
  1173  0513                     	;# 
  1174  0514                     	;# 
  1175  0515                     	;# 
  1176  0516                     	;# 
  1177  0590                     	;# 
  1178  0591                     	;# 
  1179  0592                     	;# 
  1180  0592                     	;# 
  1181  0592                     	;# 
  1182  0593                     	;# 
  1183  0593                     	;# 
  1184  0594                     	;# 
  1185  0595                     	;# 
  1186  0595                     	;# 
  1187  0595                     	;# 
  1188  0596                     	;# 
  1189  0596                     	;# 
  1190  0597                     	;# 
  1191  0598                     	;# 
  1192  0598                     	;# 
  1193  0599                     	;# 
  1194  059A                     	;# 
  1195  059A                     	;# 
  1196  0617                     	;# 
  1197  0617                     	;# 
  1198  0618                     	;# 
  1199  0619                     	;# 
  1200  061A                     	;# 
  1201  061A                     	;# 
  1202  061B                     	;# 
  1203  061C                     	;# 
  1204  068D                     	;# 
  1205  068E                     	;# 
  1206  068F                     	;# 
  1207  0690                     	;# 
  1208  0691                     	;# 
  1209  0692                     	;# 
  1210  0693                     	;# 
  1211  0694                     	;# 
  1212  0695                     	;# 
  1213  0696                     	;# 
  1214  0697                     	;# 
  1215  0698                     	;# 
  1216  0699                     	;# 
  1217  069A                     	;# 
  1218  069B                     	;# 
  1219  069C                     	;# 
  1220  069D                     	;# 
  1221  069E                     	;# 
  1222  069F                     	;# 
  1223  070D                     	;# 
  1224  070E                     	;# 
  1225  070F                     	;# 
  1226  0710                     	;# 
  1227  0711                     	;# 
  1228  0712                     	;# 
  1229  0713                     	;# 
  1230  0714                     	;# 
  1231  0715                     	;# 
  1232  0716                     	;# 
  1233  0717                     	;# 
  1234  0718                     	;# 
  1235  0719                     	;# 
  1236  071A                     	;# 
  1237  071B                     	;# 
  1238  071C                     	;# 
  1239  071D                     	;# 
  1240  071E                     	;# 
  1241  071F                     	;# 
  1242  0794                     	;# 
  1243  0795                     	;# 
  1244  0796                     	;# 
  1245  0797                     	;# 
  1246  0798                     	;# 
  1247  0799                     	;# 
  1248  079A                     	;# 
  1249  079B                     	;# 
  1250  079C                     	;# 
  1251  079D                     	;# 
  1252  079E                     	;# 
  1253  079F                     	;# 
  1254  0D8E                     	;# 
  1255  0D8F                     	;# 
  1256  0D90                     	;# 
  1257  0D91                     	;# 
  1258  0D91                     	;# 
  1259  0D92                     	;# 
  1260  0D93                     	;# 
  1261  0D93                     	;# 
  1262  0D94                     	;# 
  1263  0D95                     	;# 
  1264  0D95                     	;# 
  1265  0D96                     	;# 
  1266  0D97                     	;# 
  1267  0D97                     	;# 
  1268  0D98                     	;# 
  1269  0D99                     	;# 
  1270  0D99                     	;# 
  1271  0D9A                     	;# 
  1272  0D9B                     	;# 
  1273  0D9C                     	;# 
  1274  0D9C                     	;# 
  1275  0D9D                     	;# 
  1276  0D9D                     	;# 
  1277  0D9E                     	;# 
  1278  0D9F                     	;# 
  1279  0DA0                     	;# 
  1280  0DA1                     	;# 
  1281  0DA1                     	;# 
  1282  0DA2                     	;# 
  1283  0DA3                     	;# 
  1284  0DA3                     	;# 
  1285  0DA4                     	;# 
  1286  0DA5                     	;# 
  1287  0DA5                     	;# 
  1288  0DA6                     	;# 
  1289  0DA7                     	;# 
  1290  0DA7                     	;# 
  1291  0DA8                     	;# 
  1292  0DA9                     	;# 
  1293  0DA9                     	;# 
  1294  0DAA                     	;# 
  1295  0DAB                     	;# 
  1296  0DAC                     	;# 
  1297  0DAC                     	;# 
  1298  0DAD                     	;# 
  1299  0DAD                     	;# 
  1300  0DAE                     	;# 
  1301  0DAF                     	;# 
  1302  0DB0                     	;# 
  1303  0E0F                     	;# 
  1304  0E10                     	;# 
  1305  0E11                     	;# 
  1306  0E12                     	;# 
  1307  0E13                     	;# 
  1308  0E14                     	;# 
  1309  0E15                     	;# 
  1310  0E16                     	;# 
  1311  0E17                     	;# 
  1312  0E19                     	;# 
  1313  0E19                     	;# 
  1314  0E19                     	;# 
  1315  0E1A                     	;# 
  1316  0E1B                     	;# 
  1317  0E1C                     	;# 
  1318  0E1C                     	;# 
  1319  0E1C                     	;# 
  1320  0E1D                     	;# 
  1321  0E1E                     	;# 
  1322  0E1F                     	;# 
  1323  0E1F                     	;# 
  1324  0E1F                     	;# 
  1325  0E20                     	;# 
  1326  0E21                     	;# 
  1327  0E22                     	;# 
  1328  0E24                     	;# 
  1329  0E25                     	;# 
  1330  0E28                     	;# 
  1331  0E29                     	;# 
  1332  0E2A                     	;# 
  1333  0E2B                     	;# 
  1334  0E2C                     	;# 
  1335  0E2D                     	;# 
  1336  0E2E                     	;# 
  1337  0E2F                     	;# 
  1338  0E30                     	;# 
  1339  0E31                     	;# 
  1340  0E32                     	;# 
  1341  0E33                     	;# 
  1342  0E34                     	;# 
  1343  0E35                     	;# 
  1344  0E90                     	;# 
  1345  0E91                     	;# 
  1346  0E92                     	;# 
  1347  0E94                     	;# 
  1348  0E95                     	;# 
  1349  0E9C                     	;# 
  1350  0E9D                     	;# 
  1351  0E9E                     	;# 
  1352  0E9F                     	;# 
  1353  0EA0                     	;# 
  1354  0EA1                     	;# 
  1355  0EA2                     	;# 
  1356  0EA3                     	;# 
  1357  0EA4                     	;# 
  1358  0EA5                     	;# 
  1359  0EA6                     	;# 
  1360  0EA7                     	;# 
  1361  0F0F                     	;# 
  1362  0F10                     	;# 
  1363  0F11                     	;# 
  1364  0F12                     	;# 
  1365  0F13                     	;# 
  1366  0F14                     	;# 
  1367  0F15                     	;# 
  1368  0F16                     	;# 
  1369  0F17                     	;# 
  1370  0F18                     	;# 
  1371  0F19                     	;# 
  1372  0F1A                     	;# 
  1373  0F1B                     	;# 
  1374  0F1C                     	;# 
  1375  0F1D                     	;# 
  1376  0F1E                     	;# 
  1377  0F1F                     	;# 
  1378  0F20                     	;# 
  1379  0F21                     	;# 
  1380  0F22                     	;# 
  1381  0F23                     	;# 
  1382  0F24                     	;# 
  1383  0F25                     	;# 
  1384  0F26                     	;# 
  1385  0F27                     	;# 
  1386  0F28                     	;# 
  1387  0F29                     	;# 
  1388  0F2A                     	;# 
  1389  0F2B                     	;# 
  1390  0F2C                     	;# 
  1391  0F2D                     	;# 
  1392  0FE4                     	;# 
  1393  0FE5                     	;# 
  1394  0FE6                     	;# 
  1395  0FE7                     	;# 
  1396  0FE8                     	;# 
  1397  0FE9                     	;# 
  1398  0FEA                     	;# 
  1399  0FEB                     	;# 
  1400  0FED                     	;# 
  1401  0FEE                     	;# 
  1402  0FEF                     	;# 
  1403  0000                     	;# 
  1404  0001                     	;# 
  1405  0002                     	;# 
  1406  0003                     	;# 
  1407  0004                     	;# 
  1408  0005                     	;# 
  1409  0006                     	;# 
  1410  0007                     	;# 
  1411  0008                     	;# 
  1412  0009                     	;# 
  1413  000A                     	;# 
  1414  000B                     	;# 
  1415  000C                     	;# 
  1416  000D                     	;# 
  1417  000E                     	;# 
  1418  0011                     	;# 
  1419  0012                     	;# 
  1420  0013                     	;# 
  1421  0014                     	;# 
  1422  0015                     	;# 
  1423  0016                     	;# 
  1424  0016                     	;# 
  1425  0017                     	;# 
  1426  0018                     	;# 
  1427  0019                     	;# 
  1428  001A                     	;# 
  1429  001A                     	;# 
  1430  001B                     	;# 
  1431  001B                     	;# 
  1432  001C                     	;# 
  1433  001D                     	;# 
  1434  001E                     	;# 
  1435  001F                     	;# 
  1436  008C                     	;# 
  1437  008D                     	;# 
  1438  008E                     	;# 
  1439  0091                     	;# 
  1440  0092                     	;# 
  1441  0093                     	;# 
  1442  0094                     	;# 
  1443  0095                     	;# 
  1444  0096                     	;# 
  1445  0097                     	;# 
  1446  0098                     	;# 
  1447  0099                     	;# 
  1448  009A                     	;# 
  1449  009B                     	;# 
  1450  009B                     	;# 
  1451  009C                     	;# 
  1452  009D                     	;# 
  1453  009E                     	;# 
  1454  009F                     	;# 
  1455  010C                     	;# 
  1456  010D                     	;# 
  1457  010E                     	;# 
  1458  010F                     	;# 
  1459  0110                     	;# 
  1460  0111                     	;# 
  1461  0112                     	;# 
  1462  0113                     	;# 
  1463  0114                     	;# 
  1464  0115                     	;# 
  1465  0116                     	;# 
  1466  0117                     	;# 
  1467  0118                     	;# 
  1468  0119                     	;# 
  1469  011A                     	;# 
  1470  011B                     	;# 
  1471  011C                     	;# 
  1472  011D                     	;# 
  1473  011E                     	;# 
  1474  011F                     	;# 
  1475  018C                     	;# 
  1476  018D                     	;# 
  1477  018E                     	;# 
  1478  0191                     	;# 
  1479  0191                     	;# 
  1480  0192                     	;# 
  1481  0193                     	;# 
  1482  0193                     	;# 
  1483  0194                     	;# 
  1484  0195                     	;# 
  1485  0196                     	;# 
  1486  0199                     	;# 
  1487  0199                     	;# 
  1488  0199                     	;# 
  1489  019A                     	;# 
  1490  019A                     	;# 
  1491  019A                     	;# 
  1492  019B                     	;# 
  1493  019B                     	;# 
  1494  019B                     	;# 
  1495  019B                     	;# 
  1496  019B                     	;# 
  1497  019C                     	;# 
  1498  019C                     	;# 
  1499  019C                     	;# 
  1500  019D                     	;# 
  1501  019D                     	;# 
  1502  019D                     	;# 
  1503  019E                     	;# 
  1504  019E                     	;# 
  1505  019E                     	;# 
  1506  019F                     	;# 
  1507  019F                     	;# 
  1508  019F                     	;# 
  1509  019F                     	;# 
  1510  019F                     	;# 
  1511  020C                     	;# 
  1512  020D                     	;# 
  1513  020E                     	;# 
  1514  0211                     	;# 
  1515  0211                     	;# 
  1516  0212                     	;# 
  1517  0212                     	;# 
  1518  0213                     	;# 
  1519  0213                     	;# 
  1520  0214                     	;# 
  1521  0214                     	;# 
  1522  0215                     	;# 
  1523  0215                     	;# 
  1524  0215                     	;# 
  1525  0215                     	;# 
  1526  0216                     	;# 
  1527  0216                     	;# 
  1528  0217                     	;# 
  1529  0217                     	;# 
  1530  021D                     	;# 
  1531  021E                     	;# 
  1532  021F                     	;# 
  1533  028C                     	;# 
  1534  028D                     	;# 
  1535  028E                     	;# 
  1536  0291                     	;# 
  1537  0291                     	;# 
  1538  0292                     	;# 
  1539  0293                     	;# 
  1540  0294                     	;# 
  1541  0298                     	;# 
  1542  0298                     	;# 
  1543  0299                     	;# 
  1544  029A                     	;# 
  1545  029B                     	;# 
  1546  029E                     	;# 
  1547  030C                     	;# 
  1548  030D                     	;# 
  1549  030E                     	;# 
  1550  031B                     	;# 
  1551  031C                     	;# 
  1552  031D                     	;# 
  1553  031E                     	;# 
  1554  031F                     	;# 
  1555  038C                     	;# 
  1556  038D                     	;# 
  1557  038E                     	;# 
  1558  0391                     	;# 
  1559  0392                     	;# 
  1560  0393                     	;# 
  1561  0394                     	;# 
  1562  0395                     	;# 
  1563  0396                     	;# 
  1564  0397                     	;# 
  1565  0398                     	;# 
  1566  0399                     	;# 
  1567  039B                     	;# 
  1568  039C                     	;# 
  1569  039D                     	;# 
  1570  039E                     	;# 
  1571  039F                     	;# 
  1572  040E                     	;# 
  1573  0413                     	;# 
  1574  0413                     	;# 
  1575  0414                     	;# 
  1576  0414                     	;# 
  1577  0415                     	;# 
  1578  0416                     	;# 
  1579  0417                     	;# 
  1580  0418                     	;# 
  1581  041A                     	;# 
  1582  041A                     	;# 
  1583  041B                     	;# 
  1584  041B                     	;# 
  1585  041C                     	;# 
  1586  041D                     	;# 
  1587  041E                     	;# 
  1588  041F                     	;# 
  1589  0493                     	;# 
  1590  0493                     	;# 
  1591  0494                     	;# 
  1592  0495                     	;# 
  1593  0496                     	;# 
  1594  049A                     	;# 
  1595  049A                     	;# 
  1596  049B                     	;# 
  1597  049C                     	;# 
  1598  049D                     	;# 
  1599  050F                     	;# 
  1600  0510                     	;# 
  1601  0511                     	;# 
  1602  0512                     	;# 
  1603  0513                     	;# 
  1604  0514                     	;# 
  1605  0515                     	;# 
  1606  0516                     	;# 
  1607  0590                     	;# 
  1608  0591                     	;# 
  1609  0592                     	;# 
  1610  0592                     	;# 
  1611  0592                     	;# 
  1612  0593                     	;# 
  1613  0593                     	;# 
  1614  0594                     	;# 
  1615  0595                     	;# 
  1616  0595                     	;# 
  1617  0595                     	;# 
  1618  0596                     	;# 
  1619  0596                     	;# 
  1620  0597                     	;# 
  1621  0598                     	;# 
  1622  0598                     	;# 
  1623  0599                     	;# 
  1624  059A                     	;# 
  1625  059A                     	;# 
  1626  0617                     	;# 
  1627  0617                     	;# 
  1628  0618                     	;# 
  1629  0619                     	;# 
  1630  061A                     	;# 
  1631  061A                     	;# 
  1632  061B                     	;# 
  1633  061C                     	;# 
  1634  068D                     	;# 
  1635  068E                     	;# 
  1636  068F                     	;# 
  1637  0690                     	;# 
  1638  0691                     	;# 
  1639  0692                     	;# 
  1640  0693                     	;# 
  1641  0694                     	;# 
  1642  0695                     	;# 
  1643  0696                     	;# 
  1644  0697                     	;# 
  1645  0698                     	;# 
  1646  0699                     	;# 
  1647  069A                     	;# 
  1648  069B                     	;# 
  1649  069C                     	;# 
  1650  069D                     	;# 
  1651  069E                     	;# 
  1652  069F                     	;# 
  1653  070D                     	;# 
  1654  070E                     	;# 
  1655  070F                     	;# 
  1656  0710                     	;# 
  1657  0711                     	;# 
  1658  0712                     	;# 
  1659  0713                     	;# 
  1660  0714                     	;# 
  1661  0715                     	;# 
  1662  0716                     	;# 
  1663  0717                     	;# 
  1664  0718                     	;# 
  1665  0719                     	;# 
  1666  071A                     	;# 
  1667  071B                     	;# 
  1668  071C                     	;# 
  1669  071D                     	;# 
  1670  071E                     	;# 
  1671  071F                     	;# 
  1672  0794                     	;# 
  1673  0795                     	;# 
  1674  0796                     	;# 
  1675  0797                     	;# 
  1676  0798                     	;# 
  1677  0799                     	;# 
  1678  079A                     	;# 
  1679  079B                     	;# 
  1680  079C                     	;# 
  1681  079D                     	;# 
  1682  079E                     	;# 
  1683  079F                     	;# 
  1684  0D8E                     	;# 
  1685  0D8F                     	;# 
  1686  0D90                     	;# 
  1687  0D91                     	;# 
  1688  0D91                     	;# 
  1689  0D92                     	;# 
  1690  0D93                     	;# 
  1691  0D93                     	;# 
  1692  0D94                     	;# 
  1693  0D95                     	;# 
  1694  0D95                     	;# 
  1695  0D96                     	;# 
  1696  0D97                     	;# 
  1697  0D97                     	;# 
  1698  0D98                     	;# 
  1699  0D99                     	;# 
  1700  0D99                     	;# 
  1701  0D9A                     	;# 
  1702  0D9B                     	;# 
  1703  0D9C                     	;# 
  1704  0D9C                     	;# 
  1705  0D9D                     	;# 
  1706  0D9D                     	;# 
  1707  0D9E                     	;# 
  1708  0D9F                     	;# 
  1709  0DA0                     	;# 
  1710  0DA1                     	;# 
  1711  0DA1                     	;# 
  1712  0DA2                     	;# 
  1713  0DA3                     	;# 
  1714  0DA3                     	;# 
  1715  0DA4                     	;# 
  1716  0DA5                     	;# 
  1717  0DA5                     	;# 
  1718  0DA6                     	;# 
  1719  0DA7                     	;# 
  1720  0DA7                     	;# 
  1721  0DA8                     	;# 
  1722  0DA9                     	;# 
  1723  0DA9                     	;# 
  1724  0DAA                     	;# 
  1725  0DAB                     	;# 
  1726  0DAC                     	;# 
  1727  0DAC                     	;# 
  1728  0DAD                     	;# 
  1729  0DAD                     	;# 
  1730  0DAE                     	;# 
  1731  0DAF                     	;# 
  1732  0DB0                     	;# 
  1733  0E0F                     	;# 
  1734  0E10                     	;# 
  1735  0E11                     	;# 
  1736  0E12                     	;# 
  1737  0E13                     	;# 
  1738  0E14                     	;# 
  1739  0E15                     	;# 
  1740  0E16                     	;# 
  1741  0E17                     	;# 
  1742  0E19                     	;# 
  1743  0E19                     	;# 
  1744  0E19                     	;# 
  1745  0E1A                     	;# 
  1746  0E1B                     	;# 
  1747  0E1C                     	;# 
  1748  0E1C                     	;# 
  1749  0E1C                     	;# 
  1750  0E1D                     	;# 
  1751  0E1E                     	;# 
  1752  0E1F                     	;# 
  1753  0E1F                     	;# 
  1754  0E1F                     	;# 
  1755  0E20                     	;# 
  1756  0E21                     	;# 
  1757  0E22                     	;# 
  1758  0E24                     	;# 
  1759  0E25                     	;# 
  1760  0E28                     	;# 
  1761  0E29                     	;# 
  1762  0E2A                     	;# 
  1763  0E2B                     	;# 
  1764  0E2C                     	;# 
  1765  0E2D                     	;# 
  1766  0E2E                     	;# 
  1767  0E2F                     	;# 
  1768  0E30                     	;# 
  1769  0E31                     	;# 
  1770  0E32                     	;# 
  1771  0E33                     	;# 
  1772  0E34                     	;# 
  1773  0E35                     	;# 
  1774  0E90                     	;# 
  1775  0E91                     	;# 
  1776  0E92                     	;# 
  1777  0E94                     	;# 
  1778  0E95                     	;# 
  1779  0E9C                     	;# 
  1780  0E9D                     	;# 
  1781  0E9E                     	;# 
  1782  0E9F                     	;# 
  1783  0EA0                     	;# 
  1784  0EA1                     	;# 
  1785  0EA2                     	;# 
  1786  0EA3                     	;# 
  1787  0EA4                     	;# 
  1788  0EA5                     	;# 
  1789  0EA6                     	;# 
  1790  0EA7                     	;# 
  1791  0F0F                     	;# 
  1792  0F10                     	;# 
  1793  0F11                     	;# 
  1794  0F12                     	;# 
  1795  0F13                     	;# 
  1796  0F14                     	;# 
  1797  0F15                     	;# 
  1798  0F16                     	;# 
  1799  0F17                     	;# 
  1800  0F18                     	;# 
  1801  0F19                     	;# 
  1802  0F1A                     	;# 
  1803  0F1B                     	;# 
  1804  0F1C                     	;# 
  1805  0F1D                     	;# 
  1806  0F1E                     	;# 
  1807  0F1F                     	;# 
  1808  0F20                     	;# 
  1809  0F21                     	;# 
  1810  0F22                     	;# 
  1811  0F23                     	;# 
  1812  0F24                     	;# 
  1813  0F25                     	;# 
  1814  0F26                     	;# 
  1815  0F27                     	;# 
  1816  0F28                     	;# 
  1817  0F29                     	;# 
  1818  0F2A                     	;# 
  1819  0F2B                     	;# 
  1820  0F2C                     	;# 
  1821  0F2D                     	;# 
  1822  0FE4                     	;# 
  1823  0FE5                     	;# 
  1824  0FE6                     	;# 
  1825  0FE7                     	;# 
  1826  0FE8                     	;# 
  1827  0FE9                     	;# 
  1828  0FEA                     	;# 
  1829  0FEB                     	;# 
  1830  0FED                     	;# 
  1831  0FEE                     	;# 
  1832  0FEF                     	;# 
  1833  0000                     	;# 
  1834  0001                     	;# 
  1835  0002                     	;# 
  1836  0003                     	;# 
  1837  0004                     	;# 
  1838  0005                     	;# 
  1839  0006                     	;# 
  1840  0007                     	;# 
  1841  0008                     	;# 
  1842  0009                     	;# 
  1843  000A                     	;# 
  1844  000B                     	;# 
  1845  000C                     	;# 
  1846  000D                     	;# 
  1847  000E                     	;# 
  1848  0011                     	;# 
  1849  0012                     	;# 
  1850  0013                     	;# 
  1851  0014                     	;# 
  1852  0015                     	;# 
  1853  0016                     	;# 
  1854  0016                     	;# 
  1855  0017                     	;# 
  1856  0018                     	;# 
  1857  0019                     	;# 
  1858  001A                     	;# 
  1859  001A                     	;# 
  1860  001B                     	;# 
  1861  001B                     	;# 
  1862  001C                     	;# 
  1863  001D                     	;# 
  1864  001E                     	;# 
  1865  001F                     	;# 
  1866  008C                     	;# 
  1867  008D                     	;# 
  1868  008E                     	;# 
  1869  0091                     	;# 
  1870  0092                     	;# 
  1871  0093                     	;# 
  1872  0094                     	;# 
  1873  0095                     	;# 
  1874  0096                     	;# 
  1875  0097                     	;# 
  1876  0098                     	;# 
  1877  0099                     	;# 
  1878  009A                     	;# 
  1879  009B                     	;# 
  1880  009B                     	;# 
  1881  009C                     	;# 
  1882  009D                     	;# 
  1883  009E                     	;# 
  1884  009F                     	;# 
  1885  010C                     	;# 
  1886  010D                     	;# 
  1887  010E                     	;# 
  1888  010F                     	;# 
  1889  0110                     	;# 
  1890  0111                     	;# 
  1891  0112                     	;# 
  1892  0113                     	;# 
  1893  0114                     	;# 
  1894  0115                     	;# 
  1895  0116                     	;# 
  1896  0117                     	;# 
  1897  0118                     	;# 
  1898  0119                     	;# 
  1899  011A                     	;# 
  1900  011B                     	;# 
  1901  011C                     	;# 
  1902  011D                     	;# 
  1903  011E                     	;# 
  1904  011F                     	;# 
  1905  018C                     	;# 
  1906  018D                     	;# 
  1907  018E                     	;# 
  1908  0191                     	;# 
  1909  0191                     	;# 
  1910  0192                     	;# 
  1911  0193                     	;# 
  1912  0193                     	;# 
  1913  0194                     	;# 
  1914  0195                     	;# 
  1915  0196                     	;# 
  1916  0199                     	;# 
  1917  0199                     	;# 
  1918  0199                     	;# 
  1919  019A                     	;# 
  1920  019A                     	;# 
  1921  019A                     	;# 
  1922  019B                     	;# 
  1923  019B                     	;# 
  1924  019B                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019C                     	;# 
  1928  019C                     	;# 
  1929  019C                     	;# 
  1930  019D                     	;# 
  1931  019D                     	;# 
  1932  019D                     	;# 
  1933  019E                     	;# 
  1934  019E                     	;# 
  1935  019E                     	;# 
  1936  019F                     	;# 
  1937  019F                     	;# 
  1938  019F                     	;# 
  1939  019F                     	;# 
  1940  019F                     	;# 
  1941  020C                     	;# 
  1942  020D                     	;# 
  1943  020E                     	;# 
  1944  0211                     	;# 
  1945  0211                     	;# 
  1946  0212                     	;# 
  1947  0212                     	;# 
  1948  0213                     	;# 
  1949  0213                     	;# 
  1950  0214                     	;# 
  1951  0214                     	;# 
  1952  0215                     	;# 
  1953  0215                     	;# 
  1954  0215                     	;# 
  1955  0215                     	;# 
  1956  0216                     	;# 
  1957  0216                     	;# 
  1958  0217                     	;# 
  1959  0217                     	;# 
  1960  021D                     	;# 
  1961  021E                     	;# 
  1962  021F                     	;# 
  1963  028C                     	;# 
  1964  028D                     	;# 
  1965  028E                     	;# 
  1966  0291                     	;# 
  1967  0291                     	;# 
  1968  0292                     	;# 
  1969  0293                     	;# 
  1970  0294                     	;# 
  1971  0298                     	;# 
  1972  0298                     	;# 
  1973  0299                     	;# 
  1974  029A                     	;# 
  1975  029B                     	;# 
  1976  029E                     	;# 
  1977  030C                     	;# 
  1978  030D                     	;# 
  1979  030E                     	;# 
  1980  031B                     	;# 
  1981  031C                     	;# 
  1982  031D                     	;# 
  1983  031E                     	;# 
  1984  031F                     	;# 
  1985  038C                     	;# 
  1986  038D                     	;# 
  1987  038E                     	;# 
  1988  0391                     	;# 
  1989  0392                     	;# 
  1990  0393                     	;# 
  1991  0394                     	;# 
  1992  0395                     	;# 
  1993  0396                     	;# 
  1994  0397                     	;# 
  1995  0398                     	;# 
  1996  0399                     	;# 
  1997  039B                     	;# 
  1998  039C                     	;# 
  1999  039D                     	;# 
  2000  039E                     	;# 
  2001  039F                     	;# 
  2002  040E                     	;# 
  2003  0413                     	;# 
  2004  0413                     	;# 
  2005  0414                     	;# 
  2006  0414                     	;# 
  2007  0415                     	;# 
  2008  0416                     	;# 
  2009  0417                     	;# 
  2010  0418                     	;# 
  2011  041A                     	;# 
  2012  041A                     	;# 
  2013  041B                     	;# 
  2014  041B                     	;# 
  2015  041C                     	;# 
  2016  041D                     	;# 
  2017  041E                     	;# 
  2018  041F                     	;# 
  2019  0493                     	;# 
  2020  0493                     	;# 
  2021  0494                     	;# 
  2022  0495                     	;# 
  2023  0496                     	;# 
  2024  049A                     	;# 
  2025  049A                     	;# 
  2026  049B                     	;# 
  2027  049C                     	;# 
  2028  049D                     	;# 
  2029  050F                     	;# 
  2030  0510                     	;# 
  2031  0511                     	;# 
  2032  0512                     	;# 
  2033  0513                     	;# 
  2034  0514                     	;# 
  2035  0515                     	;# 
  2036  0516                     	;# 
  2037  0590                     	;# 
  2038  0591                     	;# 
  2039  0592                     	;# 
  2040  0592                     	;# 
  2041  0592                     	;# 
  2042  0593                     	;# 
  2043  0593                     	;# 
  2044  0594                     	;# 
  2045  0595                     	;# 
  2046  0595                     	;# 
  2047  0595                     	;# 
  2048  0596                     	;# 
  2049  0596                     	;# 
  2050  0597                     	;# 
  2051  0598                     	;# 
  2052  0598                     	;# 
  2053  0599                     	;# 
  2054  059A                     	;# 
  2055  059A                     	;# 
  2056  0617                     	;# 
  2057  0617                     	;# 
  2058  0618                     	;# 
  2059  0619                     	;# 
  2060  061A                     	;# 
  2061  061A                     	;# 
  2062  061B                     	;# 
  2063  061C                     	;# 
  2064  068D                     	;# 
  2065  068E                     	;# 
  2066  068F                     	;# 
  2067  0690                     	;# 
  2068  0691                     	;# 
  2069  0692                     	;# 
  2070  0693                     	;# 
  2071  0694                     	;# 
  2072  0695                     	;# 
  2073  0696                     	;# 
  2074  0697                     	;# 
  2075  0698                     	;# 
  2076  0699                     	;# 
  2077  069A                     	;# 
  2078  069B                     	;# 
  2079  069C                     	;# 
  2080  069D                     	;# 
  2081  069E                     	;# 
  2082  069F                     	;# 
  2083  070D                     	;# 
  2084  070E                     	;# 
  2085  070F                     	;# 
  2086  0710                     	;# 
  2087  0711                     	;# 
  2088  0712                     	;# 
  2089  0713                     	;# 
  2090  0714                     	;# 
  2091  0715                     	;# 
  2092  0716                     	;# 
  2093  0717                     	;# 
  2094  0718                     	;# 
  2095  0719                     	;# 
  2096  071A                     	;# 
  2097  071B                     	;# 
  2098  071C                     	;# 
  2099  071D                     	;# 
  2100  071E                     	;# 
  2101  071F                     	;# 
  2102  0794                     	;# 
  2103  0795                     	;# 
  2104  0796                     	;# 
  2105  0797                     	;# 
  2106  0798                     	;# 
  2107  0799                     	;# 
  2108  079A                     	;# 
  2109  079B                     	;# 
  2110  079C                     	;# 
  2111  079D                     	;# 
  2112  079E                     	;# 
  2113  079F                     	;# 
  2114  0D8E                     	;# 
  2115  0D8F                     	;# 
  2116  0D90                     	;# 
  2117  0D91                     	;# 
  2118  0D91                     	;# 
  2119  0D92                     	;# 
  2120  0D93                     	;# 
  2121  0D93                     	;# 
  2122  0D94                     	;# 
  2123  0D95                     	;# 
  2124  0D95                     	;# 
  2125  0D96                     	;# 
  2126  0D97                     	;# 
  2127  0D97                     	;# 
  2128  0D98                     	;# 
  2129  0D99                     	;# 
  2130  0D99                     	;# 
  2131  0D9A                     	;# 
  2132  0D9B                     	;# 
  2133  0D9C                     	;# 
  2134  0D9C                     	;# 
  2135  0D9D                     	;# 
  2136  0D9D                     	;# 
  2137  0D9E                     	;# 
  2138  0D9F                     	;# 
  2139  0DA0                     	;# 
  2140  0DA1                     	;# 
  2141  0DA1                     	;# 
  2142  0DA2                     	;# 
  2143  0DA3                     	;# 
  2144  0DA3                     	;# 
  2145  0DA4                     	;# 
  2146  0DA5                     	;# 
  2147  0DA5                     	;# 
  2148  0DA6                     	;# 
  2149  0DA7                     	;# 
  2150  0DA7                     	;# 
  2151  0DA8                     	;# 
  2152  0DA9                     	;# 
  2153  0DA9                     	;# 
  2154  0DAA                     	;# 
  2155  0DAB                     	;# 
  2156  0DAC                     	;# 
  2157  0DAC                     	;# 
  2158  0DAD                     	;# 
  2159  0DAD                     	;# 
  2160  0DAE                     	;# 
  2161  0DAF                     	;# 
  2162  0DB0                     	;# 
  2163  0E0F                     	;# 
  2164  0E10                     	;# 
  2165  0E11                     	;# 
  2166  0E12                     	;# 
  2167  0E13                     	;# 
  2168  0E14                     	;# 
  2169  0E15                     	;# 
  2170  0E16                     	;# 
  2171  0E17                     	;# 
  2172  0E19                     	;# 
  2173  0E19                     	;# 
  2174  0E19                     	;# 
  2175  0E1A                     	;# 
  2176  0E1B                     	;# 
  2177  0E1C                     	;# 
  2178  0E1C                     	;# 
  2179  0E1C                     	;# 
  2180  0E1D                     	;# 
  2181  0E1E                     	;# 
  2182  0E1F                     	;# 
  2183  0E1F                     	;# 
  2184  0E1F                     	;# 
  2185  0E20                     	;# 
  2186  0E21                     	;# 
  2187  0E22                     	;# 
  2188  0E24                     	;# 
  2189  0E25                     	;# 
  2190  0E28                     	;# 
  2191  0E29                     	;# 
  2192  0E2A                     	;# 
  2193  0E2B                     	;# 
  2194  0E2C                     	;# 
  2195  0E2D                     	;# 
  2196  0E2E                     	;# 
  2197  0E2F                     	;# 
  2198  0E30                     	;# 
  2199  0E31                     	;# 
  2200  0E32                     	;# 
  2201  0E33                     	;# 
  2202  0E34                     	;# 
  2203  0E35                     	;# 
  2204  0E90                     	;# 
  2205  0E91                     	;# 
  2206  0E92                     	;# 
  2207  0E94                     	;# 
  2208  0E95                     	;# 
  2209  0E9C                     	;# 
  2210  0E9D                     	;# 
  2211  0E9E                     	;# 
  2212  0E9F                     	;# 
  2213  0EA0                     	;# 
  2214  0EA1                     	;# 
  2215  0EA2                     	;# 
  2216  0EA3                     	;# 
  2217  0EA4                     	;# 
  2218  0EA5                     	;# 
  2219  0EA6                     	;# 
  2220  0EA7                     	;# 
  2221  0F0F                     	;# 
  2222  0F10                     	;# 
  2223  0F11                     	;# 
  2224  0F12                     	;# 
  2225  0F13                     	;# 
  2226  0F14                     	;# 
  2227  0F15                     	;# 
  2228  0F16                     	;# 
  2229  0F17                     	;# 
  2230  0F18                     	;# 
  2231  0F19                     	;# 
  2232  0F1A                     	;# 
  2233  0F1B                     	;# 
  2234  0F1C                     	;# 
  2235  0F1D                     	;# 
  2236  0F1E                     	;# 
  2237  0F1F                     	;# 
  2238  0F20                     	;# 
  2239  0F21                     	;# 
  2240  0F22                     	;# 
  2241  0F23                     	;# 
  2242  0F24                     	;# 
  2243  0F25                     	;# 
  2244  0F26                     	;# 
  2245  0F27                     	;# 
  2246  0F28                     	;# 
  2247  0F29                     	;# 
  2248  0F2A                     	;# 
  2249  0F2B                     	;# 
  2250  0F2C                     	;# 
  2251  0F2D                     	;# 
  2252  0FE4                     	;# 
  2253  0FE5                     	;# 
  2254  0FE6                     	;# 
  2255  0FE7                     	;# 
  2256  0FE8                     	;# 
  2257  0FE9                     	;# 
  2258  0FEA                     	;# 
  2259  0FEB                     	;# 
  2260  0FED                     	;# 
  2261  0FEE                     	;# 
  2262  0FEF                     	;# 
  2263  0000                     	;# 
  2264  0001                     	;# 
  2265  0002                     	;# 
  2266  0003                     	;# 
  2267  0004                     	;# 
  2268  0005                     	;# 
  2269  0006                     	;# 
  2270  0007                     	;# 
  2271  0008                     	;# 
  2272  0009                     	;# 
  2273  000A                     	;# 
  2274  000B                     	;# 
  2275  000C                     	;# 
  2276  000D                     	;# 
  2277  000E                     	;# 
  2278  0011                     	;# 
  2279  0012                     	;# 
  2280  0013                     	;# 
  2281  0014                     	;# 
  2282  0015                     	;# 
  2283  0016                     	;# 
  2284  0016                     	;# 
  2285  0017                     	;# 
  2286  0018                     	;# 
  2287  0019                     	;# 
  2288  001A                     	;# 
  2289  001A                     	;# 
  2290  001B                     	;# 
  2291  001B                     	;# 
  2292  001C                     	;# 
  2293  001D                     	;# 
  2294  001E                     	;# 
  2295  001F                     	;# 
  2296  008C                     	;# 
  2297  008D                     	;# 
  2298  008E                     	;# 
  2299  0091                     	;# 
  2300  0092                     	;# 
  2301  0093                     	;# 
  2302  0094                     	;# 
  2303  0095                     	;# 
  2304  0096                     	;# 
  2305  0097                     	;# 
  2306  0098                     	;# 
  2307  0099                     	;# 
  2308  009A                     	;# 
  2309  009B                     	;# 
  2310  009B                     	;# 
  2311  009C                     	;# 
  2312  009D                     	;# 
  2313  009E                     	;# 
  2314  009F                     	;# 
  2315  010C                     	;# 
  2316  010D                     	;# 
  2317  010E                     	;# 
  2318  010F                     	;# 
  2319  0110                     	;# 
  2320  0111                     	;# 
  2321  0112                     	;# 
  2322  0113                     	;# 
  2323  0114                     	;# 
  2324  0115                     	;# 
  2325  0116                     	;# 
  2326  0117                     	;# 
  2327  0118                     	;# 
  2328  0119                     	;# 
  2329  011A                     	;# 
  2330  011B                     	;# 
  2331  011C                     	;# 
  2332  011D                     	;# 
  2333  011E                     	;# 
  2334  011F                     	;# 
  2335  018C                     	;# 
  2336  018D                     	;# 
  2337  018E                     	;# 
  2338  0191                     	;# 
  2339  0191                     	;# 
  2340  0192                     	;# 
  2341  0193                     	;# 
  2342  0193                     	;# 
  2343  0194                     	;# 
  2344  0195                     	;# 
  2345  0196                     	;# 
  2346  0199                     	;# 
  2347  0199                     	;# 
  2348  0199                     	;# 
  2349  019A                     	;# 
  2350  019A                     	;# 
  2351  019A                     	;# 
  2352  019B                     	;# 
  2353  019B                     	;# 
  2354  019B                     	;# 
  2355  019B                     	;# 
  2356  019B                     	;# 
  2357  019C                     	;# 
  2358  019C                     	;# 
  2359  019C                     	;# 
  2360  019D                     	;# 
  2361  019D                     	;# 
  2362  019D                     	;# 
  2363  019E                     	;# 
  2364  019E                     	;# 
  2365  019E                     	;# 
  2366  019F                     	;# 
  2367  019F                     	;# 
  2368  019F                     	;# 
  2369  019F                     	;# 
  2370  019F                     	;# 
  2371  020C                     	;# 
  2372  020D                     	;# 
  2373  020E                     	;# 
  2374  0211                     	;# 
  2375  0211                     	;# 
  2376  0212                     	;# 
  2377  0212                     	;# 
  2378  0213                     	;# 
  2379  0213                     	;# 
  2380  0214                     	;# 
  2381  0214                     	;# 
  2382  0215                     	;# 
  2383  0215                     	;# 
  2384  0215                     	;# 
  2385  0215                     	;# 
  2386  0216                     	;# 
  2387  0216                     	;# 
  2388  0217                     	;# 
  2389  0217                     	;# 
  2390  021D                     	;# 
  2391  021E                     	;# 
  2392  021F                     	;# 
  2393  028C                     	;# 
  2394  028D                     	;# 
  2395  028E                     	;# 
  2396  0291                     	;# 
  2397  0291                     	;# 
  2398  0292                     	;# 
  2399  0293                     	;# 
  2400  0294                     	;# 
  2401  0298                     	;# 
  2402  0298                     	;# 
  2403  0299                     	;# 
  2404  029A                     	;# 
  2405  029B                     	;# 
  2406  029E                     	;# 
  2407  030C                     	;# 
  2408  030D                     	;# 
  2409  030E                     	;# 
  2410  031B                     	;# 
  2411  031C                     	;# 
  2412  031D                     	;# 
  2413  031E                     	;# 
  2414  031F                     	;# 
  2415  038C                     	;# 
  2416  038D                     	;# 
  2417  038E                     	;# 
  2418  0391                     	;# 
  2419  0392                     	;# 
  2420  0393                     	;# 
  2421  0394                     	;# 
  2422  0395                     	;# 
  2423  0396                     	;# 
  2424  0397                     	;# 
  2425  0398                     	;# 
  2426  0399                     	;# 
  2427  039B                     	;# 
  2428  039C                     	;# 
  2429  039D                     	;# 
  2430  039E                     	;# 
  2431  039F                     	;# 
  2432  040E                     	;# 
  2433  0413                     	;# 
  2434  0413                     	;# 
  2435  0414                     	;# 
  2436  0414                     	;# 
  2437  0415                     	;# 
  2438  0416                     	;# 
  2439  0417                     	;# 
  2440  0418                     	;# 
  2441  041A                     	;# 
  2442  041A                     	;# 
  2443  041B                     	;# 
  2444  041B                     	;# 
  2445  041C                     	;# 
  2446  041D                     	;# 
  2447  041E                     	;# 
  2448  041F                     	;# 
  2449  0493                     	;# 
  2450  0493                     	;# 
  2451  0494                     	;# 
  2452  0495                     	;# 
  2453  0496                     	;# 
  2454  049A                     	;# 
  2455  049A                     	;# 
  2456  049B                     	;# 
  2457  049C                     	;# 
  2458  049D                     	;# 
  2459  050F                     	;# 
  2460  0510                     	;# 
  2461  0511                     	;# 
  2462  0512                     	;# 
  2463  0513                     	;# 
  2464  0514                     	;# 
  2465  0515                     	;# 
  2466  0516                     	;# 
  2467  0590                     	;# 
  2468  0591                     	;# 
  2469  0592                     	;# 
  2470  0592                     	;# 
  2471  0592                     	;# 
  2472  0593                     	;# 
  2473  0593                     	;# 
  2474  0594                     	;# 
  2475  0595                     	;# 
  2476  0595                     	;# 
  2477  0595                     	;# 
  2478  0596                     	;# 
  2479  0596                     	;# 
  2480  0597                     	;# 
  2481  0598                     	;# 
  2482  0598                     	;# 
  2483  0599                     	;# 
  2484  059A                     	;# 
  2485  059A                     	;# 
  2486  0617                     	;# 
  2487  0617                     	;# 
  2488  0618                     	;# 
  2489  0619                     	;# 
  2490  061A                     	;# 
  2491  061A                     	;# 
  2492  061B                     	;# 
  2493  061C                     	;# 
  2494  068D                     	;# 
  2495  068E                     	;# 
  2496  068F                     	;# 
  2497  0690                     	;# 
  2498  0691                     	;# 
  2499  0692                     	;# 
  2500  0693                     	;# 
  2501  0694                     	;# 
  2502  0695                     	;# 
  2503  0696                     	;# 
  2504  0697                     	;# 
  2505  0698                     	;# 
  2506  0699                     	;# 
  2507  069A                     	;# 
  2508  069B                     	;# 
  2509  069C                     	;# 
  2510  069D                     	;# 
  2511  069E                     	;# 
  2512  069F                     	;# 
  2513  070D                     	;# 
  2514  070E                     	;# 
  2515  070F                     	;# 
  2516  0710                     	;# 
  2517  0711                     	;# 
  2518  0712                     	;# 
  2519  0713                     	;# 
  2520  0714                     	;# 
  2521  0715                     	;# 
  2522  0716                     	;# 
  2523  0717                     	;# 
  2524  0718                     	;# 
  2525  0719                     	;# 
  2526  071A                     	;# 
  2527  071B                     	;# 
  2528  071C                     	;# 
  2529  071D                     	;# 
  2530  071E                     	;# 
  2531  071F                     	;# 
  2532  0794                     	;# 
  2533  0795                     	;# 
  2534  0796                     	;# 
  2535  0797                     	;# 
  2536  0798                     	;# 
  2537  0799                     	;# 
  2538  079A                     	;# 
  2539  079B                     	;# 
  2540  079C                     	;# 
  2541  079D                     	;# 
  2542  079E                     	;# 
  2543  079F                     	;# 
  2544  0D8E                     	;# 
  2545  0D8F                     	;# 
  2546  0D90                     	;# 
  2547  0D91                     	;# 
  2548  0D91                     	;# 
  2549  0D92                     	;# 
  2550  0D93                     	;# 
  2551  0D93                     	;# 
  2552  0D94                     	;# 
  2553  0D95                     	;# 
  2554  0D95                     	;# 
  2555  0D96                     	;# 
  2556  0D97                     	;# 
  2557  0D97                     	;# 
  2558  0D98                     	;# 
  2559  0D99                     	;# 
  2560  0D99                     	;# 
  2561  0D9A                     	;# 
  2562  0D9B                     	;# 
  2563  0D9C                     	;# 
  2564  0D9C                     	;# 
  2565  0D9D                     	;# 
  2566  0D9D                     	;# 
  2567  0D9E                     	;# 
  2568  0D9F                     	;# 
  2569  0DA0                     	;# 
  2570  0DA1                     	;# 
  2571  0DA1                     	;# 
  2572  0DA2                     	;# 
  2573  0DA3                     	;# 
  2574  0DA3                     	;# 
  2575  0DA4                     	;# 
  2576  0DA5                     	;# 
  2577  0DA5                     	;# 
  2578  0DA6                     	;# 
  2579  0DA7                     	;# 
  2580  0DA7                     	;# 
  2581  0DA8                     	;# 
  2582  0DA9                     	;# 
  2583  0DA9                     	;# 
  2584  0DAA                     	;# 
  2585  0DAB                     	;# 
  2586  0DAC                     	;# 
  2587  0DAC                     	;# 
  2588  0DAD                     	;# 
  2589  0DAD                     	;# 
  2590  0DAE                     	;# 
  2591  0DAF                     	;# 
  2592  0DB0                     	;# 
  2593  0E0F                     	;# 
  2594  0E10                     	;# 
  2595  0E11                     	;# 
  2596  0E12                     	;# 
  2597  0E13                     	;# 
  2598  0E14                     	;# 
  2599  0E15                     	;# 
  2600  0E16                     	;# 
  2601  0E17                     	;# 
  2602  0E19                     	;# 
  2603  0E19                     	;# 
  2604  0E19                     	;# 
  2605  0E1A                     	;# 
  2606  0E1B                     	;# 
  2607  0E1C                     	;# 
  2608  0E1C                     	;# 
  2609  0E1C                     	;# 
  2610  0E1D                     	;# 
  2611  0E1E                     	;# 
  2612  0E1F                     	;# 
  2613  0E1F                     	;# 
  2614  0E1F                     	;# 
  2615  0E20                     	;# 
  2616  0E21                     	;# 
  2617  0E22                     	;# 
  2618  0E24                     	;# 
  2619  0E25                     	;# 
  2620  0E28                     	;# 
  2621  0E29                     	;# 
  2622  0E2A                     	;# 
  2623  0E2B                     	;# 
  2624  0E2C                     	;# 
  2625  0E2D                     	;# 
  2626  0E2E                     	;# 
  2627  0E2F                     	;# 
  2628  0E30                     	;# 
  2629  0E31                     	;# 
  2630  0E32                     	;# 
  2631  0E33                     	;# 
  2632  0E34                     	;# 
  2633  0E35                     	;# 
  2634  0E90                     	;# 
  2635  0E91                     	;# 
  2636  0E92                     	;# 
  2637  0E94                     	;# 
  2638  0E95                     	;# 
  2639  0E9C                     	;# 
  2640  0E9D                     	;# 
  2641  0E9E                     	;# 
  2642  0E9F                     	;# 
  2643  0EA0                     	;# 
  2644  0EA1                     	;# 
  2645  0EA2                     	;# 
  2646  0EA3                     	;# 
  2647  0EA4                     	;# 
  2648  0EA5                     	;# 
  2649  0EA6                     	;# 
  2650  0EA7                     	;# 
  2651  0F0F                     	;# 
  2652  0F10                     	;# 
  2653  0F11                     	;# 
  2654  0F12                     	;# 
  2655  0F13                     	;# 
  2656  0F14                     	;# 
  2657  0F15                     	;# 
  2658  0F16                     	;# 
  2659  0F17                     	;# 
  2660  0F18                     	;# 
  2661  0F19                     	;# 
  2662  0F1A                     	;# 
  2663  0F1B                     	;# 
  2664  0F1C                     	;# 
  2665  0F1D                     	;# 
  2666  0F1E                     	;# 
  2667  0F1F                     	;# 
  2668  0F20                     	;# 
  2669  0F21                     	;# 
  2670  0F22                     	;# 
  2671  0F23                     	;# 
  2672  0F24                     	;# 
  2673  0F25                     	;# 
  2674  0F26                     	;# 
  2675  0F27                     	;# 
  2676  0F28                     	;# 
  2677  0F29                     	;# 
  2678  0F2A                     	;# 
  2679  0F2B                     	;# 
  2680  0F2C                     	;# 
  2681  0F2D                     	;# 
  2682  0FE4                     	;# 
  2683  0FE5                     	;# 
  2684  0FE6                     	;# 
  2685  0FE7                     	;# 
  2686  0FE8                     	;# 
  2687  0FE9                     	;# 
  2688  0FEA                     	;# 
  2689  0FEB                     	;# 
  2690  0FED                     	;# 
  2691  0FEE                     	;# 
  2692  0FEF                     	;# 
  2693  0000                     	;# 
  2694  0001                     	;# 
  2695  0002                     	;# 
  2696  0003                     	;# 
  2697  0004                     	;# 
  2698  0005                     	;# 
  2699  0006                     	;# 
  2700  0007                     	;# 
  2701  0008                     	;# 
  2702  0009                     	;# 
  2703  000A                     	;# 
  2704  000B                     	;# 
  2705  000C                     	;# 
  2706  000D                     	;# 
  2707  000E                     	;# 
  2708  0011                     	;# 
  2709  0012                     	;# 
  2710  0013                     	;# 
  2711  0014                     	;# 
  2712  0015                     	;# 
  2713  0016                     	;# 
  2714  0016                     	;# 
  2715  0017                     	;# 
  2716  0018                     	;# 
  2717  0019                     	;# 
  2718  001A                     	;# 
  2719  001A                     	;# 
  2720  001B                     	;# 
  2721  001B                     	;# 
  2722  001C                     	;# 
  2723  001D                     	;# 
  2724  001E                     	;# 
  2725  001F                     	;# 
  2726  008C                     	;# 
  2727  008D                     	;# 
  2728  008E                     	;# 
  2729  0091                     	;# 
  2730  0092                     	;# 
  2731  0093                     	;# 
  2732  0094                     	;# 
  2733  0095                     	;# 
  2734  0096                     	;# 
  2735  0097                     	;# 
  2736  0098                     	;# 
  2737  0099                     	;# 
  2738  009A                     	;# 
  2739  009B                     	;# 
  2740  009B                     	;# 
  2741  009C                     	;# 
  2742  009D                     	;# 
  2743  009E                     	;# 
  2744  009F                     	;# 
  2745  010C                     	;# 
  2746  010D                     	;# 
  2747  010E                     	;# 
  2748  010F                     	;# 
  2749  0110                     	;# 
  2750  0111                     	;# 
  2751  0112                     	;# 
  2752  0113                     	;# 
  2753  0114                     	;# 
  2754  0115                     	;# 
  2755  0116                     	;# 
  2756  0117                     	;# 
  2757  0118                     	;# 
  2758  0119                     	;# 
  2759  011A                     	;# 
  2760  011B                     	;# 
  2761  011C                     	;# 
  2762  011D                     	;# 
  2763  011E                     	;# 
  2764  011F                     	;# 
  2765  018C                     	;# 
  2766  018D                     	;# 
  2767  018E                     	;# 
  2768  0191                     	;# 
  2769  0191                     	;# 
  2770  0192                     	;# 
  2771  0193                     	;# 
  2772  0193                     	;# 
  2773  0194                     	;# 
  2774  0195                     	;# 
  2775  0196                     	;# 
  2776  0199                     	;# 
  2777  0199                     	;# 
  2778  0199                     	;# 
  2779  019A                     	;# 
  2780  019A                     	;# 
  2781  019A                     	;# 
  2782  019B                     	;# 
  2783  019B                     	;# 
  2784  019B                     	;# 
  2785  019B                     	;# 
  2786  019B                     	;# 
  2787  019C                     	;# 
  2788  019C                     	;# 
  2789  019C                     	;# 
  2790  019D                     	;# 
  2791  019D                     	;# 
  2792  019D                     	;# 
  2793  019E                     	;# 
  2794  019E                     	;# 
  2795  019E                     	;# 
  2796  019F                     	;# 
  2797  019F                     	;# 
  2798  019F                     	;# 
  2799  019F                     	;# 
  2800  019F                     	;# 
  2801  020C                     	;# 
  2802  020D                     	;# 
  2803  020E                     	;# 
  2804  0211                     	;# 
  2805  0211                     	;# 
  2806  0212                     	;# 
  2807  0212                     	;# 
  2808  0213                     	;# 
  2809  0213                     	;# 
  2810  0214                     	;# 
  2811  0214                     	;# 
  2812  0215                     	;# 
  2813  0215                     	;# 
  2814  0215                     	;# 
  2815  0215                     	;# 
  2816  0216                     	;# 
  2817  0216                     	;# 
  2818  0217                     	;# 
  2819  0217                     	;# 
  2820  021D                     	;# 
  2821  021E                     	;# 
  2822  021F                     	;# 
  2823  028C                     	;# 
  2824  028D                     	;# 
  2825  028E                     	;# 
  2826  0291                     	;# 
  2827  0291                     	;# 
  2828  0292                     	;# 
  2829  0293                     	;# 
  2830  0294                     	;# 
  2831  0298                     	;# 
  2832  0298                     	;# 
  2833  0299                     	;# 
  2834  029A                     	;# 
  2835  029B                     	;# 
  2836  029E                     	;# 
  2837  030C                     	;# 
  2838  030D                     	;# 
  2839  030E                     	;# 
  2840  031B                     	;# 
  2841  031C                     	;# 
  2842  031D                     	;# 
  2843  031E                     	;# 
  2844  031F                     	;# 
  2845  038C                     	;# 
  2846  038D                     	;# 
  2847  038E                     	;# 
  2848  0391                     	;# 
  2849  0392                     	;# 
  2850  0393                     	;# 
  2851  0394                     	;# 
  2852  0395                     	;# 
  2853  0396                     	;# 
  2854  0397                     	;# 
  2855  0398                     	;# 
  2856  0399                     	;# 
  2857  039B                     	;# 
  2858  039C                     	;# 
  2859  039D                     	;# 
  2860  039E                     	;# 
  2861  039F                     	;# 
  2862  040E                     	;# 
  2863  0413                     	;# 
  2864  0413                     	;# 
  2865  0414                     	;# 
  2866  0414                     	;# 
  2867  0415                     	;# 
  2868  0416                     	;# 
  2869  0417                     	;# 
  2870  0418                     	;# 
  2871  041A                     	;# 
  2872  041A                     	;# 
  2873  041B                     	;# 
  2874  041B                     	;# 
  2875  041C                     	;# 
  2876  041D                     	;# 
  2877  041E                     	;# 
  2878  041F                     	;# 
  2879  0493                     	;# 
  2880  0493                     	;# 
  2881  0494                     	;# 
  2882  0495                     	;# 
  2883  0496                     	;# 
  2884  049A                     	;# 
  2885  049A                     	;# 
  2886  049B                     	;# 
  2887  049C                     	;# 
  2888  049D                     	;# 
  2889  050F                     	;# 
  2890  0510                     	;# 
  2891  0511                     	;# 
  2892  0512                     	;# 
  2893  0513                     	;# 
  2894  0514                     	;# 
  2895  0515                     	;# 
  2896  0516                     	;# 
  2897  0590                     	;# 
  2898  0591                     	;# 
  2899  0592                     	;# 
  2900  0592                     	;# 
  2901  0592                     	;# 
  2902  0593                     	;# 
  2903  0593                     	;# 
  2904  0594                     	;# 
  2905  0595                     	;# 
  2906  0595                     	;# 
  2907  0595                     	;# 
  2908  0596                     	;# 
  2909  0596                     	;# 
  2910  0597                     	;# 
  2911  0598                     	;# 
  2912  0598                     	;# 
  2913  0599                     	;# 
  2914  059A                     	;# 
  2915  059A                     	;# 
  2916  0617                     	;# 
  2917  0617                     	;# 
  2918  0618                     	;# 
  2919  0619                     	;# 
  2920  061A                     	;# 
  2921  061A                     	;# 
  2922  061B                     	;# 
  2923  061C                     	;# 
  2924  068D                     	;# 
  2925  068E                     	;# 
  2926  068F                     	;# 
  2927  0690                     	;# 
  2928  0691                     	;# 
  2929  0692                     	;# 
  2930  0693                     	;# 
  2931  0694                     	;# 
  2932  0695                     	;# 
  2933  0696                     	;# 
  2934  0697                     	;# 
  2935  0698                     	;# 
  2936  0699                     	;# 
  2937  069A                     	;# 
  2938  069B                     	;# 
  2939  069C                     	;# 
  2940  069D                     	;# 
  2941  069E                     	;# 
  2942  069F                     	;# 
  2943  070D                     	;# 
  2944  070E                     	;# 
  2945  070F                     	;# 
  2946  0710                     	;# 
  2947  0711                     	;# 
  2948  0712                     	;# 
  2949  0713                     	;# 
  2950  0714                     	;# 
  2951  0715                     	;# 
  2952  0716                     	;# 
  2953  0717                     	;# 
  2954  0718                     	;# 
  2955  0719                     	;# 
  2956  071A                     	;# 
  2957  071B                     	;# 
  2958  071C                     	;# 
  2959  071D                     	;# 
  2960  071E                     	;# 
  2961  071F                     	;# 
  2962  0794                     	;# 
  2963  0795                     	;# 
  2964  0796                     	;# 
  2965  0797                     	;# 
  2966  0798                     	;# 
  2967  0799                     	;# 
  2968  079A                     	;# 
  2969  079B                     	;# 
  2970  079C                     	;# 
  2971  079D                     	;# 
  2972  079E                     	;# 
  2973  079F                     	;# 
  2974  0D8E                     	;# 
  2975  0D8F                     	;# 
  2976  0D90                     	;# 
  2977  0D91                     	;# 
  2978  0D91                     	;# 
  2979  0D92                     	;# 
  2980  0D93                     	;# 
  2981  0D93                     	;# 
  2982  0D94                     	;# 
  2983  0D95                     	;# 
  2984  0D95                     	;# 
  2985  0D96                     	;# 
  2986  0D97                     	;# 
  2987  0D97                     	;# 
  2988  0D98                     	;# 
  2989  0D99                     	;# 
  2990  0D99                     	;# 
  2991  0D9A                     	;# 
  2992  0D9B                     	;# 
  2993  0D9C                     	;# 
  2994  0D9C                     	;# 
  2995  0D9D                     	;# 
  2996  0D9D                     	;# 
  2997  0D9E                     	;# 
  2998  0D9F                     	;# 
  2999  0DA0                     	;# 
  3000  0DA1                     	;# 
  3001  0DA1                     	;# 
  3002  0DA2                     	;# 
  3003  0DA3                     	;# 
  3004  0DA3                     	;# 
  3005  0DA4                     	;# 
  3006  0DA5                     	;# 
  3007  0DA5                     	;# 
  3008  0DA6                     	;# 
  3009  0DA7                     	;# 
  3010  0DA7                     	;# 
  3011  0DA8                     	;# 
  3012  0DA9                     	;# 
  3013  0DA9                     	;# 
  3014  0DAA                     	;# 
  3015  0DAB                     	;# 
  3016  0DAC                     	;# 
  3017  0DAC                     	;# 
  3018  0DAD                     	;# 
  3019  0DAD                     	;# 
  3020  0DAE                     	;# 
  3021  0DAF                     	;# 
  3022  0DB0                     	;# 
  3023  0E0F                     	;# 
  3024  0E10                     	;# 
  3025  0E11                     	;# 
  3026  0E12                     	;# 
  3027  0E13                     	;# 
  3028  0E14                     	;# 
  3029  0E15                     	;# 
  3030  0E16                     	;# 
  3031  0E17                     	;# 
  3032  0E19                     	;# 
  3033  0E19                     	;# 
  3034  0E19                     	;# 
  3035  0E1A                     	;# 
  3036  0E1B                     	;# 
  3037  0E1C                     	;# 
  3038  0E1C                     	;# 
  3039  0E1C                     	;# 
  3040  0E1D                     	;# 
  3041  0E1E                     	;# 
  3042  0E1F                     	;# 
  3043  0E1F                     	;# 
  3044  0E1F                     	;# 
  3045  0E20                     	;# 
  3046  0E21                     	;# 
  3047  0E22                     	;# 
  3048  0E24                     	;# 
  3049  0E25                     	;# 
  3050  0E28                     	;# 
  3051  0E29                     	;# 
  3052  0E2A                     	;# 
  3053  0E2B                     	;# 
  3054  0E2C                     	;# 
  3055  0E2D                     	;# 
  3056  0E2E                     	;# 
  3057  0E2F                     	;# 
  3058  0E30                     	;# 
  3059  0E31                     	;# 
  3060  0E32                     	;# 
  3061  0E33                     	;# 
  3062  0E34                     	;# 
  3063  0E35                     	;# 
  3064  0E90                     	;# 
  3065  0E91                     	;# 
  3066  0E92                     	;# 
  3067  0E94                     	;# 
  3068  0E95                     	;# 
  3069  0E9C                     	;# 
  3070  0E9D                     	;# 
  3071  0E9E                     	;# 
  3072  0E9F                     	;# 
  3073  0EA0                     	;# 
  3074  0EA1                     	;# 
  3075  0EA2                     	;# 
  3076  0EA3                     	;# 
  3077  0EA4                     	;# 
  3078  0EA5                     	;# 
  3079  0EA6                     	;# 
  3080  0EA7                     	;# 
  3081  0F0F                     	;# 
  3082  0F10                     	;# 
  3083  0F11                     	;# 
  3084  0F12                     	;# 
  3085  0F13                     	;# 
  3086  0F14                     	;# 
  3087  0F15                     	;# 
  3088  0F16                     	;# 
  3089  0F17                     	;# 
  3090  0F18                     	;# 
  3091  0F19                     	;# 
  3092  0F1A                     	;# 
  3093  0F1B                     	;# 
  3094  0F1C                     	;# 
  3095  0F1D                     	;# 
  3096  0F1E                     	;# 
  3097  0F1F                     	;# 
  3098  0F20                     	;# 
  3099  0F21                     	;# 
  3100  0F22                     	;# 
  3101  0F23                     	;# 
  3102  0F24                     	;# 
  3103  0F25                     	;# 
  3104  0F26                     	;# 
  3105  0F27                     	;# 
  3106  0F28                     	;# 
  3107  0F29                     	;# 
  3108  0F2A                     	;# 
  3109  0F2B                     	;# 
  3110  0F2C                     	;# 
  3111  0F2D                     	;# 
  3112  0FE4                     	;# 
  3113  0FE5                     	;# 
  3114  0FE6                     	;# 
  3115  0FE7                     	;# 
  3116  0FE8                     	;# 
  3117  0FE9                     	;# 
  3118  0FEA                     	;# 
  3119  0FEB                     	;# 
  3120  0FED                     	;# 
  3121  0FEE                     	;# 
  3122  0FEF                     	;# 
  3123  0000                     	;# 
  3124  0001                     	;# 
  3125  0002                     	;# 
  3126  0003                     	;# 
  3127  0004                     	;# 
  3128  0005                     	;# 
  3129  0006                     	;# 
  3130  0007                     	;# 
  3131  0008                     	;# 
  3132  0009                     	;# 
  3133  000A                     	;# 
  3134  000B                     	;# 
  3135  000C                     	;# 
  3136  000D                     	;# 
  3137  000E                     	;# 
  3138  0011                     	;# 
  3139  0012                     	;# 
  3140  0013                     	;# 
  3141  0014                     	;# 
  3142  0015                     	;# 
  3143  0016                     	;# 
  3144  0016                     	;# 
  3145  0017                     	;# 
  3146  0018                     	;# 
  3147  0019                     	;# 
  3148  001A                     	;# 
  3149  001A                     	;# 
  3150  001B                     	;# 
  3151  001B                     	;# 
  3152  001C                     	;# 
  3153  001D                     	;# 
  3154  001E                     	;# 
  3155  001F                     	;# 
  3156  008C                     	;# 
  3157  008D                     	;# 
  3158  008E                     	;# 
  3159  0091                     	;# 
  3160  0092                     	;# 
  3161  0093                     	;# 
  3162  0094                     	;# 
  3163  0095                     	;# 
  3164  0096                     	;# 
  3165  0097                     	;# 
  3166  0098                     	;# 
  3167  0099                     	;# 
  3168  009A                     	;# 
  3169  009B                     	;# 
  3170  009B                     	;# 
  3171  009C                     	;# 
  3172  009D                     	;# 
  3173  009E                     	;# 
  3174  009F                     	;# 
  3175  010C                     	;# 
  3176  010D                     	;# 
  3177  010E                     	;# 
  3178  010F                     	;# 
  3179  0110                     	;# 
  3180  0111                     	;# 
  3181  0112                     	;# 
  3182  0113                     	;# 
  3183  0114                     	;# 
  3184  0115                     	;# 
  3185  0116                     	;# 
  3186  0117                     	;# 
  3187  0118                     	;# 
  3188  0119                     	;# 
  3189  011A                     	;# 
  3190  011B                     	;# 
  3191  011C                     	;# 
  3192  011D                     	;# 
  3193  011E                     	;# 
  3194  011F                     	;# 
  3195  018C                     	;# 
  3196  018D                     	;# 
  3197  018E                     	;# 
  3198  0191                     	;# 
  3199  0191                     	;# 
  3200  0192                     	;# 
  3201  0193                     	;# 
  3202  0193                     	;# 
  3203  0194                     	;# 
  3204  0195                     	;# 
  3205  0196                     	;# 
  3206  0199                     	;# 
  3207  0199                     	;# 
  3208  0199                     	;# 
  3209  019A                     	;# 
  3210  019A                     	;# 
  3211  019A                     	;# 
  3212  019B                     	;# 
  3213  019B                     	;# 
  3214  019B                     	;# 
  3215  019B                     	;# 
  3216  019B                     	;# 
  3217  019C                     	;# 
  3218  019C                     	;# 
  3219  019C                     	;# 
  3220  019D                     	;# 
  3221  019D                     	;# 
  3222  019D                     	;# 
  3223  019E                     	;# 
  3224  019E                     	;# 
  3225  019E                     	;# 
  3226  019F                     	;# 
  3227  019F                     	;# 
  3228  019F                     	;# 
  3229  019F                     	;# 
  3230  019F                     	;# 
  3231  020C                     	;# 
  3232  020D                     	;# 
  3233  020E                     	;# 
  3234  0211                     	;# 
  3235  0211                     	;# 
  3236  0212                     	;# 
  3237  0212                     	;# 
  3238  0213                     	;# 
  3239  0213                     	;# 
  3240  0214                     	;# 
  3241  0214                     	;# 
  3242  0215                     	;# 
  3243  0215                     	;# 
  3244  0215                     	;# 
  3245  0215                     	;# 
  3246  0216                     	;# 
  3247  0216                     	;# 
  3248  0217                     	;# 
  3249  0217                     	;# 
  3250  021D                     	;# 
  3251  021E                     	;# 
  3252  021F                     	;# 
  3253  028C                     	;# 
  3254  028D                     	;# 
  3255  028E                     	;# 
  3256  0291                     	;# 
  3257  0291                     	;# 
  3258  0292                     	;# 
  3259  0293                     	;# 
  3260  0294                     	;# 
  3261  0298                     	;# 
  3262  0298                     	;# 
  3263  0299                     	;# 
  3264  029A                     	;# 
  3265  029B                     	;# 
  3266  029E                     	;# 
  3267  030C                     	;# 
  3268  030D                     	;# 
  3269  030E                     	;# 
  3270  031B                     	;# 
  3271  031C                     	;# 
  3272  031D                     	;# 
  3273  031E                     	;# 
  3274  031F                     	;# 
  3275  038C                     	;# 
  3276  038D                     	;# 
  3277  038E                     	;# 
  3278  0391                     	;# 
  3279  0392                     	;# 
  3280  0393                     	;# 
  3281  0394                     	;# 
  3282  0395                     	;# 
  3283  0396                     	;# 
  3284  0397                     	;# 
  3285  0398                     	;# 
  3286  0399                     	;# 
  3287  039B                     	;# 
  3288  039C                     	;# 
  3289  039D                     	;# 
  3290  039E                     	;# 
  3291  039F                     	;# 
  3292  040E                     	;# 
  3293  0413                     	;# 
  3294  0413                     	;# 
  3295  0414                     	;# 
  3296  0414                     	;# 
  3297  0415                     	;# 
  3298  0416                     	;# 
  3299  0417                     	;# 
  3300  0418                     	;# 
  3301  041A                     	;# 
  3302  041A                     	;# 
  3303  041B                     	;# 
  3304  041B                     	;# 
  3305  041C                     	;# 
  3306  041D                     	;# 
  3307  041E                     	;# 
  3308  041F                     	;# 
  3309  0493                     	;# 
  3310  0493                     	;# 
  3311  0494                     	;# 
  3312  0495                     	;# 
  3313  0496                     	;# 
  3314  049A                     	;# 
  3315  049A                     	;# 
  3316  049B                     	;# 
  3317  049C                     	;# 
  3318  049D                     	;# 
  3319  050F                     	;# 
  3320  0510                     	;# 
  3321  0511                     	;# 
  3322  0512                     	;# 
  3323  0513                     	;# 
  3324  0514                     	;# 
  3325  0515                     	;# 
  3326  0516                     	;# 
  3327  0590                     	;# 
  3328  0591                     	;# 
  3329  0592                     	;# 
  3330  0592                     	;# 
  3331  0592                     	;# 
  3332  0593                     	;# 
  3333  0593                     	;# 
  3334  0594                     	;# 
  3335  0595                     	;# 
  3336  0595                     	;# 
  3337  0595                     	;# 
  3338  0596                     	;# 
  3339  0596                     	;# 
  3340  0597                     	;# 
  3341  0598                     	;# 
  3342  0598                     	;# 
  3343  0599                     	;# 
  3344  059A                     	;# 
  3345  059A                     	;# 
  3346  0617                     	;# 
  3347  0617                     	;# 
  3348  0618                     	;# 
  3349  0619                     	;# 
  3350  061A                     	;# 
  3351  061A                     	;# 
  3352  061B                     	;# 
  3353  061C                     	;# 
  3354  068D                     	;# 
  3355  068E                     	;# 
  3356  068F                     	;# 
  3357  0690                     	;# 
  3358  0691                     	;# 
  3359  0692                     	;# 
  3360  0693                     	;# 
  3361  0694                     	;# 
  3362  0695                     	;# 
  3363  0696                     	;# 
  3364  0697                     	;# 
  3365  0698                     	;# 
  3366  0699                     	;# 
  3367  069A                     	;# 
  3368  069B                     	;# 
  3369  069C                     	;# 
  3370  069D                     	;# 
  3371  069E                     	;# 
  3372  069F                     	;# 
  3373  070D                     	;# 
  3374  070E                     	;# 
  3375  070F                     	;# 
  3376  0710                     	;# 
  3377  0711                     	;# 
  3378  0712                     	;# 
  3379  0713                     	;# 
  3380  0714                     	;# 
  3381  0715                     	;# 
  3382  0716                     	;# 
  3383  0717                     	;# 
  3384  0718                     	;# 
  3385  0719                     	;# 
  3386  071A                     	;# 
  3387  071B                     	;# 
  3388  071C                     	;# 
  3389  071D                     	;# 
  3390  071E                     	;# 
  3391  071F                     	;# 
  3392  0794                     	;# 
  3393  0795                     	;# 
  3394  0796                     	;# 
  3395  0797                     	;# 
  3396  0798                     	;# 
  3397  0799                     	;# 
  3398  079A                     	;# 
  3399  079B                     	;# 
  3400  079C                     	;# 
  3401  079D                     	;# 
  3402  079E                     	;# 
  3403  079F                     	;# 
  3404  0D8E                     	;# 
  3405  0D8F                     	;# 
  3406  0D90                     	;# 
  3407  0D91                     	;# 
  3408  0D91                     	;# 
  3409  0D92                     	;# 
  3410  0D93                     	;# 
  3411  0D93                     	;# 
  3412  0D94                     	;# 
  3413  0D95                     	;# 
  3414  0D95                     	;# 
  3415  0D96                     	;# 
  3416  0D97                     	;# 
  3417  0D97                     	;# 
  3418  0D98                     	;# 
  3419  0D99                     	;# 
  3420  0D99                     	;# 
  3421  0D9A                     	;# 
  3422  0D9B                     	;# 
  3423  0D9C                     	;# 
  3424  0D9C                     	;# 
  3425  0D9D                     	;# 
  3426  0D9D                     	;# 
  3427  0D9E                     	;# 
  3428  0D9F                     	;# 
  3429  0DA0                     	;# 
  3430  0DA1                     	;# 
  3431  0DA1                     	;# 
  3432  0DA2                     	;# 
  3433  0DA3                     	;# 
  3434  0DA3                     	;# 
  3435  0DA4                     	;# 
  3436  0DA5                     	;# 
  3437  0DA5                     	;# 
  3438  0DA6                     	;# 
  3439  0DA7                     	;# 
  3440  0DA7                     	;# 
  3441  0DA8                     	;# 
  3442  0DA9                     	;# 
  3443  0DA9                     	;# 
  3444  0DAA                     	;# 
  3445  0DAB                     	;# 
  3446  0DAC                     	;# 
  3447  0DAC                     	;# 
  3448  0DAD                     	;# 
  3449  0DAD                     	;# 
  3450  0DAE                     	;# 
  3451  0DAF                     	;# 
  3452  0DB0                     	;# 
  3453  0E0F                     	;# 
  3454  0E10                     	;# 
  3455  0E11                     	;# 
  3456  0E12                     	;# 
  3457  0E13                     	;# 
  3458  0E14                     	;# 
  3459  0E15                     	;# 
  3460  0E16                     	;# 
  3461  0E17                     	;# 
  3462  0E19                     	;# 
  3463  0E19                     	;# 
  3464  0E19                     	;# 
  3465  0E1A                     	;# 
  3466  0E1B                     	;# 
  3467  0E1C                     	;# 
  3468  0E1C                     	;# 
  3469  0E1C                     	;# 
  3470  0E1D                     	;# 
  3471  0E1E                     	;# 
  3472  0E1F                     	;# 
  3473  0E1F                     	;# 
  3474  0E1F                     	;# 
  3475  0E20                     	;# 
  3476  0E21                     	;# 
  3477  0E22                     	;# 
  3478  0E24                     	;# 
  3479  0E25                     	;# 
  3480  0E28                     	;# 
  3481  0E29                     	;# 
  3482  0E2A                     	;# 
  3483  0E2B                     	;# 
  3484  0E2C                     	;# 
  3485  0E2D                     	;# 
  3486  0E2E                     	;# 
  3487  0E2F                     	;# 
  3488  0E30                     	;# 
  3489  0E31                     	;# 
  3490  0E32                     	;# 
  3491  0E33                     	;# 
  3492  0E34                     	;# 
  3493  0E35                     	;# 
  3494  0E90                     	;# 
  3495  0E91                     	;# 
  3496  0E92                     	;# 
  3497  0E94                     	;# 
  3498  0E95                     	;# 
  3499  0E9C                     	;# 
  3500  0E9D                     	;# 
  3501  0E9E                     	;# 
  3502  0E9F                     	;# 
  3503  0EA0                     	;# 
  3504  0EA1                     	;# 
  3505  0EA2                     	;# 
  3506  0EA3                     	;# 
  3507  0EA4                     	;# 
  3508  0EA5                     	;# 
  3509  0EA6                     	;# 
  3510  0EA7                     	;# 
  3511  0F0F                     	;# 
  3512  0F10                     	;# 
  3513  0F11                     	;# 
  3514  0F12                     	;# 
  3515  0F13                     	;# 
  3516  0F14                     	;# 
  3517  0F15                     	;# 
  3518  0F16                     	;# 
  3519  0F17                     	;# 
  3520  0F18                     	;# 
  3521  0F19                     	;# 
  3522  0F1A                     	;# 
  3523  0F1B                     	;# 
  3524  0F1C                     	;# 
  3525  0F1D                     	;# 
  3526  0F1E                     	;# 
  3527  0F1F                     	;# 
  3528  0F20                     	;# 
  3529  0F21                     	;# 
  3530  0F22                     	;# 
  3531  0F23                     	;# 
  3532  0F24                     	;# 
  3533  0F25                     	;# 
  3534  0F26                     	;# 
  3535  0F27                     	;# 
  3536  0F28                     	;# 
  3537  0F29                     	;# 
  3538  0F2A                     	;# 
  3539  0F2B                     	;# 
  3540  0F2C                     	;# 
  3541  0F2D                     	;# 
  3542  0FE4                     	;# 
  3543  0FE5                     	;# 
  3544  0FE6                     	;# 
  3545  0FE7                     	;# 
  3546  0FE8                     	;# 
  3547  0FE9                     	;# 
  3548  0FEA                     	;# 
  3549  0FEB                     	;# 
  3550  0FED                     	;# 
  3551  0FEE                     	;# 
  3552  0FEF                     	;# 
  3553  0000                     	;# 
  3554  0001                     	;# 
  3555  0002                     	;# 
  3556  0003                     	;# 
  3557  0004                     	;# 
  3558  0005                     	;# 
  3559  0006                     	;# 
  3560  0007                     	;# 
  3561  0008                     	;# 
  3562  0009                     	;# 
  3563  000A                     	;# 
  3564  000B                     	;# 
  3565  000C                     	;# 
  3566  000D                     	;# 
  3567  000E                     	;# 
  3568  0011                     	;# 
  3569  0012                     	;# 
  3570  0013                     	;# 
  3571  0014                     	;# 
  3572  0015                     	;# 
  3573  0016                     	;# 
  3574  0016                     	;# 
  3575  0017                     	;# 
  3576  0018                     	;# 
  3577  0019                     	;# 
  3578  001A                     	;# 
  3579  001A                     	;# 
  3580  001B                     	;# 
  3581  001B                     	;# 
  3582  001C                     	;# 
  3583  001D                     	;# 
  3584  001E                     	;# 
  3585  001F                     	;# 
  3586  008C                     	;# 
  3587  008D                     	;# 
  3588  008E                     	;# 
  3589  0091                     	;# 
  3590  0092                     	;# 
  3591  0093                     	;# 
  3592  0094                     	;# 
  3593  0095                     	;# 
  3594  0096                     	;# 
  3595  0097                     	;# 
  3596  0098                     	;# 
  3597  0099                     	;# 
  3598  009A                     	;# 
  3599  009B                     	;# 
  3600  009B                     	;# 
  3601  009C                     	;# 
  3602  009D                     	;# 
  3603  009E                     	;# 
  3604  009F                     	;# 
  3605  010C                     	;# 
  3606  010D                     	;# 
  3607  010E                     	;# 
  3608  010F                     	;# 
  3609  0110                     	;# 
  3610  0111                     	;# 
  3611  0112                     	;# 
  3612  0113                     	;# 
  3613  0114                     	;# 
  3614  0115                     	;# 
  3615  0116                     	;# 
  3616  0117                     	;# 
  3617  0118                     	;# 
  3618  0119                     	;# 
  3619  011A                     	;# 
  3620  011B                     	;# 
  3621  011C                     	;# 
  3622  011D                     	;# 
  3623  011E                     	;# 
  3624  011F                     	;# 
  3625  018C                     	;# 
  3626  018D                     	;# 
  3627  018E                     	;# 
  3628  0191                     	;# 
  3629  0191                     	;# 
  3630  0192                     	;# 
  3631  0193                     	;# 
  3632  0193                     	;# 
  3633  0194                     	;# 
  3634  0195                     	;# 
  3635  0196                     	;# 
  3636  0199                     	;# 
  3637  0199                     	;# 
  3638  0199                     	;# 
  3639  019A                     	;# 
  3640  019A                     	;# 
  3641  019A                     	;# 
  3642  019B                     	;# 
  3643  019B                     	;# 
  3644  019B                     	;# 
  3645  019B                     	;# 
  3646  019B                     	;# 
  3647  019C                     	;# 
  3648  019C                     	;# 
  3649  019C                     	;# 
  3650  019D                     	;# 
  3651  019D                     	;# 
  3652  019D                     	;# 
  3653  019E                     	;# 
  3654  019E                     	;# 
  3655  019E                     	;# 
  3656  019F                     	;# 
  3657  019F                     	;# 
  3658  019F                     	;# 
  3659  019F                     	;# 
  3660  019F                     	;# 
  3661  020C                     	;# 
  3662  020D                     	;# 
  3663  020E                     	;# 
  3664  0211                     	;# 
  3665  0211                     	;# 
  3666  0212                     	;# 
  3667  0212                     	;# 
  3668  0213                     	;# 
  3669  0213                     	;# 
  3670  0214                     	;# 
  3671  0214                     	;# 
  3672  0215                     	;# 
  3673  0215                     	;# 
  3674  0215                     	;# 
  3675  0215                     	;# 
  3676  0216                     	;# 
  3677  0216                     	;# 
  3678  0217                     	;# 
  3679  0217                     	;# 
  3680  021D                     	;# 
  3681  021E                     	;# 
  3682  021F                     	;# 
  3683  028C                     	;# 
  3684  028D                     	;# 
  3685  028E                     	;# 
  3686  0291                     	;# 
  3687  0291                     	;# 
  3688  0292                     	;# 
  3689  0293                     	;# 
  3690  0294                     	;# 
  3691  0298                     	;# 
  3692  0298                     	;# 
  3693  0299                     	;# 
  3694  029A                     	;# 
  3695  029B                     	;# 
  3696  029E                     	;# 
  3697  030C                     	;# 
  3698  030D                     	;# 
  3699  030E                     	;# 
  3700  031B                     	;# 
  3701  031C                     	;# 
  3702  031D                     	;# 
  3703  031E                     	;# 
  3704  031F                     	;# 
  3705  038C                     	;# 
  3706  038D                     	;# 
  3707  038E                     	;# 
  3708  0391                     	;# 
  3709  0392                     	;# 
  3710  0393                     	;# 
  3711  0394                     	;# 
  3712  0395                     	;# 
  3713  0396                     	;# 
  3714  0397                     	;# 
  3715  0398                     	;# 
  3716  0399                     	;# 
  3717  039B                     	;# 
  3718  039C                     	;# 
  3719  039D                     	;# 
  3720  039E                     	;# 
  3721  039F                     	;# 
  3722  040E                     	;# 
  3723  0413                     	;# 
  3724  0413                     	;# 
  3725  0414                     	;# 
  3726  0414                     	;# 
  3727  0415                     	;# 
  3728  0416                     	;# 
  3729  0417                     	;# 
  3730  0418                     	;# 
  3731  041A                     	;# 
  3732  041A                     	;# 
  3733  041B                     	;# 
  3734  041B                     	;# 
  3735  041C                     	;# 
  3736  041D                     	;# 
  3737  041E                     	;# 
  3738  041F                     	;# 
  3739  0493                     	;# 
  3740  0493                     	;# 
  3741  0494                     	;# 
  3742  0495                     	;# 
  3743  0496                     	;# 
  3744  049A                     	;# 
  3745  049A                     	;# 
  3746  049B                     	;# 
  3747  049C                     	;# 
  3748  049D                     	;# 
  3749  050F                     	;# 
  3750  0510                     	;# 
  3751  0511                     	;# 
  3752  0512                     	;# 
  3753  0513                     	;# 
  3754  0514                     	;# 
  3755  0515                     	;# 
  3756  0516                     	;# 
  3757  0590                     	;# 
  3758  0591                     	;# 
  3759  0592                     	;# 
  3760  0592                     	;# 
  3761  0592                     	;# 
  3762  0593                     	;# 
  3763  0593                     	;# 
  3764  0594                     	;# 
  3765  0595                     	;# 
  3766  0595                     	;# 
  3767  0595                     	;# 
  3768  0596                     	;# 
  3769  0596                     	;# 
  3770  0597                     	;# 
  3771  0598                     	;# 
  3772  0598                     	;# 
  3773  0599                     	;# 
  3774  059A                     	;# 
  3775  059A                     	;# 
  3776  0617                     	;# 
  3777  0617                     	;# 
  3778  0618                     	;# 
  3779  0619                     	;# 
  3780  061A                     	;# 
  3781  061A                     	;# 
  3782  061B                     	;# 
  3783  061C                     	;# 
  3784  068D                     	;# 
  3785  068E                     	;# 
  3786  068F                     	;# 
  3787  0690                     	;# 
  3788  0691                     	;# 
  3789  0692                     	;# 
  3790  0693                     	;# 
  3791  0694                     	;# 
  3792  0695                     	;# 
  3793  0696                     	;# 
  3794  0697                     	;# 
  3795  0698                     	;# 
  3796  0699                     	;# 
  3797  069A                     	;# 
  3798  069B                     	;# 
  3799  069C                     	;# 
  3800  069D                     	;# 
  3801  069E                     	;# 
  3802  069F                     	;# 
  3803  070D                     	;# 
  3804  070E                     	;# 
  3805  070F                     	;# 
  3806  0710                     	;# 
  3807  0711                     	;# 
  3808  0712                     	;# 
  3809  0713                     	;# 
  3810  0714                     	;# 
  3811  0715                     	;# 
  3812  0716                     	;# 
  3813  0717                     	;# 
  3814  0718                     	;# 
  3815  0719                     	;# 
  3816  071A                     	;# 
  3817  071B                     	;# 
  3818  071C                     	;# 
  3819  071D                     	;# 
  3820  071E                     	;# 
  3821  071F                     	;# 
  3822  0794                     	;# 
  3823  0795                     	;# 
  3824  0796                     	;# 
  3825  0797                     	;# 
  3826  0798                     	;# 
  3827  0799                     	;# 
  3828  079A                     	;# 
  3829  079B                     	;# 
  3830  079C                     	;# 
  3831  079D                     	;# 
  3832  079E                     	;# 
  3833  079F                     	;# 
  3834  0D8E                     	;# 
  3835  0D8F                     	;# 
  3836  0D90                     	;# 
  3837  0D91                     	;# 
  3838  0D91                     	;# 
  3839  0D92                     	;# 
  3840  0D93                     	;# 
  3841  0D93                     	;# 
  3842  0D94                     	;# 
  3843  0D95                     	;# 
  3844  0D95                     	;# 
  3845  0D96                     	;# 
  3846  0D97                     	;# 
  3847  0D97                     	;# 
  3848  0D98                     	;# 
  3849  0D99                     	;# 
  3850  0D99                     	;# 
  3851  0D9A                     	;# 
  3852  0D9B                     	;# 
  3853  0D9C                     	;# 
  3854  0D9C                     	;# 
  3855  0D9D                     	;# 
  3856  0D9D                     	;# 
  3857  0D9E                     	;# 
  3858  0D9F                     	;# 
  3859  0DA0                     	;# 
  3860  0DA1                     	;# 
  3861  0DA1                     	;# 
  3862  0DA2                     	;# 
  3863  0DA3                     	;# 
  3864  0DA3                     	;# 
  3865  0DA4                     	;# 
  3866  0DA5                     	;# 
  3867  0DA5                     	;# 
  3868  0DA6                     	;# 
  3869  0DA7                     	;# 
  3870  0DA7                     	;# 
  3871  0DA8                     	;# 
  3872  0DA9                     	;# 
  3873  0DA9                     	;# 
  3874  0DAA                     	;# 
  3875  0DAB                     	;# 
  3876  0DAC                     	;# 
  3877  0DAC                     	;# 
  3878  0DAD                     	;# 
  3879  0DAD                     	;# 
  3880  0DAE                     	;# 
  3881  0DAF                     	;# 
  3882  0DB0                     	;# 
  3883  0E0F                     	;# 
  3884  0E10                     	;# 
  3885  0E11                     	;# 
  3886  0E12                     	;# 
  3887  0E13                     	;# 
  3888  0E14                     	;# 
  3889  0E15                     	;# 
  3890  0E16                     	;# 
  3891  0E17                     	;# 
  3892  0E19                     	;# 
  3893  0E19                     	;# 
  3894  0E19                     	;# 
  3895  0E1A                     	;# 
  3896  0E1B                     	;# 
  3897  0E1C                     	;# 
  3898  0E1C                     	;# 
  3899  0E1C                     	;# 
  3900  0E1D                     	;# 
  3901  0E1E                     	;# 
  3902  0E1F                     	;# 
  3903  0E1F                     	;# 
  3904  0E1F                     	;# 
  3905  0E20                     	;# 
  3906  0E21                     	;# 
  3907  0E22                     	;# 
  3908  0E24                     	;# 
  3909  0E25                     	;# 
  3910  0E28                     	;# 
  3911  0E29                     	;# 
  3912  0E2A                     	;# 
  3913  0E2B                     	;# 
  3914  0E2C                     	;# 
  3915  0E2D                     	;# 
  3916  0E2E                     	;# 
  3917  0E2F                     	;# 
  3918  0E30                     	;# 
  3919  0E31                     	;# 
  3920  0E32                     	;# 
  3921  0E33                     	;# 
  3922  0E34                     	;# 
  3923  0E35                     	;# 
  3924  0E90                     	;# 
  3925  0E91                     	;# 
  3926  0E92                     	;# 
  3927  0E94                     	;# 
  3928  0E95                     	;# 
  3929  0E9C                     	;# 
  3930  0E9D                     	;# 
  3931  0E9E                     	;# 
  3932  0E9F                     	;# 
  3933  0EA0                     	;# 
  3934  0EA1                     	;# 
  3935  0EA2                     	;# 
  3936  0EA3                     	;# 
  3937  0EA4                     	;# 
  3938  0EA5                     	;# 
  3939  0EA6                     	;# 
  3940  0EA7                     	;# 
  3941  0F0F                     	;# 
  3942  0F10                     	;# 
  3943  0F11                     	;# 
  3944  0F12                     	;# 
  3945  0F13                     	;# 
  3946  0F14                     	;# 
  3947  0F15                     	;# 
  3948  0F16                     	;# 
  3949  0F17                     	;# 
  3950  0F18                     	;# 
  3951  0F19                     	;# 
  3952  0F1A                     	;# 
  3953  0F1B                     	;# 
  3954  0F1C                     	;# 
  3955  0F1D                     	;# 
  3956  0F1E                     	;# 
  3957  0F1F                     	;# 
  3958  0F20                     	;# 
  3959  0F21                     	;# 
  3960  0F22                     	;# 
  3961  0F23                     	;# 
  3962  0F24                     	;# 
  3963  0F25                     	;# 
  3964  0F26                     	;# 
  3965  0F27                     	;# 
  3966  0F28                     	;# 
  3967  0F29                     	;# 
  3968  0F2A                     	;# 
  3969  0F2B                     	;# 
  3970  0F2C                     	;# 
  3971  0F2D                     	;# 
  3972  0FE4                     	;# 
  3973  0FE5                     	;# 
  3974  0FE6                     	;# 
  3975  0FE7                     	;# 
  3976  0FE8                     	;# 
  3977  0FE9                     	;# 
  3978  0FEA                     	;# 
  3979  0FEB                     	;# 
  3980  0FED                     	;# 
  3981  0FEE                     	;# 
  3982  0FEF                     	;# 
  3983  0000                     	;# 
  3984  0001                     	;# 
  3985  0002                     	;# 
  3986  0003                     	;# 
  3987  0004                     	;# 
  3988  0005                     	;# 
  3989  0006                     	;# 
  3990  0007                     	;# 
  3991  0008                     	;# 
  3992  0009                     	;# 
  3993  000A                     	;# 
  3994  000B                     	;# 
  3995  000C                     	;# 
  3996  000D                     	;# 
  3997  000E                     	;# 
  3998  0011                     	;# 
  3999  0012                     	;# 
  4000  0013                     	;# 
  4001  0014                     	;# 
  4002  0015                     	;# 
  4003  0016                     	;# 
  4004  0016                     	;# 
  4005  0017                     	;# 
  4006  0018                     	;# 
  4007  0019                     	;# 
  4008  001A                     	;# 
  4009  001A                     	;# 
  4010  001B                     	;# 
  4011  001B                     	;# 
  4012  001C                     	;# 
  4013  001D                     	;# 
  4014  001E                     	;# 
  4015  001F                     	;# 
  4016  008C                     	;# 
  4017  008D                     	;# 
  4018  008E                     	;# 
  4019  0091                     	;# 
  4020  0092                     	;# 
  4021  0093                     	;# 
  4022  0094                     	;# 
  4023  0095                     	;# 
  4024  0096                     	;# 
  4025  0097                     	;# 
  4026  0098                     	;# 
  4027  0099                     	;# 
  4028  009A                     	;# 
  4029  009B                     	;# 
  4030  009B                     	;# 
  4031  009C                     	;# 
  4032  009D                     	;# 
  4033  009E                     	;# 
  4034  009F                     	;# 
  4035  010C                     	;# 
  4036  010D                     	;# 
  4037  010E                     	;# 
  4038  010F                     	;# 
  4039  0110                     	;# 
  4040  0111                     	;# 
  4041  0112                     	;# 
  4042  0113                     	;# 
  4043  0114                     	;# 
  4044  0115                     	;# 
  4045  0116                     	;# 
  4046  0117                     	;# 
  4047  0118                     	;# 
  4048  0119                     	;# 
  4049  011A                     	;# 
  4050  011B                     	;# 
  4051  011C                     	;# 
  4052  011D                     	;# 
  4053  011E                     	;# 
  4054  011F                     	;# 
  4055  018C                     	;# 
  4056  018D                     	;# 
  4057  018E                     	;# 
  4058  0191                     	;# 
  4059  0191                     	;# 
  4060  0192                     	;# 
  4061  0193                     	;# 
  4062  0193                     	;# 
  4063  0194                     	;# 
  4064  0195                     	;# 
  4065  0196                     	;# 
  4066  0199                     	;# 
  4067  0199                     	;# 
  4068  0199                     	;# 
  4069  019A                     	;# 
  4070  019A                     	;# 
  4071  019A                     	;# 
  4072  019B                     	;# 
  4073  019B                     	;# 
  4074  019B                     	;# 
  4075  019B                     	;# 
  4076  019B                     	;# 
  4077  019C                     	;# 
  4078  019C                     	;# 
  4079  019C                     	;# 
  4080  019D                     	;# 
  4081  019D                     	;# 
  4082  019D                     	;# 
  4083  019E                     	;# 
  4084  019E                     	;# 
  4085  019E                     	;# 
  4086  019F                     	;# 
  4087  019F                     	;# 
  4088  019F                     	;# 
  4089  019F                     	;# 
  4090  019F                     	;# 
  4091  020C                     	;# 
  4092  020D                     	;# 
  4093  020E                     	;# 
  4094  0211                     	;# 
  4095  0211                     	;# 
  4096  0212                     	;# 
  4097  0212                     	;# 
  4098  0213                     	;# 
  4099  0213                     	;# 
  4100  0214                     	;# 
  4101  0214                     	;# 
  4102  0215                     	;# 
  4103  0215                     	;# 
  4104  0215                     	;# 
  4105  0215                     	;# 
  4106  0216                     	;# 
  4107  0216                     	;# 
  4108  0217                     	;# 
  4109  0217                     	;# 
  4110  021D                     	;# 
  4111  021E                     	;# 
  4112  021F                     	;# 
  4113  028C                     	;# 
  4114  028D                     	;# 
  4115  028E                     	;# 
  4116  0291                     	;# 
  4117  0291                     	;# 
  4118  0292                     	;# 
  4119  0293                     	;# 
  4120  0294                     	;# 
  4121  0298                     	;# 
  4122  0298                     	;# 
  4123  0299                     	;# 
  4124  029A                     	;# 
  4125  029B                     	;# 
  4126  029E                     	;# 
  4127  030C                     	;# 
  4128  030D                     	;# 
  4129  030E                     	;# 
  4130  031B                     	;# 
  4131  031C                     	;# 
  4132  031D                     	;# 
  4133  031E                     	;# 
  4134  031F                     	;# 
  4135  038C                     	;# 
  4136  038D                     	;# 
  4137  038E                     	;# 
  4138  0391                     	;# 
  4139  0392                     	;# 
  4140  0393                     	;# 
  4141  0394                     	;# 
  4142  0395                     	;# 
  4143  0396                     	;# 
  4144  0397                     	;# 
  4145  0398                     	;# 
  4146  0399                     	;# 
  4147  039B                     	;# 
  4148  039C                     	;# 
  4149  039D                     	;# 
  4150  039E                     	;# 
  4151  039F                     	;# 
  4152  040E                     	;# 
  4153  0413                     	;# 
  4154  0413                     	;# 
  4155  0414                     	;# 
  4156  0414                     	;# 
  4157  0415                     	;# 
  4158  0416                     	;# 
  4159  0417                     	;# 
  4160  0418                     	;# 
  4161  041A                     	;# 
  4162  041A                     	;# 
  4163  041B                     	;# 
  4164  041B                     	;# 
  4165  041C                     	;# 
  4166  041D                     	;# 
  4167  041E                     	;# 
  4168  041F                     	;# 
  4169  0493                     	;# 
  4170  0493                     	;# 
  4171  0494                     	;# 
  4172  0495                     	;# 
  4173  0496                     	;# 
  4174  049A                     	;# 
  4175  049A                     	;# 
  4176  049B                     	;# 
  4177  049C                     	;# 
  4178  049D                     	;# 
  4179  050F                     	;# 
  4180  0510                     	;# 
  4181  0511                     	;# 
  4182  0512                     	;# 
  4183  0513                     	;# 
  4184  0514                     	;# 
  4185  0515                     	;# 
  4186  0516                     	;# 
  4187  0590                     	;# 
  4188  0591                     	;# 
  4189  0592                     	;# 
  4190  0592                     	;# 
  4191  0592                     	;# 
  4192  0593                     	;# 
  4193  0593                     	;# 
  4194  0594                     	;# 
  4195  0595                     	;# 
  4196  0595                     	;# 
  4197  0595                     	;# 
  4198  0596                     	;# 
  4199  0596                     	;# 
  4200  0597                     	;# 
  4201  0598                     	;# 
  4202  0598                     	;# 
  4203  0599                     	;# 
  4204  059A                     	;# 
  4205  059A                     	;# 
  4206  0617                     	;# 
  4207  0617                     	;# 
  4208  0618                     	;# 
  4209  0619                     	;# 
  4210  061A                     	;# 
  4211  061A                     	;# 
  4212  061B                     	;# 
  4213  061C                     	;# 
  4214  068D                     	;# 
  4215  068E                     	;# 
  4216  068F                     	;# 
  4217  0690                     	;# 
  4218  0691                     	;# 
  4219  0692                     	;# 
  4220  0693                     	;# 
  4221  0694                     	;# 
  4222  0695                     	;# 
  4223  0696                     	;# 
  4224  0697                     	;# 
  4225  0698                     	;# 
  4226  0699                     	;# 
  4227  069A                     	;# 
  4228  069B                     	;# 
  4229  069C                     	;# 
  4230  069D                     	;# 
  4231  069E                     	;# 
  4232  069F                     	;# 
  4233  070D                     	;# 
  4234  070E                     	;# 
  4235  070F                     	;# 
  4236  0710                     	;# 
  4237  0711                     	;# 
  4238  0712                     	;# 
  4239  0713                     	;# 
  4240  0714                     	;# 
  4241  0715                     	;# 
  4242  0716                     	;# 
  4243  0717                     	;# 
  4244  0718                     	;# 
  4245  0719                     	;# 
  4246  071A                     	;# 
  4247  071B                     	;# 
  4248  071C                     	;# 
  4249  071D                     	;# 
  4250  071E                     	;# 
  4251  071F                     	;# 
  4252  0794                     	;# 
  4253  0795                     	;# 
  4254  0796                     	;# 
  4255  0797                     	;# 
  4256  0798                     	;# 
  4257  0799                     	;# 
  4258  079A                     	;# 
  4259  079B                     	;# 
  4260  079C                     	;# 
  4261  079D                     	;# 
  4262  079E                     	;# 
  4263  079F                     	;# 
  4264  0D8E                     	;# 
  4265  0D8F                     	;# 
  4266  0D90                     	;# 
  4267  0D91                     	;# 
  4268  0D91                     	;# 
  4269  0D92                     	;# 
  4270  0D93                     	;# 
  4271  0D93                     	;# 
  4272  0D94                     	;# 
  4273  0D95                     	;# 
  4274  0D95                     	;# 
  4275  0D96                     	;# 
  4276  0D97                     	;# 
  4277  0D97                     	;# 
  4278  0D98                     	;# 
  4279  0D99                     	;# 
  4280  0D99                     	;# 
  4281  0D9A                     	;# 
  4282  0D9B                     	;# 
  4283  0D9C                     	;# 
  4284  0D9C                     	;# 
  4285  0D9D                     	;# 
  4286  0D9D                     	;# 
  4287  0D9E                     	;# 
  4288  0D9F                     	;# 
  4289  0DA0                     	;# 
  4290  0DA1                     	;# 
  4291  0DA1                     	;# 
  4292  0DA2                     	;# 
  4293  0DA3                     	;# 
  4294  0DA3                     	;# 
  4295  0DA4                     	;# 
  4296  0DA5                     	;# 
  4297  0DA5                     	;# 
  4298  0DA6                     	;# 
  4299  0DA7                     	;# 
  4300  0DA7                     	;# 
  4301  0DA8                     	;# 
  4302  0DA9                     	;# 
  4303  0DA9                     	;# 
  4304  0DAA                     	;# 
  4305  0DAB                     	;# 
  4306  0DAC                     	;# 
  4307  0DAC                     	;# 
  4308  0DAD                     	;# 
  4309  0DAD                     	;# 
  4310  0DAE                     	;# 
  4311  0DAF                     	;# 
  4312  0DB0                     	;# 
  4313  0E0F                     	;# 
  4314  0E10                     	;# 
  4315  0E11                     	;# 
  4316  0E12                     	;# 
  4317  0E13                     	;# 
  4318  0E14                     	;# 
  4319  0E15                     	;# 
  4320  0E16                     	;# 
  4321  0E17                     	;# 
  4322  0E19                     	;# 
  4323  0E19                     	;# 
  4324  0E19                     	;# 
  4325  0E1A                     	;# 
  4326  0E1B                     	;# 
  4327  0E1C                     	;# 
  4328  0E1C                     	;# 
  4329  0E1C                     	;# 
  4330  0E1D                     	;# 
  4331  0E1E                     	;# 
  4332  0E1F                     	;# 
  4333  0E1F                     	;# 
  4334  0E1F                     	;# 
  4335  0E20                     	;# 
  4336  0E21                     	;# 
  4337  0E22                     	;# 
  4338  0E24                     	;# 
  4339  0E25                     	;# 
  4340  0E28                     	;# 
  4341  0E29                     	;# 
  4342  0E2A                     	;# 
  4343  0E2B                     	;# 
  4344  0E2C                     	;# 
  4345  0E2D                     	;# 
  4346  0E2E                     	;# 
  4347  0E2F                     	;# 
  4348  0E30                     	;# 
  4349  0E31                     	;# 
  4350  0E32                     	;# 
  4351  0E33                     	;# 
  4352  0E34                     	;# 
  4353  0E35                     	;# 
  4354  0E90                     	;# 
  4355  0E91                     	;# 
  4356  0E92                     	;# 
  4357  0E94                     	;# 
  4358  0E95                     	;# 
  4359  0E9C                     	;# 
  4360  0E9D                     	;# 
  4361  0E9E                     	;# 
  4362  0E9F                     	;# 
  4363  0EA0                     	;# 
  4364  0EA1                     	;# 
  4365  0EA2                     	;# 
  4366  0EA3                     	;# 
  4367  0EA4                     	;# 
  4368  0EA5                     	;# 
  4369  0EA6                     	;# 
  4370  0EA7                     	;# 
  4371  0F0F                     	;# 
  4372  0F10                     	;# 
  4373  0F11                     	;# 
  4374  0F12                     	;# 
  4375  0F13                     	;# 
  4376  0F14                     	;# 
  4377  0F15                     	;# 
  4378  0F16                     	;# 
  4379  0F17                     	;# 
  4380  0F18                     	;# 
  4381  0F19                     	;# 
  4382  0F1A                     	;# 
  4383  0F1B                     	;# 
  4384  0F1C                     	;# 
  4385  0F1D                     	;# 
  4386  0F1E                     	;# 
  4387  0F1F                     	;# 
  4388  0F20                     	;# 
  4389  0F21                     	;# 
  4390  0F22                     	;# 
  4391  0F23                     	;# 
  4392  0F24                     	;# 
  4393  0F25                     	;# 
  4394  0F26                     	;# 
  4395  0F27                     	;# 
  4396  0F28                     	;# 
  4397  0F29                     	;# 
  4398  0F2A                     	;# 
  4399  0F2B                     	;# 
  4400  0F2C                     	;# 
  4401  0F2D                     	;# 
  4402  0FE4                     	;# 
  4403  0FE5                     	;# 
  4404  0FE6                     	;# 
  4405  0FE7                     	;# 
  4406  0FE8                     	;# 
  4407  0FE9                     	;# 
  4408  0FEA                     	;# 
  4409  0FEB                     	;# 
  4410  0FED                     	;# 
  4411  0FEE                     	;# 
  4412  0FEF                     	;# 
  4413  0000                     	;# 
  4414  0001                     	;# 
  4415  0002                     	;# 
  4416  0003                     	;# 
  4417  0004                     	;# 
  4418  0005                     	;# 
  4419  0006                     	;# 
  4420  0007                     	;# 
  4421  0008                     	;# 
  4422  0009                     	;# 
  4423  000A                     	;# 
  4424  000B                     	;# 
  4425  000C                     	;# 
  4426  000D                     	;# 
  4427  000E                     	;# 
  4428  0011                     	;# 
  4429  0012                     	;# 
  4430  0013                     	;# 
  4431  0014                     	;# 
  4432  0015                     	;# 
  4433  0016                     	;# 
  4434  0016                     	;# 
  4435  0017                     	;# 
  4436  0018                     	;# 
  4437  0019                     	;# 
  4438  001A                     	;# 
  4439  001A                     	;# 
  4440  001B                     	;# 
  4441  001B                     	;# 
  4442  001C                     	;# 
  4443  001D                     	;# 
  4444  001E                     	;# 
  4445  001F                     	;# 
  4446  008C                     	;# 
  4447  008D                     	;# 
  4448  008E                     	;# 
  4449  0091                     	;# 
  4450  0092                     	;# 
  4451  0093                     	;# 
  4452  0094                     	;# 
  4453  0095                     	;# 
  4454  0096                     	;# 
  4455  0097                     	;# 
  4456  0098                     	;# 
  4457  0099                     	;# 
  4458  009A                     	;# 
  4459  009B                     	;# 
  4460  009B                     	;# 
  4461  009C                     	;# 
  4462  009D                     	;# 
  4463  009E                     	;# 
  4464  009F                     	;# 
  4465  010C                     	;# 
  4466  010D                     	;# 
  4467  010E                     	;# 
  4468  010F                     	;# 
  4469  0110                     	;# 
  4470  0111                     	;# 
  4471  0112                     	;# 
  4472  0113                     	;# 
  4473  0114                     	;# 
  4474  0115                     	;# 
  4475  0116                     	;# 
  4476  0117                     	;# 
  4477  0118                     	;# 
  4478  0119                     	;# 
  4479  011A                     	;# 
  4480  011B                     	;# 
  4481  011C                     	;# 
  4482  011D                     	;# 
  4483  011E                     	;# 
  4484  011F                     	;# 
  4485  018C                     	;# 
  4486  018D                     	;# 
  4487  018E                     	;# 
  4488  0191                     	;# 
  4489  0191                     	;# 
  4490  0192                     	;# 
  4491  0193                     	;# 
  4492  0193                     	;# 
  4493  0194                     	;# 
  4494  0195                     	;# 
  4495  0196                     	;# 
  4496  0199                     	;# 
  4497  0199                     	;# 
  4498  0199                     	;# 
  4499  019A                     	;# 
  4500  019A                     	;# 
  4501  019A                     	;# 
  4502  019B                     	;# 
  4503  019B                     	;# 
  4504  019B                     	;# 
  4505  019B                     	;# 
  4506  019B                     	;# 
  4507  019C                     	;# 
  4508  019C                     	;# 
  4509  019C                     	;# 
  4510  019D                     	;# 
  4511  019D                     	;# 
  4512  019D                     	;# 
  4513  019E                     	;# 
  4514  019E                     	;# 
  4515  019E                     	;# 
  4516  019F                     	;# 
  4517  019F                     	;# 
  4518  019F                     	;# 
  4519  019F                     	;# 
  4520  019F                     	;# 
  4521  020C                     	;# 
  4522  020D                     	;# 
  4523  020E                     	;# 
  4524  0211                     	;# 
  4525  0211                     	;# 
  4526  0212                     	;# 
  4527  0212                     	;# 
  4528  0213                     	;# 
  4529  0213                     	;# 
  4530  0214                     	;# 
  4531  0214                     	;# 
  4532  0215                     	;# 
  4533  0215                     	;# 
  4534  0215                     	;# 
  4535  0215                     	;# 
  4536  0216                     	;# 
  4537  0216                     	;# 
  4538  0217                     	;# 
  4539  0217                     	;# 
  4540  021D                     	;# 
  4541  021E                     	;# 
  4542  021F                     	;# 
  4543  028C                     	;# 
  4544  028D                     	;# 
  4545  028E                     	;# 
  4546  0291                     	;# 
  4547  0291                     	;# 
  4548  0292                     	;# 
  4549  0293                     	;# 
  4550  0294                     	;# 
  4551  0298                     	;# 
  4552  0298                     	;# 
  4553  0299                     	;# 
  4554  029A                     	;# 
  4555  029B                     	;# 
  4556  029E                     	;# 
  4557  030C                     	;# 
  4558  030D                     	;# 
  4559  030E                     	;# 
  4560  031B                     	;# 
  4561  031C                     	;# 
  4562  031D                     	;# 
  4563  031E                     	;# 
  4564  031F                     	;# 
  4565  038C                     	;# 
  4566  038D                     	;# 
  4567  038E                     	;# 
  4568  0391                     	;# 
  4569  0392                     	;# 
  4570  0393                     	;# 
  4571  0394                     	;# 
  4572  0395                     	;# 
  4573  0396                     	;# 
  4574  0397                     	;# 
  4575  0398                     	;# 
  4576  0399                     	;# 
  4577  039B                     	;# 
  4578  039C                     	;# 
  4579  039D                     	;# 
  4580  039E                     	;# 
  4581  039F                     	;# 
  4582  040E                     	;# 
  4583  0413                     	;# 
  4584  0413                     	;# 
  4585  0414                     	;# 
  4586  0414                     	;# 
  4587  0415                     	;# 
  4588  0416                     	;# 
  4589  0417                     	;# 
  4590  0418                     	;# 
  4591  041A                     	;# 
  4592  041A                     	;# 
  4593  041B                     	;# 
  4594  041B                     	;# 
  4595  041C                     	;# 
  4596  041D                     	;# 
  4597  041E                     	;# 
  4598  041F                     	;# 
  4599  0493                     	;# 
  4600  0493                     	;# 
  4601  0494                     	;# 
  4602  0495                     	;# 
  4603  0496                     	;# 
  4604  049A                     	;# 
  4605  049A                     	;# 
  4606  049B                     	;# 
  4607  049C                     	;# 
  4608  049D                     	;# 
  4609  050F                     	;# 
  4610  0510                     	;# 
  4611  0511                     	;# 
  4612  0512                     	;# 
  4613  0513                     	;# 
  4614  0514                     	;# 
  4615  0515                     	;# 
  4616  0516                     	;# 
  4617  0590                     	;# 
  4618  0591                     	;# 
  4619  0592                     	;# 
  4620  0592                     	;# 
  4621  0592                     	;# 
  4622  0593                     	;# 
  4623  0593                     	;# 
  4624  0594                     	;# 
  4625  0595                     	;# 
  4626  0595                     	;# 
  4627  0595                     	;# 
  4628  0596                     	;# 
  4629  0596                     	;# 
  4630  0597                     	;# 
  4631  0598                     	;# 
  4632  0598                     	;# 
  4633  0599                     	;# 
  4634  059A                     	;# 
  4635  059A                     	;# 
  4636  0617                     	;# 
  4637  0617                     	;# 
  4638  0618                     	;# 
  4639  0619                     	;# 
  4640  061A                     	;# 
  4641  061A                     	;# 
  4642  061B                     	;# 
  4643  061C                     	;# 
  4644  068D                     	;# 
  4645  068E                     	;# 
  4646  068F                     	;# 
  4647  0690                     	;# 
  4648  0691                     	;# 
  4649  0692                     	;# 
  4650  0693                     	;# 
  4651  0694                     	;# 
  4652  0695                     	;# 
  4653  0696                     	;# 
  4654  0697                     	;# 
  4655  0698                     	;# 
  4656  0699                     	;# 
  4657  069A                     	;# 
  4658  069B                     	;# 
  4659  069C                     	;# 
  4660  069D                     	;# 
  4661  069E                     	;# 
  4662  069F                     	;# 
  4663  070D                     	;# 
  4664  070E                     	;# 
  4665  070F                     	;# 
  4666  0710                     	;# 
  4667  0711                     	;# 
  4668  0712                     	;# 
  4669  0713                     	;# 
  4670  0714                     	;# 
  4671  0715                     	;# 
  4672  0716                     	;# 
  4673  0717                     	;# 
  4674  0718                     	;# 
  4675  0719                     	;# 
  4676  071A                     	;# 
  4677  071B                     	;# 
  4678  071C                     	;# 
  4679  071D                     	;# 
  4680  071E                     	;# 
  4681  071F                     	;# 
  4682  0794                     	;# 
  4683  0795                     	;# 
  4684  0796                     	;# 
  4685  0797                     	;# 
  4686  0798                     	;# 
  4687  0799                     	;# 
  4688  079A                     	;# 
  4689  079B                     	;# 
  4690  079C                     	;# 
  4691  079D                     	;# 
  4692  079E                     	;# 
  4693  079F                     	;# 
  4694  0D8E                     	;# 
  4695  0D8F                     	;# 
  4696  0D90                     	;# 
  4697  0D91                     	;# 
  4698  0D91                     	;# 
  4699  0D92                     	;# 
  4700  0D93                     	;# 
  4701  0D93                     	;# 
  4702  0D94                     	;# 
  4703  0D95                     	;# 
  4704  0D95                     	;# 
  4705  0D96                     	;# 
  4706  0D97                     	;# 
  4707  0D97                     	;# 
  4708  0D98                     	;# 
  4709  0D99                     	;# 
  4710  0D99                     	;# 
  4711  0D9A                     	;# 
  4712  0D9B                     	;# 
  4713  0D9C                     	;# 
  4714  0D9C                     	;# 
  4715  0D9D                     	;# 
  4716  0D9D                     	;# 
  4717  0D9E                     	;# 
  4718  0D9F                     	;# 
  4719  0DA0                     	;# 
  4720  0DA1                     	;# 
  4721  0DA1                     	;# 
  4722  0DA2                     	;# 
  4723  0DA3                     	;# 
  4724  0DA3                     	;# 
  4725  0DA4                     	;# 
  4726  0DA5                     	;# 
  4727  0DA5                     	;# 
  4728  0DA6                     	;# 
  4729  0DA7                     	;# 
  4730  0DA7                     	;# 
  4731  0DA8                     	;# 
  4732  0DA9                     	;# 
  4733  0DA9                     	;# 
  4734  0DAA                     	;# 
  4735  0DAB                     	;# 
  4736  0DAC                     	;# 
  4737  0DAC                     	;# 
  4738  0DAD                     	;# 
  4739  0DAD                     	;# 
  4740  0DAE                     	;# 
  4741  0DAF                     	;# 
  4742  0DB0                     	;# 
  4743  0E0F                     	;# 
  4744  0E10                     	;# 
  4745  0E11                     	;# 
  4746  0E12                     	;# 
  4747  0E13                     	;# 
  4748  0E14                     	;# 
  4749  0E15                     	;# 
  4750  0E16                     	;# 
  4751  0E17                     	;# 
  4752  0E19                     	;# 
  4753  0E19                     	;# 
  4754  0E19                     	;# 
  4755  0E1A                     	;# 
  4756  0E1B                     	;# 
  4757  0E1C                     	;# 
  4758  0E1C                     	;# 
  4759  0E1C                     	;# 
  4760  0E1D                     	;# 
  4761  0E1E                     	;# 
  4762  0E1F                     	;# 
  4763  0E1F                     	;# 
  4764  0E1F                     	;# 
  4765  0E20                     	;# 
  4766  0E21                     	;# 
  4767  0E22                     	;# 
  4768  0E24                     	;# 
  4769  0E25                     	;# 
  4770  0E28                     	;# 
  4771  0E29                     	;# 
  4772  0E2A                     	;# 
  4773  0E2B                     	;# 
  4774  0E2C                     	;# 
  4775  0E2D                     	;# 
  4776  0E2E                     	;# 
  4777  0E2F                     	;# 
  4778  0E30                     	;# 
  4779  0E31                     	;# 
  4780  0E32                     	;# 
  4781  0E33                     	;# 
  4782  0E34                     	;# 
  4783  0E35                     	;# 
  4784  0E90                     	;# 
  4785  0E91                     	;# 
  4786  0E92                     	;# 
  4787  0E94                     	;# 
  4788  0E95                     	;# 
  4789  0E9C                     	;# 
  4790  0E9D                     	;# 
  4791  0E9E                     	;# 
  4792  0E9F                     	;# 
  4793  0EA0                     	;# 
  4794  0EA1                     	;# 
  4795  0EA2                     	;# 
  4796  0EA3                     	;# 
  4797  0EA4                     	;# 
  4798  0EA5                     	;# 
  4799  0EA6                     	;# 
  4800  0EA7                     	;# 
  4801  0F0F                     	;# 
  4802  0F10                     	;# 
  4803  0F11                     	;# 
  4804  0F12                     	;# 
  4805  0F13                     	;# 
  4806  0F14                     	;# 
  4807  0F15                     	;# 
  4808  0F16                     	;# 
  4809  0F17                     	;# 
  4810  0F18                     	;# 
  4811  0F19                     	;# 
  4812  0F1A                     	;# 
  4813  0F1B                     	;# 
  4814  0F1C                     	;# 
  4815  0F1D                     	;# 
  4816  0F1E                     	;# 
  4817  0F1F                     	;# 
  4818  0F20                     	;# 
  4819  0F21                     	;# 
  4820  0F22                     	;# 
  4821  0F23                     	;# 
  4822  0F24                     	;# 
  4823  0F25                     	;# 
  4824  0F26                     	;# 
  4825  0F27                     	;# 
  4826  0F28                     	;# 
  4827  0F29                     	;# 
  4828  0F2A                     	;# 
  4829  0F2B                     	;# 
  4830  0F2C                     	;# 
  4831  0F2D                     	;# 
  4832  0FE4                     	;# 
  4833  0FE5                     	;# 
  4834  0FE6                     	;# 
  4835  0FE7                     	;# 
  4836  0FE8                     	;# 
  4837  0FE9                     	;# 
  4838  0FEA                     	;# 
  4839  0FEB                     	;# 
  4840  0FED                     	;# 
  4841  0FEE                     	;# 
  4842  0FEF                     	;# 
  4843  0000                     	;# 
  4844  0001                     	;# 
  4845  0002                     	;# 
  4846  0003                     	;# 
  4847  0004                     	;# 
  4848  0005                     	;# 
  4849  0006                     	;# 
  4850  0007                     	;# 
  4851  0008                     	;# 
  4852  0009                     	;# 
  4853  000A                     	;# 
  4854  000B                     	;# 
  4855  000C                     	;# 
  4856  000D                     	;# 
  4857  000E                     	;# 
  4858  0011                     	;# 
  4859  0012                     	;# 
  4860  0013                     	;# 
  4861  0014                     	;# 
  4862  0015                     	;# 
  4863  0016                     	;# 
  4864  0016                     	;# 
  4865  0017                     	;# 
  4866  0018                     	;# 
  4867  0019                     	;# 
  4868  001A                     	;# 
  4869  001A                     	;# 
  4870  001B                     	;# 
  4871  001B                     	;# 
  4872  001C                     	;# 
  4873  001D                     	;# 
  4874  001E                     	;# 
  4875  001F                     	;# 
  4876  008C                     	;# 
  4877  008D                     	;# 
  4878  008E                     	;# 
  4879  0091                     	;# 
  4880  0092                     	;# 
  4881  0093                     	;# 
  4882  0094                     	;# 
  4883  0095                     	;# 
  4884  0096                     	;# 
  4885  0097                     	;# 
  4886  0098                     	;# 
  4887  0099                     	;# 
  4888  009A                     	;# 
  4889  009B                     	;# 
  4890  009B                     	;# 
  4891  009C                     	;# 
  4892  009D                     	;# 
  4893  009E                     	;# 
  4894  009F                     	;# 
  4895  010C                     	;# 
  4896  010D                     	;# 
  4897  010E                     	;# 
  4898  010F                     	;# 
  4899  0110                     	;# 
  4900  0111                     	;# 
  4901  0112                     	;# 
  4902  0113                     	;# 
  4903  0114                     	;# 
  4904  0115                     	;# 
  4905  0116                     	;# 
  4906  0117                     	;# 
  4907  0118                     	;# 
  4908  0119                     	;# 
  4909  011A                     	;# 
  4910  011B                     	;# 
  4911  011C                     	;# 
  4912  011D                     	;# 
  4913  011E                     	;# 
  4914  011F                     	;# 
  4915  018C                     	;# 
  4916  018D                     	;# 
  4917  018E                     	;# 
  4918  0191                     	;# 
  4919  0191                     	;# 
  4920  0192                     	;# 
  4921  0193                     	;# 
  4922  0193                     	;# 
  4923  0194                     	;# 
  4924  0195                     	;# 
  4925  0196                     	;# 
  4926  0199                     	;# 
  4927  0199                     	;# 
  4928  0199                     	;# 
  4929  019A                     	;# 
  4930  019A                     	;# 
  4931  019A                     	;# 
  4932  019B                     	;# 
  4933  019B                     	;# 
  4934  019B                     	;# 
  4935  019B                     	;# 
  4936  019B                     	;# 
  4937  019C                     	;# 
  4938  019C                     	;# 
  4939  019C                     	;# 
  4940  019D                     	;# 
  4941  019D                     	;# 
  4942  019D                     	;# 
  4943  019E                     	;# 
  4944  019E                     	;# 
  4945  019E                     	;# 
  4946  019F                     	;# 
  4947  019F                     	;# 
  4948  019F                     	;# 
  4949  019F                     	;# 
  4950  019F                     	;# 
  4951  020C                     	;# 
  4952  020D                     	;# 
  4953  020E                     	;# 
  4954  0211                     	;# 
  4955  0211                     	;# 
  4956  0212                     	;# 
  4957  0212                     	;# 
  4958  0213                     	;# 
  4959  0213                     	;# 
  4960  0214                     	;# 
  4961  0214                     	;# 
  4962  0215                     	;# 
  4963  0215                     	;# 
  4964  0215                     	;# 
  4965  0215                     	;# 
  4966  0216                     	;# 
  4967  0216                     	;# 
  4968  0217                     	;# 
  4969  0217                     	;# 
  4970  021D                     	;# 
  4971  021E                     	;# 
  4972  021F                     	;# 
  4973  028C                     	;# 
  4974  028D                     	;# 
  4975  028E                     	;# 
  4976  0291                     	;# 
  4977  0291                     	;# 
  4978  0292                     	;# 
  4979  0293                     	;# 
  4980  0294                     	;# 
  4981  0298                     	;# 
  4982  0298                     	;# 
  4983  0299                     	;# 
  4984  029A                     	;# 
  4985  029B                     	;# 
  4986  029E                     	;# 
  4987  030C                     	;# 
  4988  030D                     	;# 
  4989  030E                     	;# 
  4990  031B                     	;# 
  4991  031C                     	;# 
  4992  031D                     	;# 
  4993  031E                     	;# 
  4994  031F                     	;# 
  4995  038C                     	;# 
  4996  038D                     	;# 
  4997  038E                     	;# 
  4998  0391                     	;# 
  4999  0392                     	;# 
  5000  0393                     	;# 
  5001  0394                     	;# 
  5002  0395                     	;# 
  5003  0396                     	;# 
  5004  0397                     	;# 
  5005  0398                     	;# 
  5006  0399                     	;# 
  5007  039B                     	;# 
  5008  039C                     	;# 
  5009  039D                     	;# 
  5010  039E                     	;# 
  5011  039F                     	;# 
  5012  040E                     	;# 
  5013  0413                     	;# 
  5014  0413                     	;# 
  5015  0414                     	;# 
  5016  0414                     	;# 
  5017  0415                     	;# 
  5018  0416                     	;# 
  5019  0417                     	;# 
  5020  0418                     	;# 
  5021  041A                     	;# 
  5022  041A                     	;# 
  5023  041B                     	;# 
  5024  041B                     	;# 
  5025  041C                     	;# 
  5026  041D                     	;# 
  5027  041E                     	;# 
  5028  041F                     	;# 
  5029  0493                     	;# 
  5030  0493                     	;# 
  5031  0494                     	;# 
  5032  0495                     	;# 
  5033  0496                     	;# 
  5034  049A                     	;# 
  5035  049A                     	;# 
  5036  049B                     	;# 
  5037  049C                     	;# 
  5038  049D                     	;# 
  5039  050F                     	;# 
  5040  0510                     	;# 
  5041  0511                     	;# 
  5042  0512                     	;# 
  5043  0513                     	;# 
  5044  0514                     	;# 
  5045  0515                     	;# 
  5046  0516                     	;# 
  5047  0590                     	;# 
  5048  0591                     	;# 
  5049  0592                     	;# 
  5050  0592                     	;# 
  5051  0592                     	;# 
  5052  0593                     	;# 
  5053  0593                     	;# 
  5054  0594                     	;# 
  5055  0595                     	;# 
  5056  0595                     	;# 
  5057  0595                     	;# 
  5058  0596                     	;# 
  5059  0596                     	;# 
  5060  0597                     	;# 
  5061  0598                     	;# 
  5062  0598                     	;# 
  5063  0599                     	;# 
  5064  059A                     	;# 
  5065  059A                     	;# 
  5066  0617                     	;# 
  5067  0617                     	;# 
  5068  0618                     	;# 
  5069  0619                     	;# 
  5070  061A                     	;# 
  5071  061A                     	;# 
  5072  061B                     	;# 
  5073  061C                     	;# 
  5074  068D                     	;# 
  5075  068E                     	;# 
  5076  068F                     	;# 
  5077  0690                     	;# 
  5078  0691                     	;# 
  5079  0692                     	;# 
  5080  0693                     	;# 
  5081  0694                     	;# 
  5082  0695                     	;# 
  5083  0696                     	;# 
  5084  0697                     	;# 
  5085  0698                     	;# 
  5086  0699                     	;# 
  5087  069A                     	;# 
  5088  069B                     	;# 
  5089  069C                     	;# 
  5090  069D                     	;# 
  5091  069E                     	;# 
  5092  069F                     	;# 
  5093  070D                     	;# 
  5094  070E                     	;# 
  5095  070F                     	;# 
  5096  0710                     	;# 
  5097  0711                     	;# 
  5098  0712                     	;# 
  5099  0713                     	;# 
  5100  0714                     	;# 
  5101  0715                     	;# 
  5102  0716                     	;# 
  5103  0717                     	;# 
  5104  0718                     	;# 
  5105  0719                     	;# 
  5106  071A                     	;# 
  5107  071B                     	;# 
  5108  071C                     	;# 
  5109  071D                     	;# 
  5110  071E                     	;# 
  5111  071F                     	;# 
  5112  0794                     	;# 
  5113  0795                     	;# 
  5114  0796                     	;# 
  5115  0797                     	;# 
  5116  0798                     	;# 
  5117  0799                     	;# 
  5118  079A                     	;# 
  5119  079B                     	;# 
  5120  079C                     	;# 
  5121  079D                     	;# 
  5122  079E                     	;# 
  5123  079F                     	;# 
  5124  0D8E                     	;# 
  5125  0D8F                     	;# 
  5126  0D90                     	;# 
  5127  0D91                     	;# 
  5128  0D91                     	;# 
  5129  0D92                     	;# 
  5130  0D93                     	;# 
  5131  0D93                     	;# 
  5132  0D94                     	;# 
  5133  0D95                     	;# 
  5134  0D95                     	;# 
  5135  0D96                     	;# 
  5136  0D97                     	;# 
  5137  0D97                     	;# 
  5138  0D98                     	;# 
  5139  0D99                     	;# 
  5140  0D99                     	;# 
  5141  0D9A                     	;# 
  5142  0D9B                     	;# 
  5143  0D9C                     	;# 
  5144  0D9C                     	;# 
  5145  0D9D                     	;# 
  5146  0D9D                     	;# 
  5147  0D9E                     	;# 
  5148  0D9F                     	;# 
  5149  0DA0                     	;# 
  5150  0DA1                     	;# 
  5151  0DA1                     	;# 
  5152  0DA2                     	;# 
  5153  0DA3                     	;# 
  5154  0DA3                     	;# 
  5155  0DA4                     	;# 
  5156  0DA5                     	;# 
  5157  0DA5                     	;# 
  5158  0DA6                     	;# 
  5159  0DA7                     	;# 
  5160  0DA7                     	;# 
  5161  0DA8                     	;# 
  5162  0DA9                     	;# 
  5163  0DA9                     	;# 
  5164  0DAA                     	;# 
  5165  0DAB                     	;# 
  5166  0DAC                     	;# 
  5167  0DAC                     	;# 
  5168  0DAD                     	;# 
  5169  0DAD                     	;# 
  5170  0DAE                     	;# 
  5171  0DAF                     	;# 
  5172  0DB0                     	;# 
  5173  0E0F                     	;# 
  5174  0E10                     	;# 
  5175  0E11                     	;# 
  5176  0E12                     	;# 
  5177  0E13                     	;# 
  5178  0E14                     	;# 
  5179  0E15                     	;# 
  5180  0E16                     	;# 
  5181  0E17                     	;# 
  5182  0E19                     	;# 
  5183  0E19                     	;# 
  5184  0E19                     	;# 
  5185  0E1A                     	;# 
  5186  0E1B                     	;# 
  5187  0E1C                     	;# 
  5188  0E1C                     	;# 
  5189  0E1C                     	;# 
  5190  0E1D                     	;# 
  5191  0E1E                     	;# 
  5192  0E1F                     	;# 
  5193  0E1F                     	;# 
  5194  0E1F                     	;# 
  5195  0E20                     	;# 
  5196  0E21                     	;# 
  5197  0E22                     	;# 
  5198  0E24                     	;# 
  5199  0E25                     	;# 
  5200  0E28                     	;# 
  5201  0E29                     	;# 
  5202  0E2A                     	;# 
  5203  0E2B                     	;# 
  5204  0E2C                     	;# 
  5205  0E2D                     	;# 
  5206  0E2E                     	;# 
  5207  0E2F                     	;# 
  5208  0E30                     	;# 
  5209  0E31                     	;# 
  5210  0E32                     	;# 
  5211  0E33                     	;# 
  5212  0E34                     	;# 
  5213  0E35                     	;# 
  5214  0E90                     	;# 
  5215  0E91                     	;# 
  5216  0E92                     	;# 
  5217  0E94                     	;# 
  5218  0E95                     	;# 
  5219  0E9C                     	;# 
  5220  0E9D                     	;# 
  5221  0E9E                     	;# 
  5222  0E9F                     	;# 
  5223  0EA0                     	;# 
  5224  0EA1                     	;# 
  5225  0EA2                     	;# 
  5226  0EA3                     	;# 
  5227  0EA4                     	;# 
  5228  0EA5                     	;# 
  5229  0EA6                     	;# 
  5230  0EA7                     	;# 
  5231  0F0F                     	;# 
  5232  0F10                     	;# 
  5233  0F11                     	;# 
  5234  0F12                     	;# 
  5235  0F13                     	;# 
  5236  0F14                     	;# 
  5237  0F15                     	;# 
  5238  0F16                     	;# 
  5239  0F17                     	;# 
  5240  0F18                     	;# 
  5241  0F19                     	;# 
  5242  0F1A                     	;# 
  5243  0F1B                     	;# 
  5244  0F1C                     	;# 
  5245  0F1D                     	;# 
  5246  0F1E                     	;# 
  5247  0F1F                     	;# 
  5248  0F20                     	;# 
  5249  0F21                     	;# 
  5250  0F22                     	;# 
  5251  0F23                     	;# 
  5252  0F24                     	;# 
  5253  0F25                     	;# 
  5254  0F26                     	;# 
  5255  0F27                     	;# 
  5256  0F28                     	;# 
  5257  0F29                     	;# 
  5258  0F2A                     	;# 
  5259  0F2B                     	;# 
  5260  0F2C                     	;# 
  5261  0F2D                     	;# 
  5262  0FE4                     	;# 
  5263  0FE5                     	;# 
  5264  0FE6                     	;# 
  5265  0FE7                     	;# 
  5266  0FE8                     	;# 
  5267  0FE9                     	;# 
  5268  0FEA                     	;# 
  5269  0FEB                     	;# 
  5270  0FED                     	;# 
  5271  0FEE                     	;# 
  5272  0FEF                     	;_gpci
  5273                           
  5274 ;; Function _SPI_Close is unused but had its address taken
  5275  0000                     
  5276 ;; Function _SPI_ExchangeBlock is unused but had its address taken
  5277  0000                     
  5278 ;; Function _SPI_WriteBlock is unused but had its address taken
  5279  0000                     
  5280 ;; Function _SPI_ReadBlock is unused but had its address taken
  5281  0000                     
  5282 ;; Function _SPI_WriteByte is unused but had its address taken
  5283  0000                     
  5284 ;; Function _SPI_ReadByte is unused but had its address taken
  5285  0000                     
  5286                           	psect	idataBIGRAM
  5287  0669                     __pidataBIGRAM:
  5288                           
  5289                           ;initializer for _gpci
  5290  0669  3401               	retlw	1
  5291  066A  340F               	retlw	low (_n_rot| (0+32768))
  5292  066B  3497               	retlw	high (_n_rot| (0+32768))
  5293  066C  3400               	retlw	0
  5294  066D  3400               	retlw	0
  5295  066E  3400               	retlw	0
  5296  066F  3400               	retlw	0
  5297  0670  3400               	retlw	0
  5298  0671  3400               	retlw	0
  5299  0672  3400               	retlw	0
  5300  0673  3400               	retlw	0
  5301  0674  3401               	retlw	1
  5302  0675  344D               	retlw	low (_m_rot| (0+32768))
  5303  0676  3495               	retlw	high (_m_rot| (0+32768))
  5304  0677  3400               	retlw	0
  5305  0678  3400               	retlw	0
  5306  0679  3400               	retlw	0
  5307  067A  3400               	retlw	0
  5308  067B  3400               	retlw	0
  5309  067C  3400               	retlw	0
  5310  067D  3400               	retlw	0
  5311  067E  3400               	retlw	0
  5312  067F  3401               	retlw	1
  5313  0680  3402               	retlw	low (_b_rot| (0+32768))
  5314  0681  3495               	retlw	high (_b_rot| (0+32768))
  5315  0682  3400               	retlw	0
  5316  0683  3400               	retlw	0
  5317  0684  3400               	retlw	0
  5318  0685  3400               	retlw	0
  5319  0686  3400               	retlw	0
  5320  0687  3400               	retlw	0
  5321  0688  3400               	retlw	0
  5322  0689  3400               	retlw	0
  5323  068A  3403               	retlw	3
  5324  068B  340F               	retlw	low (_n_rot| (0+32768))
  5325  068C  3497               	retlw	high (_n_rot| (0+32768))
  5326  068D  34E3               	retlw	low (_serie_rot| (0+32768))
  5327  068E  3495               	retlw	high (_serie_rot| (0+32768))
  5328  068F  344D               	retlw	low (_m_rot| (0+32768))
  5329  0690  3495               	retlw	high (_m_rot| (0+32768))
  5330  0691  3400               	retlw	0
  5331  0692  3400               	retlw	0
  5332  0693  3400               	retlw	0
  5333  0694  3400               	retlw	0
  5334  0695  3403               	retlw	3
  5335  0696  344D               	retlw	low (_m_rot| (0+32768))
  5336  0697  3495               	retlw	high (_m_rot| (0+32768))
  5337  0698  34E3               	retlw	low (_serie_rot| (0+32768))
  5338  0699  3495               	retlw	high (_serie_rot| (0+32768))
  5339  069A  340F               	retlw	low (_n_rot| (0+32768))
  5340  069B  3497               	retlw	high (_n_rot| (0+32768))
  5341  069C  3400               	retlw	0
  5342  069D  3400               	retlw	0
  5343  069E  3400               	retlw	0
  5344  069F  3400               	retlw	0
  5345  06A0  3403               	retlw	3
  5346  06A1  340F               	retlw	low (_n_rot| (0+32768))
  5347  06A2  3497               	retlw	high (_n_rot| (0+32768))
  5348  06A3  34E3               	retlw	low (_serie_rot| (0+32768))
  5349  06A4  3495               	retlw	high (_serie_rot| (0+32768))
  5350  06A5  3402               	retlw	low (_b_rot| (0+32768))
  5351  06A6  3495               	retlw	high (_b_rot| (0+32768))
  5352  06A7  3400               	retlw	0
  5353  06A8  3400               	retlw	0
  5354  06A9  3400               	retlw	0
  5355  06AA  3400               	retlw	0
  5356  06AB  3403               	retlw	3
  5357  06AC  3402               	retlw	low (_b_rot| (0+32768))
  5358  06AD  3495               	retlw	high (_b_rot| (0+32768))
  5359  06AE  34E3               	retlw	low (_serie_rot| (0+32768))
  5360  06AF  3495               	retlw	high (_serie_rot| (0+32768))
  5361  06B0  340F               	retlw	low (_n_rot| (0+32768))
  5362  06B1  3497               	retlw	high (_n_rot| (0+32768))
  5363  06B2  3400               	retlw	0
  5364  06B3  3400               	retlw	0
  5365  06B4  3400               	retlw	0
  5366  06B5  3400               	retlw	0
  5367  06B6  3403               	retlw	3
  5368  06B7  344D               	retlw	low (_m_rot| (0+32768))
  5369  06B8  3495               	retlw	high (_m_rot| (0+32768))
  5370  06B9  34E3               	retlw	low (_serie_rot| (0+32768))
  5371  06BA  3495               	retlw	high (_serie_rot| (0+32768))
  5372  06BB  3402               	retlw	low (_b_rot| (0+32768))
  5373  06BC  3495               	retlw	high (_b_rot| (0+32768))
  5374  06BD  3400               	retlw	0
  5375  06BE  3400               	retlw	0
  5376  06BF  3400               	retlw	0
  5377  06C0  3400               	retlw	0
  5378  06C1  3403               	retlw	3
  5379  06C2  3402               	retlw	low (_b_rot| (0+32768))
  5380  06C3  3495               	retlw	high (_b_rot| (0+32768))
  5381  06C4  34E3               	retlw	low (_serie_rot| (0+32768))
  5382  06C5  3495               	retlw	high (_serie_rot| (0+32768))
  5383  06C6  344D               	retlw	low (_m_rot| (0+32768))
  5384  06C7  3495               	retlw	high (_m_rot| (0+32768))
  5385  06C8  3400               	retlw	0
  5386  06C9  3400               	retlw	0
  5387  06CA  3400               	retlw	0
  5388  06CB  3400               	retlw	0
  5389  06CC  3405               	retlw	5
  5390  06CD  340F               	retlw	low (_n_rot| (0+32768))
  5391  06CE  3497               	retlw	high (_n_rot| (0+32768))
  5392  06CF  34E3               	retlw	low (_serie_rot| (0+32768))
  5393  06D0  3495               	retlw	high (_serie_rot| (0+32768))
  5394  06D1  344D               	retlw	low (_m_rot| (0+32768))
  5395  06D2  3495               	retlw	high (_m_rot| (0+32768))
  5396  06D3  34E3               	retlw	low (_serie_rot| (0+32768))
  5397  06D4  3495               	retlw	high (_serie_rot| (0+32768))
  5398  06D5  3402               	retlw	low (_b_rot| (0+32768))
  5399  06D6  3495               	retlw	high (_b_rot| (0+32768))
  5400  06D7  3405               	retlw	5
  5401  06D8  340F               	retlw	low (_n_rot| (0+32768))
  5402  06D9  3497               	retlw	high (_n_rot| (0+32768))
  5403  06DA  34E3               	retlw	low (_serie_rot| (0+32768))
  5404  06DB  3495               	retlw	high (_serie_rot| (0+32768))
  5405  06DC  3402               	retlw	low (_b_rot| (0+32768))
  5406  06DD  3495               	retlw	high (_b_rot| (0+32768))
  5407  06DE  34E3               	retlw	low (_serie_rot| (0+32768))
  5408  06DF  3495               	retlw	high (_serie_rot| (0+32768))
  5409  06E0  344D               	retlw	low (_m_rot| (0+32768))
  5410  06E1  3495               	retlw	high (_m_rot| (0+32768))
  5411  06E2  3405               	retlw	5
  5412  06E3  3402               	retlw	low (_b_rot| (0+32768))
  5413  06E4  3495               	retlw	high (_b_rot| (0+32768))
  5414  06E5  34E3               	retlw	low (_serie_rot| (0+32768))
  5415  06E6  3495               	retlw	high (_serie_rot| (0+32768))
  5416  06E7  340F               	retlw	low (_n_rot| (0+32768))
  5417  06E8  3497               	retlw	high (_n_rot| (0+32768))
  5418  06E9  34E3               	retlw	low (_serie_rot| (0+32768))
  5419  06EA  3495               	retlw	high (_serie_rot| (0+32768))
  5420  06EB  344D               	retlw	low (_m_rot| (0+32768))
  5421  06EC  3495               	retlw	high (_m_rot| (0+32768))
  5422  06ED  3405               	retlw	5
  5423  06EE  3402               	retlw	low (_b_rot| (0+32768))
  5424  06EF  3495               	retlw	high (_b_rot| (0+32768))
  5425  06F0  34E3               	retlw	low (_serie_rot| (0+32768))
  5426  06F1  3495               	retlw	high (_serie_rot| (0+32768))
  5427  06F2  344D               	retlw	low (_m_rot| (0+32768))
  5428  06F3  3495               	retlw	high (_m_rot| (0+32768))
  5429  06F4  34E3               	retlw	low (_serie_rot| (0+32768))
  5430  06F5  3495               	retlw	high (_serie_rot| (0+32768))
  5431  06F6  340F               	retlw	low (_n_rot| (0+32768))
  5432  06F7  3497               	retlw	high (_n_rot| (0+32768))
  5433  06F8  3403               	retlw	3
  5434  06F9  340F               	retlw	low (_n_rot| (0+32768))
  5435  06FA  3497               	retlw	high (_n_rot| (0+32768))
  5436  06FB  3498               	retlw	low (_parallel_rot| (0+32768))
  5437  06FC  3495               	retlw	high (_parallel_rot| (0+32768))
  5438  06FD  344D               	retlw	low (_m_rot| (0+32768))
  5439  06FE  3495               	retlw	high (_m_rot| (0+32768))
  5440  06FF  3400               	retlw	0
  5441  0700  3400               	retlw	0
  5442  0701  3400               	retlw	0
  5443  0702  3400               	retlw	0
  5444  0703  3403               	retlw	3
  5445  0704  340F               	retlw	low (_n_rot| (0+32768))
  5446  0705  3497               	retlw	high (_n_rot| (0+32768))
  5447  0706  3498               	retlw	low (_parallel_rot| (0+32768))
  5448  0707  3495               	retlw	high (_parallel_rot| (0+32768))
  5449  0708  3402               	retlw	low (_b_rot| (0+32768))
  5450  0709  3495               	retlw	high (_b_rot| (0+32768))
  5451  070A  3400               	retlw	0
  5452  070B  3400               	retlw	0
  5453  070C  3400               	retlw	0
  5454  070D  3400               	retlw	0
  5455  070E  3403               	retlw	3
  5456  070F  344D               	retlw	low (_m_rot| (0+32768))
  5457  0710  3495               	retlw	high (_m_rot| (0+32768))
  5458  0711  3498               	retlw	low (_parallel_rot| (0+32768))
  5459  0712  3495               	retlw	high (_parallel_rot| (0+32768))
  5460  0713  3402               	retlw	low (_b_rot| (0+32768))
  5461  0714  3495               	retlw	high (_b_rot| (0+32768))
  5462  0715  3400               	retlw	0
  5463  0716  3400               	retlw	0
  5464  0717  3400               	retlw	0
  5465  0718  3400               	retlw	0
  5466  0719  3405               	retlw	5
  5467  071A  340F               	retlw	low (_n_rot| (0+32768))
  5468  071B  3497               	retlw	high (_n_rot| (0+32768))
  5469  071C  3498               	retlw	low (_parallel_rot| (0+32768))
  5470  071D  3495               	retlw	high (_parallel_rot| (0+32768))
  5471  071E  344D               	retlw	low (_m_rot| (0+32768))
  5472  071F  3495               	retlw	high (_m_rot| (0+32768))
  5473  0720  3498               	retlw	low (_parallel_rot| (0+32768))
  5474  0721  3495               	retlw	high (_parallel_rot| (0+32768))
  5475  0722  3402               	retlw	low (_b_rot| (0+32768))
  5476  0723  3495               	retlw	high (_b_rot| (0+32768))
  5477  0724  3405               	retlw	5
  5478  0725  340F               	retlw	low (_n_rot| (0+32768))
  5479  0726  3497               	retlw	high (_n_rot| (0+32768))
  5480  0727  3498               	retlw	low (_parallel_rot| (0+32768))
  5481  0728  3495               	retlw	high (_parallel_rot| (0+32768))
  5482  0729  344D               	retlw	low (_m_rot| (0+32768))
  5483  072A  3495               	retlw	high (_m_rot| (0+32768))
  5484  072B  34E3               	retlw	low (_serie_rot| (0+32768))
  5485  072C  3495               	retlw	high (_serie_rot| (0+32768))
  5486  072D  3402               	retlw	low (_b_rot| (0+32768))
  5487  072E  3495               	retlw	high (_b_rot| (0+32768))
  5488  072F  3405               	retlw	5
  5489  0730  3402               	retlw	low (_b_rot| (0+32768))
  5490  0731  3495               	retlw	high (_b_rot| (0+32768))
  5491  0732  34E3               	retlw	low (_serie_rot| (0+32768))
  5492  0733  3495               	retlw	high (_serie_rot| (0+32768))
  5493  0734  340F               	retlw	low (_n_rot| (0+32768))
  5494  0735  3497               	retlw	high (_n_rot| (0+32768))
  5495  0736  3498               	retlw	low (_parallel_rot| (0+32768))
  5496  0737  3495               	retlw	high (_parallel_rot| (0+32768))
  5497  0738  344D               	retlw	low (_m_rot| (0+32768))
  5498  0739  3495               	retlw	high (_m_rot| (0+32768))
  5499  073A  3405               	retlw	5
  5500  073B  340F               	retlw	low (_n_rot| (0+32768))
  5501  073C  3497               	retlw	high (_n_rot| (0+32768))
  5502  073D  34E3               	retlw	low (_serie_rot| (0+32768))
  5503  073E  3495               	retlw	high (_serie_rot| (0+32768))
  5504  073F  344D               	retlw	low (_m_rot| (0+32768))
  5505  0740  3495               	retlw	high (_m_rot| (0+32768))
  5506  0741  3498               	retlw	low (_parallel_rot| (0+32768))
  5507  0742  3495               	retlw	high (_parallel_rot| (0+32768))
  5508  0743  3402               	retlw	low (_b_rot| (0+32768))
  5509  0744  3495               	retlw	high (_b_rot| (0+32768))
  5510  0745  3405               	retlw	5
  5511  0746  344D               	retlw	low (_m_rot| (0+32768))
  5512  0747  3495               	retlw	high (_m_rot| (0+32768))
  5513  0748  3498               	retlw	low (_parallel_rot| (0+32768))
  5514  0749  3495               	retlw	high (_parallel_rot| (0+32768))
  5515  074A  3402               	retlw	low (_b_rot| (0+32768))
  5516  074B  3495               	retlw	high (_b_rot| (0+32768))
  5517  074C  34E3               	retlw	low (_serie_rot| (0+32768))
  5518  074D  3495               	retlw	high (_serie_rot| (0+32768))
  5519  074E  340F               	retlw	low (_n_rot| (0+32768))
  5520  074F  3497               	retlw	high (_n_rot| (0+32768))
  5521  0750  3405               	retlw	5
  5522  0751  340F               	retlw	low (_n_rot| (0+32768))
  5523  0752  3497               	retlw	high (_n_rot| (0+32768))
  5524  0753  3498               	retlw	low (_parallel_rot| (0+32768))
  5525  0754  3495               	retlw	high (_parallel_rot| (0+32768))
  5526  0755  3402               	retlw	low (_b_rot| (0+32768))
  5527  0756  3495               	retlw	high (_b_rot| (0+32768))
  5528  0757  34E3               	retlw	low (_serie_rot| (0+32768))
  5529  0758  3495               	retlw	high (_serie_rot| (0+32768))
  5530  0759  344D               	retlw	low (_m_rot| (0+32768))
  5531  075A  3495               	retlw	high (_m_rot| (0+32768))
  5532  075B  3405               	retlw	5
  5533  075C  344D               	retlw	low (_m_rot| (0+32768))
  5534  075D  3495               	retlw	high (_m_rot| (0+32768))
  5535  075E  34E3               	retlw	low (_serie_rot| (0+32768))
  5536  075F  3495               	retlw	high (_serie_rot| (0+32768))
  5537  0760  340F               	retlw	low (_n_rot| (0+32768))
  5538  0761  3497               	retlw	high (_n_rot| (0+32768))
  5539  0762  3498               	retlw	low (_parallel_rot| (0+32768))
  5540  0763  3495               	retlw	high (_parallel_rot| (0+32768))
  5541  0764  3402               	retlw	low (_b_rot| (0+32768))
  5542  0765  3495               	retlw	high (_b_rot| (0+32768))
  5543                           
  5544                           ;initializer for _pci
  5545  0766  3400               	retlw	0
  5546  0767  3400               	retlw	0
  5547  0768  3400               	retlw	0
  5548  0769  3400               	retlw	0
  5549  076A  3400               	retlw	0
  5550  076B  3400               	retlw	0
  5551  076C  3400               	retlw	0
  5552  076D  3401               	retlw	1
  5553  076E  340F               	retlw	low (_n_rot| (0+32768))
  5554  076F  3497               	retlw	high (_n_rot| (0+32768))
  5555  0770  3400               	retlw	0
  5556  0771  3400               	retlw	0
  5557  0772  3400               	retlw	0
  5558  0773  3400               	retlw	0
  5559  0774  3401               	retlw	1
  5560  0775  3479               	retlw	low (_s_rot| (0+32768))
  5561  0776  3496               	retlw	high (_s_rot| (0+32768))
  5562  0777  3400               	retlw	0
  5563  0778  3400               	retlw	0
  5564  0779  3400               	retlw	0
  5565  077A  3400               	retlw	0
  5566  077B  3401               	retlw	1
  5567  077C  34C4               	retlw	low (_n_prime_rot| (0+32768))
  5568  077D  3496               	retlw	high (_n_prime_rot| (0+32768))
  5569  077E  3400               	retlw	0
  5570  077F  3400               	retlw	0
  5571  0780  3400               	retlw	0
  5572  0781  3400               	retlw	0
  5573  0782  3401               	retlw	1
  5574  0783  342E               	retlw	low (_s_prime_rot| (0+32768))
  5575  0784  3496               	retlw	high (_s_prime_rot| (0+32768))
  5576  0785  3400               	retlw	0
  5577  0786  3400               	retlw	0
  5578  0787  3400               	retlw	0
  5579  0788  3400               	retlw	0
  5580  0789  3403               	retlw	3
  5581  078A  340F               	retlw	low (_n_rot| (0+32768))
  5582  078B  3497               	retlw	high (_n_rot| (0+32768))
  5583  078C  34E3               	retlw	low (_serie_rot| (0+32768))
  5584  078D  3495               	retlw	high (_serie_rot| (0+32768))
  5585  078E  3479               	retlw	low (_s_rot| (0+32768))
  5586  078F  3496               	retlw	high (_s_rot| (0+32768))
  5587  0790  3403               	retlw	3
  5588  0791  3479               	retlw	low (_s_rot| (0+32768))
  5589  0792  3496               	retlw	high (_s_rot| (0+32768))
  5590  0793  34E3               	retlw	low (_serie_rot| (0+32768))
  5591  0794  3495               	retlw	high (_serie_rot| (0+32768))
  5592  0795  340F               	retlw	low (_n_rot| (0+32768))
  5593  0796  3497               	retlw	high (_n_rot| (0+32768))
  5594  0797  3403               	retlw	3
  5595  0798  340F               	retlw	low (_n_rot| (0+32768))
  5596  0799  3497               	retlw	high (_n_rot| (0+32768))
  5597  079A  34E3               	retlw	low (_serie_rot| (0+32768))
  5598  079B  3495               	retlw	high (_serie_rot| (0+32768))
  5599  079C  342E               	retlw	low (_s_prime_rot| (0+32768))
  5600  079D  3496               	retlw	high (_s_prime_rot| (0+32768))
  5601  079E  3403               	retlw	3
  5602  079F  342E               	retlw	low (_s_prime_rot| (0+32768))
  5603  07A0  3496               	retlw	high (_s_prime_rot| (0+32768))
  5604  07A1  34E3               	retlw	low (_serie_rot| (0+32768))
  5605  07A2  3495               	retlw	high (_serie_rot| (0+32768))
  5606  07A3  340F               	retlw	low (_n_rot| (0+32768))
  5607  07A4  3497               	retlw	high (_n_rot| (0+32768))
  5608  07A5  3403               	retlw	3
  5609  07A6  34C4               	retlw	low (_n_prime_rot| (0+32768))
  5610  07A7  3496               	retlw	high (_n_prime_rot| (0+32768))
  5611  07A8  34E3               	retlw	low (_serie_rot| (0+32768))
  5612  07A9  3495               	retlw	high (_serie_rot| (0+32768))
  5613  07AA  3479               	retlw	low (_s_rot| (0+32768))
  5614  07AB  3496               	retlw	high (_s_rot| (0+32768))
  5615  07AC  3403               	retlw	3
  5616  07AD  3479               	retlw	low (_s_rot| (0+32768))
  5617  07AE  3496               	retlw	high (_s_rot| (0+32768))
  5618  07AF  34E3               	retlw	low (_serie_rot| (0+32768))
  5619  07B0  3495               	retlw	high (_serie_rot| (0+32768))
  5620  07B1  34C4               	retlw	low (_n_prime_rot| (0+32768))
  5621  07B2  3496               	retlw	high (_n_prime_rot| (0+32768))
  5622  07B3  3403               	retlw	3
  5623  07B4  34C4               	retlw	low (_n_prime_rot| (0+32768))
  5624  07B5  3496               	retlw	high (_n_prime_rot| (0+32768))
  5625  07B6  34E3               	retlw	low (_serie_rot| (0+32768))
  5626  07B7  3495               	retlw	high (_serie_rot| (0+32768))
  5627  07B8  342E               	retlw	low (_s_prime_rot| (0+32768))
  5628  07B9  3496               	retlw	high (_s_prime_rot| (0+32768))
  5629  07BA  3403               	retlw	3
  5630  07BB  342E               	retlw	low (_s_prime_rot| (0+32768))
  5631  07BC  3496               	retlw	high (_s_prime_rot| (0+32768))
  5632  07BD  34E3               	retlw	low (_serie_rot| (0+32768))
  5633  07BE  3495               	retlw	high (_serie_rot| (0+32768))
  5634  07BF  34C4               	retlw	low (_n_prime_rot| (0+32768))
  5635  07C0  3496               	retlw	high (_n_prime_rot| (0+32768))
  5636  07C1  3403               	retlw	3
  5637  07C2  340F               	retlw	low (_n_rot| (0+32768))
  5638  07C3  3497               	retlw	high (_n_rot| (0+32768))
  5639  07C4  3498               	retlw	low (_parallel_rot| (0+32768))
  5640  07C5  3495               	retlw	high (_parallel_rot| (0+32768))
  5641  07C6  3479               	retlw	low (_s_rot| (0+32768))
  5642  07C7  3496               	retlw	high (_s_rot| (0+32768))
  5643  07C8  3403               	retlw	3
  5644  07C9  34C4               	retlw	low (_n_prime_rot| (0+32768))
  5645  07CA  3496               	retlw	high (_n_prime_rot| (0+32768))
  5646  07CB  3498               	retlw	low (_parallel_rot| (0+32768))
  5647  07CC  3495               	retlw	high (_parallel_rot| (0+32768))
  5648  07CD  3479               	retlw	low (_s_rot| (0+32768))
  5649  07CE  3496               	retlw	high (_s_rot| (0+32768))
  5650  07CF  3403               	retlw	3
  5651  07D0  340F               	retlw	low (_n_rot| (0+32768))
  5652  07D1  3497               	retlw	high (_n_rot| (0+32768))
  5653  07D2  3498               	retlw	low (_parallel_rot| (0+32768))
  5654  07D3  3495               	retlw	high (_parallel_rot| (0+32768))
  5655  07D4  342E               	retlw	low (_s_prime_rot| (0+32768))
  5656  07D5  3496               	retlw	high (_s_prime_rot| (0+32768))
  5657  07D6  3403               	retlw	3
  5658  07D7  34C4               	retlw	low (_n_prime_rot| (0+32768))
  5659  07D8  3496               	retlw	high (_n_prime_rot| (0+32768))
  5660  07D9  3498               	retlw	low (_parallel_rot| (0+32768))
  5661  07DA  3495               	retlw	high (_parallel_rot| (0+32768))
  5662  07DB  342E               	retlw	low (_s_prime_rot| (0+32768))
  5663  07DC  3496               	retlw	high (_s_prime_rot| (0+32768))
  5664                           
  5665                           	psect	idataBANK1
  5666  0901                     __pidataBANK1:
  5667                           
  5668                           ;initializer for read_rotary@rot_enc_table
  5669  0901  3400               	retlw	0
  5670  0902  3401               	retlw	1
  5671  0903  3401               	retlw	1
  5672  0904  3400               	retlw	0
  5673  0905  3401               	retlw	1
  5674  0906  3400               	retlw	0
  5675  0907  3400               	retlw	0
  5676  0908  3401               	retlw	1
  5677  0909  3401               	retlw	1
  5678  090A  3400               	retlw	0
  5679  090B  3400               	retlw	0
  5680  090C  3401               	retlw	1
  5681  090D  3400               	retlw	0
  5682  090E  3401               	retlw	1
  5683  090F  3401               	retlw	1
  5684  0910  3400               	retlw	0
  5685                           
  5686                           ;initializer for _time_to_refresh
  5687  0911  3401               	retlw	1
  5688                           
  5689                           ;initializer for _selection_index
  5690  0912  34FF               	retlw	-1
  5691                           
  5692                           ;initializer for _saved_pc
  5693  0913  3401               	retlw	1
  5694  0914  3402               	retlw	2
  5695  0915  3403               	retlw	3
  5696  0916  3404               	retlw	4
  5697  0917  3405               	retlw	5
  5698  0918  340A               	retlw	10
  5699  0919  3404               	retlw	4
  5700  091A  3402               	retlw	2
  5701  091B  3402               	retlw	2
  5702  091C  340C               	retlw	12
  5703  091D  340D               	retlw	13
  5704  091E  340C               	retlw	12
  5705  091F  3401               	retlw	1
  5706  0920  340F               	retlw	15
  5707  0921  340C               	retlw	12
  5708  0922  3415               	retlw	21
  5709  0923  3404               	retlw	4
  5710  0924  3401               	retlw	1
  5711  0925  3405               	retlw	5
  5712  0926  3411               	retlw	17
  5713                           
  5714                           	psect	idataBANK2
  5715  088C                     __pidataBANK2:
  5716                           
  5717                           ;initializer for _buffer
  5718  088C  3464               	retlw	100
  5719  088D  3461               	retlw	97
  5720  088E  3474               	retlw	116
  5721  088F  3461               	retlw	97
  5722  0890  3400               	retlw	0
  5723  0891  3400               	retlw	0
  5724  0892  3400               	retlw	0
  5725  0893  3400               	retlw	0
  5726  0894  3400               	retlw	0
  5727  0895  3400               	retlw	0
  5728  0896  3400               	retlw	0
  5729  0897  3400               	retlw	0
  5730  0898  3400               	retlw	0
  5731  0899  3400               	retlw	0
  5732  089A  3400               	retlw	0
  5733  089B  3400               	retlw	0
  5734                           
  5735                           	psect	stringtext1
  5736  175A                     __pstringtext1:
  5737  175A                     _general_pickup_configuration_selectors:
  5738  175A  3400               	retlw	0
  5739  175B  3409               	retlw	9
  5740  175C  3480               	retlw	128
  5741  175D  3404               	retlw	4
  5742  175E  3440               	retlw	64
  5743  175F  3402               	retlw	2
  5744  1760  34A0               	retlw	160
  5745  1761  3408               	retlw	8
  5746  1762  3404               	retlw	4
  5747  1763  3405               	retlw	5
  5748  1764  3450               	retlw	80
  5749  1765  3408               	retlw	8
  5750  1766  3402               	retlw	2
  5751  1767  3403               	retlw	3
  5752  1768  3448               	retlw	72
  5753  1769  3404               	retlw	4
  5754  176A  3481               	retlw	129
  5755  176B  3402               	retlw	2
  5756  176C  3468               	retlw	104
  5757  176D  3408               	retlw	8
  5758  176E  3491               	retlw	145
  5759  176F  3408               	retlw	8
  5760  1770  34A2               	retlw	162
  5761  1771  3402               	retlw	2
  5762  1772  3405               	retlw	5
  5763  1773  3403               	retlw	3
  5764  1774  3480               	retlw	128
  5765  1775  340D               	retlw	13
  5766  1776  3440               	retlw	64
  5767  1777  340B               	retlw	11
  5768  1778  34C0               	retlw	192
  5769  1779  3406               	retlw	6
  5770  177A  34C0               	retlw	192
  5771  177B  340F               	retlw	15
  5772  177C  3458               	retlw	88
  5773  177D  340C               	retlw	12
  5774  177E  3483               	retlw	131
  5775  177F  3403               	retlw	3
  5776  1780  34F0               	retlw	240
  5777  1781  3408               	retlw	8
  5778  1782  3406               	retlw	6
  5779  1783  3407               	retlw	7
  5780  1784  34A1               	retlw	161
  5781  1785  340A               	retlw	10
  5782  1786  344C               	retlw	76
  5783  1787  3405               	retlw	5
  5784  1788                     __end_of_general_pickup_configuration_selectors:
  5785                           
  5786                           	psect	stringtext2
  5787  1788                     __pstringtext2:
  5788  1788                     _pickup_configuration_selectors:
  5789  1788  3400               	retlw	0
  5790  1789  3400               	retlw	0
  5791  178A  3400               	retlw	0
  5792  178B  340A               	retlw	10
  5793  178C  3400               	retlw	0
  5794  178D  3405               	retlw	5
  5795  178E  34C0               	retlw	192
  5796  178F  3400               	retlw	0
  5797  1790  3430               	retlw	48
  5798  1791  3400               	retlw	0
  5799  1792  3408               	retlw	8
  5800  1793  3409               	retlw	9
  5801  1794  3406               	retlw	6
  5802  1795  3408               	retlw	8
  5803  1796  3424               	retlw	36
  5804  1797  3408               	retlw	8
  5805  1798  3412               	retlw	18
  5806  1799  3402               	retlw	2
  5807  179A  3442               	retlw	66
  5808  179B  3401               	retlw	1
  5809  179C  3484               	retlw	132
  5810  179D  3404               	retlw	4
  5811  179E  3461               	retlw	97
  5812  179F  3400               	retlw	0
  5813  17A0  3498               	retlw	152
  5814  17A1  3400               	retlw	0
  5815  17A2  3400               	retlw	0
  5816  17A3  340F               	retlw	15
  5817  17A4  34C0               	retlw	192
  5818  17A5  3405               	retlw	5
  5819  17A6  3430               	retlw	48
  5820  17A7  340A               	retlw	10
  5821  17A8  34F0               	retlw	240
  5822  17A9  3400               	retlw	0
  5823  17AA                     __end_of_pickup_configuration_selectors:
  5824  1F80                     _configurations_absaddr	set	8064
  5825                           
  5826                           	psect	stringtext3
  5827  1823                     __pstringtext3:
  5828  1823                     _spi_configuration:
  5829  1823  340A               	retlw	10
  5830  1824  3440               	retlw	64
  5831  1825  3407               	retlw	7
  5832  1826  3400               	retlw	0
  5833  1827  3400               	retlw	0
  5834  1828  3440               	retlw	64
  5835  1829  3401               	retlw	1
  5836  182A  3400               	retlw	0
  5837  182B                     __end_of_spi_configuration:
  5838                           
  5839                           	psect	stringtext4
  5840  182B                     __pstringtext4:
  5841  182B                     SwitchEventHandler@conv_table:
  5842  182B  3400               	retlw	0
  5843  182C  3402               	retlw	2
  5844  182D  3401               	retlw	1
  5845  182E  3404               	retlw	4
  5846  182F  3400               	retlw	0
  5847  1830  3403               	retlw	3
  5848  1831                     __end_ofSwitchEventHandler@conv_table:
  5849                           
  5850                           	psect	stringtext5
  5851  1000                     __pstringtext5:
  5852  1000                     _possible_general_conf_str:
  5853  1000  344E               	retlw	78
  5854  1001  3400               	retlw	0
  5855  1002  3400               	retlw	0
  5856  1003  3400               	retlw	0
  5857  1004  3400               	retlw	0
  5858  1005  3400               	retlw	0
  5859  1006  3400               	retlw	0
  5860  1007  3400               	retlw	0
  5861  1008  3400               	retlw	0
  5862  1009  3400               	retlw	0
  5863  100A  344D               	retlw	77
  5864  100B  3400               	retlw	0
  5865  100C  3400               	retlw	0
  5866  100D  3400               	retlw	0
  5867  100E  3400               	retlw	0
  5868  100F  3400               	retlw	0
  5869  1010  3400               	retlw	0
  5870  1011  3400               	retlw	0
  5871  1012  3400               	retlw	0
  5872  1013  3400               	retlw	0
  5873  1014  3442               	retlw	66
  5874  1015  3400               	retlw	0
  5875  1016  3400               	retlw	0
  5876  1017  3400               	retlw	0
  5877  1018  3400               	retlw	0
  5878  1019  3400               	retlw	0
  5879  101A  3400               	retlw	0
  5880  101B  3400               	retlw	0
  5881  101C  3400               	retlw	0
  5882  101D  3400               	retlw	0
  5883  101E  344E               	retlw	78
  5884  101F  342B               	retlw	43
  5885  1020  344D               	retlw	77
  5886  1021  3400               	retlw	0
  5887  1022  3400               	retlw	0
  5888  1023  3400               	retlw	0
  5889  1024  3400               	retlw	0
  5890  1025  3400               	retlw	0
  5891  1026  3400               	retlw	0
  5892  1027  3400               	retlw	0
  5893  1028  344D               	retlw	77
  5894  1029  342B               	retlw	43
  5895  102A  344E               	retlw	78
  5896  102B  3400               	retlw	0
  5897  102C  3400               	retlw	0
  5898  102D  3400               	retlw	0
  5899  102E  3400               	retlw	0
  5900  102F  3400               	retlw	0
  5901  1030  3400               	retlw	0
  5902  1031  3400               	retlw	0
  5903  1032  344E               	retlw	78
  5904  1033  342B               	retlw	43
  5905  1034  3442               	retlw	66
  5906  1035  3400               	retlw	0
  5907  1036  3400               	retlw	0
  5908  1037  3400               	retlw	0
  5909  1038  3400               	retlw	0
  5910  1039  3400               	retlw	0
  5911  103A  3400               	retlw	0
  5912  103B  3400               	retlw	0
  5913  103C  3442               	retlw	66
  5914  103D  342B               	retlw	43
  5915  103E  344E               	retlw	78
  5916  103F  3400               	retlw	0
  5917  1040  3400               	retlw	0
  5918  1041  3400               	retlw	0
  5919  1042  3400               	retlw	0
  5920  1043  3400               	retlw	0
  5921  1044  3400               	retlw	0
  5922  1045  3400               	retlw	0
  5923  1046  344D               	retlw	77
  5924  1047  342B               	retlw	43
  5925  1048  3442               	retlw	66
  5926  1049  3400               	retlw	0
  5927  104A  3400               	retlw	0
  5928  104B  3400               	retlw	0
  5929  104C  3400               	retlw	0
  5930  104D  3400               	retlw	0
  5931  104E  3400               	retlw	0
  5932  104F  3400               	retlw	0
  5933  1050  3442               	retlw	66
  5934  1051  342B               	retlw	43
  5935  1052  344D               	retlw	77
  5936  1053  3400               	retlw	0
  5937  1054  3400               	retlw	0
  5938  1055  3400               	retlw	0
  5939  1056  3400               	retlw	0
  5940  1057  3400               	retlw	0
  5941  1058  3400               	retlw	0
  5942  1059  3400               	retlw	0
  5943  105A  344E               	retlw	78
  5944  105B  342B               	retlw	43
  5945  105C  344D               	retlw	77
  5946  105D  342B               	retlw	43
  5947  105E  3442               	retlw	66
  5948  105F  3400               	retlw	0
  5949  1060  3400               	retlw	0
  5950  1061  3400               	retlw	0
  5951  1062  3400               	retlw	0
  5952  1063  3400               	retlw	0
  5953  1064  344E               	retlw	78
  5954  1065  342B               	retlw	43
  5955  1066  3442               	retlw	66
  5956  1067  342B               	retlw	43
  5957  1068  344D               	retlw	77
  5958  1069  3400               	retlw	0
  5959  106A  3400               	retlw	0
  5960  106B  3400               	retlw	0
  5961  106C  3400               	retlw	0
  5962  106D  3400               	retlw	0
  5963  106E  3442               	retlw	66
  5964  106F  342B               	retlw	43
  5965  1070  344E               	retlw	78
  5966  1071  342B               	retlw	43
  5967  1072  344D               	retlw	77
  5968  1073  3400               	retlw	0
  5969  1074  3400               	retlw	0
  5970  1075  3400               	retlw	0
  5971  1076  3400               	retlw	0
  5972  1077  3400               	retlw	0
  5973  1078  3442               	retlw	66
  5974  1079  342B               	retlw	43
  5975  107A  344D               	retlw	77
  5976  107B  342B               	retlw	43
  5977  107C  344E               	retlw	78
  5978  107D  3400               	retlw	0
  5979  107E  3400               	retlw	0
  5980  107F  3400               	retlw	0
  5981  1080  3400               	retlw	0
  5982  1081  3400               	retlw	0
  5983  1082  344E               	retlw	78
  5984  1083  342F               	retlw	47
  5985  1084  342F               	retlw	47
  5986  1085  344D               	retlw	77
  5987  1086  3400               	retlw	0
  5988  1087  3400               	retlw	0
  5989  1088  3400               	retlw	0
  5990  1089  3400               	retlw	0
  5991  108A  3400               	retlw	0
  5992  108B  3400               	retlw	0
  5993  108C  344E               	retlw	78
  5994  108D  342F               	retlw	47
  5995  108E  342F               	retlw	47
  5996  108F  3442               	retlw	66
  5997  1090  3400               	retlw	0
  5998  1091  3400               	retlw	0
  5999  1092  3400               	retlw	0
  6000  1093  3400               	retlw	0
  6001  1094  3400               	retlw	0
  6002  1095  3400               	retlw	0
  6003  1096  344D               	retlw	77
  6004  1097  342F               	retlw	47
  6005  1098  342F               	retlw	47
  6006  1099  3442               	retlw	66
  6007  109A  3400               	retlw	0
  6008  109B  3400               	retlw	0
  6009  109C  3400               	retlw	0
  6010  109D  3400               	retlw	0
  6011  109E  3400               	retlw	0
  6012  109F  3400               	retlw	0
  6013  10A0  344E               	retlw	78
  6014  10A1  342F               	retlw	47
  6015  10A2  342F               	retlw	47
  6016  10A3  344D               	retlw	77
  6017  10A4  342F               	retlw	47
  6018  10A5  342F               	retlw	47
  6019  10A6  3442               	retlw	66
  6020  10A7  3400               	retlw	0
  6021  10A8  3400               	retlw	0
  6022  10A9  3400               	retlw	0
  6023  10AA  344E               	retlw	78
  6024  10AB  342F               	retlw	47
  6025  10AC  342F               	retlw	47
  6026  10AD  344D               	retlw	77
  6027  10AE  342B               	retlw	43
  6028  10AF  3442               	retlw	66
  6029  10B0  3400               	retlw	0
  6030  10B1  3400               	retlw	0
  6031  10B2  3400               	retlw	0
  6032  10B3  3400               	retlw	0
  6033  10B4  3442               	retlw	66
  6034  10B5  342B               	retlw	43
  6035  10B6  344E               	retlw	78
  6036  10B7  342F               	retlw	47
  6037  10B8  342F               	retlw	47
  6038  10B9  344D               	retlw	77
  6039  10BA  3400               	retlw	0
  6040  10BB  3400               	retlw	0
  6041  10BC  3400               	retlw	0
  6042  10BD  3400               	retlw	0
  6043  10BE  344E               	retlw	78
  6044  10BF  342B               	retlw	43
  6045  10C0  344D               	retlw	77
  6046  10C1  342F               	retlw	47
  6047  10C2  342F               	retlw	47
  6048  10C3  3442               	retlw	66
  6049  10C4  3400               	retlw	0
  6050  10C5  3400               	retlw	0
  6051  10C6  3400               	retlw	0
  6052  10C7  3400               	retlw	0
  6053  10C8  344D               	retlw	77
  6054  10C9  342F               	retlw	47
  6055  10CA  342F               	retlw	47
  6056  10CB  3442               	retlw	66
  6057  10CC  342B               	retlw	43
  6058  10CD  344E               	retlw	78
  6059  10CE  3400               	retlw	0
  6060  10CF  3400               	retlw	0
  6061  10D0  3400               	retlw	0
  6062  10D1  3400               	retlw	0
  6063  10D2  344E               	retlw	78
  6064  10D3  342F               	retlw	47
  6065  10D4  342F               	retlw	47
  6066  10D5  3442               	retlw	66
  6067  10D6  342B               	retlw	43
  6068  10D7  344D               	retlw	77
  6069  10D8  3400               	retlw	0
  6070  10D9  3400               	retlw	0
  6071  10DA  3400               	retlw	0
  6072  10DB  3400               	retlw	0
  6073  10DC  344D               	retlw	77
  6074  10DD  342B               	retlw	43
  6075  10DE  344E               	retlw	78
  6076  10DF  342F               	retlw	47
  6077  10E0  342F               	retlw	47
  6078  10E1  3442               	retlw	66
  6079  10E2  3400               	retlw	0
  6080  10E3  3400               	retlw	0
  6081  10E4  3400               	retlw	0
  6082  10E5  3400               	retlw	0
  6083  10E6                     __end_of_possible_general_conf_str:
  6084                           
  6085                           	psect	stringtext6
  6086  10E6                     __pstringtext6:
  6087  10E6                     _g_arrow_rot:
  6088  10E6  3400               	retlw	0
  6089  10E7  3400               	retlw	0
  6090  10E8  3400               	retlw	0
  6091  10E9  3400               	retlw	0
  6092  10EA  3400               	retlw	0
  6093  10EB  3400               	retlw	0
  6094  10EC  3400               	retlw	0
  6095  10ED  3418               	retlw	24
  6096  10EE  3400               	retlw	0
  6097  10EF  3400               	retlw	0
  6098  10F0  3438               	retlw	56
  6099  10F1  3400               	retlw	0
  6100  10F2  3400               	retlw	0
  6101  10F3  343C               	retlw	60
  6102  10F4  3400               	retlw	0
  6103  10F5  3400               	retlw	0
  6104  10F6  347C               	retlw	124
  6105  10F7  3400               	retlw	0
  6106  10F8  3400               	retlw	0
  6107  10F9  347C               	retlw	124
  6108  10FA  3400               	retlw	0
  6109  10FB  3400               	retlw	0
  6110  10FC  347E               	retlw	126
  6111  10FD  3400               	retlw	0
  6112  10FE  3400               	retlw	0
  6113  10FF  34FE               	retlw	254
  6114  1100  3400               	retlw	0
  6115  1101  3400               	retlw	0
  6116  1102  34FE               	retlw	254
  6117  1103  3400               	retlw	0
  6118  1104  3400               	retlw	0
  6119  1105  34EF               	retlw	239
  6120  1106  3400               	retlw	0
  6121  1107  3401               	retlw	1
  6122  1108  34EF               	retlw	239
  6123  1109  3400               	retlw	0
  6124  110A  3401               	retlw	1
  6125  110B  34C7               	retlw	199
  6126  110C  3480               	retlw	128
  6127  110D  3401               	retlw	1
  6128  110E  34C7               	retlw	199
  6129  110F  3480               	retlw	128
  6130  1110  3401               	retlw	1
  6131  1111  3483               	retlw	131
  6132  1112  3480               	retlw	128
  6133  1113  3400               	retlw	0
  6134  1114  3403               	retlw	3
  6135  1115  3480               	retlw	128
  6136  1116  3400               	retlw	0
  6137  1117  3401               	retlw	1
  6138  1118  3480               	retlw	128
  6139  1119  3400               	retlw	0
  6140  111A  3400               	retlw	0
  6141  111B  3400               	retlw	0
  6142  111C  3400               	retlw	0
  6143  111D  3410               	retlw	16
  6144  111E  3400               	retlw	0
  6145  111F  3400               	retlw	0
  6146  1120  3418               	retlw	24
  6147  1121  3400               	retlw	0
  6148  1122  3400               	retlw	0
  6149  1123  3418               	retlw	24
  6150  1124  3400               	retlw	0
  6151  1125  3400               	retlw	0
  6152  1126  3418               	retlw	24
  6153  1127  3400               	retlw	0
  6154  1128  3400               	retlw	0
  6155  1129  3418               	retlw	24
  6156  112A  3400               	retlw	0
  6157  112B  3400               	retlw	0
  6158  112C  3418               	retlw	24
  6159  112D  3400               	retlw	0
  6160  112E  3400               	retlw	0
  6161  112F  3418               	retlw	24
  6162  1130  3400               	retlw	0
  6163  1131  3400               	retlw	0
  6164  1132  3418               	retlw	24
  6165  1133  3400               	retlw	0
  6166  1134  3400               	retlw	0
  6167  1135  3418               	retlw	24
  6168  1136  3400               	retlw	0
  6169  1137  3400               	retlw	0
  6170  1138  3418               	retlw	24
  6171  1139  3400               	retlw	0
  6172  113A  3400               	retlw	0
  6173  113B  3418               	retlw	24
  6174  113C  3400               	retlw	0
  6175  113D  3400               	retlw	0
  6176  113E  3418               	retlw	24
  6177  113F  3400               	retlw	0
  6178  1140  3400               	retlw	0
  6179  1141  3410               	retlw	16
  6180  1142  3400               	retlw	0
  6181  1143  3400               	retlw	0
  6182  1144  3400               	retlw	0
  6183  1145  3400               	retlw	0
  6184  1146  3400               	retlw	0
  6185  1147  3400               	retlw	0
  6186  1148  3400               	retlw	0
  6187  1149  3400               	retlw	0
  6188  114A  3400               	retlw	0
  6189  114B  3400               	retlw	0
  6190  114C  3400               	retlw	0
  6191  114D  3400               	retlw	0
  6192  114E  3400               	retlw	0
  6193  114F  3400               	retlw	0
  6194  1150  3400               	retlw	0
  6195  1151  3400               	retlw	0
  6196  1152  3400               	retlw	0
  6197  1153  3400               	retlw	0
  6198  1154  3400               	retlw	0
  6199  1155  3400               	retlw	0
  6200  1156  3400               	retlw	0
  6201  1157  3400               	retlw	0
  6202  1158  3400               	retlw	0
  6203  1159  3418               	retlw	24
  6204  115A  3400               	retlw	0
  6205  115B  3400               	retlw	0
  6206  115C  343C               	retlw	60
  6207  115D  3400               	retlw	0
  6208  115E  3400               	retlw	0
  6209  115F  343E               	retlw	62
  6210  1160  3400               	retlw	0
  6211  1161  3400               	retlw	0
  6212  1162  347E               	retlw	126
  6213  1163  3400               	retlw	0
  6214  1164  3400               	retlw	0
  6215  1165  347F               	retlw	127
  6216  1166  3400               	retlw	0
  6217  1167  3438               	retlw	56
  6218  1168  34FF               	retlw	255
  6219  1169  3400               	retlw	0
  6220  116A  3478               	retlw	120
  6221  116B  34FF               	retlw	255
  6222  116C  3400               	retlw	0
  6223  116D  347C               	retlw	124
  6224  116E  34FF               	retlw	255
  6225  116F  3480               	retlw	128
  6226  1170  34FC               	retlw	252
  6227  1171  346F               	retlw	111
  6228  1172  3480               	retlw	128
  6229  1173  347E               	retlw	126
  6230  1174  340F               	retlw	15
  6231  1175  3480               	retlw	128
  6232  1176  343E               	retlw	62
  6233  1177  3407               	retlw	7
  6234  1178  3480               	retlw	128
  6235  1179  343F               	retlw	63
  6236  117A  3407               	retlw	7
  6237  117B  34C0               	retlw	192
  6238  117C  341F               	retlw	31
  6239  117D  3487               	retlw	135
  6240  117E  34C0               	retlw	192
  6241  117F  341F               	retlw	31
  6242  1180  34C7               	retlw	199
  6243  1181  34C0               	retlw	192
  6244  1182  340F               	retlw	15
  6245  1183  34C7               	retlw	199
  6246  1184  34C0               	retlw	192
  6247  1185  3407               	retlw	7
  6248  1186  34E7               	retlw	231
  6249  1187  34C0               	retlw	192
  6250  1188  3403               	retlw	3
  6251  1189  34F7               	retlw	247
  6252  118A  34C0               	retlw	192
  6253  118B  3401               	retlw	1
  6254  118C  34FF               	retlw	255
  6255  118D  34C0               	retlw	192
  6256  118E  3400               	retlw	0
  6257  118F  34FF               	retlw	255
  6258  1190  3480               	retlw	128
  6259  1191  3400               	retlw	0
  6260  1192  347F               	retlw	127
  6261  1193  3480               	retlw	128
  6262  1194  3400               	retlw	0
  6263  1195  343E               	retlw	62
  6264  1196  3400               	retlw	0
  6265  1197  3400               	retlw	0
  6266  1198  3400               	retlw	0
  6267  1199  3400               	retlw	0
  6268  119A  3400               	retlw	0
  6269  119B  3400               	retlw	0
  6270  119C  3400               	retlw	0
  6271  119D                     __end_of_g_arrow_rot:
  6272                           
  6273                           	psect	stringtext7
  6274  119D                     __pstringtext7:
  6275  119D                     _b_arrow_rot:
  6276  119D  3400               	retlw	0
  6277  119E  3400               	retlw	0
  6278  119F  3400               	retlw	0
  6279  11A0  3400               	retlw	0
  6280  11A1  3400               	retlw	0
  6281  11A2  3400               	retlw	0
  6282  11A3  3400               	retlw	0
  6283  11A4  3418               	retlw	24
  6284  11A5  3400               	retlw	0
  6285  11A6  3400               	retlw	0
  6286  11A7  3438               	retlw	56
  6287  11A8  3400               	retlw	0
  6288  11A9  3400               	retlw	0
  6289  11AA  343C               	retlw	60
  6290  11AB  3400               	retlw	0
  6291  11AC  3400               	retlw	0
  6292  11AD  347C               	retlw	124
  6293  11AE  3400               	retlw	0
  6294  11AF  3400               	retlw	0
  6295  11B0  347C               	retlw	124
  6296  11B1  3400               	retlw	0
  6297  11B2  3400               	retlw	0
  6298  11B3  347E               	retlw	126
  6299  11B4  3400               	retlw	0
  6300  11B5  3400               	retlw	0
  6301  11B6  34FE               	retlw	254
  6302  11B7  3400               	retlw	0
  6303  11B8  3400               	retlw	0
  6304  11B9  34FE               	retlw	254
  6305  11BA  3400               	retlw	0
  6306  11BB  3400               	retlw	0
  6307  11BC  34EF               	retlw	239
  6308  11BD  3400               	retlw	0
  6309  11BE  3401               	retlw	1
  6310  11BF  34EF               	retlw	239
  6311  11C0  3400               	retlw	0
  6312  11C1  3401               	retlw	1
  6313  11C2  34C7               	retlw	199
  6314  11C3  3480               	retlw	128
  6315  11C4  3401               	retlw	1
  6316  11C5  34C7               	retlw	199
  6317  11C6  3480               	retlw	128
  6318  11C7  3401               	retlw	1
  6319  11C8  3483               	retlw	131
  6320  11C9  3480               	retlw	128
  6321  11CA  3400               	retlw	0
  6322  11CB  3403               	retlw	3
  6323  11CC  3480               	retlw	128
  6324  11CD  3400               	retlw	0
  6325  11CE  3401               	retlw	1
  6326  11CF  3480               	retlw	128
  6327  11D0  3400               	retlw	0
  6328  11D1  3400               	retlw	0
  6329  11D2  3400               	retlw	0
  6330  11D3  3400               	retlw	0
  6331  11D4  3410               	retlw	16
  6332  11D5  3400               	retlw	0
  6333  11D6  3400               	retlw	0
  6334  11D7  3418               	retlw	24
  6335  11D8  3400               	retlw	0
  6336  11D9  3400               	retlw	0
  6337  11DA  3418               	retlw	24
  6338  11DB  3400               	retlw	0
  6339  11DC  3400               	retlw	0
  6340  11DD  3418               	retlw	24
  6341  11DE  3400               	retlw	0
  6342  11DF  3400               	retlw	0
  6343  11E0  3418               	retlw	24
  6344  11E1  3400               	retlw	0
  6345  11E2  3400               	retlw	0
  6346  11E3  3418               	retlw	24
  6347  11E4  3400               	retlw	0
  6348  11E5  3400               	retlw	0
  6349  11E6  3418               	retlw	24
  6350  11E7  3400               	retlw	0
  6351  11E8  3400               	retlw	0
  6352  11E9  3418               	retlw	24
  6353  11EA  3400               	retlw	0
  6354  11EB  3400               	retlw	0
  6355  11EC  3418               	retlw	24
  6356  11ED  3400               	retlw	0
  6357  11EE  3400               	retlw	0
  6358  11EF  3418               	retlw	24
  6359  11F0  3400               	retlw	0
  6360  11F1  3400               	retlw	0
  6361  11F2  3418               	retlw	24
  6362  11F3  3400               	retlw	0
  6363  11F4  3400               	retlw	0
  6364  11F5  3418               	retlw	24
  6365  11F6  3400               	retlw	0
  6366  11F7  3400               	retlw	0
  6367  11F8  3410               	retlw	16
  6368  11F9  3400               	retlw	0
  6369  11FA  3400               	retlw	0
  6370  11FB  3400               	retlw	0
  6371  11FC  3400               	retlw	0
  6372  11FD  3400               	retlw	0
  6373  11FE  3400               	retlw	0
  6374  11FF  3400               	retlw	0
  6375  1200  3400               	retlw	0
  6376  1201  3400               	retlw	0
  6377  1202  3400               	retlw	0
  6378  1203  3400               	retlw	0
  6379  1204  3400               	retlw	0
  6380  1205  3400               	retlw	0
  6381  1206  3400               	retlw	0
  6382  1207  3400               	retlw	0
  6383  1208  3400               	retlw	0
  6384  1209  3400               	retlw	0
  6385  120A  3400               	retlw	0
  6386  120B  3400               	retlw	0
  6387  120C  3400               	retlw	0
  6388  120D  3400               	retlw	0
  6389  120E  3400               	retlw	0
  6390  120F  3400               	retlw	0
  6391  1210  3400               	retlw	0
  6392  1211  3400               	retlw	0
  6393  1212  3400               	retlw	0
  6394  1213  3400               	retlw	0
  6395  1214  3400               	retlw	0
  6396  1215  3400               	retlw	0
  6397  1216  3400               	retlw	0
  6398  1217  3400               	retlw	0
  6399  1218  3400               	retlw	0
  6400  1219  3400               	retlw	0
  6401  121A  3400               	retlw	0
  6402  121B  3408               	retlw	8
  6403  121C  340E               	retlw	14
  6404  121D  3400               	retlw	0
  6405  121E  343E               	retlw	62
  6406  121F  341F               	retlw	31
  6407  1220  3400               	retlw	0
  6408  1221  343F               	retlw	63
  6409  1222  343F               	retlw	63
  6410  1223  3400               	retlw	0
  6411  1224  347F               	retlw	127
  6412  1225  34FF               	retlw	255
  6413  1226  3480               	retlw	128
  6414  1227  347F               	retlw	127
  6415  1228  34EF               	retlw	239
  6416  1229  3480               	retlw	128
  6417  122A  34FF               	retlw	255
  6418  122B  34E7               	retlw	231
  6419  122C  34C0               	retlw	192
  6420  122D  34F3               	retlw	243
  6421  122E  34E7               	retlw	231
  6422  122F  34C0               	retlw	192
  6423  1230  3473               	retlw	115
  6424  1231  34F3               	retlw	243
  6425  1232  34C0               	retlw	192
  6426  1233  3479               	retlw	121
  6427  1234  34F3               	retlw	243
  6428  1235  34C0               	retlw	192
  6429  1236  347B               	retlw	123
  6430  1237  34F1               	retlw	241
  6431  1238  34C0               	retlw	192
  6432  1239  347F               	retlw	127
  6433  123A  34FF               	retlw	255
  6434  123B  34C0               	retlw	192
  6435  123C  347F               	retlw	127
  6436  123D  34FF               	retlw	255
  6437  123E  34C0               	retlw	192
  6438  123F  347C               	retlw	124
  6439  1240  34FF               	retlw	255
  6440  1241  34C0               	retlw	192
  6441  1242  343E               	retlw	62
  6442  1243  340F               	retlw	15
  6443  1244  34C0               	retlw	192
  6444  1245  343E               	retlw	62
  6445  1246  3407               	retlw	7
  6446  1247  3480               	retlw	128
  6447  1248  343C               	retlw	60
  6448  1249  3400               	retlw	0
  6449  124A  3400               	retlw	0
  6450  124B  3418               	retlw	24
  6451  124C  3400               	retlw	0
  6452  124D  3400               	retlw	0
  6453  124E  3400               	retlw	0
  6454  124F  3400               	retlw	0
  6455  1250  3400               	retlw	0
  6456  1251  3400               	retlw	0
  6457  1252  3400               	retlw	0
  6458  1253  3400               	retlw	0
  6459  1254                     __end_of_b_arrow_rot:
  6460                           
  6461                           	psect	stringtext8
  6462  1254                     __pstringtext8:
  6463  1254                     _m_arrow_rot:
  6464  1254  3400               	retlw	0
  6465  1255  3400               	retlw	0
  6466  1256  3400               	retlw	0
  6467  1257  3400               	retlw	0
  6468  1258  3400               	retlw	0
  6469  1259  3400               	retlw	0
  6470  125A  3400               	retlw	0
  6471  125B  3418               	retlw	24
  6472  125C  3400               	retlw	0
  6473  125D  3400               	retlw	0
  6474  125E  3438               	retlw	56
  6475  125F  3400               	retlw	0
  6476  1260  3400               	retlw	0
  6477  1261  343C               	retlw	60
  6478  1262  3400               	retlw	0
  6479  1263  3400               	retlw	0
  6480  1264  347C               	retlw	124
  6481  1265  3400               	retlw	0
  6482  1266  3400               	retlw	0
  6483  1267  347C               	retlw	124
  6484  1268  3400               	retlw	0
  6485  1269  3400               	retlw	0
  6486  126A  347E               	retlw	126
  6487  126B  3400               	retlw	0
  6488  126C  3400               	retlw	0
  6489  126D  34FE               	retlw	254
  6490  126E  3400               	retlw	0
  6491  126F  3400               	retlw	0
  6492  1270  34FE               	retlw	254
  6493  1271  3400               	retlw	0
  6494  1272  3400               	retlw	0
  6495  1273  34EF               	retlw	239
  6496  1274  3400               	retlw	0
  6497  1275  3401               	retlw	1
  6498  1276  34EF               	retlw	239
  6499  1277  3400               	retlw	0
  6500  1278  3401               	retlw	1
  6501  1279  34C7               	retlw	199
  6502  127A  3480               	retlw	128
  6503  127B  3401               	retlw	1
  6504  127C  34C7               	retlw	199
  6505  127D  3480               	retlw	128
  6506  127E  3401               	retlw	1
  6507  127F  3483               	retlw	131
  6508  1280  3480               	retlw	128
  6509  1281  3400               	retlw	0
  6510  1282  3403               	retlw	3
  6511  1283  3480               	retlw	128
  6512  1284  3400               	retlw	0
  6513  1285  3401               	retlw	1
  6514  1286  3480               	retlw	128
  6515  1287  3400               	retlw	0
  6516  1288  3400               	retlw	0
  6517  1289  3400               	retlw	0
  6518  128A  3400               	retlw	0
  6519  128B  3410               	retlw	16
  6520  128C  3400               	retlw	0
  6521  128D  3400               	retlw	0
  6522  128E  3418               	retlw	24
  6523  128F  3400               	retlw	0
  6524  1290  3400               	retlw	0
  6525  1291  3418               	retlw	24
  6526  1292  3400               	retlw	0
  6527  1293  3400               	retlw	0
  6528  1294  3418               	retlw	24
  6529  1295  3400               	retlw	0
  6530  1296  3400               	retlw	0
  6531  1297  3418               	retlw	24
  6532  1298  3400               	retlw	0
  6533  1299  3400               	retlw	0
  6534  129A  3418               	retlw	24
  6535  129B  3400               	retlw	0
  6536  129C  3400               	retlw	0
  6537  129D  3418               	retlw	24
  6538  129E  3400               	retlw	0
  6539  129F  3400               	retlw	0
  6540  12A0  3418               	retlw	24
  6541  12A1  3400               	retlw	0
  6542  12A2  3400               	retlw	0
  6543  12A3  3418               	retlw	24
  6544  12A4  3400               	retlw	0
  6545  12A5  3400               	retlw	0
  6546  12A6  3418               	retlw	24
  6547  12A7  3400               	retlw	0
  6548  12A8  3400               	retlw	0
  6549  12A9  3418               	retlw	24
  6550  12AA  3400               	retlw	0
  6551  12AB  3400               	retlw	0
  6552  12AC  3418               	retlw	24
  6553  12AD  3400               	retlw	0
  6554  12AE  3400               	retlw	0
  6555  12AF  3410               	retlw	16
  6556  12B0  3400               	retlw	0
  6557  12B1  3400               	retlw	0
  6558  12B2  3400               	retlw	0
  6559  12B3  3400               	retlw	0
  6560  12B4  3400               	retlw	0
  6561  12B5  3400               	retlw	0
  6562  12B6  3400               	retlw	0
  6563  12B7  3400               	retlw	0
  6564  12B8  3400               	retlw	0
  6565  12B9  3400               	retlw	0
  6566  12BA  3400               	retlw	0
  6567  12BB  3400               	retlw	0
  6568  12BC  3400               	retlw	0
  6569  12BD  3400               	retlw	0
  6570  12BE  3400               	retlw	0
  6571  12BF  3400               	retlw	0
  6572  12C0  341F               	retlw	31
  6573  12C1  3400               	retlw	0
  6574  12C2  3400               	retlw	0
  6575  12C3  343F               	retlw	63
  6576  12C4  34FC               	retlw	252
  6577  12C5  3400               	retlw	0
  6578  12C6  347F               	retlw	127
  6579  12C7  34FF               	retlw	255
  6580  12C8  3400               	retlw	0
  6581  12C9  347F               	retlw	127
  6582  12CA  34FF               	retlw	255
  6583  12CB  3480               	retlw	128
  6584  12CC  343F               	retlw	63
  6585  12CD  34FF               	retlw	255
  6586  12CE  34C0               	retlw	192
  6587  12CF  341F               	retlw	31
  6588  12D0  34DF               	retlw	223
  6589  12D1  3480               	retlw	128
  6590  12D2  340F               	retlw	15
  6591  12D3  34C0               	retlw	192
  6592  12D4  3400               	retlw	0
  6593  12D5  3407               	retlw	7
  6594  12D6  34E0               	retlw	224
  6595  12D7  3400               	retlw	0
  6596  12D8  3403               	retlw	3
  6597  12D9  34F0               	retlw	240
  6598  12DA  3400               	retlw	0
  6599  12DB  3401               	retlw	1
  6600  12DC  34F0               	retlw	240
  6601  12DD  3400               	retlw	0
  6602  12DE  3401               	retlw	1
  6603  12DF  34F0               	retlw	240
  6604  12E0  3400               	retlw	0
  6605  12E1  3400               	retlw	0
  6606  12E2  34F0               	retlw	240
  6607  12E3  3400               	retlw	0
  6608  12E4  3401               	retlw	1
  6609  12E5  34F0               	retlw	240
  6610  12E6  3400               	retlw	0
  6611  12E7  341F               	retlw	31
  6612  12E8  34F0               	retlw	240
  6613  12E9  3400               	retlw	0
  6614  12EA  343F               	retlw	63
  6615  12EB  34F0               	retlw	240
  6616  12EC  3400               	retlw	0
  6617  12ED  347F               	retlw	127
  6618  12EE  34F0               	retlw	240
  6619  12EF  3400               	retlw	0
  6620  12F0  34FF               	retlw	255
  6621  12F1  34F0               	retlw	240
  6622  12F2  3400               	retlw	0
  6623  12F3  347F               	retlw	127
  6624  12F4  34E0               	retlw	224
  6625  12F5  3400               	retlw	0
  6626  12F6  343F               	retlw	63
  6627  12F7  34F0               	retlw	240
  6628  12F8  3400               	retlw	0
  6629  12F9  340F               	retlw	15
  6630  12FA  34FC               	retlw	252
  6631  12FB  3400               	retlw	0
  6632  12FC  3407               	retlw	7
  6633  12FD  34FF               	retlw	255
  6634  12FE  3400               	retlw	0
  6635  12FF  3400               	retlw	0
  6636  1300  34FF               	retlw	255
  6637  1301  34C0               	retlw	192
  6638  1302  3400               	retlw	0
  6639  1303  343F               	retlw	63
  6640  1304  34C0               	retlw	192
  6641  1305  3400               	retlw	0
  6642  1306  340F               	retlw	15
  6643  1307  34C0               	retlw	192
  6644  1308  3400               	retlw	0
  6645  1309  3400               	retlw	0
  6646  130A  3400               	retlw	0
  6647  130B                     __end_of_m_arrow_rot:
  6648                           
  6649                           	psect	stringtext9
  6650  130B                     __pstringtext9:
  6651  130B                     _n_arrow_rot:
  6652  130B  3400               	retlw	0
  6653  130C  3400               	retlw	0
  6654  130D  3400               	retlw	0
  6655  130E  3400               	retlw	0
  6656  130F  3400               	retlw	0
  6657  1310  3400               	retlw	0
  6658  1311  3400               	retlw	0
  6659  1312  3418               	retlw	24
  6660  1313  3400               	retlw	0
  6661  1314  3400               	retlw	0
  6662  1315  3438               	retlw	56
  6663  1316  3400               	retlw	0
  6664  1317  3400               	retlw	0
  6665  1318  343C               	retlw	60
  6666  1319  3400               	retlw	0
  6667  131A  3400               	retlw	0
  6668  131B  347C               	retlw	124
  6669  131C  3400               	retlw	0
  6670  131D  3400               	retlw	0
  6671  131E  347C               	retlw	124
  6672  131F  3400               	retlw	0
  6673  1320  3400               	retlw	0
  6674  1321  347E               	retlw	126
  6675  1322  3400               	retlw	0
  6676  1323  3400               	retlw	0
  6677  1324  34FE               	retlw	254
  6678  1325  3400               	retlw	0
  6679  1326  3400               	retlw	0
  6680  1327  34FE               	retlw	254
  6681  1328  3400               	retlw	0
  6682  1329  3400               	retlw	0
  6683  132A  34EF               	retlw	239
  6684  132B  3400               	retlw	0
  6685  132C  3401               	retlw	1
  6686  132D  34EF               	retlw	239
  6687  132E  3400               	retlw	0
  6688  132F  3401               	retlw	1
  6689  1330  34C7               	retlw	199
  6690  1331  3480               	retlw	128
  6691  1332  3401               	retlw	1
  6692  1333  34C7               	retlw	199
  6693  1334  3480               	retlw	128
  6694  1335  3401               	retlw	1
  6695  1336  3483               	retlw	131
  6696  1337  3480               	retlw	128
  6697  1338  3400               	retlw	0
  6698  1339  3403               	retlw	3
  6699  133A  3480               	retlw	128
  6700  133B  3400               	retlw	0
  6701  133C  3401               	retlw	1
  6702  133D  3480               	retlw	128
  6703  133E  3400               	retlw	0
  6704  133F  3400               	retlw	0
  6705  1340  3400               	retlw	0
  6706  1341  3400               	retlw	0
  6707  1342  3410               	retlw	16
  6708  1343  3400               	retlw	0
  6709  1344  3400               	retlw	0
  6710  1345  3418               	retlw	24
  6711  1346  3400               	retlw	0
  6712  1347  3400               	retlw	0
  6713  1348  3418               	retlw	24
  6714  1349  3400               	retlw	0
  6715  134A  3400               	retlw	0
  6716  134B  3418               	retlw	24
  6717  134C  3400               	retlw	0
  6718  134D  3400               	retlw	0
  6719  134E  3418               	retlw	24
  6720  134F  3400               	retlw	0
  6721  1350  3400               	retlw	0
  6722  1351  3418               	retlw	24
  6723  1352  3400               	retlw	0
  6724  1353  3400               	retlw	0
  6725  1354  3418               	retlw	24
  6726  1355  3400               	retlw	0
  6727  1356  3400               	retlw	0
  6728  1357  3418               	retlw	24
  6729  1358  3400               	retlw	0
  6730  1359  3400               	retlw	0
  6731  135A  3418               	retlw	24
  6732  135B  3400               	retlw	0
  6733  135C  3400               	retlw	0
  6734  135D  3418               	retlw	24
  6735  135E  3400               	retlw	0
  6736  135F  3400               	retlw	0
  6737  1360  3418               	retlw	24
  6738  1361  3400               	retlw	0
  6739  1362  3400               	retlw	0
  6740  1363  3418               	retlw	24
  6741  1364  3400               	retlw	0
  6742  1365  3400               	retlw	0
  6743  1366  3410               	retlw	16
  6744  1367  3400               	retlw	0
  6745  1368  3400               	retlw	0
  6746  1369  3400               	retlw	0
  6747  136A  3400               	retlw	0
  6748  136B  3400               	retlw	0
  6749  136C  3400               	retlw	0
  6750  136D  3400               	retlw	0
  6751  136E  3400               	retlw	0
  6752  136F  3400               	retlw	0
  6753  1370  3400               	retlw	0
  6754  1371  3400               	retlw	0
  6755  1372  3400               	retlw	0
  6756  1373  3400               	retlw	0
  6757  1374  3400               	retlw	0
  6758  1375  3400               	retlw	0
  6759  1376  3400               	retlw	0
  6760  1377  3400               	retlw	0
  6761  1378  3400               	retlw	0
  6762  1379  3400               	retlw	0
  6763  137A  3400               	retlw	0
  6764  137B  3400               	retlw	0
  6765  137C  3400               	retlw	0
  6766  137D  3400               	retlw	0
  6767  137E  3400               	retlw	0
  6768  137F  3400               	retlw	0
  6769  1380  3400               	retlw	0
  6770  1381  3400               	retlw	0
  6771  1382  3400               	retlw	0
  6772  1383  3418               	retlw	24
  6773  1384  3400               	retlw	0
  6774  1385  3400               	retlw	0
  6775  1386  343F               	retlw	63
  6776  1387  3400               	retlw	0
  6777  1388  3400               	retlw	0
  6778  1389  347F               	retlw	127
  6779  138A  34F0               	retlw	240
  6780  138B  3400               	retlw	0
  6781  138C  347F               	retlw	127
  6782  138D  34FC               	retlw	252
  6783  138E  3400               	retlw	0
  6784  138F  341F               	retlw	31
  6785  1390  34FF               	retlw	255
  6786  1391  3400               	retlw	0
  6787  1392  3403               	retlw	3
  6788  1393  34FF               	retlw	255
  6789  1394  3480               	retlw	128
  6790  1395  3400               	retlw	0
  6791  1396  343F               	retlw	63
  6792  1397  3480               	retlw	128
  6793  1398  3400               	retlw	0
  6794  1399  340F               	retlw	15
  6795  139A  34C0               	retlw	192
  6796  139B  341C               	retlw	28
  6797  139C  340F               	retlw	15
  6798  139D  3480               	retlw	128
  6799  139E  343F               	retlw	63
  6800  139F  34FF               	retlw	255
  6801  13A0  3400               	retlw	0
  6802  13A1  347F               	retlw	127
  6803  13A2  34FE               	retlw	254
  6804  13A3  3400               	retlw	0
  6805  13A4  347F               	retlw	127
  6806  13A5  34FC               	retlw	252
  6807  13A6  3400               	retlw	0
  6808  13A7  347F               	retlw	127
  6809  13A8  34F8               	retlw	248
  6810  13A9  3400               	retlw	0
  6811  13AA  340F               	retlw	15
  6812  13AB  34FE               	retlw	254
  6813  13AC  3400               	retlw	0
  6814  13AD  3403               	retlw	3
  6815  13AE  34FF               	retlw	255
  6816  13AF  3480               	retlw	128
  6817  13B0  3400               	retlw	0
  6818  13B1  34FF               	retlw	255
  6819  13B2  34C0               	retlw	192
  6820  13B3  3400               	retlw	0
  6821  13B4  343F               	retlw	63
  6822  13B5  34C0               	retlw	192
  6823  13B6  3400               	retlw	0
  6824  13B7  340F               	retlw	15
  6825  13B8  3400               	retlw	0
  6826  13B9  3400               	retlw	0
  6827  13BA  3400               	retlw	0
  6828  13BB  3400               	retlw	0
  6829  13BC  3400               	retlw	0
  6830  13BD  3400               	retlw	0
  6831  13BE  3400               	retlw	0
  6832  13BF  3400               	retlw	0
  6833  13C0  3400               	retlw	0
  6834  13C1  3400               	retlw	0
  6835  13C2                     __end_of_n_arrow_rot:
  6836                           
  6837                           	psect	stringtext10
  6838  13C2                     __pstringtext10:
  6839  13C2                     _possible_pickup_conf_str:
  6840  13C2  3458               	retlw	88
  6841  13C3  3400               	retlw	0
  6842  13C4  3400               	retlw	0
  6843  13C5  3400               	retlw	0
  6844  13C6  3400               	retlw	0
  6845  13C7  3400               	retlw	0
  6846  13C8  3400               	retlw	0
  6847  13C9  3400               	retlw	0
  6848  13CA  3400               	retlw	0
  6849  13CB  3400               	retlw	0
  6850  13CC  344E               	retlw	78
  6851  13CD  3400               	retlw	0
  6852  13CE  3400               	retlw	0
  6853  13CF  3400               	retlw	0
  6854  13D0  3400               	retlw	0
  6855  13D1  3400               	retlw	0
  6856  13D2  3400               	retlw	0
  6857  13D3  3400               	retlw	0
  6858  13D4  3400               	retlw	0
  6859  13D5  3400               	retlw	0
  6860  13D6  3453               	retlw	83
  6861  13D7  3400               	retlw	0
  6862  13D8  3400               	retlw	0
  6863  13D9  3400               	retlw	0
  6864  13DA  3400               	retlw	0
  6865  13DB  3400               	retlw	0
  6866  13DC  3400               	retlw	0
  6867  13DD  3400               	retlw	0
  6868  13DE  3400               	retlw	0
  6869  13DF  3400               	retlw	0
  6870  13E0  344E               	retlw	78
  6871  13E1  3427               	retlw	39
  6872  13E2  3400               	retlw	0
  6873  13E3  3400               	retlw	0
  6874  13E4  3400               	retlw	0
  6875  13E5  3400               	retlw	0
  6876  13E6  3400               	retlw	0
  6877  13E7  3400               	retlw	0
  6878  13E8  3400               	retlw	0
  6879  13E9  3400               	retlw	0
  6880  13EA  3453               	retlw	83
  6881  13EB  3427               	retlw	39
  6882  13EC  3400               	retlw	0
  6883  13ED  3400               	retlw	0
  6884  13EE  3400               	retlw	0
  6885  13EF  3400               	retlw	0
  6886  13F0  3400               	retlw	0
  6887  13F1  3400               	retlw	0
  6888  13F2  3400               	retlw	0
  6889  13F3  3400               	retlw	0
  6890  13F4  344E               	retlw	78
  6891  13F5  342B               	retlw	43
  6892  13F6  3453               	retlw	83
  6893  13F7  3400               	retlw	0
  6894  13F8  3400               	retlw	0
  6895  13F9  3400               	retlw	0
  6896  13FA  3400               	retlw	0
  6897  13FB  3400               	retlw	0
  6898  13FC  3400               	retlw	0
  6899  13FD  3400               	retlw	0
  6900  13FE  3453               	retlw	83
  6901  13FF  342B               	retlw	43
  6902  1400  344E               	retlw	78
  6903  1401  3400               	retlw	0
  6904  1402  3400               	retlw	0
  6905  1403  3400               	retlw	0
  6906  1404  3400               	retlw	0
  6907  1405  3400               	retlw	0
  6908  1406  3400               	retlw	0
  6909  1407  3400               	retlw	0
  6910  1408  344E               	retlw	78
  6911  1409  342B               	retlw	43
  6912  140A  3453               	retlw	83
  6913  140B  3427               	retlw	39
  6914  140C  3400               	retlw	0
  6915  140D  3400               	retlw	0
  6916  140E  3400               	retlw	0
  6917  140F  3400               	retlw	0
  6918  1410  3400               	retlw	0
  6919  1411  3400               	retlw	0
  6920  1412  3453               	retlw	83
  6921  1413  3427               	retlw	39
  6922  1414  342B               	retlw	43
  6923  1415  344E               	retlw	78
  6924  1416  3400               	retlw	0
  6925  1417  3400               	retlw	0
  6926  1418  3400               	retlw	0
  6927  1419  3400               	retlw	0
  6928  141A  3400               	retlw	0
  6929  141B  3400               	retlw	0
  6930  141C  344E               	retlw	78
  6931  141D  3427               	retlw	39
  6932  141E  342B               	retlw	43
  6933  141F  3453               	retlw	83
  6934  1420  3400               	retlw	0
  6935  1421  3400               	retlw	0
  6936  1422  3400               	retlw	0
  6937  1423  3400               	retlw	0
  6938  1424  3400               	retlw	0
  6939  1425  3400               	retlw	0
  6940  1426  3453               	retlw	83
  6941  1427  342B               	retlw	43
  6942  1428  344E               	retlw	78
  6943  1429  3427               	retlw	39
  6944  142A  3400               	retlw	0
  6945  142B  3400               	retlw	0
  6946  142C  3400               	retlw	0
  6947  142D  3400               	retlw	0
  6948  142E  3400               	retlw	0
  6949  142F  3400               	retlw	0
  6950  1430  344E               	retlw	78
  6951  1431  3427               	retlw	39
  6952  1432  342B               	retlw	43
  6953  1433  3453               	retlw	83
  6954  1434  3427               	retlw	39
  6955  1435  3400               	retlw	0
  6956  1436  3400               	retlw	0
  6957  1437  3400               	retlw	0
  6958  1438  3400               	retlw	0
  6959  1439  3400               	retlw	0
  6960  143A  3453               	retlw	83
  6961  143B  3427               	retlw	39
  6962  143C  342B               	retlw	43
  6963  143D  344E               	retlw	78
  6964  143E  3427               	retlw	39
  6965  143F  3400               	retlw	0
  6966  1440  3400               	retlw	0
  6967  1441  3400               	retlw	0
  6968  1442  3400               	retlw	0
  6969  1443  3400               	retlw	0
  6970  1444  344E               	retlw	78
  6971  1445  342F               	retlw	47
  6972  1446  342F               	retlw	47
  6973  1447  3453               	retlw	83
  6974  1448  3400               	retlw	0
  6975  1449  3400               	retlw	0
  6976  144A  3400               	retlw	0
  6977  144B  3400               	retlw	0
  6978  144C  3400               	retlw	0
  6979  144D  3400               	retlw	0
  6980  144E  344E               	retlw	78
  6981  144F  3427               	retlw	39
  6982  1450  342F               	retlw	47
  6983  1451  342F               	retlw	47
  6984  1452  3453               	retlw	83
  6985  1453  3400               	retlw	0
  6986  1454  3400               	retlw	0
  6987  1455  3400               	retlw	0
  6988  1456  3400               	retlw	0
  6989  1457  3400               	retlw	0
  6990  1458  344E               	retlw	78
  6991  1459  342F               	retlw	47
  6992  145A  342F               	retlw	47
  6993  145B  3453               	retlw	83
  6994  145C  3427               	retlw	39
  6995  145D  3400               	retlw	0
  6996  145E  3400               	retlw	0
  6997  145F  3400               	retlw	0
  6998  1460  3400               	retlw	0
  6999  1461  3400               	retlw	0
  7000  1462  344E               	retlw	78
  7001  1463  3427               	retlw	39
  7002  1464  342F               	retlw	47
  7003  1465  342F               	retlw	47
  7004  1466  3453               	retlw	83
  7005  1467  3427               	retlw	39
  7006  1468  3400               	retlw	0
  7007  1469  3400               	retlw	0
  7008  146A  3400               	retlw	0
  7009  146B  3400               	retlw	0
  7010  146C                     __end_of_possible_pickup_conf_str:
  7011                           
  7012                           	psect	stringtext11
  7013  146C                     __pstringtext11:
  7014  146C                     _bracket_right_rot:
  7015  146C  3400               	retlw	0
  7016  146D  3400               	retlw	0
  7017  146E  3400               	retlw	0
  7018  146F  3400               	retlw	0
  7019  1470  3400               	retlw	0
  7020  1471  3400               	retlw	0
  7021  1472  3400               	retlw	0
  7022  1473  3400               	retlw	0
  7023  1474  3400               	retlw	0
  7024  1475  3400               	retlw	0
  7025  1476  3400               	retlw	0
  7026  1477  3400               	retlw	0
  7027  1478  3400               	retlw	0
  7028  1479  3400               	retlw	0
  7029  147A  3400               	retlw	0
  7030  147B  3400               	retlw	0
  7031  147C  3400               	retlw	0
  7032  147D  3400               	retlw	0
  7033  147E  3400               	retlw	0
  7034  147F  3460               	retlw	96
  7035  1480  3400               	retlw	0
  7036  1481  3470               	retlw	112
  7037  1482  3460               	retlw	96
  7038  1483  3400               	retlw	0
  7039  1484  34FF               	retlw	255
  7040  1485  34F0               	retlw	240
  7041  1486  3400               	retlw	0
  7042  1487  34FF               	retlw	255
  7043  1488  34F0               	retlw	240
  7044  1489  3400               	retlw	0
  7045  148A  34E7               	retlw	231
  7046  148B  34BF               	retlw	191
  7047  148C  3400               	retlw	0
  7048  148D  34E0               	retlw	224
  7049  148E  343F               	retlw	63
  7050  148F  34C0               	retlw	192
  7051  1490  34E0               	retlw	224
  7052  1491  340F               	retlw	15
  7053  1492  34C0               	retlw	192
  7054  1493  34E0               	retlw	224
  7055  1494  3401               	retlw	1
  7056  1495  34C0               	retlw	192
  7057  1496  3460               	retlw	96
  7058  1497  3400               	retlw	0
  7059  1498  34C0               	retlw	192
  7060  1499  3400               	retlw	0
  7061  149A  3400               	retlw	0
  7062  149B  34C0               	retlw	192
  7063  149C  3400               	retlw	0
  7064  149D  3400               	retlw	0
  7065  149E  34C0               	retlw	192
  7066  149F  3400               	retlw	0
  7067  14A0  3400               	retlw	0
  7068  14A1  34C0               	retlw	192
  7069  14A2  3400               	retlw	0
  7070  14A3  3400               	retlw	0
  7071  14A4  34C0               	retlw	192
  7072  14A5  3400               	retlw	0
  7073  14A6  3400               	retlw	0
  7074  14A7  3400               	retlw	0
  7075  14A8  3400               	retlw	0
  7076  14A9  3400               	retlw	0
  7077  14AA  3400               	retlw	0
  7078  14AB  3400               	retlw	0
  7079  14AC  3400               	retlw	0
  7080  14AD  3400               	retlw	0
  7081  14AE  3400               	retlw	0
  7082  14AF  3400               	retlw	0
  7083  14B0  3400               	retlw	0
  7084  14B1  3400               	retlw	0
  7085  14B2  3400               	retlw	0
  7086  14B3  3400               	retlw	0
  7087  14B4  3400               	retlw	0
  7088  14B5  3400               	retlw	0
  7089  14B6  3400               	retlw	0
  7090  14B7                     __end_of_bracket_right_rot:
  7091                           
  7092                           	psect	stringtext12
  7093  14B7                     __pstringtext12:
  7094  14B7                     _bracket_left_rot:
  7095  14B7  3400               	retlw	0
  7096  14B8  3400               	retlw	0
  7097  14B9  3400               	retlw	0
  7098  14BA  3400               	retlw	0
  7099  14BB  3400               	retlw	0
  7100  14BC  3400               	retlw	0
  7101  14BD  3400               	retlw	0
  7102  14BE  3400               	retlw	0
  7103  14BF  3400               	retlw	0
  7104  14C0  3400               	retlw	0
  7105  14C1  3400               	retlw	0
  7106  14C2  3400               	retlw	0
  7107  14C3  3400               	retlw	0
  7108  14C4  3400               	retlw	0
  7109  14C5  3400               	retlw	0
  7110  14C6  3400               	retlw	0
  7111  14C7  3400               	retlw	0
  7112  14C8  3400               	retlw	0
  7113  14C9  3440               	retlw	64
  7114  14CA  3400               	retlw	0
  7115  14CB  3400               	retlw	0
  7116  14CC  34E0               	retlw	224
  7117  14CD  3400               	retlw	0
  7118  14CE  3400               	retlw	0
  7119  14CF  34E0               	retlw	224
  7120  14D0  3400               	retlw	0
  7121  14D1  3400               	retlw	0
  7122  14D2  34E0               	retlw	224
  7123  14D3  3400               	retlw	0
  7124  14D4  3400               	retlw	0
  7125  14D5  34E0               	retlw	224
  7126  14D6  3400               	retlw	0
  7127  14D7  3480               	retlw	128
  7128  14D8  34E0               	retlw	224
  7129  14D9  3400               	retlw	0
  7130  14DA  34C0               	retlw	192
  7131  14DB  34F8               	retlw	248
  7132  14DC  3400               	retlw	0
  7133  14DD  34C0               	retlw	192
  7134  14DE  347F               	retlw	127
  7135  14DF  3480               	retlw	128
  7136  14E0  34C0               	retlw	192
  7137  14E1  347F               	retlw	127
  7138  14E2  34B8               	retlw	184
  7139  14E3  34C0               	retlw	192
  7140  14E4  3401               	retlw	1
  7141  14E5  34FF               	retlw	255
  7142  14E6  34C0               	retlw	192
  7143  14E7  3401               	retlw	1
  7144  14E8  34FF               	retlw	255
  7145  14E9  34C0               	retlw	192
  7146  14EA  3401               	retlw	1
  7147  14EB  34E7               	retlw	231
  7148  14EC  34C0               	retlw	192
  7149  14ED  3400               	retlw	0
  7150  14EE  34C0               	retlw	192
  7151  14EF  3400               	retlw	0
  7152  14F0  3400               	retlw	0
  7153  14F1  3400               	retlw	0
  7154  14F2  3400               	retlw	0
  7155  14F3  3400               	retlw	0
  7156  14F4  3400               	retlw	0
  7157  14F5  3400               	retlw	0
  7158  14F6  3400               	retlw	0
  7159  14F7  3400               	retlw	0
  7160  14F8  3400               	retlw	0
  7161  14F9  3400               	retlw	0
  7162  14FA  3400               	retlw	0
  7163  14FB  3400               	retlw	0
  7164  14FC  3400               	retlw	0
  7165  14FD  3400               	retlw	0
  7166  14FE  3400               	retlw	0
  7167  14FF  3400               	retlw	0
  7168  1500  3400               	retlw	0
  7169  1501  3400               	retlw	0
  7170  1502                     __end_of_bracket_left_rot:
  7171                           
  7172                           	psect	stringtext13
  7173  1502                     __pstringtext13:
  7174  1502                     _b_rot:
  7175  1502  3400               	retlw	0
  7176  1503  3400               	retlw	0
  7177  1504  3400               	retlw	0
  7178  1505  3400               	retlw	0
  7179  1506  3400               	retlw	0
  7180  1507  3400               	retlw	0
  7181  1508  3400               	retlw	0
  7182  1509  3400               	retlw	0
  7183  150A  3400               	retlw	0
  7184  150B  3400               	retlw	0
  7185  150C  3400               	retlw	0
  7186  150D  3400               	retlw	0
  7187  150E  3400               	retlw	0
  7188  150F  3400               	retlw	0
  7189  1510  3400               	retlw	0
  7190  1511  3408               	retlw	8
  7191  1512  340E               	retlw	14
  7192  1513  3400               	retlw	0
  7193  1514  343E               	retlw	62
  7194  1515  341F               	retlw	31
  7195  1516  3400               	retlw	0
  7196  1517  343F               	retlw	63
  7197  1518  343F               	retlw	63
  7198  1519  3400               	retlw	0
  7199  151A  347F               	retlw	127
  7200  151B  34FF               	retlw	255
  7201  151C  3480               	retlw	128
  7202  151D  347F               	retlw	127
  7203  151E  34EF               	retlw	239
  7204  151F  3480               	retlw	128
  7205  1520  34FF               	retlw	255
  7206  1521  34E7               	retlw	231
  7207  1522  34C0               	retlw	192
  7208  1523  34F3               	retlw	243
  7209  1524  34E7               	retlw	231
  7210  1525  34C0               	retlw	192
  7211  1526  3473               	retlw	115
  7212  1527  34F3               	retlw	243
  7213  1528  34C0               	retlw	192
  7214  1529  3479               	retlw	121
  7215  152A  34F3               	retlw	243
  7216  152B  34C0               	retlw	192
  7217  152C  347B               	retlw	123
  7218  152D  34F1               	retlw	241
  7219  152E  34C0               	retlw	192
  7220  152F  347F               	retlw	127
  7221  1530  34FF               	retlw	255
  7222  1531  34C0               	retlw	192
  7223  1532  347F               	retlw	127
  7224  1533  34FF               	retlw	255
  7225  1534  34C0               	retlw	192
  7226  1535  347C               	retlw	124
  7227  1536  34FF               	retlw	255
  7228  1537  34C0               	retlw	192
  7229  1538  343E               	retlw	62
  7230  1539  340F               	retlw	15
  7231  153A  34C0               	retlw	192
  7232  153B  343E               	retlw	62
  7233  153C  3407               	retlw	7
  7234  153D  3480               	retlw	128
  7235  153E  343C               	retlw	60
  7236  153F  3400               	retlw	0
  7237  1540  3400               	retlw	0
  7238  1541  3418               	retlw	24
  7239  1542  3400               	retlw	0
  7240  1543  3400               	retlw	0
  7241  1544  3400               	retlw	0
  7242  1545  3400               	retlw	0
  7243  1546  3400               	retlw	0
  7244  1547  3400               	retlw	0
  7245  1548  3400               	retlw	0
  7246  1549  3400               	retlw	0
  7247  154A  3400               	retlw	0
  7248  154B  3400               	retlw	0
  7249  154C  3400               	retlw	0
  7250  154D                     __end_of_b_rot:
  7251                           
  7252                           	psect	stringtext14
  7253  154D                     __pstringtext14:
  7254  154D                     _m_rot:
  7255  154D  341F               	retlw	31
  7256  154E  3400               	retlw	0
  7257  154F  3400               	retlw	0
  7258  1550  343F               	retlw	63
  7259  1551  34FC               	retlw	252
  7260  1552  3400               	retlw	0
  7261  1553  347F               	retlw	127
  7262  1554  34FF               	retlw	255
  7263  1555  3400               	retlw	0
  7264  1556  347F               	retlw	127
  7265  1557  34FF               	retlw	255
  7266  1558  3480               	retlw	128
  7267  1559  343F               	retlw	63
  7268  155A  34FF               	retlw	255
  7269  155B  34C0               	retlw	192
  7270  155C  341F               	retlw	31
  7271  155D  34DF               	retlw	223
  7272  155E  3480               	retlw	128
  7273  155F  340F               	retlw	15
  7274  1560  34C0               	retlw	192
  7275  1561  3400               	retlw	0
  7276  1562  3407               	retlw	7
  7277  1563  34E0               	retlw	224
  7278  1564  3400               	retlw	0
  7279  1565  3403               	retlw	3
  7280  1566  34F0               	retlw	240
  7281  1567  3400               	retlw	0
  7282  1568  3401               	retlw	1
  7283  1569  34F0               	retlw	240
  7284  156A  3400               	retlw	0
  7285  156B  3401               	retlw	1
  7286  156C  34F0               	retlw	240
  7287  156D  3400               	retlw	0
  7288  156E  3400               	retlw	0
  7289  156F  34F0               	retlw	240
  7290  1570  3400               	retlw	0
  7291  1571  3401               	retlw	1
  7292  1572  34F0               	retlw	240
  7293  1573  3400               	retlw	0
  7294  1574  341F               	retlw	31
  7295  1575  34F0               	retlw	240
  7296  1576  3400               	retlw	0
  7297  1577  343F               	retlw	63
  7298  1578  34F0               	retlw	240
  7299  1579  3400               	retlw	0
  7300  157A  347F               	retlw	127
  7301  157B  34F0               	retlw	240
  7302  157C  3400               	retlw	0
  7303  157D  34FF               	retlw	255
  7304  157E  34F0               	retlw	240
  7305  157F  3400               	retlw	0
  7306  1580  347F               	retlw	127
  7307  1581  34E0               	retlw	224
  7308  1582  3400               	retlw	0
  7309  1583  343F               	retlw	63
  7310  1584  34F0               	retlw	240
  7311  1585  3400               	retlw	0
  7312  1586  340F               	retlw	15
  7313  1587  34FC               	retlw	252
  7314  1588  3400               	retlw	0
  7315  1589  3407               	retlw	7
  7316  158A  34FF               	retlw	255
  7317  158B  3400               	retlw	0
  7318  158C  3400               	retlw	0
  7319  158D  34FF               	retlw	255
  7320  158E  34C0               	retlw	192
  7321  158F  3400               	retlw	0
  7322  1590  343F               	retlw	63
  7323  1591  34C0               	retlw	192
  7324  1592  3400               	retlw	0
  7325  1593  340F               	retlw	15
  7326  1594  34C0               	retlw	192
  7327  1595  3400               	retlw	0
  7328  1596  3400               	retlw	0
  7329  1597  3400               	retlw	0
  7330  1598                     __end_of_m_rot:
  7331                           
  7332                           	psect	stringtext15
  7333  1598                     __pstringtext15:
  7334  1598                     _parallel_rot:
  7335  1598  3478               	retlw	120
  7336  1599  3400               	retlw	0
  7337  159A  3400               	retlw	0
  7338  159B  347C               	retlw	124
  7339  159C  3400               	retlw	0
  7340  159D  3400               	retlw	0
  7341  159E  343E               	retlw	62
  7342  159F  3400               	retlw	0
  7343  15A0  3400               	retlw	0
  7344  15A1  341F               	retlw	31
  7345  15A2  3400               	retlw	0
  7346  15A3  3400               	retlw	0
  7347  15A4  340F               	retlw	15
  7348  15A5  3480               	retlw	128
  7349  15A6  3400               	retlw	0
  7350  15A7  3403               	retlw	3
  7351  15A8  34E0               	retlw	224
  7352  15A9  3400               	retlw	0
  7353  15AA  3401               	retlw	1
  7354  15AB  34F0               	retlw	240
  7355  15AC  3400               	retlw	0
  7356  15AD  3400               	retlw	0
  7357  15AE  34F0               	retlw	240
  7358  15AF  3400               	retlw	0
  7359  15B0  3400               	retlw	0
  7360  15B1  3478               	retlw	120
  7361  15B2  3400               	retlw	0
  7362  15B3  3400               	retlw	0
  7363  15B4  341E               	retlw	30
  7364  15B5  3400               	retlw	0
  7365  15B6  3430               	retlw	48
  7366  15B7  340F               	retlw	15
  7367  15B8  34C0               	retlw	192
  7368  15B9  347C               	retlw	124
  7369  15BA  340F               	retlw	15
  7370  15BB  34C0               	retlw	192
  7371  15BC  343E               	retlw	62
  7372  15BD  3407               	retlw	7
  7373  15BE  34C0               	retlw	192
  7374  15BF  341F               	retlw	31
  7375  15C0  3400               	retlw	0
  7376  15C1  3400               	retlw	0
  7377  15C2  340F               	retlw	15
  7378  15C3  3480               	retlw	128
  7379  15C4  3400               	retlw	0
  7380  15C5  3407               	retlw	7
  7381  15C6  34C0               	retlw	192
  7382  15C7  3400               	retlw	0
  7383  15C8  3401               	retlw	1
  7384  15C9  34F0               	retlw	240
  7385  15CA  3400               	retlw	0
  7386  15CB  3400               	retlw	0
  7387  15CC  34F0               	retlw	240
  7388  15CD  3400               	retlw	0
  7389  15CE  3400               	retlw	0
  7390  15CF  3478               	retlw	120
  7391  15D0  3400               	retlw	0
  7392  15D1  3400               	retlw	0
  7393  15D2  343C               	retlw	60
  7394  15D3  3400               	retlw	0
  7395  15D4  3400               	retlw	0
  7396  15D5  340F               	retlw	15
  7397  15D6  34C0               	retlw	192
  7398  15D7  3400               	retlw	0
  7399  15D8  340F               	retlw	15
  7400  15D9  34C0               	retlw	192
  7401  15DA  3400               	retlw	0
  7402  15DB  3407               	retlw	7
  7403  15DC  34C0               	retlw	192
  7404  15DD  3400               	retlw	0
  7405  15DE  3400               	retlw	0
  7406  15DF  3480               	retlw	128
  7407  15E0  3400               	retlw	0
  7408  15E1  3400               	retlw	0
  7409  15E2  3400               	retlw	0
  7410  15E3                     __end_of_parallel_rot:
  7411                           
  7412                           	psect	stringtext16
  7413  15E3                     __pstringtext16:
  7414  15E3                     _serie_rot:
  7415  15E3  3400               	retlw	0
  7416  15E4  3400               	retlw	0
  7417  15E5  3400               	retlw	0
  7418  15E6  3400               	retlw	0
  7419  15E7  3400               	retlw	0
  7420  15E8  3400               	retlw	0
  7421  15E9  3400               	retlw	0
  7422  15EA  3400               	retlw	0
  7423  15EB  3400               	retlw	0
  7424  15EC  3400               	retlw	0
  7425  15ED  3400               	retlw	0
  7426  15EE  3400               	retlw	0
  7427  15EF  3400               	retlw	0
  7428  15F0  3400               	retlw	0
  7429  15F1  3400               	retlw	0
  7430  15F2  3400               	retlw	0
  7431  15F3  3400               	retlw	0
  7432  15F4  3400               	retlw	0
  7433  15F5  3400               	retlw	0
  7434  15F6  3480               	retlw	128
  7435  15F7  3400               	retlw	0
  7436  15F8  3400               	retlw	0
  7437  15F9  34C0               	retlw	192
  7438  15FA  3400               	retlw	0
  7439  15FB  3400               	retlw	0
  7440  15FC  34C0               	retlw	192
  7441  15FD  3400               	retlw	0
  7442  15FE  340D               	retlw	13
  7443  15FF  34C0               	retlw	192
  7444  1600  3400               	retlw	0
  7445  1601  341F               	retlw	31
  7446  1602  34C0               	retlw	192
  7447  1603  3400               	retlw	0
  7448  1604  341F               	retlw	31
  7449  1605  34FC               	retlw	252
  7450  1606  3400               	retlw	0
  7451  1607  340F               	retlw	15
  7452  1608  34FE               	retlw	254
  7453  1609  3400               	retlw	0
  7454  160A  3403               	retlw	3
  7455  160B  34FE               	retlw	254
  7456  160C  3400               	retlw	0
  7457  160D  3400               	retlw	0
  7458  160E  34FC               	retlw	252
  7459  160F  3400               	retlw	0
  7460  1610  3400               	retlw	0
  7461  1611  34C0               	retlw	192
  7462  1612  3400               	retlw	0
  7463  1613  3400               	retlw	0
  7464  1614  34C0               	retlw	192
  7465  1615  3400               	retlw	0
  7466  1616  3400               	retlw	0
  7467  1617  34C0               	retlw	192
  7468  1618  3400               	retlw	0
  7469  1619  3400               	retlw	0
  7470  161A  3400               	retlw	0
  7471  161B  3400               	retlw	0
  7472  161C  3400               	retlw	0
  7473  161D  3400               	retlw	0
  7474  161E  3400               	retlw	0
  7475  161F  3400               	retlw	0
  7476  1620  3400               	retlw	0
  7477  1621  3400               	retlw	0
  7478  1622  3400               	retlw	0
  7479  1623  3400               	retlw	0
  7480  1624  3400               	retlw	0
  7481  1625  3400               	retlw	0
  7482  1626  3400               	retlw	0
  7483  1627  3400               	retlw	0
  7484  1628  3400               	retlw	0
  7485  1629  3400               	retlw	0
  7486  162A  3400               	retlw	0
  7487  162B  3400               	retlw	0
  7488  162C  3400               	retlw	0
  7489  162D  3400               	retlw	0
  7490  162E                     __end_of_serie_rot:
  7491                           
  7492                           	psect	stringtext17
  7493  162E                     __pstringtext17:
  7494  162E                     _s_prime_rot:
  7495  162E  3400               	retlw	0
  7496  162F  3400               	retlw	0
  7497  1630  3400               	retlw	0
  7498  1631  3460               	retlw	96
  7499  1632  3400               	retlw	0
  7500  1633  3400               	retlw	0
  7501  1634  34F8               	retlw	248
  7502  1635  3400               	retlw	0
  7503  1636  3400               	retlw	0
  7504  1637  34FE               	retlw	254
  7505  1638  3400               	retlw	0
  7506  1639  3400               	retlw	0
  7507  163A  34FF               	retlw	255
  7508  163B  3400               	retlw	0
  7509  163C  3400               	retlw	0
  7510  163D  343F               	retlw	63
  7511  163E  3400               	retlw	0
  7512  163F  3400               	retlw	0
  7513  1640  341E               	retlw	30
  7514  1641  3400               	retlw	0
  7515  1642  3400               	retlw	0
  7516  1643  3438               	retlw	56
  7517  1644  3400               	retlw	0
  7518  1645  3400               	retlw	0
  7519  1646  3478               	retlw	120
  7520  1647  3400               	retlw	0
  7521  1648  3400               	retlw	0
  7522  1649  3478               	retlw	120
  7523  164A  3400               	retlw	0
  7524  164B  3400               	retlw	0
  7525  164C  34F8               	retlw	248
  7526  164D  3400               	retlw	0
  7527  164E  3400               	retlw	0
  7528  164F  34F8               	retlw	248
  7529  1650  3418               	retlw	24
  7530  1651  3400               	retlw	0
  7531  1652  3478               	retlw	120
  7532  1653  347E               	retlw	126
  7533  1654  3400               	retlw	0
  7534  1655  3478               	retlw	120
  7535  1656  34FF               	retlw	255
  7536  1657  3400               	retlw	0
  7537  1658  3479               	retlw	121
  7538  1659  34EF               	retlw	239
  7539  165A  3400               	retlw	0
  7540  165B  347D               	retlw	125
  7541  165C  34EF               	retlw	239
  7542  165D  3480               	retlw	128
  7543  165E  343F               	retlw	63
  7544  165F  34C7               	retlw	199
  7545  1660  3480               	retlw	128
  7546  1661  343F               	retlw	63
  7547  1662  34C7               	retlw	199
  7548  1663  34C0               	retlw	192
  7549  1664  343F               	retlw	63
  7550  1665  34C3               	retlw	195
  7551  1666  34C0               	retlw	192
  7552  1667  341F               	retlw	31
  7553  1668  34C3               	retlw	195
  7554  1669  34C0               	retlw	192
  7555  166A  341F               	retlw	31
  7556  166B  34C3               	retlw	195
  7557  166C  34C0               	retlw	192
  7558  166D  340F               	retlw	15
  7559  166E  3483               	retlw	131
  7560  166F  34C0               	retlw	192
  7561  1670  340F               	retlw	15
  7562  1671  3480               	retlw	128
  7563  1672  3400               	retlw	0
  7564  1673  3400               	retlw	0
  7565  1674  3400               	retlw	0
  7566  1675  3400               	retlw	0
  7567  1676  3400               	retlw	0
  7568  1677  3400               	retlw	0
  7569  1678  3400               	retlw	0
  7570  1679                     __end_of_s_prime_rot:
  7571                           
  7572                           	psect	stringtext18
  7573  1679                     __pstringtext18:
  7574  1679                     _s_rot:
  7575  1679  3400               	retlw	0
  7576  167A  3400               	retlw	0
  7577  167B  3400               	retlw	0
  7578  167C  3400               	retlw	0
  7579  167D  3400               	retlw	0
  7580  167E  3400               	retlw	0
  7581  167F  3400               	retlw	0
  7582  1680  3400               	retlw	0
  7583  1681  3400               	retlw	0
  7584  1682  3418               	retlw	24
  7585  1683  3400               	retlw	0
  7586  1684  3400               	retlw	0
  7587  1685  3438               	retlw	56
  7588  1686  3400               	retlw	0
  7589  1687  3400               	retlw	0
  7590  1688  3478               	retlw	120
  7591  1689  3400               	retlw	0
  7592  168A  3400               	retlw	0
  7593  168B  3478               	retlw	120
  7594  168C  3400               	retlw	0
  7595  168D  3400               	retlw	0
  7596  168E  34F8               	retlw	248
  7597  168F  3400               	retlw	0
  7598  1690  3400               	retlw	0
  7599  1691  3478               	retlw	120
  7600  1692  343C               	retlw	60
  7601  1693  3400               	retlw	0
  7602  1694  3478               	retlw	120
  7603  1695  347E               	retlw	126
  7604  1696  3400               	retlw	0
  7605  1697  3478               	retlw	120
  7606  1698  34FF               	retlw	255
  7607  1699  3400               	retlw	0
  7608  169A  3479               	retlw	121
  7609  169B  34EF               	retlw	239
  7610  169C  3480               	retlw	128
  7611  169D  347D               	retlw	125
  7612  169E  34EF               	retlw	239
  7613  169F  3480               	retlw	128
  7614  16A0  343F               	retlw	63
  7615  16A1  34C7               	retlw	199
  7616  16A2  34C0               	retlw	192
  7617  16A3  343F               	retlw	63
  7618  16A4  34C7               	retlw	199
  7619  16A5  34C0               	retlw	192
  7620  16A6  343F               	retlw	63
  7621  16A7  34C3               	retlw	195
  7622  16A8  34C0               	retlw	192
  7623  16A9  341F               	retlw	31
  7624  16AA  34C3               	retlw	195
  7625  16AB  34C0               	retlw	192
  7626  16AC  341F               	retlw	31
  7627  16AD  34C3               	retlw	195
  7628  16AE  34C0               	retlw	192
  7629  16AF  340F               	retlw	15
  7630  16B0  3483               	retlw	131
  7631  16B1  34C0               	retlw	192
  7632  16B2  340F               	retlw	15
  7633  16B3  3480               	retlw	128
  7634  16B4  3400               	retlw	0
  7635  16B5  3400               	retlw	0
  7636  16B6  3400               	retlw	0
  7637  16B7  3400               	retlw	0
  7638  16B8  3400               	retlw	0
  7639  16B9  3400               	retlw	0
  7640  16BA  3400               	retlw	0
  7641  16BB  3400               	retlw	0
  7642  16BC  3400               	retlw	0
  7643  16BD  3400               	retlw	0
  7644  16BE  3400               	retlw	0
  7645  16BF  3400               	retlw	0
  7646  16C0  3400               	retlw	0
  7647  16C1  3400               	retlw	0
  7648  16C2  3400               	retlw	0
  7649  16C3  3400               	retlw	0
  7650  16C4                     __end_of_s_rot:
  7651                           
  7652                           	psect	stringtext19
  7653  16C4                     __pstringtext19:
  7654  16C4                     _n_prime_rot:
  7655  16C4  3478               	retlw	120
  7656  16C5  3400               	retlw	0
  7657  16C6  3400               	retlw	0
  7658  16C7  34FE               	retlw	254
  7659  16C8  3400               	retlw	0
  7660  16C9  3400               	retlw	0
  7661  16CA  34FF               	retlw	255
  7662  16CB  3400               	retlw	0
  7663  16CC  3400               	retlw	0
  7664  16CD  343F               	retlw	63
  7665  16CE  3400               	retlw	0
  7666  16CF  3400               	retlw	0
  7667  16D0  340E               	retlw	14
  7668  16D1  3400               	retlw	0
  7669  16D2  3400               	retlw	0
  7670  16D3  3400               	retlw	0
  7671  16D4  3400               	retlw	0
  7672  16D5  3400               	retlw	0
  7673  16D6  3400               	retlw	0
  7674  16D7  3400               	retlw	0
  7675  16D8  3400               	retlw	0
  7676  16D9  343E               	retlw	62
  7677  16DA  3400               	retlw	0
  7678  16DB  3400               	retlw	0
  7679  16DC  347F               	retlw	127
  7680  16DD  34F0               	retlw	240
  7681  16DE  3400               	retlw	0
  7682  16DF  347F               	retlw	127
  7683  16E0  34FC               	retlw	252
  7684  16E1  3400               	retlw	0
  7685  16E2  347F               	retlw	127
  7686  16E3  34FE               	retlw	254
  7687  16E4  3400               	retlw	0
  7688  16E5  340F               	retlw	15
  7689  16E6  34FF               	retlw	255
  7690  16E7  3400               	retlw	0
  7691  16E8  3400               	retlw	0
  7692  16E9  347F               	retlw	127
  7693  16EA  3480               	retlw	128
  7694  16EB  3400               	retlw	0
  7695  16EC  341F               	retlw	31
  7696  16ED  34C0               	retlw	192
  7697  16EE  3408               	retlw	8
  7698  16EF  340F               	retlw	15
  7699  16F0  3480               	retlw	128
  7700  16F1  343F               	retlw	63
  7701  16F2  34FF               	retlw	255
  7702  16F3  3480               	retlw	128
  7703  16F4  343F               	retlw	63
  7704  16F5  34FF               	retlw	255
  7705  16F6  3400               	retlw	0
  7706  16F7  347F               	retlw	127
  7707  16F8  34FC               	retlw	252
  7708  16F9  3400               	retlw	0
  7709  16FA  347F               	retlw	127
  7710  16FB  34F8               	retlw	248
  7711  16FC  3400               	retlw	0
  7712  16FD  341F               	retlw	31
  7713  16FE  34FC               	retlw	252
  7714  16FF  3400               	retlw	0
  7715  1700  3407               	retlw	7
  7716  1701  34FF               	retlw	255
  7717  1702  3480               	retlw	128
  7718  1703  3401               	retlw	1
  7719  1704  34FF               	retlw	255
  7720  1705  34C0               	retlw	192
  7721  1706  3400               	retlw	0
  7722  1707  347F               	retlw	127
  7723  1708  34C0               	retlw	192
  7724  1709  3400               	retlw	0
  7725  170A  341F               	retlw	31
  7726  170B  3480               	retlw	128
  7727  170C  3400               	retlw	0
  7728  170D  340E               	retlw	14
  7729  170E  3400               	retlw	0
  7730  170F                     __end_of_n_prime_rot:
  7731                           
  7732                           	psect	stringtext20
  7733  170F                     __pstringtext20:
  7734  170F                     _n_rot:
  7735  170F  3400               	retlw	0
  7736  1710  3400               	retlw	0
  7737  1711  3400               	retlw	0
  7738  1712  3400               	retlw	0
  7739  1713  3400               	retlw	0
  7740  1714  3400               	retlw	0
  7741  1715  3400               	retlw	0
  7742  1716  3400               	retlw	0
  7743  1717  3400               	retlw	0
  7744  1718  3418               	retlw	24
  7745  1719  3400               	retlw	0
  7746  171A  3400               	retlw	0
  7747  171B  343E               	retlw	62
  7748  171C  3400               	retlw	0
  7749  171D  3400               	retlw	0
  7750  171E  347F               	retlw	127
  7751  171F  34F0               	retlw	240
  7752  1720  3400               	retlw	0
  7753  1721  347F               	retlw	127
  7754  1722  34FC               	retlw	252
  7755  1723  3400               	retlw	0
  7756  1724  343F               	retlw	63
  7757  1725  34FE               	retlw	254
  7758  1726  3400               	retlw	0
  7759  1727  3407               	retlw	7
  7760  1728  34FF               	retlw	255
  7761  1729  3480               	retlw	128
  7762  172A  3400               	retlw	0
  7763  172B  343F               	retlw	63
  7764  172C  3480               	retlw	128
  7765  172D  3400               	retlw	0
  7766  172E  341F               	retlw	31
  7767  172F  34C0               	retlw	192
  7768  1730  3408               	retlw	8
  7769  1731  340F               	retlw	15
  7770  1732  3480               	retlw	128
  7771  1733  343F               	retlw	63
  7772  1734  34FF               	retlw	255
  7773  1735  3480               	retlw	128
  7774  1736  343F               	retlw	63
  7775  1737  34FF               	retlw	255
  7776  1738  3400               	retlw	0
  7777  1739  347F               	retlw	127
  7778  173A  34FC               	retlw	252
  7779  173B  3400               	retlw	0
  7780  173C  347F               	retlw	127
  7781  173D  34F8               	retlw	248
  7782  173E  3400               	retlw	0
  7783  173F  341F               	retlw	31
  7784  1740  34FC               	retlw	252
  7785  1741  3400               	retlw	0
  7786  1742  3407               	retlw	7
  7787  1743  34FF               	retlw	255
  7788  1744  3480               	retlw	128
  7789  1745  3401               	retlw	1
  7790  1746  34FF               	retlw	255
  7791  1747  34C0               	retlw	192
  7792  1748  3400               	retlw	0
  7793  1749  347F               	retlw	127
  7794  174A  34C0               	retlw	192
  7795  174B  3400               	retlw	0
  7796  174C  341F               	retlw	31
  7797  174D  3480               	retlw	128
  7798  174E  3400               	retlw	0
  7799  174F  3406               	retlw	6
  7800  1750  3400               	retlw	0
  7801  1751  3400               	retlw	0
  7802  1752  3400               	retlw	0
  7803  1753  3400               	retlw	0
  7804  1754  3400               	retlw	0
  7805  1755  3400               	retlw	0
  7806  1756  3400               	retlw	0
  7807  1757  3400               	retlw	0
  7808  1758  3400               	retlw	0
  7809  1759  3400               	retlw	0
  7810  175A                     __end_of_n_rot:
  7811                           
  7812                           	psect	stringtext21
  7813  17AA                     __pstringtext21:
  7814  17AA                     _lut_partial_update:
  7815  17AA  3410               	retlw	16
  7816  17AB  3418               	retlw	24
  7817  17AC  3418               	retlw	24
  7818  17AD  3408               	retlw	8
  7819  17AE  3418               	retlw	24
  7820  17AF  3418               	retlw	24
  7821  17B0  3408               	retlw	8
  7822  17B1  3400               	retlw	0
  7823  17B2  3400               	retlw	0
  7824  17B3  3400               	retlw	0
  7825  17B4  3400               	retlw	0
  7826  17B5  3400               	retlw	0
  7827  17B6  3400               	retlw	0
  7828  17B7  3400               	retlw	0
  7829  17B8  3400               	retlw	0
  7830  17B9  3400               	retlw	0
  7831  17BA  3400               	retlw	0
  7832  17BB  3400               	retlw	0
  7833  17BC  3400               	retlw	0
  7834  17BD  3400               	retlw	0
  7835  17BE  3413               	retlw	19
  7836  17BF  3414               	retlw	20
  7837  17C0  3444               	retlw	68
  7838  17C1  3412               	retlw	18
  7839  17C2  3400               	retlw	0
  7840  17C3  3400               	retlw	0
  7841  17C4  3400               	retlw	0
  7842  17C5  3400               	retlw	0
  7843  17C6  3400               	retlw	0
  7844  17C7  3400               	retlw	0
  7845  17C8                     __end_of_lut_partial_update:
  7846                           
  7847                           	psect	stringtext22
  7848  17C8                     __pstringtext22:
  7849  17C8                     _lut_full_update:
  7850  17C8  3450               	retlw	80
  7851  17C9  34AA               	retlw	170
  7852  17CA  3455               	retlw	85
  7853  17CB  34AA               	retlw	170
  7854  17CC  3411               	retlw	17
  7855  17CD  3400               	retlw	0
  7856  17CE  3400               	retlw	0
  7857  17CF  3400               	retlw	0
  7858  17D0  3400               	retlw	0
  7859  17D1  3400               	retlw	0
  7860  17D2  3400               	retlw	0
  7861  17D3  3400               	retlw	0
  7862  17D4  3400               	retlw	0
  7863  17D5  3400               	retlw	0
  7864  17D6  3400               	retlw	0
  7865  17D7  3400               	retlw	0
  7866  17D8  3400               	retlw	0
  7867  17D9  3400               	retlw	0
  7868  17DA  3400               	retlw	0
  7869  17DB  3400               	retlw	0
  7870  17DC  34FF               	retlw	255
  7871  17DD  34FF               	retlw	255
  7872  17DE  341F               	retlw	31
  7873  17DF  3400               	retlw	0
  7874  17E0  3400               	retlw	0
  7875  17E1  3400               	retlw	0
  7876  17E2  3400               	retlw	0
  7877  17E3  3400               	retlw	0
  7878  17E4  3400               	retlw	0
  7879  17E5  3400               	retlw	0
  7880  17E6                     __end_of_lut_full_update:
  7881  1F80                     _configurations_absaddr	set	8064
  7882                           
  7883                           	psect	_configurations_text
  7884  1F80                     __p_configurations_text:
  7885  1F80                     _configurations:
  7886  1F80  3401               	retlw	1
  7887  1F81  3400               	retlw	0
  7888  1F82  3400               	retlw	0
  7889  1F83  3400               	retlw	0
  7890  1F84  3401               	retlw	1
  7891  1F85  3401               	retlw	1
  7892  1F86  3400               	retlw	0
  7893  1F87  340E               	retlw	14
  7894  1F88  3400               	retlw	0
  7895  1F89  3401               	retlw	1
  7896  1F8A  3400               	retlw	0
  7897  1F8B  3401               	retlw	1
  7898  1F8C  3400               	retlw	0
  7899  1F8D  3401               	retlw	1
  7900  1F8E  3401               	retlw	1
  7901  1F8F  340F               	retlw	15
  7902  1F90  3400               	retlw	0
  7903  1F91  3400               	retlw	0
  7904  1F92  3401               	retlw	1
  7905  1F93  3402               	retlw	2
  7906  1F94                     __end_of_configurations:
  7907                           
  7908                           	psect	nvBANK1
  7909  00DB                     __pnvBANK1:
  7910  00DB                     _TMR1_InterruptHandler:
  7911  00DB                     	ds	2
  7912  00DD                     _timer1ReloadVal:
  7913  00DD                     	ds	2
  7914  00DF                     _IOCAF0_InterruptHandler:
  7915  00DF                     	ds	2
  7916  000D                     _PORTBbits	set	13
  7917  000E                     _PORTCbits	set	14
  7918  000C                     _PORTAbits	set	12
  7919  0018                     _T1CONbits	set	24
  7920  0018                     _T1CON	set	24
  7921  0016                     _TMR1L	set	22
  7922  0017                     _TMR1H	set	23
  7923  0019                     _T1GCON	set	25
  7924  0011                     _PIR1bits	set	17
  7925  000B                     _INTCONbits	set	11
  7926  0091                     _PIE1bits	set	145
  7927  008D                     _TRISBbits	set	141
  7928  0095                     _OPTION_REGbits	set	149
  7929  008E                     _TRISC	set	142
  7930  008D                     _TRISB	set	141
  7931  008C                     _TRISA	set	140
  7932  0097                     _WDTCON	set	151
  7933  0098                     _OSCTUNE	set	152
  7934  009A                     _OSCSTAT	set	154
  7935  0099                     _OSCCON	set	153
  7936  010E                     _LATCbits	set	270
  7937  010C                     _LATAbits	set	268
  7938  010E                     _LATC	set	270
  7939  010D                     _LATB	set	269
  7940  010C                     _LATA	set	268
  7941  0193                     _PMDAT	set	403
  7942  0191                     _PMADR	set	401
  7943  0195                     _PMCON1bits	set	405
  7944  018C                     _ANSELA	set	396
  7945  018D                     _ANSELB	set	397
  7946  018E                     _ANSELC	set	398
  7947  0211                     _SSP1BUF	set	529
  7948  0216                     _SSP1CON2	set	534
  7949  0215                     _SSP1CON1bits	set	533
  7950  0212                     _SSP1ADD	set	530
  7951  0215                     _SSP1CON1	set	533
  7952  0214                     _SSP1STAT	set	532
  7953  020E                     _WPUC	set	526
  7954  020C                     _WPUA	set	524
  7955  020D                     _WPUB	set	525
  7956  021D                     _BORCON	set	541
  7957  028E                     _ODCONC	set	654
  7958  028D                     _ODCONB	set	653
  7959  028C                     _ODCONA	set	652
  7960  030E                     _SLRCONC	set	782
  7961  030D                     _SLRCONB	set	781
  7962  030C                     _SLRCONA	set	780
  7963  0391                     _IOCAPbits	set	913
  7964  0392                     _IOCANbits	set	914
  7965  0393                     _IOCAFbits	set	915
  7966  038E                     _INLVLC	set	910
  7967  038D                     _INLVLB	set	909
  7968  038C                     _INLVLA	set	908
  7969  0E21                     _SSPDATPPS	set	3617
  7970  0E20                     _SSPCLKPPS	set	3616
  7971  0E9F                     _RB7PPS	set	3743
  7972  0E9E                     _RB6PPS	set	3742
  7973                           
  7974                           	psect	stringtext23
  7975  17E6                     __pstringtext23:
  7976  17E6                     STR_5:
  7977  17E6  344E               	retlw	78	;'N'
  7978  17E7  343A               	retlw	58	;':'
  7979  17E8  3420               	retlw	32	;' '
  7980  17E9  3425               	retlw	37	;'%'
  7981  17EA  3473               	retlw	115	;'s'
  7982  17EB  3420               	retlw	32	;' '
  7983  17EC  344D               	retlw	77	;'M'
  7984  17ED  343A               	retlw	58	;':'
  7985  17EE  3420               	retlw	32	;' '
  7986  17EF  3425               	retlw	37	;'%'
  7987  17F0  3473               	retlw	115	;'s'
  7988  17F1  3420               	retlw	32	;' '
  7989  17F2  3442               	retlw	66	;'B'
  7990  17F3  343A               	retlw	58	;':'
  7991  17F4  3420               	retlw	32	;' '
  7992  17F5  3425               	retlw	37	;'%'
  7993  17F6  3473               	retlw	115	;'s'
  7994  17F7  3420               	retlw	32	;' '
  7995  17F8  3447               	retlw	71	;'G'
  7996  17F9  343A               	retlw	58	;':'
  7997  17FA  3420               	retlw	32	;' '
  7998  17FB  3425               	retlw	37	;'%'
  7999  17FC  3473               	retlw	115	;'s'
  8000  17FD  340A               	retlw	10
  8001  17FE  3400               	retlw	0
  8002                           
  8003                           	psect	stringtext24
  8004  17FF                     __pstringtext24:
  8005  17FF                     STR_7:
  8006  17FF  344E               	retlw	78	;'N'
  8007  1800  343A               	retlw	58	;':'
  8008  1801  3425               	retlw	37	;'%'
  8009  1802  3464               	retlw	100	;'d'
  8010  1803  3409               	retlw	9
  8011  1804  344D               	retlw	77	;'M'
  8012  1805  343A               	retlw	58	;':'
  8013  1806  3425               	retlw	37	;'%'
  8014  1807  3464               	retlw	100	;'d'
  8015  1808  3409               	retlw	9
  8016  1809  3442               	retlw	66	;'B'
  8017  180A  343A               	retlw	58	;':'
  8018  180B  3425               	retlw	37	;'%'
  8019  180C  3464               	retlw	100	;'d'
  8020  180D  3409               	retlw	9
  8021  180E  3447               	retlw	71	;'G'
  8022  180F  343A               	retlw	58	;':'
  8023  1810  3425               	retlw	37	;'%'
  8024  1811  3464               	retlw	100	;'d'
  8025  1812  340A               	retlw	10
  8026  1813  3400               	retlw	0
  8027                           
  8028                           	psect	stringtext25
  8029  1814                     __pstringtext25:
  8030  1814                     STR_6:
  8031  1814  344E               	retlw	78	;'N'
  8032  1815  3427               	retlw	39	;'''
  8033  1816  342B               	retlw	43	;'+'
  8034  1817  3453               	retlw	83	;'S'
  8035  1818  3420               	retlw	32	;' '
  8036  1819  344E               	retlw	78	;'N'
  8037  181A  3420               	retlw	32	;' '
  8038  181B  344E               	retlw	78	;'N'
  8039  181C  3420               	retlw	32	;' '
  8040  181D  344E               	retlw	78	;'N'
  8041  181E  342B               	retlw	43	;'+'
  8042  181F  344D               	retlw	77	;'M'
  8043  1820  342B               	retlw	43	;'+'
  8044  1821  3442               	retlw	66	;'B'
  8045  1822  3400               	retlw	0
  8046                           
  8047                           	psect	stringtext26
  8048  1831                     __pstringtext26:
  8049  1831                     STR_1:
  8050  1831  3464               	retlw	100	;'d'
  8051  1832  3461               	retlw	97	;'a'
  8052  1833  3474               	retlw	116	;'t'
  8053  1834  3461               	retlw	97	;'a'
  8054  1835  3400               	retlw	0
  8055                           
  8056                           	psect	stringtext27
  8057  0000                     __pstringtext27:
  8058  1831                     
  8059                           	psect	cinit
  8060  001B                     start_initialization:	
  8061                           ; #config settings
  8062                           
  8063  001B                     __initialization:	;BIGRAM
  8064                           
  8065                           ; Initialize objects allocated to BIGRAM
  8066  001B  3069               	movlw	low __pidataBIGRAM
  8067  001C  0084               	movwf	4
  8068  001D  3086               	movlw	(high __pidataBIGRAM)| (0+128)
  8069  001E  0085               	movwf	5
  8070  001F  307C               	movlw	124
  8071  0020  0086               	movwf	6
  8072  0021  3022               	movlw	34
  8073  0022  0087               	movwf	7
  8074  0023  3001               	movlw	1
  8075  0024  00FF               	movwf	127
  8076  0025  3074               	movlw	116
  8077  0026  3188  2072  3180   	fcall	init_ram
  8078                           
  8079                           ; Initialize objects allocated to BANK1
  8080  0029  3001               	movlw	low __pidataBANK1
  8081  002A  0084               	movwf	4
  8082  002B  3089               	movlw	(high __pidataBANK1)| (0+128)
  8083  002C  0085               	movwf	5
  8084  002D  30A0               	movlw	low __pdataBANK1
  8085  002E  0086               	movwf	6
  8086  002F  3000               	movlw	high __pdataBANK1
  8087  0030  0087               	movwf	7
  8088  0031  3026               	movlw	38
  8089  0032  01FF               	clrf	127
  8090  0033  3188  2072  3180   	fcall	init_ram
  8091                           
  8092                           ; Initialize objects allocated to BANK2
  8093  0036  308C               	movlw	low __pidataBANK2
  8094  0037  0084               	movwf	4
  8095  0038  3088               	movlw	(high __pidataBANK2)| (0+128)
  8096  0039  0085               	movwf	5
  8097  003A  304B               	movlw	low __pdataBANK2
  8098  003B  0086               	movwf	6
  8099  003C  3001               	movlw	high __pdataBANK2
  8100  003D  0087               	movwf	7
  8101  003E  3010               	movlw	16
  8102  003F  01FF               	clrf	127
  8103  0040  3188  2072         	fcall	init_ram
  8104                           
  8105                           ; Clear objects allocated to COMMON
  8106  0042  01FA               	clrf	__pbssCOMMON& (0+127)
  8107  0043  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  8108                           
  8109                           ; Clear objects allocated to BANK1
  8110  0044  0021               	movlb	1	; select bank1
  8111  0045  01C6               	clrf	__pbssBANK1& (0+127)
  8112  0046  01C7               	clrf	(__pbssBANK1+1)& (0+127)
  8113  0047  01C8               	clrf	(__pbssBANK1+2)& (0+127)
  8114  0048  01C9               	clrf	(__pbssBANK1+3)& (0+127)
  8115  0049  01CA               	clrf	(__pbssBANK1+4)& (0+127)
  8116  004A  01CB               	clrf	(__pbssBANK1+5)& (0+127)
  8117  004B  01CC               	clrf	(__pbssBANK1+6)& (0+127)
  8118  004C  01CD               	clrf	(__pbssBANK1+7)& (0+127)
  8119  004D  01CE               	clrf	(__pbssBANK1+8)& (0+127)
  8120  004E  01CF               	clrf	(__pbssBANK1+9)& (0+127)
  8121  004F  01D0               	clrf	(__pbssBANK1+10)& (0+127)
  8122  0050  01D1               	clrf	(__pbssBANK1+11)& (0+127)
  8123  0051  01D2               	clrf	(__pbssBANK1+12)& (0+127)
  8124  0052  01D3               	clrf	(__pbssBANK1+13)& (0+127)
  8125  0053  01D4               	clrf	(__pbssBANK1+14)& (0+127)
  8126  0054  01D5               	clrf	(__pbssBANK1+15)& (0+127)
  8127  0055  01D6               	clrf	(__pbssBANK1+16)& (0+127)
  8128  0056  01D7               	clrf	(__pbssBANK1+17)& (0+127)
  8129  0057  01D8               	clrf	(__pbssBANK1+18)& (0+127)
  8130  0058  01D9               	clrf	(__pbssBANK1+19)& (0+127)
  8131  0059  01DA               	clrf	(__pbssBANK1+20)& (0+127)
  8132  005A                     end_of_initialization:	
  8133                           ;End of C runtime variable initialization code
  8134                           
  8135  005A                     __end_of__initialization:
  8136  005A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8137  005B  0020               	movlb	0
  8138  005C  318C  2CFD         	ljmp	l4747	;jump to C main() function
  8139                           
  8140                           	psect	bssCOMMON
  8141  007A                     __pbssCOMMON:
  8142  007A                     _button_clicked:
  8143  007A                     	ds	1
  8144  007B                     _switch_pos:
  8145  007B                     	ds	1
  8146                           
  8147                           	psect	bssBANK1
  8148  00C6                     __pbssBANK1:
  8149  00C6                     _coil_conf:
  8150  00C6                     	ds	8
  8151  00CE                     read_rotary@store:
  8152  00CE                     	ds	2
  8153  00D0                     _refresh_timer:
  8154  00D0                     	ds	2
  8155  00D2                     _click_timer:
  8156  00D2                     	ds	2
  8157  00D4                     _partial_refresh_count:
  8158  00D4                     	ds	1
  8159  00D5                     RotaryEncoderEventHandler@val:
  8160  00D5                     	ds	1
  8161  00D6                     read_rotary@prevNextCode:
  8162  00D6                     	ds	1
  8163  00D7                     _wake_up:
  8164  00D7                     	ds	1
  8165  00D8                     _sleeping:
  8166  00D8                     	ds	1
  8167  00D9                     _click_type:
  8168  00D9                     	ds	1
  8169  00DA                     _prev_switch_pos:
  8170  00DA                     	ds	1
  8171                           
  8172                           	psect	dataBANK1
  8173  00A0                     __pdataBANK1:
  8174  00A0                     read_rotary@rot_enc_table:
  8175  00A0                     	ds	16
  8176  00B0                     _time_to_refresh:
  8177  00B0                     	ds	1
  8178  00B1                     _selection_index:
  8179  00B1                     	ds	1
  8180  00B2                     _saved_pc:
  8181  00B2                     	ds	20
  8182                           
  8183                           	psect	dataBANK2
  8184  014B                     __pdataBANK2:
  8185  014B                     _buffer:
  8186  014B                     	ds	16
  8187                           
  8188                           	psect	inittext
  8189  0872                     init_ram:
  8190  0872  00FE               	movwf	126
  8191  0873                     initloop:
  8192  0873  0012               	moviw fsr0++
  8193  0874  001E               	movwi fsr1++
  8194  0875  3001               	movlw	1
  8195  0876  02FE               	subwf	126,f
  8196  0877  3000               	movlw	0
  8197  0878  3BFF               	subwfb	127,f
  8198  0879  087F               	movf	127,w
  8199  087A  047E               	iorwf	126,w
  8200  087B  1903               	btfsc	3,2
  8201  087C  3400               	retlw	0
  8202  087D  2873               	goto	initloop
  8203                           
  8204                           	psect	cstackBANK2
  8205  0120                     __pcstackBANK2:
  8206  0120                     ImageFromPickupConf@need_to_draw_row:
  8207                           
  8208                           ; 4 bytes @ 0x0
  8209  0120                     	ds	4
  8210  0124                     _ImageFromPickupConf$1215:
  8211                           
  8212                           ; 2 bytes @ 0x4
  8213  0124                     	ds	2
  8214  0126                     _ImageFromPickupConf$1216:
  8215                           
  8216                           ; 2 bytes @ 0x6
  8217  0126                     	ds	2
  8218  0128                     _ImageFromPickupConf$1217:
  8219                           
  8220                           ; 2 bytes @ 0x8
  8221  0128                     	ds	2
  8222  012A                     ImageFromPickupConf@arrow_type:
  8223                           
  8224                           ; 8 bytes @ 0xA
  8225  012A                     	ds	8
  8226  0132                     _ImageFromPickupConf$1219:
  8227                           
  8228                           ; 1 bytes @ 0x12
  8229  0132                     	ds	1
  8230  0133                     _ImageFromPickupConf$1220:
  8231                           
  8232                           ; 1 bytes @ 0x13
  8233  0133                     	ds	1
  8234  0134                     _ImageFromPickupConf$1221:
  8235                           
  8236                           ; 1 bytes @ 0x14
  8237  0134                     	ds	1
  8238  0135                     _ImageFromPickupConf$1223:
  8239                           
  8240                           ; 1 bytes @ 0x15
  8241  0135                     	ds	1
  8242  0136                     _ImageFromPickupConf$1224:
  8243                           
  8244                           ; 1 bytes @ 0x16
  8245  0136                     	ds	1
  8246  0137                     _ImageFromPickupConf$1225:
  8247                           
  8248                           ; 1 bytes @ 0x17
  8249  0137                     	ds	1
  8250  0138                     ImageFromPickupConf@need_to_skip_row:
  8251                           
  8252                           ; 4 bytes @ 0x18
  8253  0138                     	ds	4
  8254  013C                     ImageFromPickupConf@pickup_indexes:
  8255                           
  8256                           ; 4 bytes @ 0x1C
  8257  013C                     	ds	4
  8258  0140                     _ImageFromPickupConf$2078:
  8259                           
  8260                           ; 2 bytes @ 0x20
  8261  0140                     	ds	2
  8262  0142                     ImageFromPickupConf@max_index:
  8263                           
  8264                           ; 1 bytes @ 0x22
  8265  0142                     	ds	1
  8266  0143                     ImageFromPickupConf@index:
  8267                           
  8268                           ; 1 bytes @ 0x23
  8269  0143                     	ds	1
  8270  0144                     ImageFromPickupConf@start_y:
  8271                           
  8272                           ; 2 bytes @ 0x24
  8273  0144                     	ds	2
  8274  0146                     ImageFromPickupConf@i:
  8275                           
  8276                           ; 2 bytes @ 0x26
  8277  0146                     	ds	2
  8278  0148                     ImageFromPickupConf@start_x:
  8279                           
  8280                           ; 2 bytes @ 0x28
  8281  0148                     	ds	2
  8282  014A                     ImageFromPickupConf@pc:
  8283                           
  8284                           ; 1 bytes @ 0x2A
  8285  014A                     	ds	1
  8286                           
  8287                           	psect	cstackCOMMON
  8288  0070                     __pcstackCOMMON:
  8289  0070                     ?_EINK_open:
  8290  0070                     ?_SPI_Open:	
  8291                           ; 1 bytes @ 0x0
  8292                           
  8293  0070                     ?_SPI_Initialize:	
  8294                           ; 1 bytes @ 0x0
  8295                           
  8296  0070                     ?_PIN_MANAGER_Initialize:	
  8297                           ; 1 bytes @ 0x0
  8298                           
  8299  0070                     ?_OSCILLATOR_Initialize:	
  8300                           ; 1 bytes @ 0x0
  8301                           
  8302  0070                     ?_WDT_Initialize:	
  8303                           ; 1 bytes @ 0x0
  8304                           
  8305  0070                     ?_TMR1_Initialize:	
  8306                           ; 1 bytes @ 0x0
  8307                           
  8308  0070                     ?_IOCAF0_DefaultInterruptHandler:	
  8309                           ; 1 bytes @ 0x0
  8310                           
  8311  0070                     ??_IOCAF0_DefaultInterruptHandler:	
  8312                           ; 1 bytes @ 0x0
  8313                           
  8314  0070                     ?_IOCAF0_ISR:	
  8315                           ; 1 bytes @ 0x0
  8316                           
  8317  0070                     ??_IOCAF0_ISR:	
  8318                           ; 1 bytes @ 0x0
  8319                           
  8320  0070                     ?_TMR1_DefaultInterruptHandler:	
  8321                           ; 1 bytes @ 0x0
  8322                           
  8323  0070                     ??_TMR1_DefaultInterruptHandler:	
  8324                           ; 1 bytes @ 0x0
  8325                           
  8326  0070                     ?_ClearFrameMemory:	
  8327                           ; 1 bytes @ 0x0
  8328                           
  8329  0070                     ?_DisplayFrame:	
  8330                           ; 1 bytes @ 0x0
  8331                           
  8332  0070                     ?_SleepDisplay:	
  8333                           ; 1 bytes @ 0x0
  8334                           
  8335  0070                     ?_ButtonEventReset:	
  8336                           ; 1 bytes @ 0x0
  8337                           
  8338  0070                     ?_sendCoilsConfiguration:	
  8339                           ; 1 bytes @ 0x0
  8340                           
  8341  0070                     ?_ResetDisplay:	
  8342                           ; 1 bytes @ 0x0
  8343                           
  8344  0070                     ?_SendCommand:	
  8345                           ; 1 bytes @ 0x0
  8346                           
  8347  0070                     ?_SendData:	
  8348                           ; 1 bytes @ 0x0
  8349                           
  8350  0070                     ?_spi_master_open:	
  8351                           ; 1 bytes @ 0x0
  8352                           
  8353  0070                     ?_SYSTEM_Initialize:	
  8354                           ; 1 bytes @ 0x0
  8355                           
  8356  0070                     ?_PIN_MANAGER_IOC:	
  8357                           ; 1 bytes @ 0x0
  8358                           
  8359  0070                     ??_PIN_MANAGER_IOC:	
  8360                           ; 1 bytes @ 0x0
  8361                           
  8362  0070                     ?_TMR1_StartTimer:	
  8363                           ; 1 bytes @ 0x0
  8364                           
  8365  0070                     ?_TMR1_WriteTimer:	
  8366                           ; 1 bytes @ 0x0
  8367                           
  8368  0070                     ?_TMR1_ISR:	
  8369                           ; 1 bytes @ 0x0
  8370                           
  8371  0070                     ?_INTERRUPT_InterruptManager:	
  8372                           ; 1 bytes @ 0x0
  8373                           
  8374  0070                     ?_ReadConfigurationsFromMemory:	
  8375                           ; 1 bytes @ 0x0
  8376                           
  8377  0070                     ?_WriteConfigurationToMemory:	
  8378                           ; 1 bytes @ 0x0
  8379                           
  8380  0070                     ?_GotoSleep:	
  8381                           ; 1 bytes @ 0x0
  8382                           
  8383  0070                     ?_WakeUp:	
  8384                           ; 1 bytes @ 0x0
  8385                           
  8386  0070                     ?_TMR1_CallBack:	
  8387                           ; 1 bytes @ 0x0
  8388                           
  8389  0070                     ??_TMR1_CallBack:	
  8390                           ; 1 bytes @ 0x0
  8391                           
  8392  0070                     ?_Button_Callback:	
  8393                           ; 1 bytes @ 0x0
  8394                           
  8395  0070                     ??_Button_Callback:	
  8396                           ; 1 bytes @ 0x0
  8397                           
  8398  0070                     ?_ButtonCaseHandler:	
  8399                           ; 1 bytes @ 0x0
  8400                           
  8401  0070                     ?_ButtonEventHandler:	
  8402                           ; 1 bytes @ 0x0
  8403                           
  8404  0070                     ?_SwitchEventHandler:	
  8405                           ; 1 bytes @ 0x0
  8406                           
  8407  0070                     ?_DisplayRefreshHandler:	
  8408                           ; 1 bytes @ 0x0
  8409                           
  8410  0070                     ?_read_rotary:	
  8411                           ; 1 bytes @ 0x0
  8412                           
  8413  0070                     ?_RotaryEncoderEventHandler:	
  8414                           ; 1 bytes @ 0x0
  8415                           
  8416  0070                     ?_WaitUntilIdle:	
  8417                           ; 1 bytes @ 0x0
  8418                           
  8419  0070                     ?__unlock:	
  8420                           ; 1 bytes @ 0x0
  8421                           
  8422  0070                     ?_main:	
  8423                           ; 1 bytes @ 0x0
  8424                           
  8425  0070                     TMR1_WriteTimer@timerVal:	
  8426                           ; 2 bytes @ 0x0
  8427                           
  8428                           
  8429                           ; 2 bytes @ 0x0
  8430  0070                     	ds	2
  8431  0072                     ?_SPI_ExchangeByte:
  8432  0072                     ??_SPI_Open:	
  8433                           ; 1 bytes @ 0x2
  8434                           
  8435  0072                     ?_DELAY_milliseconds:	
  8436                           ; 1 bytes @ 0x2
  8437                           
  8438  0072                     ??_SPI_Initialize:	
  8439                           ; 1 bytes @ 0x2
  8440                           
  8441  0072                     ??_OSCILLATOR_Initialize:	
  8442                           ; 1 bytes @ 0x2
  8443                           
  8444  0072                     ??_WDT_Initialize:	
  8445                           ; 1 bytes @ 0x2
  8446                           
  8447  0072                     ?_IOCAF0_SetInterruptHandler:	
  8448                           ; 1 bytes @ 0x2
  8449                           
  8450  0072                     ?_TMR1_SetInterruptHandler:	
  8451                           ; 1 bytes @ 0x2
  8452                           
  8453  0072                     ??_ButtonEventReset:	
  8454                           ; 1 bytes @ 0x2
  8455                           
  8456  0072                     ??_TMR1_StartTimer:	
  8457                           ; 1 bytes @ 0x2
  8458                           
  8459  0072                     ??_TMR1_WriteTimer:	
  8460                           ; 1 bytes @ 0x2
  8461                           
  8462  0072                     ??_TMR1_ISR:	
  8463                           ; 1 bytes @ 0x2
  8464                           
  8465  0072                     ??_INTERRUPT_InterruptManager:	
  8466                           ; 1 bytes @ 0x2
  8467                           
  8468  0072                     ??_ButtonCaseHandler:	
  8469                           ; 1 bytes @ 0x2
  8470                           
  8471  0072                     ??_read_rotary:	
  8472                           ; 1 bytes @ 0x2
  8473                           
  8474  0072                     ?_shiftOut:	
  8475                           ; 1 bytes @ 0x2
  8476                           
  8477  0072                     ??__unlock:	
  8478                           ; 1 bytes @ 0x2
  8479                           
  8480  0072                     ?_FLASH_write:	
  8481                           ; 1 bytes @ 0x2
  8482                           
  8483  0072                     ?_FLASH_erase:	
  8484                           ; 1 bytes @ 0x2
  8485                           
  8486  0072                     ?___abmod:	
  8487                           ; 1 bytes @ 0x2
  8488                           
  8489  0072                     ?_FLASH_read:	
  8490                           ; 1 bytes @ 0x2
  8491                           
  8492  0072                     ?___wmul:	
  8493                           ; 2 bytes @ 0x2
  8494                           
  8495  0072                     SPI_ExchangeByte@data:	
  8496                           ; 2 bytes @ 0x2
  8497                           
  8498  0072                     ___abmod@divisor:	
  8499                           ; 1 bytes @ 0x2
  8500                           
  8501  0072                     IOCAF0_SetInterruptHandler@InterruptHandler:	
  8502                           ; 1 bytes @ 0x2
  8503                           
  8504  0072                     DELAY_milliseconds@milliseconds:	
  8505                           ; 2 bytes @ 0x2
  8506                           
  8507  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  8508                           ; 2 bytes @ 0x2
  8509                           
  8510  0072                     FLASH_read@address:	
  8511                           ; 2 bytes @ 0x2
  8512                           
  8513  0072                     FLASH_write@address:	
  8514                           ; 2 bytes @ 0x2
  8515                           
  8516  0072                     FLASH_erase@address:	
  8517                           ; 2 bytes @ 0x2
  8518                           
  8519  0072                     ___wmul@multiplier:	
  8520                           ; 2 bytes @ 0x2
  8521                           
  8522  0072                     shiftOut@val:	
  8523                           ; 2 bytes @ 0x2
  8524                           
  8525                           
  8526                           ; 8 bytes @ 0x2
  8527  0072                     	ds	1
  8528  0073                     ??_SPI_ExchangeByte:
  8529  0073                     ??_SendCommand:	
  8530                           ; 1 bytes @ 0x3
  8531                           
  8532  0073                     ??_SendData:	
  8533                           ; 1 bytes @ 0x3
  8534                           
  8535  0073                     ??___abmod:	
  8536                           ; 1 bytes @ 0x3
  8537                           
  8538  0073                     SendCommand@command:	
  8539                           ; 1 bytes @ 0x3
  8540                           
  8541  0073                     SendData@data:	
  8542                           ; 1 bytes @ 0x3
  8543                           
  8544  0073                     ___abmod@counter:	
  8545                           ; 1 bytes @ 0x3
  8546                           
  8547                           
  8548                           ; 1 bytes @ 0x3
  8549  0073                     	ds	1
  8550  0074                     ??_DELAY_milliseconds:
  8551  0074                     ??_PIN_MANAGER_Initialize:	
  8552                           ; 1 bytes @ 0x4
  8553                           
  8554  0074                     ??_TMR1_Initialize:	
  8555                           ; 1 bytes @ 0x4
  8556                           
  8557  0074                     ??_IOCAF0_SetInterruptHandler:	
  8558                           ; 1 bytes @ 0x4
  8559                           
  8560  0074                     ??_TMR1_SetInterruptHandler:	
  8561                           ; 1 bytes @ 0x4
  8562                           
  8563  0074                     ?_HEFLASH_readBlock:	
  8564                           ; 1 bytes @ 0x4
  8565                           
  8566  0074                     ??_SleepDisplay:	
  8567                           ; 1 bytes @ 0x4
  8568                           
  8569  0074                     ??_ResetDisplay:	
  8570                           ; 1 bytes @ 0x4
  8571                           
  8572  0074                     ?_SetLut:	
  8573                           ; 1 bytes @ 0x4
  8574                           
  8575  0074                     ??_SetMemoryArea:	
  8576                           ; 1 bytes @ 0x4
  8577                           
  8578  0074                     ?_SetMemoryPointer:	
  8579                           ; 1 bytes @ 0x4
  8580                           
  8581  0074                     ??_SYSTEM_Initialize:	
  8582                           ; 1 bytes @ 0x4
  8583                           
  8584  0074                     ??_WaitUntilIdle:	
  8585                           ; 1 bytes @ 0x4
  8586                           
  8587  0074                     ??_FLASH_read:	
  8588                           ; 1 bytes @ 0x4
  8589                           
  8590  0074                     ??_FLASH_erase:	
  8591                           ; 1 bytes @ 0x4
  8592                           
  8593  0074                     FLASH_erase@temp:	
  8594                           ; 1 bytes @ 0x4
  8595                           
  8596  0074                     HEFLASH_readBlock@radd:	
  8597                           ; 1 bytes @ 0x4
  8598                           
  8599  0074                     ___abmod@sign:	
  8600                           ; 1 bytes @ 0x4
  8601                           
  8602  0074                     SetLut@lut:	
  8603                           ; 1 bytes @ 0x4
  8604                           
  8605  0074                     SetMemoryPointer@x:	
  8606                           ; 2 bytes @ 0x4
  8607                           
  8608  0074                     FLASH_write@data:	
  8609                           ; 2 bytes @ 0x4
  8610                           
  8611  0074                     ___wmul@multiplicand:	
  8612                           ; 2 bytes @ 0x4
  8613                           
  8614                           
  8615                           ; 2 bytes @ 0x4
  8616  0074                     	ds	1
  8617  0075                     SPI_Open@spiUniqueConfiguration:
  8618  0075                     HEFLASH_readBlock@count:	
  8619                           ; 1 bytes @ 0x5
  8620                           
  8621  0075                     ___abmod@dividend:	
  8622                           ; 1 bytes @ 0x5
  8623                           
  8624                           
  8625                           ; 1 bytes @ 0x5
  8626  0075                     	ds	1
  8627  0076                     ??_EINK_open:
  8628  0076                     ??_HEFLASH_readBlock:	
  8629                           ; 1 bytes @ 0x6
  8630                           
  8631  0076                     ??_SetLut:	
  8632                           ; 1 bytes @ 0x6
  8633                           
  8634  0076                     ??_spi_master_open:	
  8635                           ; 1 bytes @ 0x6
  8636                           
  8637  0076                     ??___wmul:	
  8638                           ; 1 bytes @ 0x6
  8639                           
  8640  0076                     ?___awmod:	
  8641                           ; 1 bytes @ 0x6
  8642                           
  8643  0076                     FLASH_write@latch:	
  8644                           ; 2 bytes @ 0x6
  8645                           
  8646  0076                     HEFLASH_readBlock@buffer:	
  8647                           ; 1 bytes @ 0x6
  8648                           
  8649  0076                     SetMemoryPointer@y:	
  8650                           ; 1 bytes @ 0x6
  8651                           
  8652  0076                     ___wmul@product:	
  8653                           ; 2 bytes @ 0x6
  8654                           
  8655  0076                     ___awmod@divisor:	
  8656                           ; 2 bytes @ 0x6
  8657                           
  8658                           
  8659                           ; 2 bytes @ 0x6
  8660  0076                     	ds	1
  8661  0077                     ??_FLASH_write:
  8662  0077                     FLASH_write@temp:	
  8663                           ; 1 bytes @ 0x7
  8664                           
  8665  0077                     SetLut@i:	
  8666                           ; 1 bytes @ 0x7
  8667                           
  8668  0077                     HEFLASH_readBlock@add:	
  8669                           ; 2 bytes @ 0x7
  8670                           
  8671                           
  8672                           ; 2 bytes @ 0x7
  8673  0077                     	ds	1
  8674  0078                     ?_HEFLASH_writeBlock:
  8675  0078                     ??_SetMemoryPointer:	
  8676                           ; 1 bytes @ 0x8
  8677                           
  8678  0078                     spi_master_open@config:	
  8679                           ; 1 bytes @ 0x8
  8680                           
  8681  0078                     HEFLASH_writeBlock@buffer:	
  8682                           ; 1 bytes @ 0x8
  8683                           
  8684  0078                     ___awmod@dividend:	
  8685                           ; 1 bytes @ 0x8
  8686                           
  8687                           
  8688                           ; 2 bytes @ 0x8
  8689  0078                     	ds	1
  8690  0079                     ??_InitDisplay:
  8691  0079                     ??_DisplayFrame:	
  8692                           ; 1 bytes @ 0x9
  8693                           
  8694  0079                     ??_ReadConfigurationsFromMemory:	
  8695                           ; 1 bytes @ 0x9
  8696                           
  8697  0079                     HEFLASH_writeBlock@count:	
  8698                           ; 1 bytes @ 0x9
  8699                           
  8700                           
  8701                           ; 1 bytes @ 0x9
  8702  0079                     	ds	1
  8703  007A                     ??_HEFLASH_writeBlock:
  8704  007A                     ??_ClearFrameMemory:	
  8705                           ; 1 bytes @ 0xA
  8706                           
  8707  007A                     ??_ClearFrameMemoryPartial:	
  8708                           ; 1 bytes @ 0xA
  8709                           
  8710  007A                     ??_WriteConfigurationToMemory:	
  8711                           ; 1 bytes @ 0xA
  8712                           
  8713  007A                     ??_GotoSleep:	
  8714                           ; 1 bytes @ 0xA
  8715                           
  8716  007A                     ??_WakeUp:	
  8717                           ; 1 bytes @ 0xA
  8718                           
  8719  007A                     ??_DisplayRefreshHandler:	
  8720                           ; 1 bytes @ 0xA
  8721                           
  8722  007A                     ??_main:	
  8723                           ; 1 bytes @ 0xA
  8724                           
  8725  007A                     ??___awmod:	
  8726                           ; 1 bytes @ 0xA
  8727                           
  8728                           
  8729                           	psect	cstackBANK0
  8730  0020                     __pcstackBANK0:	
  8731                           ; 1 bytes @ 0xA
  8732                           
  8733  0020                     ?_InitDisplay:
  8734  0020                     ?_SetMemoryArea:	
  8735                           ; 1 bytes @ 0x0
  8736                           
  8737  0020                     ??_shiftOut:	
  8738                           ; 1 bytes @ 0x0
  8739                           
  8740  0020                     HEFLASH_writeBlock@radd:	
  8741                           ; 1 bytes @ 0x0
  8742                           
  8743  0020                     ___awmod@counter:	
  8744                           ; 1 bytes @ 0x0
  8745                           
  8746  0020                     InitDisplay@lut:	
  8747                           ; 1 bytes @ 0x0
  8748                           
  8749  0020                     SetMemoryArea@x_start:	
  8750                           ; 2 bytes @ 0x0
  8751                           
  8752                           
  8753                           ; 2 bytes @ 0x0
  8754  0020                     	ds	1
  8755  0021                     ___awmod@sign:
  8756  0021                     HEFLASH_writeBlock@add:	
  8757                           ; 1 bytes @ 0x1
  8758                           
  8759                           
  8760                           ; 2 bytes @ 0x1
  8761  0021                     	ds	1
  8762  0022                     ?_modulo:
  8763  0022                     modulo@N:	
  8764                           ; 1 bytes @ 0x2
  8765                           
  8766  0022                     SetMemoryArea@y_start:	
  8767                           ; 1 bytes @ 0x2
  8768                           
  8769                           
  8770                           ; 2 bytes @ 0x2
  8771  0022                     	ds	1
  8772  0023                     ??_modulo:
  8773                           
  8774                           ; 1 bytes @ 0x3
  8775  0023                     	ds	1
  8776  0024                     SetMemoryArea@x_end:
  8777                           
  8778                           ; 2 bytes @ 0x4
  8779  0024                     	ds	2
  8780  0026                     SetMemoryArea@y_end:
  8781                           
  8782                           ; 2 bytes @ 0x6
  8783  0026                     	ds	1
  8784  0027                     modulo@x:
  8785                           
  8786                           ; 1 bytes @ 0x7
  8787  0027                     	ds	1
  8788  0028                     ?_ClearFrameMemoryPartial:
  8789  0028                     ?_SetFrameMemoryPartial:	
  8790                           ; 1 bytes @ 0x8
  8791                           
  8792  0028                     ClearFrameMemory@color:	
  8793                           ; 1 bytes @ 0x8
  8794                           
  8795  0028                     SetFrameMemoryPartial@image_buffer:	
  8796                           ; 1 bytes @ 0x8
  8797                           
  8798  0028                     ClearFrameMemoryPartial@x_start:	
  8799                           ; 2 bytes @ 0x8
  8800                           
  8801                           
  8802                           ; 2 bytes @ 0x8
  8803  0028                     	ds	1
  8804  0029                     ClearFrameMemory@i:
  8805                           
  8806                           ; 2 bytes @ 0x9
  8807  0029                     	ds	1
  8808  002A                     SetFrameMemoryPartial@x:
  8809  002A                     ClearFrameMemoryPartial@y_start:	
  8810                           ; 2 bytes @ 0xA
  8811                           
  8812                           
  8813                           ; 2 bytes @ 0xA
  8814  002A                     	ds	2
  8815  002C                     SetFrameMemoryPartial@y:
  8816  002C                     ClearFrameMemoryPartial@x_end:	
  8817                           ; 2 bytes @ 0xC
  8818                           
  8819                           
  8820                           ; 2 bytes @ 0xC
  8821  002C                     	ds	2
  8822  002E                     SetFrameMemoryPartial@image_width:
  8823  002E                     ClearFrameMemoryPartial@y_end:	
  8824                           ; 2 bytes @ 0xE
  8825                           
  8826                           
  8827                           ; 2 bytes @ 0xE
  8828  002E                     	ds	2
  8829  0030                     ClearFrameMemoryPartial@color:
  8830  0030                     SetFrameMemoryPartial@image_height:	
  8831                           ; 1 bytes @ 0x10
  8832                           
  8833                           
  8834                           ; 2 bytes @ 0x10
  8835  0030                     	ds	1
  8836  0031                     shiftOut@bitOrder:
  8837  0031                     ClearFrameMemoryPartial@i:	
  8838                           ; 1 bytes @ 0x11
  8839                           
  8840                           
  8841                           ; 2 bytes @ 0x11
  8842  0031                     	ds	1
  8843  0032                     SetFrameMemoryPartial@invert_color:
  8844  0032                     shiftOut@i:	
  8845                           ; 1 bytes @ 0x12
  8846                           
  8847                           
  8848                           ; 8 bytes @ 0x12
  8849  0032                     	ds	1
  8850  0033                     ??_SetFrameMemoryPartial:
  8851  0033                     ?_ClearLine:	
  8852                           ; 1 bytes @ 0x13
  8853                           
  8854  0033                     ClearLine@start_x:	
  8855                           ; 1 bytes @ 0x13
  8856                           
  8857                           
  8858                           ; 2 bytes @ 0x13
  8859  0033                     	ds	2
  8860  0035                     ClearLine@max_character:
  8861                           
  8862                           ; 1 bytes @ 0x15
  8863  0035                     	ds	1
  8864  0036                     ??_ClearLine:
  8865                           
  8866                           ; 1 bytes @ 0x16
  8867  0036                     	ds	1
  8868  0037                     _SetFrameMemoryPartial$1322:
  8869                           
  8870                           ; 2 bytes @ 0x17
  8871  0037                     	ds	1
  8872  0038                     ClearLine@start_y:
  8873                           
  8874                           ; 2 bytes @ 0x18
  8875  0038                     	ds	1
  8876  0039                     SetFrameMemoryPartial@data:
  8877                           
  8878                           ; 1 bytes @ 0x19
  8879  0039                     	ds	1
  8880  003A                     ??_sendCoilsConfiguration:
  8881  003A                     SetFrameMemoryPartial@i:	
  8882                           ; 1 bytes @ 0x1A
  8883                           
  8884                           
  8885                           ; 2 bytes @ 0x1A
  8886  003A                     	ds	2
  8887  003C                     SetFrameMemoryPartial@j:
  8888                           
  8889                           ; 2 bytes @ 0x1C
  8890  003C                     	ds	2
  8891  003E                     SetFrameMemoryPartial@x_end:
  8892                           
  8893                           ; 2 bytes @ 0x1E
  8894  003E                     	ds	2
  8895  0040                     SetFrameMemoryPartial@y_end:
  8896                           
  8897                           ; 2 bytes @ 0x20
  8898  0040                     	ds	2
  8899  0042                     ?_ImageFromPickupConf:
  8900  0042                     ImageFromPickupConf@selection_index:	
  8901                           ; 1 bytes @ 0x22
  8902                           
  8903                           
  8904                           ; 1 bytes @ 0x22
  8905  0042                     	ds	1
  8906  0043                     ImageFromPickupConf@bracket:
  8907                           
  8908                           ; 1 bytes @ 0x23
  8909  0043                     	ds	1
  8910  0044                     sendCoilsConfiguration@pc:
  8911  0044                     ImageFromPickupConf@draw_empty:	
  8912                           ; 1 bytes @ 0x24
  8913                           
  8914                           
  8915                           ; 1 bytes @ 0x24
  8916  0044                     	ds	1
  8917  0045                     ??_ImageFromPickupConf:
  8918  0045                     ??_SwitchEventHandler:	
  8919                           ; 1 bytes @ 0x25
  8920                           
  8921                           
  8922                           ; 1 bytes @ 0x25
  8923  0045                     	ds	6
  8924  004B                     ??_ButtonEventHandler:
  8925  004B                     ??_RotaryEncoderEventHandler:	
  8926                           ; 1 bytes @ 0x2B
  8927                           
  8928                           
  8929                           ; 1 bytes @ 0x2B
  8930  004B                     	ds	2
  8931  004D                     _ButtonEventHandler$1083:
  8932                           
  8933                           ; 2 bytes @ 0x2D
  8934  004D                     	ds	2
  8935  004F                     SwitchEventHandler@a1:
  8936                           
  8937                           ; 1 bytes @ 0x2F
  8938  004F                     	ds	1
  8939  0050                     SwitchEventHandler@a2:
  8940                           
  8941                           ; 1 bytes @ 0x30
  8942  0050                     	ds	1
  8943  0051                     SwitchEventHandler@a3:
  8944                           
  8945                           ; 1 bytes @ 0x31
  8946  0051                     	ds	1
  8947  0052                     SwitchEventHandler@new_switch_pos:
  8948                           
  8949                           ; 1 bytes @ 0x32
  8950  0052                     	ds	1
  8951                           
  8952                           	psect	maintext
  8953  0CFD                     __pmaintext:	
  8954 ;;
  8955 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  8956 ;;
  8957 ;; *************** function _main *****************
  8958 ;; Defined at:
  8959 ;;		line 337 in file "main.c"
  8960 ;; Parameters:    Size  Location     Type
  8961 ;;		None
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;		None
  8964 ;; Return value:  Size  Location     Type
  8965 ;;                  2  607[None  ] int 
  8966 ;; Registers used:
  8967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8968 ;; Tracked objects:
  8969 ;;		On entry : B1F/0
  8970 ;;		On exit  : 1A/0
  8971 ;;		Unchanged: 0/0
  8972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8977 ;;Total ram usage:        0 bytes
  8978 ;; Hardware stack levels required when called: 11
  8979 ;; This function calls:
  8980 ;;		_ButtonCaseHandler
  8981 ;;		_ButtonEventHandler
  8982 ;;		_DisplayRefreshHandler
  8983 ;;		_IOCAF0_SetInterruptHandler
  8984 ;;		_RotaryEncoderEventHandler
  8985 ;;		_SYSTEM_Initialize
  8986 ;;		_SwitchEventHandler
  8987 ;;		_TMR1_SetInterruptHandler
  8988 ;;		_WakeUp
  8989 ;;		_spi_master_open
  8990 ;; This function is called by:
  8991 ;;		Startup code after reset
  8992 ;; This function uses a non-reentrant model
  8993 ;;
  8994                           
  8995                           
  8996                           ;psect for function _main
  8997  0CFD                     _main:
  8998  0CFD                     l4747:	
  8999                           ;incstack = 0
  9000                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9001                           
  9002                           
  9003                           ;main.c: 340:     SYSTEM_Initialize();
  9004  0CFD  27C1  318C         	fcall	_SYSTEM_Initialize
  9005                           
  9006                           ;main.c: 342:     (INTCONbits.GIE = 1);
  9007  0CFF  178B               	bsf	11,7	;volatile
  9008                           
  9009                           ;main.c: 343:     (INTCONbits.PEIE = 1);
  9010  0D00  170B               	bsf	11,6	;volatile
  9011                           
  9012                           ;main.c: 344:     TMR1_SetInterruptHandler(TMR1_CallBack);
  9013  0D01  30C7               	movlw	low _TMR1_CallBack
  9014  0D02  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  9015  0D03  3008               	movlw	high _TMR1_CallBack
  9016  0D04  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  9017  0D05  27BB  318C         	fcall	_TMR1_SetInterruptHandler
  9018                           
  9019                           ;main.c: 345:     IOCAF0_SetInterruptHandler(Button_Callback);
  9020  0D07  307E               	movlw	low _Button_Callback
  9021  0D08  00F2               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler
  9022  0D09  3008               	movlw	high _Button_Callback
  9023  0D0A  00F3               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler+1
  9024  0D0B  27B5  318C         	fcall	_IOCAF0_SetInterruptHandler
  9025                           
  9026                           ;main.c: 346:     if(!spi_master_open(EINK)){
  9027  0D0D  3000               	movlw	0
  9028  0D0E  27E7  318C         	fcall	_spi_master_open
  9029  0D10  3A00               	xorlw	0
  9030  0D11  1903               	btfsc	3,2
  9031  0D12  2D2A               	goto	l609
  9032                           
  9033                           ;main.c: 352:     WakeUp();
  9034  0D13  3180  205E  318C   	fcall	_WakeUp
  9035  0D16                     l4759:
  9036                           
  9037                           ;main.c: 355:     {;main.c: 356:         if(wake_up){
  9038  0D16  0021               	movlb	1	; select bank1
  9039  0D17  0857               	movf	_wake_up^(0+128),w
  9040  0D18  1903               	btfsc	3,2
  9041  0D19  2D1E               	goto	l4765
  9042                           
  9043                           ;main.c: 357:             wake_up = 0;
  9044  0D1A  01D7               	clrf	_wake_up^(0+128)
  9045                           
  9046                           ;main.c: 358:             WakeUp();
  9047  0D1B  3180  205E  318C   	fcall	_WakeUp
  9048  0D1E                     l4765:
  9049                           
  9050                           ;main.c: 360:         RotaryEncoderEventHandler();
  9051  0D1E  25B3  318C         	fcall	_RotaryEncoderEventHandler
  9052                           
  9053                           ;main.c: 361:         ButtonCaseHandler();
  9054  0D20  252C               	fcall	_ButtonCaseHandler
  9055                           
  9056                           ;main.c: 362:         ButtonEventHandler();
  9057  0D21  3180  20FE  318C   	fcall	_ButtonEventHandler
  9058                           
  9059                           ;main.c: 363:         SwitchEventHandler();
  9060  0D24  318A  2206  318C   	fcall	_SwitchEventHandler
  9061                           
  9062                           ;main.c: 364:         DisplayRefreshHandler();
  9063  0D27  259C  318C         	fcall	_DisplayRefreshHandler
  9064  0D29  2D16               	goto	l4759
  9065  0D2A                     l609:
  9066  0D2A  3180  2819         	ljmp	start
  9067  0D2C                     __end_of_main:
  9068  0D2C                     __ptext51:	
  9069 ;; *************** function _ButtonCaseHandler *****************
  9070 ;; Defined at:
  9071 ;;		line 161 in file "main.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;		None
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;		None
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  1    wreg      void 
  9078 ;; Registers used:
  9079 ;;		wreg, status,2, status,0, pclath, cstack
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/1
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9089 ;;Total ram usage:        1 bytes
  9090 ;; Hardware stack levels used: 1
  9091 ;; Hardware stack levels required when called: 5
  9092 ;; This function calls:
  9093 ;;		_ButtonEventReset
  9094 ;; This function is called by:
  9095 ;;		_main
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           
  9100                           ;psect for function _ButtonCaseHandler
  9101  0D2C                     _ButtonCaseHandler:
  9102                           
  9103                           ;main.c: 163:     if(button_clicked && click_type == 0){
  9104                           
  9105                           ;incstack = 0
  9106                           ; Regs used in _ButtonCaseHandler: [wreg+status,2+status,0+pclath+cstack]
  9107  0D2C  087A               	movf	_button_clicked,w	;volatile
  9108  0D2D  1903               	btfsc	3,2
  9109  0D2E  0008               	return
  9110  0D2F  0021               	movlb	1	; select bank1
  9111  0D30  0859               	movf	_click_type^(0+128),w
  9112  0D31  1D03               	btfss	3,2
  9113  0D32  0008               	return
  9114                           
  9115                           ;main.c: 164:         if(PORTAbits.RA0 == 1){
  9116  0D33  0020               	movlb	0	; select bank0
  9117  0D34  1C0C               	btfss	12,0	;volatile
  9118  0D35  2D8C               	goto	l4617
  9119                           
  9120                           ;main.c: 165:             if(click_timer < 50) ButtonEventReset();
  9121  0D36  0021               	movlb	1	; select bank1
  9122  0D37  0853               	movf	(_click_timer+1)^(0+128),w	;volatile
  9123  0D38  3A80               	xorlw	128
  9124  0D39  00F2               	movwf	??_ButtonCaseHandler
  9125  0D3A  3080               	movlw	128
  9126  0D3B  0272               	subwf	??_ButtonCaseHandler,w
  9127  0D3C  1D03               	skipz
  9128  0D3D  2D40               	goto	u3495
  9129  0D3E  3032               	movlw	50
  9130  0D3F  0252               	subwf	_click_timer^(0+128),w	;volatile
  9131  0D40                     u3495:
  9132  0D40  1803               	skipnc
  9133  0D41  2D44               	goto	l4601
  9134  0D42  3186  2E4C         	ljmp	l4221
  9135  0D44                     l4601:
  9136  0D44  0021               	movlb	1	; select bank1
  9137  0D45  0853               	movf	(_click_timer+1)^(0+128),w	;volatile
  9138  0D46  3A80               	xorlw	128
  9139  0D47  00F2               	movwf	??_ButtonCaseHandler
  9140  0D48  3080               	movlw	128
  9141  0D49  0272               	subwf	??_ButtonCaseHandler,w
  9142  0D4A  1D03               	skipz
  9143  0D4B  2D4E               	goto	u3505
  9144  0D4C  3032               	movlw	50
  9145  0D4D  0252               	subwf	_click_timer^(0+128),w	;volatile
  9146  0D4E                     u3505:
  9147  0D4E  1C03               	skipc
  9148  0D4F  2D60               	goto	l4607
  9149  0D50  0021               	movlb	1	; select bank1
  9150  0D51  0853               	movf	(_click_timer+1)^(0+128),w	;volatile
  9151  0D52  3A80               	xorlw	128
  9152  0D53  00F2               	movwf	??_ButtonCaseHandler
  9153  0D54  3083               	movlw	131
  9154  0D55  0272               	subwf	??_ButtonCaseHandler,w
  9155  0D56  1D03               	skipz
  9156  0D57  2D5A               	goto	u3515
  9157  0D58  30E7               	movlw	231
  9158  0D59  0252               	subwf	_click_timer^(0+128),w	;volatile
  9159  0D5A                     u3515:
  9160  0D5A  1803               	skipnc
  9161  0D5B  2D60               	goto	l4607
  9162  0D5C  0021               	movlb	1	; select bank1
  9163  0D5D  01D9               	clrf	_click_type^(0+128)
  9164  0D5E  0AD9               	incf	_click_type^(0+128),f
  9165  0D5F  0008               	return
  9166  0D60                     l4607:
  9167  0D60  0021               	movlb	1	; select bank1
  9168  0D61  0853               	movf	(_click_timer+1)^(0+128),w	;volatile
  9169  0D62  3A80               	xorlw	128
  9170  0D63  00F2               	movwf	??_ButtonCaseHandler
  9171  0D64  3083               	movlw	131
  9172  0D65  0272               	subwf	??_ButtonCaseHandler,w
  9173  0D66  1D03               	skipz
  9174  0D67  2D6A               	goto	u3525
  9175  0D68  30E8               	movlw	232
  9176  0D69  0252               	subwf	_click_timer^(0+128),w	;volatile
  9177  0D6A                     u3525:
  9178  0D6A  1C03               	skipc
  9179  0D6B  2D7C               	goto	l4613
  9180  0D6C  0021               	movlb	1	; select bank1
  9181  0D6D  0853               	movf	(_click_timer+1)^(0+128),w	;volatile
  9182  0D6E  3A80               	xorlw	128
  9183  0D6F  00F2               	movwf	??_ButtonCaseHandler
  9184  0D70  308B               	movlw	139
  9185  0D71  0272               	subwf	??_ButtonCaseHandler,w
  9186  0D72  1D03               	skipz
  9187  0D73  2D76               	goto	u3535
  9188  0D74  30B7               	movlw	183
  9189  0D75  0252               	subwf	_click_timer^(0+128),w	;volatile
  9190  0D76                     u3535:
  9191  0D76  1803               	skipnc
  9192  0D77  2D7C               	goto	l4613
  9193  0D78  3002               	movlw	2
  9194  0D79  0021               	movlb	1	; select bank1
  9195  0D7A  00D9               	movwf	_click_type^(0+128)
  9196  0D7B  0008               	return
  9197  0D7C                     l4613:
  9198  0D7C  0021               	movlb	1	; select bank1
  9199  0D7D  0853               	movf	(_click_timer+1)^(0+128),w	;volatile
  9200  0D7E  3A80               	xorlw	128
  9201  0D7F  00F2               	movwf	??_ButtonCaseHandler
  9202  0D80  308B               	movlw	139
  9203  0D81  0272               	subwf	??_ButtonCaseHandler,w
  9204  0D82  1D03               	skipz
  9205  0D83  2D86               	goto	u3545
  9206  0D84  30B8               	movlw	184
  9207  0D85  0252               	subwf	_click_timer^(0+128),w	;volatile
  9208  0D86                     u3545:
  9209  0D86  1C03               	skipc
  9210  0D87  0008               	return
  9211  0D88  3003               	movlw	3
  9212  0D89  0021               	movlb	1	; select bank1
  9213  0D8A  00D9               	movwf	_click_type^(0+128)
  9214                           
  9215                           ;main.c: 169:         }
  9216  0D8B  0008               	return
  9217  0D8C                     l4617:
  9218  0D8C  0021               	movlb	1	; select bank1
  9219  0D8D  0853               	movf	(_click_timer+1)^(0+128),w	;volatile
  9220  0D8E  3A80               	xorlw	128
  9221  0D8F  00F2               	movwf	??_ButtonCaseHandler
  9222  0D90  3093               	movlw	147
  9223  0D91  0272               	subwf	??_ButtonCaseHandler,w
  9224  0D92  1D03               	skipz
  9225  0D93  2D96               	goto	u3555
  9226  0D94  3088               	movlw	136
  9227  0D95  0252               	subwf	_click_timer^(0+128),w	;volatile
  9228  0D96                     u3555:
  9229  0D96  1C03               	skipc
  9230  0D97  0008               	return
  9231  0D98  3004               	movlw	4
  9232  0D99  0021               	movlb	1	; select bank1
  9233  0D9A  00D9               	movwf	_click_type^(0+128)
  9234  0D9B  0008               	return
  9235  0D9C                     __end_of_ButtonCaseHandler:
  9236  0D9C                     __ptext25:	
  9237 ;; *************** function _DisplayRefreshHandler *****************
  9238 ;; Defined at:
  9239 ;;		line 236 in file "main.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;		None
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;		None
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9248 ;; Tracked objects:
  9249 ;;		On entry : 1D/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9257 ;;Total ram usage:        0 bytes
  9258 ;; Hardware stack levels used: 1
  9259 ;; Hardware stack levels required when called: 10
  9260 ;; This function calls:
  9261 ;;		_DisplayFrame
  9262 ;;		_ImageFromPickupConf
  9263 ;; This function is called by:
  9264 ;;		_main
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           
  9269                           ;psect for function _DisplayRefreshHandler
  9270  0D9C                     _DisplayRefreshHandler:
  9271                           
  9272                           ;main.c: 240:     if(time_to_refresh){
  9273                           
  9274                           ;incstack = 0
  9275                           ; Regs used in _DisplayRefreshHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9276  0D9C  0021               	movlb	1	; select bank1
  9277  0D9D  0830               	movf	_time_to_refresh^(0+128),w	;volatile
  9278  0D9E  1903               	btfsc	3,2
  9279  0D9F  0008               	return
  9280                           
  9281                           ;main.c: 241:         prev_switch_pos = switch_pos;
  9282  0DA0  087B               	movf	_switch_pos,w
  9283  0DA1  00DA               	movwf	_prev_switch_pos^(0+128)
  9284                           
  9285                           ;main.c: 242:         time_to_refresh = 0;
  9286  0DA2  01B0               	clrf	_time_to_refresh^(0+128)	;volatile
  9287                           
  9288                           ;main.c: 243:         refresh_timer = 0;
  9289  0DA3  01D0               	clrf	_refresh_timer^(0+128)	;volatile
  9290  0DA4  01D1               	clrf	(_refresh_timer+1)^(0+128)	;volatile
  9291                           
  9292                           ;main.c: 244:         ImageFromPickupConf(&saved_pc[switch_pos], selection_index, 1, 0);
  9293  0DA5  0831               	movf	_selection_index^(0+128),w
  9294  0DA6  0020               	movlb	0	; select bank0
  9295  0DA7  00C2               	movwf	ImageFromPickupConf@selection_index
  9296  0DA8  01C3               	clrf	ImageFromPickupConf@bracket
  9297  0DA9  0AC3               	incf	ImageFromPickupConf@bracket,f
  9298  0DAA  01C4               	clrf	ImageFromPickupConf@draw_empty
  9299  0DAB  087B               	movf	_switch_pos,w
  9300  0DAC  0709               	addwf	9,w
  9301  0DAD  0709               	addwf	9,w
  9302  0DAE  3EB2               	addlw	(low (_saved_pc| 0))& (0+255)
  9303  0DAF  3181  21CD         	fcall	_ImageFromPickupConf
  9304                           
  9305                           ;main.c: 245:         DisplayFrame();
  9306  0DB1  3181  299E         	ljmp	l4197
  9307  0DB3                     __end_of_DisplayRefreshHandler:
  9308  0DB3                     __ptext18:	
  9309 ;; *************** function _RotaryEncoderEventHandler *****************
  9310 ;; Defined at:
  9311 ;;		line 271 in file "main.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;		None
  9314 ;; Auto vars:     Size  Location     Type
  9315 ;;		None
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  1    wreg      void 
  9318 ;; Registers used:
  9319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9320 ;; Tracked objects:
  9321 ;;		On entry : 1C/1
  9322 ;;		On exit  : 0/0
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9327 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9328 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9329 ;;Total ram usage:        2 bytes
  9330 ;; Hardware stack levels used: 1
  9331 ;; Hardware stack levels required when called: 10
  9332 ;; This function calls:
  9333 ;;		_DisplayFrame
  9334 ;;		_ImageFromPickupConf
  9335 ;;		_modulo
  9336 ;;		_read_rotary
  9337 ;;		_sendCoilsConfiguration
  9338 ;; This function is called by:
  9339 ;;		_main
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343                           
  9344                           ;psect for function _RotaryEncoderEventHandler
  9345  0DB3                     _RotaryEncoderEventHandler:
  9346                           
  9347                           ;main.c: 272:     static int8_t val;;main.c: 273:     if(selection_index >= 0){
  9348                           
  9349                           ;incstack = 0
  9350                           ; Regs used in _RotaryEncoderEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9351  0DB3  0021               	movlb	1	; select bank1
  9352  0DB4  1BB1               	btfsc	_selection_index^(0+128),7
  9353  0DB5  0008               	return
  9354                           
  9355                           ;main.c: 274:         if((val = read_rotary())){
  9356  0DB6  2666  318C         	fcall	_read_rotary
  9357  0DB8  00D5               	movwf	RotaryEncoderEventHandler@val^(0+128)
  9358  0DB9  0855               	movf	RotaryEncoderEventHandler@val^(0+128),w
  9359  0DBA  1903               	btfsc	3,2
  9360  0DBB  0008               	return
  9361  0DBC  2DF9               	goto	l4717
  9362  0DBD                     l4707:
  9363                           
  9364                           ;main.c: 277:                     saved_pc[switch_pos].neck = modulo(saved_pc[switch_pos
      +                          ].neck + val, 17);
  9365  0DBD  087B               	movf	_switch_pos,w
  9366  0DBE  0709               	addwf	9,w
  9367  0DBF  0709               	addwf	9,w
  9368  0DC0  3EB2               	addlw	(low (_saved_pc| 0))& (0+255)
  9369  0DC1  0086               	movwf	6
  9370  0DC2  3011               	movlw	17
  9371  0DC3  0187               	clrf	7
  9372  0DC4  00A2               	movwf	modulo@N
  9373  0DC5  087B               	movf	_switch_pos,w
  9374  0DC6  0709               	addwf	9,w
  9375  0DC7  0709               	addwf	9,w
  9376  0DC8  3EB2               	addlw	(low (_saved_pc| 0))& (0+255)
  9377  0DC9  2DF0               	goto	L4
  9378  0DCA                     l4709:	
  9379                           ;main.c: 279:                     break;
  9380                           
  9381                           
  9382                           ;main.c: 281:                     saved_pc[switch_pos].middle = modulo(saved_pc[switch_p
      +                          os].middle + val, 17);
  9383  0DCA  087B               	movf	_switch_pos,w
  9384  0DCB  0709               	addwf	9,w
  9385  0DCC  0709               	addwf	9,w
  9386  0DCD  3EB3               	addlw	(low ((_saved_pc| 0+1)))& (0+255)
  9387  0DCE  0086               	movwf	6
  9388  0DCF  3011               	movlw	17
  9389  0DD0  0187               	clrf	7
  9390  0DD1  00A2               	movwf	modulo@N
  9391  0DD2  087B               	movf	_switch_pos,w
  9392  0DD3  0709               	addwf	9,w
  9393  0DD4  0709               	addwf	9,w
  9394  0DD5  3EB3               	addlw	(low ((_saved_pc| 0+1)))& (0+255)
  9395  0DD6  2DF0               	goto	L4
  9396  0DD7                     l4711:	
  9397                           ;main.c: 283:                     break;
  9398                           
  9399                           
  9400                           ;main.c: 285:                     saved_pc[switch_pos].bridge = modulo(saved_pc[switch_p
      +                          os].bridge + val, 17);
  9401  0DD7  087B               	movf	_switch_pos,w
  9402  0DD8  0709               	addwf	9,w
  9403  0DD9  0709               	addwf	9,w
  9404  0DDA  3EB4               	addlw	(low ((_saved_pc| 0+2)))& (0+255)
  9405  0DDB  0086               	movwf	6
  9406  0DDC  3011               	movlw	17
  9407  0DDD  0187               	clrf	7
  9408  0DDE  00A2               	movwf	modulo@N
  9409  0DDF  087B               	movf	_switch_pos,w
  9410  0DE0  0709               	addwf	9,w
  9411  0DE1  0709               	addwf	9,w
  9412  0DE2  3EB4               	addlw	(low ((_saved_pc| 0+2)))& (0+255)
  9413  0DE3  2DF0               	goto	L4
  9414  0DE4                     l4713:	
  9415                           ;main.c: 287:                     break;
  9416                           
  9417                           
  9418                           ;main.c: 289:                     saved_pc[switch_pos].general = modulo(saved_pc[switch_
      +                          pos].general + val, 23);
  9419  0DE4  087B               	movf	_switch_pos,w
  9420  0DE5  0709               	addwf	9,w
  9421  0DE6  0709               	addwf	9,w
  9422  0DE7  3EB5               	addlw	(low ((_saved_pc| 0+3)))& (0+255)
  9423  0DE8  0086               	movwf	6
  9424  0DE9  3017               	movlw	23
  9425  0DEA  0187               	clrf	7
  9426  0DEB  00A2               	movwf	modulo@N
  9427  0DEC  087B               	movf	_switch_pos,w
  9428  0DED  0709               	addwf	9,w
  9429  0DEE  0709               	addwf	9,w
  9430  0DEF  3EB5               	addlw	(low ((_saved_pc| 0+3)))& (0+255)
  9431  0DF0                     L4:
  9432  0DF0  0084               	movwf	4
  9433  0DF1  0185               	clrf	5
  9434  0DF2  0800               	movf	0,w
  9435  0DF3  0021               	movlb	1	; select bank1
  9436  0DF4  0755               	addwf	RotaryEncoderEventHandler@val^(0+128),w
  9437  0DF5  2623  318C         	fcall	_modulo
  9438  0DF7  0081               	movwf	1
  9439  0DF8  2E0E               	goto	l4719
  9440  0DF9                     l4717:
  9441  0DF9  0831               	movf	_selection_index^(0+128),w
  9442  0DFA  0020               	movlb	0	; select bank0
  9443  0DFB  00CB               	movwf	??_RotaryEncoderEventHandler
  9444  0DFC  01CC               	clrf	??_RotaryEncoderEventHandler+1
  9445  0DFD  1BCB               	btfsc	??_RotaryEncoderEventHandler,7
  9446  0DFE  03CC               	decf	??_RotaryEncoderEventHandler+1,f
  9447                           
  9448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9449                           ; Switch size 1, requested type "speed"
  9450                           ; Number of cases is 1, Range of values is 0 to 0
  9451                           ; switch strategies available:
  9452                           ; Name         Instructions Cycles
  9453                           ; simple_byte            4     3 (average)
  9454                           ; direct_byte            8     6 (fixed)
  9455                           ; jumptable            260     6 (fixed)
  9456                           ;	Chosen strategy is simple_byte
  9457  0DFF  084C               	movf	??_RotaryEncoderEventHandler+1,w
  9458  0E00  3A00               	xorlw	0	; case 0
  9459  0E01  1903               	skipnz
  9460  0E02  2E04               	goto	l4867
  9461  0E03  2E0E               	goto	l4719
  9462  0E04                     l4867:
  9463                           
  9464                           ; Switch size 1, requested type "speed"
  9465                           ; Number of cases is 4, Range of values is 0 to 3
  9466                           ; switch strategies available:
  9467                           ; Name         Instructions Cycles
  9468                           ; direct_byte           14     6 (fixed)
  9469                           ; simple_byte           13     7 (average)
  9470                           ; jumptable            260     6 (fixed)
  9471                           ;	Chosen strategy is direct_byte
  9472  0E04  084B               	movf	??_RotaryEncoderEventHandler,w
  9473  0E05  0084               	movwf	4
  9474  0E06  3004               	movlw	4
  9475  0E07  0204               	subwf	4,w
  9476  0E08  1803               	skipnc
  9477  0E09  2E0E               	goto	l4719
  9478  0E0A  3188               	movlp	high S4869
  9479  0E0B  3504               	lslf	4,w
  9480  0E0C  3E00               	addlw	low S4869
  9481  0E0D  0082               	movwf	2
  9482  0E0E                     l4719:
  9483                           
  9484                           ;main.c: 294:             sendCoilsConfiguration(&saved_pc[switch_pos]);
  9485  0E0E  087B               	movf	_switch_pos,w
  9486  0E0F  0709               	addwf	9,w
  9487  0E10  0709               	addwf	9,w
  9488  0E11  3EB2               	addlw	(low (_saved_pc| 0))& (0+255)
  9489  0E12  2690               	fcall	_sendCoilsConfiguration
  9490                           
  9491                           ;main.c: 295:             ImageFromPickupConf(&saved_pc[switch_pos], selection_index, 1,
      +                           0);
  9492  0E13  0021               	movlb	1	; select bank1
  9493  0E14  0831               	movf	_selection_index^(0+128),w
  9494  0E15  0020               	movlb	0	; select bank0
  9495  0E16  00C2               	movwf	ImageFromPickupConf@selection_index
  9496  0E17  01C3               	clrf	ImageFromPickupConf@bracket
  9497  0E18  0AC3               	incf	ImageFromPickupConf@bracket,f
  9498  0E19  01C4               	clrf	ImageFromPickupConf@draw_empty
  9499  0E1A  087B               	movf	_switch_pos,w
  9500  0E1B  0709               	addwf	9,w
  9501  0E1C  0709               	addwf	9,w
  9502  0E1D  3EB2               	addlw	(low (_saved_pc| 0))& (0+255)
  9503  0E1E  3181  21CD  318C   	fcall	_ImageFromPickupConf
  9504                           
  9505                           ;main.c: 296:             DisplayFrame();
  9506  0E21  3181  299E         	ljmp	l4197
  9507  0E23                     __end_of_RotaryEncoderEventHandler:
  9508  0E23                     __ptext22:	
  9509 ;; *************** function _modulo *****************
  9510 ;; Defined at:
  9511 ;;		line 129 in file "main.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;  x               1    wreg     char 
  9514 ;;  N               1    2[BANK0 ] char 
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;  x               1    7[BANK0 ] char 
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  1    wreg      char 
  9519 ;; Registers used:
  9520 ;;		wreg, status,2, status,0, pclath, cstack
  9521 ;; Tracked objects:
  9522 ;;		On entry : 1F/1
  9523 ;;		On exit  : 1F/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9526 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9527 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9528 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9529 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9530 ;;Total ram usage:        6 bytes
  9531 ;; Hardware stack levels used: 1
  9532 ;; Hardware stack levels required when called: 5
  9533 ;; This function calls:
  9534 ;;		___abmod
  9535 ;;		___awmod
  9536 ;; This function is called by:
  9537 ;;		_RotaryEncoderEventHandler
  9538 ;; This function uses a non-reentrant model
  9539 ;;
  9540                           
  9541                           
  9542                           ;psect for function _modulo
  9543  0E23                     _modulo:
  9544                           
  9545                           ;incstack = 0
  9546                           ; Regs used in _modulo: [wreg+status,2+status,0+pclath+cstack]
  9547                           ;modulo@x stored from wreg
  9548  0E23  0020               	movlb	0	; select bank0
  9549  0E24  00A7               	movwf	modulo@x
  9550                           
  9551                           ;main.c: 130:     return (x % N + N) % N;
  9552  0E25  0822               	movf	modulo@N,w
  9553  0E26  00F6               	movwf	___awmod@divisor
  9554  0E27  01F7               	clrf	___awmod@divisor+1
  9555  0E28  1BF6               	btfsc	___awmod@divisor,7
  9556  0E29  03F7               	decf	___awmod@divisor+1,f
  9557  0E2A  0822               	movf	modulo@N,w
  9558  0E2B  00A3               	movwf	??_modulo
  9559  0E2C  01A4               	clrf	??_modulo+1
  9560  0E2D  1BA3               	btfsc	??_modulo,7
  9561  0E2E  03A4               	decf	??_modulo+1,f
  9562  0E2F  0822               	movf	modulo@N,w
  9563  0E30  00F2               	movwf	___abmod@divisor
  9564  0E31  0827               	movf	modulo@x,w
  9565  0E32  2641               	fcall	___abmod
  9566  0E33  00A5               	movwf	??_modulo+2
  9567  0E34  01A6               	clrf	??_modulo+3
  9568  0E35  1BA5               	btfsc	??_modulo+2,7
  9569  0E36  03A6               	decf	??_modulo+3,f
  9570  0E37  0823               	movf	??_modulo,w
  9571  0E38  0725               	addwf	??_modulo+2,w
  9572  0E39  00F8               	movwf	___awmod@dividend
  9573  0E3A  0824               	movf	??_modulo+1,w
  9574  0E3B  3D26               	addwfc	??_modulo+3,w
  9575  0E3C  00F9               	movwf	___awmod@dividend+1
  9576  0E3D  3189  2152         	fcall	___awmod
  9577  0E3F  0876               	movf	?___awmod,w
  9578  0E40  0008               	return
  9579  0E41                     __end_of_modulo:
  9580  0E41                     __ptext24:	
  9581 ;; *************** function ___abmod *****************
  9582 ;; Defined at:
  9583 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abmod.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;  dividend        1    wreg     char 
  9586 ;;  divisor         1    2[COMMON] char 
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;  dividend        1    5[COMMON] char 
  9589 ;;  sign            1    4[COMMON] unsigned char 
  9590 ;;  counter         1    3[COMMON] unsigned char 
  9591 ;; Return value:  Size  Location     Type
  9592 ;;                  1    wreg      char 
  9593 ;; Registers used:
  9594 ;;		wreg, status,2, status,0
  9595 ;; Tracked objects:
  9596 ;;		On entry : 1F/0
  9597 ;;		On exit  : 1F/0
  9598 ;;		Unchanged: 1F/0
  9599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9600 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9603 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9604 ;;Total ram usage:        4 bytes
  9605 ;; Hardware stack levels used: 1
  9606 ;; Hardware stack levels required when called: 4
  9607 ;; This function calls:
  9608 ;;		Nothing
  9609 ;; This function is called by:
  9610 ;;		_modulo
  9611 ;; This function uses a non-reentrant model
  9612 ;;
  9613                           
  9614                           
  9615                           ;psect for function ___abmod
  9616  0E41                     ___abmod:
  9617                           
  9618                           ;incstack = 0
  9619                           ; Regs used in ___abmod: [wreg+status,2+status,0]
  9620                           ;___abmod@dividend stored from wreg
  9621  0E41  00F5               	movwf	___abmod@dividend
  9622  0E42  01F4               	clrf	___abmod@sign
  9623  0E43  1FF5               	btfss	___abmod@dividend,7
  9624  0E44  2E49               	goto	l3241
  9625  0E45  09F5               	comf	___abmod@dividend,f
  9626  0E46  0AF5               	incf	___abmod@dividend,f
  9627  0E47  01F4               	clrf	___abmod@sign
  9628  0E48  0AF4               	incf	___abmod@sign,f
  9629  0E49                     l3241:
  9630  0E49  1FF2               	btfss	___abmod@divisor,7
  9631  0E4A  2E4D               	goto	l3245
  9632  0E4B  09F2               	comf	___abmod@divisor,f
  9633  0E4C  0AF2               	incf	___abmod@divisor,f
  9634  0E4D                     l3245:
  9635  0E4D  0872               	movf	___abmod@divisor,w
  9636  0E4E  1903               	btfsc	3,2
  9637  0E4F  2E5F               	goto	l3261
  9638  0E50  01F3               	clrf	___abmod@counter
  9639  0E51                     l3249:
  9640  0E51  0AF3               	incf	___abmod@counter,f
  9641  0E52  1BF2               	btfsc	___abmod@divisor,7
  9642  0E53  2E56               	goto	l3253
  9643  0E54  35F2               	lslf	___abmod@divisor,f
  9644  0E55  2E51               	goto	l3249
  9645  0E56                     l3253:
  9646  0E56  0872               	movf	___abmod@divisor,w
  9647  0E57  0275               	subwf	___abmod@dividend,w
  9648  0E58  1C03               	skipc
  9649  0E59  2E5C               	goto	l3257
  9650  0E5A  0872               	movf	___abmod@divisor,w
  9651  0E5B  02F5               	subwf	___abmod@dividend,f
  9652  0E5C                     l3257:
  9653  0E5C  36F2               	lsrf	___abmod@divisor,f
  9654  0E5D  0BF3               	decfsz	___abmod@counter,f
  9655  0E5E  2E56               	goto	l3253
  9656  0E5F                     l3261:
  9657  0E5F  0874               	movf	___abmod@sign,w
  9658  0E60  1903               	btfsc	3,2
  9659  0E61  2E64               	goto	l3265
  9660  0E62  09F5               	comf	___abmod@dividend,f
  9661  0E63  0AF5               	incf	___abmod@dividend,f
  9662  0E64                     l3265:
  9663  0E64  0875               	movf	___abmod@dividend,w
  9664  0E65  0008               	return
  9665  0E66                     __end_of___abmod:
  9666  0E66                     __ptext21:	
  9667 ;; *************** function _read_rotary *****************
  9668 ;; Defined at:
  9669 ;;		line 249 in file "main.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;		None
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;		None
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      char 
  9676 ;; Registers used:
  9677 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9678 ;; Tracked objects:
  9679 ;;		On entry : 1F/1
  9680 ;;		On exit  : 1F/1
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9687 ;;Total ram usage:        0 bytes
  9688 ;; Hardware stack levels used: 1
  9689 ;; Hardware stack levels required when called: 4
  9690 ;; This function calls:
  9691 ;;		Nothing
  9692 ;; This function is called by:
  9693 ;;		_RotaryEncoderEventHandler
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           
  9698                           ;psect for function _read_rotary
  9699  0E66                     _read_rotary:
  9700                           
  9701                           ;main.c: 250:     static int8_t rot_enc_table[] = {0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0};;mai
      +                          n.c: 251:     static uint8_t prevNextCode = 0;;main.c: 252:     static uint16_t store=0;
      +                          ;main.c: 254:     prevNextCode <<= 2;
  9702                           
  9703                           ;incstack = 0
  9704                           ; Regs used in _read_rotary: [wreg+fsr1l+fsr1h+status,2+status,0]
  9705  0E66  35D6               	lslf	read_rotary@prevNextCode^(0+128),f
  9706  0E67  35D6               	lslf	read_rotary@prevNextCode^(0+128),f
  9707                           
  9708                           ;main.c: 255:     if (PORTBbits.RB5) prevNextCode |= 0x02;
  9709  0E68  0020               	movlb	0	; select bank0
  9710  0E69  1E8D               	btfss	13,5	;volatile
  9711  0E6A  2E6D               	goto	l554
  9712  0E6B  0021               	movlb	1	; select bank1
  9713  0E6C  14D6               	bsf	read_rotary@prevNextCode^(0+128),1
  9714  0E6D                     l554:
  9715                           
  9716                           ;main.c: 256:     if (PORTBbits.RB4) prevNextCode |= 0x01;
  9717  0E6D  0020               	movlb	0	; select bank0
  9718  0E6E  1E0D               	btfss	13,4	;volatile
  9719  0E6F  2E72               	goto	l3677
  9720  0E70  0021               	movlb	1	; select bank1
  9721  0E71  1456               	bsf	read_rotary@prevNextCode^(0+128),0
  9722  0E72                     l3677:
  9723                           
  9724                           ;main.c: 257:     prevNextCode &= 0x0f;
  9725  0E72  300F               	movlw	15
  9726  0E73  0021               	movlb	1	; select bank1
  9727  0E74  05D6               	andwf	read_rotary@prevNextCode^(0+128),f
  9728                           
  9729                           ;main.c: 260:     if (rot_enc_table[prevNextCode] ) {
  9730  0E75  0856               	movf	read_rotary@prevNextCode^(0+128),w
  9731  0E76  3EA0               	addlw	(low (read_rotary@rot_enc_table| 0))& (0+255)
  9732  0E77  0086               	movwf	6
  9733  0E78  0187               	clrf	7
  9734  0E79  0801               	movf	1,w
  9735  0E7A  1903               	btfsc	3,2
  9736  0E7B  3400               	retlw	0
  9737  0E7C  30F0               	movlw	240
  9738                           
  9739                           ;main.c: 261:         store <<= 4;
  9740  0E7D  0ECE               	swapf	read_rotary@store^(0+128),f
  9741  0E7E  0ECF               	swapf	(read_rotary@store+1)^(0+128),f
  9742  0E7F  05CF               	andwf	(read_rotary@store+1)^(0+128),f
  9743  0E80  084E               	movf	read_rotary@store^(0+128),w
  9744  0E81  390F               	andlw	15
  9745  0E82  04CF               	iorwf	(read_rotary@store+1)^(0+128),f
  9746  0E83  30F0               	movlw	240
  9747  0E84  05CE               	andwf	read_rotary@store^(0+128),f
  9748                           
  9749                           ;main.c: 262:         store |= prevNextCode;
  9750  0E85  0856               	movf	read_rotary@prevNextCode^(0+128),w
  9751  0E86  04CE               	iorwf	read_rotary@store^(0+128),f
  9752                           
  9753                           ;main.c: 265:         if ((store&0xff)==0x2b) return -1;
  9754  0E87  302B               	movlw	43
  9755  0E88  064E               	xorwf	read_rotary@store^(0+128),w
  9756  0E89  1903               	btfsc	3,2
  9757  0E8A  34FF               	retlw	255
  9758                           
  9759                           ;main.c: 266:         if ((store&0xff)==0x17) return 1;
  9760  0E8B  3017               	movlw	23
  9761  0E8C  064E               	xorwf	read_rotary@store^(0+128),w
  9762  0E8D  1903               	btfsc	3,2
  9763  0E8E  3401               	retlw	1
  9764                           
  9765                           ;main.c: 268:     return 0;
  9766  0E8F  3400               	retlw	0
  9767  0E90                     __end_of_read_rotary:
  9768  0E90                     __ptext19:	
  9769 ;; *************** function _sendCoilsConfiguration *****************
  9770 ;; Defined at:
  9771 ;;		line 323 in file "main.c"
  9772 ;; Parameters:    Size  Location     Type
  9773 ;;  pc              1    wreg     PTR struct PickupConfigu
  9774 ;;		 -> saved_pc(20), 
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;  pc              1   36[BANK0 ] PTR struct PickupConfigu
  9777 ;;		 -> saved_pc(20), 
  9778 ;; Return value:  Size  Location     Type
  9779 ;;                  1    wreg      void 
  9780 ;; Registers used:
  9781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9782 ;; Tracked objects:
  9783 ;;		On entry : 0/0
  9784 ;;		On exit  : 1F/2
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9788 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9789 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9790 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9791 ;;Total ram usage:       11 bytes
  9792 ;; Hardware stack levels used: 1
  9793 ;; Hardware stack levels required when called: 5
  9794 ;; This function calls:
  9795 ;;		_shiftOut
  9796 ;; This function is called by:
  9797 ;;		_WakeUp
  9798 ;;		_SwitchEventHandler
  9799 ;;		_RotaryEncoderEventHandler
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           
  9804                           ;psect for function _sendCoilsConfiguration
  9805  0E90                     _sendCoilsConfiguration:
  9806                           
  9807                           ;incstack = 0
  9808                           ; Regs used in _sendCoilsConfiguration: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9809                           ;sendCoilsConfiguration@pc stored from wreg
  9810  0E90  0020               	movlb	0	; select bank0
  9811  0E91  00C4               	movwf	sendCoilsConfiguration@pc
  9812                           
  9813                           ;main.c: 325:     coil_conf = 0;
  9814  0E92  30C6               	movlw	low _coil_conf
  9815  0E93  0086               	movwf	6
  9816  0E94  3000               	movlw	high _coil_conf
  9817  0E95  0087               	movwf	7
  9818  0E96  3008               	movlw	8
  9819  0E97  00BA               	movwf	??_sendCoilsConfiguration
  9820  0E98  3000               	movlw	0
  9821  0E99                     u3010:
  9822  0E99  001E               	movwi fsr1++
  9823  0E9A  0BBA               	decfsz	??_sendCoilsConfiguration,f
  9824  0E9B  2E99               	goto	u3010
  9825                           
  9826                           ;main.c: 327:     coil_conf |= general_pickup_configuration_selectors[pc->general];
  9827  0E9C  0844               	movf	sendCoilsConfiguration@pc,w
  9828  0E9D  3E03               	addlw	3
  9829  0E9E  0086               	movwf	6
  9830  0E9F  0187               	clrf	7
  9831  0EA0  0801               	movf	1,w
  9832  0EA1  00BA               	movwf	??_sendCoilsConfiguration
  9833  0EA2  305A               	movlw	low (_general_pickup_configuration_selectors| (0+32768))
  9834  0EA3  01BB               	clrf	??_sendCoilsConfiguration+1
  9835  0EA4  35BA               	lslf	??_sendCoilsConfiguration,f
  9836  0EA5  0DBB               	rlf	??_sendCoilsConfiguration+1,f
  9837  0EA6  073A               	addwf	??_sendCoilsConfiguration,w
  9838  0EA7  0084               	movwf	4
  9839  0EA8  3097               	movlw	high (_general_pickup_configuration_selectors| (0+32768))
  9840  0EA9  3D3B               	addwfc	??_sendCoilsConfiguration+1,w
  9841  0EAA  0085               	movwf	5
  9842  0EAB  3F00               	moviw [0]fsr0
  9843  0EAC  00BC               	movwf	??_sendCoilsConfiguration+2
  9844  0EAD  3F01               	moviw [1]fsr0
  9845  0EAE  00BD               	movwf	??_sendCoilsConfiguration+3
  9846  0EAF  01BE               	clrf	??_sendCoilsConfiguration+4
  9847  0EB0  01BF               	clrf	??_sendCoilsConfiguration+5
  9848  0EB1  01C0               	clrf	??_sendCoilsConfiguration+6
  9849  0EB2  01C1               	clrf	??_sendCoilsConfiguration+7
  9850  0EB3  01C2               	clrf	??_sendCoilsConfiguration+8
  9851  0EB4  01C3               	clrf	??_sendCoilsConfiguration+9
  9852  0EB5  083C               	movf	??_sendCoilsConfiguration+2,w
  9853  0EB6  0021               	movlb	1	; select bank1
  9854  0EB7  04C6               	iorwf	_coil_conf^(0+128),f
  9855  0EB8  0020               	movlb	0	; select bank0
  9856  0EB9  083D               	movf	??_sendCoilsConfiguration+3,w
  9857  0EBA  0021               	movlb	1	; select bank1
  9858  0EBB  04C7               	iorwf	(_coil_conf+1)^(0+128),f
  9859  0EBC  0020               	movlb	0	; select bank0
  9860  0EBD  083E               	movf	??_sendCoilsConfiguration+4,w
  9861  0EBE  0021               	movlb	1	; select bank1
  9862  0EBF  04C8               	iorwf	(_coil_conf+2)^(0+128),f
  9863  0EC0  0020               	movlb	0	; select bank0
  9864  0EC1  083F               	movf	??_sendCoilsConfiguration+5,w
  9865  0EC2  0021               	movlb	1	; select bank1
  9866  0EC3  04C9               	iorwf	(_coil_conf+3)^(0+128),f
  9867  0EC4  0020               	movlb	0	; select bank0
  9868  0EC5  0840               	movf	??_sendCoilsConfiguration+6,w
  9869  0EC6  0021               	movlb	1	; select bank1
  9870  0EC7  04CA               	iorwf	(_coil_conf+4)^(0+128),f
  9871  0EC8  0020               	movlb	0	; select bank0
  9872  0EC9  0841               	movf	??_sendCoilsConfiguration+7,w
  9873  0ECA  0021               	movlb	1	; select bank1
  9874  0ECB  04CB               	iorwf	(_coil_conf+5)^(0+128),f
  9875  0ECC  0020               	movlb	0	; select bank0
  9876  0ECD  0842               	movf	??_sendCoilsConfiguration+8,w
  9877  0ECE  0021               	movlb	1	; select bank1
  9878  0ECF  04CC               	iorwf	(_coil_conf+6)^(0+128),f
  9879  0ED0  0020               	movlb	0	; select bank0
  9880  0ED1  0843               	movf	??_sendCoilsConfiguration+9,w
  9881  0ED2  0021               	movlb	1	; select bank1
  9882  0ED3  04CD               	iorwf	(_coil_conf+7)^(0+128),f
  9883                           
  9884                           ;main.c: 328:     coil_conf |= ((uint64_t)pickup_configuration_selectors[pc->bridge]) <<
      +                           12;
  9885  0ED4  0020               	movlb	0	; select bank0
  9886  0ED5  0844               	movf	sendCoilsConfiguration@pc,w
  9887  0ED6  3E02               	addlw	2
  9888  0ED7  0086               	movwf	6
  9889  0ED8  0801               	movf	1,w
  9890  0ED9  00BA               	movwf	??_sendCoilsConfiguration
  9891  0EDA  3088               	movlw	low (_pickup_configuration_selectors| (0+32768))
  9892  0EDB  01BB               	clrf	??_sendCoilsConfiguration+1
  9893  0EDC  35BA               	lslf	??_sendCoilsConfiguration,f
  9894  0EDD  0DBB               	rlf	??_sendCoilsConfiguration+1,f
  9895  0EDE  073A               	addwf	??_sendCoilsConfiguration,w
  9896  0EDF  0084               	movwf	4
  9897  0EE0  3097               	movlw	high (_pickup_configuration_selectors| (0+32768))
  9898  0EE1  3D3B               	addwfc	??_sendCoilsConfiguration+1,w
  9899  0EE2  0085               	movwf	5
  9900  0EE3  3F00               	moviw [0]fsr0
  9901  0EE4  00BC               	movwf	??_sendCoilsConfiguration+2
  9902  0EE5  3F01               	moviw [1]fsr0
  9903  0EE6  00BD               	movwf	??_sendCoilsConfiguration+3
  9904  0EE7  300C               	movlw	12
  9905  0EE8  01BE               	clrf	??_sendCoilsConfiguration+4
  9906  0EE9  01BF               	clrf	??_sendCoilsConfiguration+5
  9907  0EEA  01C0               	clrf	??_sendCoilsConfiguration+6
  9908  0EEB  01C1               	clrf	??_sendCoilsConfiguration+7
  9909  0EEC  01C2               	clrf	??_sendCoilsConfiguration+8
  9910  0EED  01C3               	clrf	??_sendCoilsConfiguration+9
  9911  0EEE                     u3025:
  9912  0EEE  0020               	movlb	0	; select bank0
  9913  0EEF  35BC               	lslf	??_sendCoilsConfiguration+2,f
  9914  0EF0  0DBD               	rlf	??_sendCoilsConfiguration+3,f
  9915  0EF1  0DBE               	rlf	??_sendCoilsConfiguration+4,f
  9916  0EF2  0DBF               	rlf	??_sendCoilsConfiguration+5,f
  9917  0EF3  0DC0               	rlf	??_sendCoilsConfiguration+6,f
  9918  0EF4  0DC1               	rlf	??_sendCoilsConfiguration+7,f
  9919  0EF5  0DC2               	rlf	??_sendCoilsConfiguration+8,f
  9920  0EF6  0DC3               	rlf	??_sendCoilsConfiguration+9,f
  9921  0EF7  0B89               	decfsz	9,f
  9922  0EF8  2EEE               	goto	u3025
  9923  0EF9  0020               	movlb	0	; select bank0
  9924  0EFA  083C               	movf	??_sendCoilsConfiguration+2,w
  9925  0EFB  0021               	movlb	1	; select bank1
  9926  0EFC  04C6               	iorwf	_coil_conf^(0+128),f
  9927  0EFD  0020               	movlb	0	; select bank0
  9928  0EFE  083D               	movf	??_sendCoilsConfiguration+3,w
  9929  0EFF  0021               	movlb	1	; select bank1
  9930  0F00  04C7               	iorwf	(_coil_conf+1)^(0+128),f
  9931  0F01  0020               	movlb	0	; select bank0
  9932  0F02  083E               	movf	??_sendCoilsConfiguration+4,w
  9933  0F03  0021               	movlb	1	; select bank1
  9934  0F04  04C8               	iorwf	(_coil_conf+2)^(0+128),f
  9935  0F05  0020               	movlb	0	; select bank0
  9936  0F06  083F               	movf	??_sendCoilsConfiguration+5,w
  9937  0F07  0021               	movlb	1	; select bank1
  9938  0F08  04C9               	iorwf	(_coil_conf+3)^(0+128),f
  9939  0F09  0020               	movlb	0	; select bank0
  9940  0F0A  0840               	movf	??_sendCoilsConfiguration+6,w
  9941  0F0B  0021               	movlb	1	; select bank1
  9942  0F0C  04CA               	iorwf	(_coil_conf+4)^(0+128),f
  9943  0F0D  0020               	movlb	0	; select bank0
  9944  0F0E  0841               	movf	??_sendCoilsConfiguration+7,w
  9945  0F0F  0021               	movlb	1	; select bank1
  9946  0F10  04CB               	iorwf	(_coil_conf+5)^(0+128),f
  9947  0F11  0020               	movlb	0	; select bank0
  9948  0F12  0842               	movf	??_sendCoilsConfiguration+8,w
  9949  0F13  0021               	movlb	1	; select bank1
  9950  0F14  04CC               	iorwf	(_coil_conf+6)^(0+128),f
  9951  0F15  0020               	movlb	0	; select bank0
  9952  0F16  0843               	movf	??_sendCoilsConfiguration+9,w
  9953  0F17  0021               	movlb	1	; select bank1
  9954  0F18  04CD               	iorwf	(_coil_conf+7)^(0+128),f
  9955                           
  9956                           ;main.c: 329:     coil_conf |= ((uint64_t)pickup_configuration_selectors[pc->middle]) <<
      +                           24;
  9957  0F19  0020               	movlb	0	; select bank0
  9958  0F1A  0A44               	incf	sendCoilsConfiguration@pc,w
  9959  0F1B  0086               	movwf	6
  9960  0F1C  0187               	clrf	7
  9961  0F1D  0801               	movf	1,w
  9962  0F1E  00BA               	movwf	??_sendCoilsConfiguration
  9963  0F1F  3088               	movlw	low (_pickup_configuration_selectors| (0+32768))
  9964  0F20  01BB               	clrf	??_sendCoilsConfiguration+1
  9965  0F21  35BA               	lslf	??_sendCoilsConfiguration,f
  9966  0F22  0DBB               	rlf	??_sendCoilsConfiguration+1,f
  9967  0F23  073A               	addwf	??_sendCoilsConfiguration,w
  9968  0F24  0084               	movwf	4
  9969  0F25  3097               	movlw	high (_pickup_configuration_selectors| (0+32768))
  9970  0F26  3D3B               	addwfc	??_sendCoilsConfiguration+1,w
  9971  0F27  0085               	movwf	5
  9972  0F28  3F00               	moviw [0]fsr0
  9973  0F29  00BC               	movwf	??_sendCoilsConfiguration+2
  9974  0F2A  3F01               	moviw [1]fsr0
  9975  0F2B  00BD               	movwf	??_sendCoilsConfiguration+3
  9976  0F2C  01BE               	clrf	??_sendCoilsConfiguration+4
  9977  0F2D  01BF               	clrf	??_sendCoilsConfiguration+5
  9978  0F2E  01C0               	clrf	??_sendCoilsConfiguration+6
  9979  0F2F  01C1               	clrf	??_sendCoilsConfiguration+7
  9980  0F30  01C2               	clrf	??_sendCoilsConfiguration+8
  9981  0F31  01C3               	clrf	??_sendCoilsConfiguration+9
  9982  0F32  0840               	movf	??_sendCoilsConfiguration+6,w
  9983  0F33  00C3               	movwf	??_sendCoilsConfiguration+9
  9984  0F34  083F               	movf	??_sendCoilsConfiguration+5,w
  9985  0F35  00C2               	movwf	??_sendCoilsConfiguration+8
  9986  0F36  083E               	movf	??_sendCoilsConfiguration+4,w
  9987  0F37  00C1               	movwf	??_sendCoilsConfiguration+7
  9988  0F38  083D               	movf	??_sendCoilsConfiguration+3,w
  9989  0F39  00C0               	movwf	??_sendCoilsConfiguration+6
  9990  0F3A  083C               	movf	??_sendCoilsConfiguration+2,w
  9991  0F3B  00BF               	movwf	??_sendCoilsConfiguration+5
  9992  0F3C  01BE               	clrf	??_sendCoilsConfiguration+4
  9993  0F3D  01BD               	clrf	??_sendCoilsConfiguration+3
  9994  0F3E  01BC               	clrf	??_sendCoilsConfiguration+2
  9995  0F3F  083C               	movf	??_sendCoilsConfiguration+2,w
  9996  0F40  0021               	movlb	1	; select bank1
  9997  0F41  04C6               	iorwf	_coil_conf^(0+128),f
  9998  0F42  0020               	movlb	0	; select bank0
  9999  0F43  083D               	movf	??_sendCoilsConfiguration+3,w
 10000  0F44  0021               	movlb	1	; select bank1
 10001  0F45  04C7               	iorwf	(_coil_conf+1)^(0+128),f
 10002  0F46  0020               	movlb	0	; select bank0
 10003  0F47  083E               	movf	??_sendCoilsConfiguration+4,w
 10004  0F48  0021               	movlb	1	; select bank1
 10005  0F49  04C8               	iorwf	(_coil_conf+2)^(0+128),f
 10006  0F4A  0020               	movlb	0	; select bank0
 10007  0F4B  083F               	movf	??_sendCoilsConfiguration+5,w
 10008  0F4C  0021               	movlb	1	; select bank1
 10009  0F4D  04C9               	iorwf	(_coil_conf+3)^(0+128),f
 10010  0F4E  0020               	movlb	0	; select bank0
 10011  0F4F  0840               	movf	??_sendCoilsConfiguration+6,w
 10012  0F50  0021               	movlb	1	; select bank1
 10013  0F51  04CA               	iorwf	(_coil_conf+4)^(0+128),f
 10014  0F52  0020               	movlb	0	; select bank0
 10015  0F53  0841               	movf	??_sendCoilsConfiguration+7,w
 10016  0F54  0021               	movlb	1	; select bank1
 10017  0F55  04CB               	iorwf	(_coil_conf+5)^(0+128),f
 10018  0F56  0020               	movlb	0	; select bank0
 10019  0F57  0842               	movf	??_sendCoilsConfiguration+8,w
 10020  0F58  0021               	movlb	1	; select bank1
 10021  0F59  04CC               	iorwf	(_coil_conf+6)^(0+128),f
 10022  0F5A  0020               	movlb	0	; select bank0
 10023  0F5B  0843               	movf	??_sendCoilsConfiguration+9,w
 10024  0F5C  0021               	movlb	1	; select bank1
 10025  0F5D  04CD               	iorwf	(_coil_conf+7)^(0+128),f
 10026                           
 10027                           ;main.c: 330:     coil_conf |= ((uint64_t)pickup_configuration_selectors[pc->neck]) << 3
      +                          6;
 10028  0F5E  0020               	movlb	0	; select bank0
 10029  0F5F  0844               	movf	sendCoilsConfiguration@pc,w
 10030  0F60  0086               	movwf	6
 10031  0F61  0801               	movf	1,w
 10032  0F62  00BA               	movwf	??_sendCoilsConfiguration
 10033  0F63  3088               	movlw	low (_pickup_configuration_selectors| (0+32768))
 10034  0F64  01BB               	clrf	??_sendCoilsConfiguration+1
 10035  0F65  35BA               	lslf	??_sendCoilsConfiguration,f
 10036  0F66  0DBB               	rlf	??_sendCoilsConfiguration+1,f
 10037  0F67  073A               	addwf	??_sendCoilsConfiguration,w
 10038  0F68  0084               	movwf	4
 10039  0F69  3097               	movlw	high (_pickup_configuration_selectors| (0+32768))
 10040  0F6A  3D3B               	addwfc	??_sendCoilsConfiguration+1,w
 10041  0F6B  0085               	movwf	5
 10042  0F6C  3F00               	moviw [0]fsr0
 10043  0F6D  00BC               	movwf	??_sendCoilsConfiguration+2
 10044  0F6E  3F01               	moviw [1]fsr0
 10045  0F6F  00BD               	movwf	??_sendCoilsConfiguration+3
 10046  0F70  3024               	movlw	36
 10047  0F71  01BE               	clrf	??_sendCoilsConfiguration+4
 10048  0F72  01BF               	clrf	??_sendCoilsConfiguration+5
 10049  0F73  01C0               	clrf	??_sendCoilsConfiguration+6
 10050  0F74  01C1               	clrf	??_sendCoilsConfiguration+7
 10051  0F75  01C2               	clrf	??_sendCoilsConfiguration+8
 10052  0F76  01C3               	clrf	??_sendCoilsConfiguration+9
 10053  0F77                     u3035:
 10054  0F77  0020               	movlb	0	; select bank0
 10055  0F78  35BC               	lslf	??_sendCoilsConfiguration+2,f
 10056  0F79  0DBD               	rlf	??_sendCoilsConfiguration+3,f
 10057  0F7A  0DBE               	rlf	??_sendCoilsConfiguration+4,f
 10058  0F7B  0DBF               	rlf	??_sendCoilsConfiguration+5,f
 10059  0F7C  0DC0               	rlf	??_sendCoilsConfiguration+6,f
 10060  0F7D  0DC1               	rlf	??_sendCoilsConfiguration+7,f
 10061  0F7E  0DC2               	rlf	??_sendCoilsConfiguration+8,f
 10062  0F7F  0DC3               	rlf	??_sendCoilsConfiguration+9,f
 10063  0F80  0B89               	decfsz	9,f
 10064  0F81  2F77               	goto	u3035
 10065  0F82  0020               	movlb	0	; select bank0
 10066  0F83  083C               	movf	??_sendCoilsConfiguration+2,w
 10067  0F84  0021               	movlb	1	; select bank1
 10068  0F85  04C6               	iorwf	_coil_conf^(0+128),f
 10069  0F86  0020               	movlb	0	; select bank0
 10070  0F87  083D               	movf	??_sendCoilsConfiguration+3,w
 10071  0F88  0021               	movlb	1	; select bank1
 10072  0F89  04C7               	iorwf	(_coil_conf+1)^(0+128),f
 10073  0F8A  0020               	movlb	0	; select bank0
 10074  0F8B  083E               	movf	??_sendCoilsConfiguration+4,w
 10075  0F8C  0021               	movlb	1	; select bank1
 10076  0F8D  04C8               	iorwf	(_coil_conf+2)^(0+128),f
 10077  0F8E  0020               	movlb	0	; select bank0
 10078  0F8F  083F               	movf	??_sendCoilsConfiguration+5,w
 10079  0F90  0021               	movlb	1	; select bank1
 10080  0F91  04C9               	iorwf	(_coil_conf+3)^(0+128),f
 10081  0F92  0020               	movlb	0	; select bank0
 10082  0F93  0840               	movf	??_sendCoilsConfiguration+6,w
 10083  0F94  0021               	movlb	1	; select bank1
 10084  0F95  04CA               	iorwf	(_coil_conf+4)^(0+128),f
 10085  0F96  0020               	movlb	0	; select bank0
 10086  0F97  0841               	movf	??_sendCoilsConfiguration+7,w
 10087  0F98  0021               	movlb	1	; select bank1
 10088  0F99  04CB               	iorwf	(_coil_conf+5)^(0+128),f
 10089  0F9A  0020               	movlb	0	; select bank0
 10090  0F9B  0842               	movf	??_sendCoilsConfiguration+8,w
 10091  0F9C  0021               	movlb	1	; select bank1
 10092  0F9D  04CC               	iorwf	(_coil_conf+6)^(0+128),f
 10093  0F9E  0020               	movlb	0	; select bank0
 10094  0F9F  0843               	movf	??_sendCoilsConfiguration+9,w
 10095  0FA0  0021               	movlb	1	; select bank1
 10096  0FA1  04CD               	iorwf	(_coil_conf+7)^(0+128),f
 10097                           
 10098                           ;main.c: 331:     shiftOut(0, coil_conf);
 10099  0FA2  0846               	movf	_coil_conf^(0+128),w
 10100  0FA3  00F2               	movwf	shiftOut@val
 10101  0FA4  0847               	movf	(_coil_conf+1)^(0+128),w
 10102  0FA5  00F3               	movwf	shiftOut@val+1
 10103  0FA6  0848               	movf	(_coil_conf+2)^(0+128),w
 10104  0FA7  00F4               	movwf	shiftOut@val+2
 10105  0FA8  0849               	movf	(_coil_conf+3)^(0+128),w
 10106  0FA9  00F5               	movwf	shiftOut@val+3
 10107  0FAA  084A               	movf	(_coil_conf+4)^(0+128),w
 10108  0FAB  00F6               	movwf	shiftOut@val+4
 10109  0FAC  084B               	movf	(_coil_conf+5)^(0+128),w
 10110  0FAD  00F7               	movwf	shiftOut@val+5
 10111  0FAE  084C               	movf	(_coil_conf+6)^(0+128),w
 10112  0FAF  00F8               	movwf	shiftOut@val+6
 10113  0FB0  084D               	movf	(_coil_conf+7)^(0+128),w
 10114  0FB1  00F9               	movwf	shiftOut@val+7
 10115  0FB2  3000               	movlw	0
 10116  0FB3  318B  2B13         	ljmp	_shiftOut
 10117  0FB5                     __end_of_sendCoilsConfiguration:
 10118  0FB5                     __ptext16:	
 10119 ;; *************** function _IOCAF0_SetInterruptHandler *****************
 10120 ;; Defined at:
 10121 ;;		line 164 in file "mcc_generated_files/pin_manager.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
 10124 ;;		 -> Button_Callback(1), IOCAF0_DefaultInterruptHandler(1), 
 10125 ;; Auto vars:     Size  Location     Type
 10126 ;;		None
 10127 ;; Return value:  Size  Location     Type
 10128 ;;                  1    wreg      void 
 10129 ;; Registers used:
 10130 ;;		wreg
 10131 ;; Tracked objects:
 10132 ;;		On entry : 19/1
 10133 ;;		On exit  : 1F/1
 10134 ;;		Unchanged: 0/0
 10135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10140 ;;Total ram usage:        2 bytes
 10141 ;; Hardware stack levels used: 1
 10142 ;; Hardware stack levels required when called: 4
 10143 ;; This function calls:
 10144 ;;		Nothing
 10145 ;; This function is called by:
 10146 ;;		_PIN_MANAGER_Initialize
 10147 ;;		_main
 10148 ;; This function uses a non-reentrant model
 10149 ;;
 10150                           
 10151                           
 10152                           ;psect for function _IOCAF0_SetInterruptHandler
 10153  0FB5                     _IOCAF0_SetInterruptHandler:
 10154                           
 10155                           ;mcc_generated_files/pin_manager.c: 165:     IOCAF0_InterruptHandler = InterruptHandler;
 10156                           
 10157                           ;incstack = 0
 10158                           ; Regs used in _IOCAF0_SetInterruptHandler: [wreg]
 10159  0FB5  0873               	movf	IOCAF0_SetInterruptHandler@InterruptHandler+1,w
 10160  0FB6  0021               	movlb	1	; select bank1
 10161  0FB7  00E0               	movwf	(_IOCAF0_InterruptHandler+1)^(0+128)
 10162  0FB8  0872               	movf	IOCAF0_SetInterruptHandler@InterruptHandler,w
 10163  0FB9  00DF               	movwf	_IOCAF0_InterruptHandler^(0+128)
 10164  0FBA  0008               	return
 10165  0FBB                     __end_of_IOCAF0_SetInterruptHandler:
 10166  0FBB                     __ptext13:	
 10167 ;; *************** function _TMR1_SetInterruptHandler *****************
 10168 ;; Defined at:
 10169 ;;		line 171 in file "mcc_generated_files/tmr1.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
 10172 ;;		 -> TMR1_CallBack(1), TMR1_DefaultInterruptHandler(1), 
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;		None
 10175 ;; Return value:  Size  Location     Type
 10176 ;;                  1    wreg      void 
 10177 ;; Registers used:
 10178 ;;		wreg
 10179 ;; Tracked objects:
 10180 ;;		On entry : 1E/0
 10181 ;;		On exit  : 1F/1
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10188 ;;Total ram usage:        2 bytes
 10189 ;; Hardware stack levels used: 1
 10190 ;; Hardware stack levels required when called: 4
 10191 ;; This function calls:
 10192 ;;		Nothing
 10193 ;; This function is called by:
 10194 ;;		_TMR1_Initialize
 10195 ;;		_main
 10196 ;; This function uses a non-reentrant model
 10197 ;;
 10198                           
 10199                           
 10200                           ;psect for function _TMR1_SetInterruptHandler
 10201  0FBB                     _TMR1_SetInterruptHandler:
 10202                           
 10203                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
 10204                           
 10205                           ;incstack = 0
 10206                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 10207  0FBB  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 10208  0FBC  0021               	movlb	1	; select bank1
 10209  0FBD  00DC               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 10210  0FBE  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 10211  0FBF  00DB               	movwf	_TMR1_InterruptHandler^(0+128)
 10212  0FC0  0008               	return
 10213  0FC1                     __end_of_TMR1_SetInterruptHandler:
 10214  0FC1                     __ptext10:	
 10215 ;; *************** function _SYSTEM_Initialize *****************
 10216 ;; Defined at:
 10217 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;		None
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;		None
 10222 ;; Return value:  Size  Location     Type
 10223 ;;                  1    wreg      void 
 10224 ;; Registers used:
 10225 ;;		wreg, status,2, status,0, pclath, cstack
 10226 ;; Tracked objects:
 10227 ;;		On entry : B1F/0
 10228 ;;		On exit  : 1F/0
 10229 ;;		Unchanged: 0/0
 10230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10235 ;;Total ram usage:        0 bytes
 10236 ;; Hardware stack levels used: 1
 10237 ;; Hardware stack levels required when called: 6
 10238 ;; This function calls:
 10239 ;;		_OSCILLATOR_Initialize
 10240 ;;		_PIN_MANAGER_Initialize
 10241 ;;		_SPI_Initialize
 10242 ;;		_TMR1_Initialize
 10243 ;;		_WDT_Initialize
 10244 ;; This function is called by:
 10245 ;;		_main
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           
 10250                           ;psect for function _SYSTEM_Initialize
 10251  0FC1                     _SYSTEM_Initialize:
 10252                           
 10253                           ;mcc_generated_files/mcc.c: 53:     SPI_Initialize();
 10254                           
 10255                           ;incstack = 0
 10256                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10257  0FC1  27D2               	fcall	_SPI_Initialize
 10258                           
 10259                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10260  0FC2  3189  21C8  318C   	fcall	_PIN_MANAGER_Initialize
 10261                           
 10262                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10263  0FC5  27CA  318C         	fcall	_OSCILLATOR_Initialize
 10264                           
 10265                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
 10266  0FC7  27F9               	fcall	_WDT_Initialize
 10267                           
 10268                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 10269  0FC8  3188  28AD         	ljmp	l3377
 10270  0FCA                     __end_of_SYSTEM_Initialize:
 10271  0FCA                     __ptext17:	
 10272 ;; *************** function _OSCILLATOR_Initialize *****************
 10273 ;; Defined at:
 10274 ;;		line 60 in file "mcc_generated_files/mcc.c"
 10275 ;; Parameters:    Size  Location     Type
 10276 ;;		None
 10277 ;; Auto vars:     Size  Location     Type
 10278 ;;		None
 10279 ;; Return value:  Size  Location     Type
 10280 ;;                  1    wreg      void 
 10281 ;; Registers used:
 10282 ;;		wreg, status,2
 10283 ;; Tracked objects:
 10284 ;;		On entry : 1F/1C
 10285 ;;		On exit  : 1F/4
 10286 ;;		Unchanged: 0/0
 10287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10292 ;;Total ram usage:        0 bytes
 10293 ;; Hardware stack levels used: 1
 10294 ;; Hardware stack levels required when called: 4
 10295 ;; This function calls:
 10296 ;;		Nothing
 10297 ;; This function is called by:
 10298 ;;		_SYSTEM_Initialize
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           
 10303                           ;psect for function _OSCILLATOR_Initialize
 10304  0FCA                     _OSCILLATOR_Initialize:
 10305                           
 10306                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x68;
 10307                           
 10308                           ;incstack = 0
 10309                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10310  0FCA  3068               	movlw	104
 10311  0FCB  0021               	movlb	1	; select bank1
 10312  0FCC  0099               	movwf	25	;volatile
 10313                           
 10314                           ;mcc_generated_files/mcc.c: 65:     OSCSTAT = 0x00;
 10315  0FCD  019A               	clrf	26	;volatile
 10316                           
 10317                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
 10318  0FCE  0198               	clrf	24	;volatile
 10319                           
 10320                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
 10321  0FCF  0024               	movlb	4	; select bank4
 10322  0FD0  019D               	clrf	29	;volatile
 10323  0FD1  0008               	return
 10324  0FD2                     __end_of_OSCILLATOR_Initialize:
 10325  0FD2                     __ptext14:	
 10326 ;; *************** function _SPI_Initialize *****************
 10327 ;; Defined at:
 10328 ;;		line 63 in file "mcc_generated_files/spi.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;		None
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;		None
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1    wreg      void 
 10335 ;; Registers used:
 10336 ;;		wreg, status,2
 10337 ;; Tracked objects:
 10338 ;;		On entry : B1F/0
 10339 ;;		On exit  : B1F/4
 10340 ;;		Unchanged: B00/0
 10341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10346 ;;Total ram usage:        0 bytes
 10347 ;; Hardware stack levels used: 1
 10348 ;; Hardware stack levels required when called: 4
 10349 ;; This function calls:
 10350 ;;		Nothing
 10351 ;; This function is called by:
 10352 ;;		_SYSTEM_Initialize
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           
 10356                           
 10357                           ;psect for function _SPI_Initialize
 10358  0FD2                     _SPI_Initialize:
 10359                           
 10360                           ;mcc_generated_files/spi.c: 66:     SSPCLKPPS = 14;
 10361                           
 10362                           ;incstack = 0
 10363                           ; Regs used in _SPI_Initialize: [wreg+status,2]
 10364  0FD2  300E               	movlw	14
 10365  0FD3  003C               	movlb	28	; select bank28
 10366  0FD4  00A0               	movwf	32	;volatile
 10367                           
 10368                           ;mcc_generated_files/spi.c: 67:     SSPDATPPS = 3;
 10369  0FD5  3003               	movlw	3
 10370  0FD6  00A1               	movwf	33	;volatile
 10371                           
 10372                           ;mcc_generated_files/spi.c: 68:     RB6PPS = 18;
 10373  0FD7  3012               	movlw	18
 10374  0FD8  003D               	movlb	29	; select bank29
 10375  0FD9  009E               	movwf	30	;volatile
 10376                           
 10377                           ;mcc_generated_files/spi.c: 69:     RB7PPS = 20;
 10378  0FDA  3014               	movlw	20
 10379  0FDB  009F               	movwf	31	;volatile
 10380                           
 10381                           ;mcc_generated_files/spi.c: 71:     SSP1STAT = 0x40;
 10382  0FDC  3040               	movlw	64
 10383  0FDD  0024               	movlb	4	; select bank4
 10384  0FDE  0094               	movwf	20	;volatile
 10385                           
 10386                           ;mcc_generated_files/spi.c: 72:     SSP1CON1 = 0x00;
 10387  0FDF  0195               	clrf	21	;volatile
 10388                           
 10389                           ;mcc_generated_files/spi.c: 73:     SSP1ADD = 0x01;
 10390  0FE0  3001               	movlw	1
 10391  0FE1  0092               	movwf	18	;volatile
 10392                           
 10393                           ;mcc_generated_files/spi.c: 74:     TRISBbits.TRISB6 = 0;
 10394  0FE2  0021               	movlb	1	; select bank1
 10395  0FE3  130D               	bcf	13,6	;volatile
 10396                           
 10397                           ;mcc_generated_files/spi.c: 75:     SSP1CON1bits.SSPEN = 0;
 10398  0FE4  0024               	movlb	4	; select bank4
 10399  0FE5  1295               	bcf	21,5	;volatile
 10400  0FE6  0008               	return
 10401  0FE7                     __end_of_SPI_Initialize:
 10402  0FE7                     __ptext1:	
 10403 ;; *************** function _spi_master_open *****************
 10404 ;; Defined at:
 10405 ;;		line 56 in file "mcc_generated_files/drivers/spi_master.c"
 10406 ;; Parameters:    Size  Location     Type
 10407 ;;  config          1    wreg     enum E377
 10408 ;; Auto vars:     Size  Location     Type
 10409 ;;  config          1    8[COMMON] enum E377
 10410 ;; Return value:  Size  Location     Type
 10411 ;;                  1    wreg      _Bool 
 10412 ;; Registers used:
 10413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10414 ;; Tracked objects:
 10415 ;;		On entry : 1F/1
 10416 ;;		On exit  : 1A/0
 10417 ;;		Unchanged: 0/0
 10418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10421 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10422 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10423 ;;Total ram usage:        3 bytes
 10424 ;; Hardware stack levels used: 1
 10425 ;; Hardware stack levels required when called: 6
 10426 ;; This function calls:
 10427 ;;		_EINK_open
 10428 ;; This function is called by:
 10429 ;;		_main
 10430 ;; This function uses a non-reentrant model
 10431 ;;
 10432                           
 10433                           
 10434                           ;psect for function _spi_master_open
 10435  0FE7                     _spi_master_open:
 10436                           
 10437                           ;incstack = 0
 10438                           ; Regs used in _spi_master_open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10439                           ;spi_master_open@config stored from wreg
 10440  0FE7  00F8               	movwf	spi_master_open@config
 10441                           
 10442                           ;mcc_generated_files/drivers/spi_master.c: 57:     switch(config){
 10443  0FE8  2FEB               	goto	l3711
 10444  0FE9                     l3701:
 10445                           
 10446                           ;mcc_generated_files/drivers/spi_master.c: 59:             return EINK_open();
 10447  0FE9  2FFD               	ljmp	l3305
 10448  0FEA                     l3705:
 10449                           
 10450                           ;mcc_generated_files/drivers/spi_master.c: 61:             return 0;
 10451  0FEA  3400               	retlw	0
 10452  0FEB                     l3711:
 10453  0FEB  0878               	movf	spi_master_open@config,w
 10454  0FEC  00F6               	movwf	??_spi_master_open
 10455  0FED  01F7               	clrf	??_spi_master_open+1
 10456                           
 10457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10458                           ; Switch size 1, requested type "speed"
 10459                           ; Number of cases is 1, Range of values is 0 to 0
 10460                           ; switch strategies available:
 10461                           ; Name         Instructions Cycles
 10462                           ; simple_byte            4     3 (average)
 10463                           ; direct_byte            8     6 (fixed)
 10464                           ; jumptable            260     6 (fixed)
 10465                           ;	Chosen strategy is simple_byte
 10466  0FEE  0877               	movf	??_spi_master_open+1,w
 10467  0FEF  3A00               	xorlw	0	; case 0
 10468  0FF0  1903               	skipnz
 10469  0FF1  2FF3               	goto	l4865
 10470  0FF2  2FEA               	goto	l3705
 10471  0FF3                     l4865:
 10472                           
 10473                           ; Switch size 1, requested type "speed"
 10474                           ; Number of cases is 1, Range of values is 0 to 0
 10475                           ; switch strategies available:
 10476                           ; Name         Instructions Cycles
 10477                           ; simple_byte            4     3 (average)
 10478                           ; direct_byte            8     6 (fixed)
 10479                           ; jumptable            260     6 (fixed)
 10480                           ;	Chosen strategy is simple_byte
 10481  0FF3  0876               	movf	??_spi_master_open,w
 10482  0FF4  3A00               	xorlw	0	; case 0
 10483  0FF5  1903               	skipnz
 10484  0FF6  2FE9               	goto	l3701
 10485  0FF7  2FEA               	goto	l3705
 10486  0FF8  0008               	return
 10487  0FF9                     __end_of_spi_master_open:
 10488  0FF9                     __ptext11:	
 10489 ;; *************** function _WDT_Initialize *****************
 10490 ;; Defined at:
 10491 ;;		line 72 in file "mcc_generated_files/mcc.c"
 10492 ;; Parameters:    Size  Location     Type
 10493 ;;		None
 10494 ;; Auto vars:     Size  Location     Type
 10495 ;;		None
 10496 ;; Return value:  Size  Location     Type
 10497 ;;                  1    wreg      void 
 10498 ;; Registers used:
 10499 ;;		wreg
 10500 ;; Tracked objects:
 10501 ;;		On entry : 1F/4
 10502 ;;		On exit  : 1F/1
 10503 ;;		Unchanged: 0/0
 10504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10509 ;;Total ram usage:        0 bytes
 10510 ;; Hardware stack levels used: 1
 10511 ;; Hardware stack levels required when called: 4
 10512 ;; This function calls:
 10513 ;;		Nothing
 10514 ;; This function is called by:
 10515 ;;		_SYSTEM_Initialize
 10516 ;; This function uses a non-reentrant model
 10517 ;;
 10518                           
 10519                           
 10520                           ;psect for function _WDT_Initialize
 10521  0FF9                     _WDT_Initialize:
 10522                           
 10523                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
 10524                           
 10525                           ;incstack = 0
 10526                           ; Regs used in _WDT_Initialize: [wreg]
 10527  0FF9  3016               	movlw	22
 10528  0FFA  0021               	movlb	1	; select bank1
 10529  0FFB  0097               	movwf	23	;volatile
 10530  0FFC  0008               	return
 10531  0FFD                     __end_of_WDT_Initialize:
 10532  0FFD                     __ptext2:	
 10533 ;; *************** function _EINK_open *****************
 10534 ;; Defined at:
 10535 ;;		line 41 in file "mcc_generated_files/drivers/spi_master.c"
 10536 ;; Parameters:    Size  Location     Type
 10537 ;;		None
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;		None
 10540 ;; Return value:  Size  Location     Type
 10541 ;;                  1    wreg      _Bool 
 10542 ;; Registers used:
 10543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10544 ;; Tracked objects:
 10545 ;;		On entry : 1F/1
 10546 ;;		On exit  : 1F/4
 10547 ;;		Unchanged: 0/0
 10548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;Total ram usage:        0 bytes
 10554 ;; Hardware stack levels used: 1
 10555 ;; Hardware stack levels required when called: 5
 10556 ;; This function calls:
 10557 ;;		_SPI_Open
 10558 ;; This function is called by:
 10559 ;;		_spi_master_open
 10560 ;; This function uses a non-reentrant model
 10561 ;;
 10562                           
 10563                           
 10564                           ;psect for function _EINK_open
 10565  0FFD                     _EINK_open:
 10566  0FFD                     l3305:	
 10567                           ;incstack = 0
 10568                           ; Regs used in _EINK_open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10569                           
 10570                           
 10571                           ;mcc_generated_files/drivers/spi_master.c: 42:     return SPI_Open(EINK_CONFIG);
 10572  0FFD  3000               	movlw	0
 10573  0FFE  318A  2A49         	ljmp	_SPI_Open
 10574  1000                     __end_of_EINK_open:
 10575                           
 10576                           	psect	text3
 10577  0A49                     __ptext3:	
 10578 ;; *************** function _SPI_Open *****************
 10579 ;; Defined at:
 10580 ;;		line 78 in file "mcc_generated_files/spi.c"
 10581 ;; Parameters:    Size  Location     Type
 10582 ;;  spiUniqueCon    1    wreg     enum E355
 10583 ;; Auto vars:     Size  Location     Type
 10584 ;;  spiUniqueCon    1    5[COMMON] enum E355
 10585 ;; Return value:  Size  Location     Type
 10586 ;;                  1    wreg      _Bool 
 10587 ;; Registers used:
 10588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 10589 ;; Tracked objects:
 10590 ;;		On entry : 1F/1
 10591 ;;		On exit  : 1F/4
 10592 ;;		Unchanged: 0/0
 10593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10596 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10597 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10598 ;;Total ram usage:        4 bytes
 10599 ;; Hardware stack levels used: 1
 10600 ;; Hardware stack levels required when called: 4
 10601 ;; This function calls:
 10602 ;;		Nothing
 10603 ;; This function is called by:
 10604 ;;		_EINK_open
 10605 ;; This function uses a non-reentrant model
 10606 ;;
 10607                           
 10608                           
 10609                           ;psect for function _SPI_Open
 10610  0A49                     _SPI_Open:
 10611                           
 10612                           ;incstack = 0
 10613                           ; Regs used in _SPI_Open: [wreg-fsr0h+status,2+status,0+pclath]
 10614                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 10615  0A49  00F5               	movwf	SPI_Open@spiUniqueConfiguration
 10616                           
 10617                           ;mcc_generated_files/spi.c: 78: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 79: {;mcc_generated_files/spi.c: 80:     if(!SSP1CON1bits.SSPEN)
 10618  0A4A  0024               	movlb	4	; select bank4
 10619  0A4B  1A95               	btfsc	21,5	;volatile
 10620  0A4C  3400               	retlw	0
 10621                           
 10622                           ;mcc_generated_files/spi.c: 81:     {;mcc_generated_files/spi.c: 82:         SSP1STAT = 
      +                          spi_configuration[spiUniqueConfiguration].stat;
 10623  0A4D  0875               	movf	SPI_Open@spiUniqueConfiguration,w
 10624  0A4E  00F2               	movwf	??_SPI_Open
 10625  0A4F  3024               	movlw	low ((_spi_configuration+1)| (0+32768))
 10626  0A50  01F3               	clrf	??_SPI_Open+1
 10627  0A51  35F2               	lslf	??_SPI_Open,f
 10628  0A52  0DF3               	rlf	??_SPI_Open+1,f
 10629  0A53  35F2               	lslf	??_SPI_Open,f
 10630  0A54  0DF3               	rlf	??_SPI_Open+1,f
 10631  0A55  0772               	addwf	??_SPI_Open,w
 10632  0A56  0084               	movwf	4
 10633  0A57  3098               	movlw	high ((_spi_configuration+1)| (0+32768))
 10634  0A58  3D73               	addwfc	??_SPI_Open+1,w
 10635  0A59  0085               	movwf	5
 10636  0A5A  0800               	movf	0,w	;code access
 10637  0A5B  0094               	movwf	20	;volatile
 10638                           
 10639                           ;mcc_generated_files/spi.c: 83:         SSP1CON1 = spi_configuration[spiUniqueConfigurat
      +                          ion].con1;
 10640  0A5C  0875               	movf	SPI_Open@spiUniqueConfiguration,w
 10641  0A5D  00F2               	movwf	??_SPI_Open
 10642  0A5E  3023               	movlw	low (_spi_configuration| (0+32768))
 10643  0A5F  01F3               	clrf	??_SPI_Open+1
 10644  0A60  35F2               	lslf	??_SPI_Open,f
 10645  0A61  0DF3               	rlf	??_SPI_Open+1,f
 10646  0A62  35F2               	lslf	??_SPI_Open,f
 10647  0A63  0DF3               	rlf	??_SPI_Open+1,f
 10648  0A64  0772               	addwf	??_SPI_Open,w
 10649  0A65  0084               	movwf	4
 10650  0A66  3098               	movlw	high (_spi_configuration| (0+32768))
 10651  0A67  3D73               	addwfc	??_SPI_Open+1,w
 10652  0A68  0085               	movwf	5
 10653  0A69  0800               	movf	0,w	;code access
 10654  0A6A  0095               	movwf	21	;volatile
 10655                           
 10656                           ;mcc_generated_files/spi.c: 84:         SSP1CON2 = 0x00;
 10657  0A6B  0196               	clrf	22	;volatile
 10658                           
 10659                           ;mcc_generated_files/spi.c: 85:         SSP1ADD = spi_configuration[spiUniqueConfigurati
      +                          on].add;
 10660  0A6C  0875               	movf	SPI_Open@spiUniqueConfiguration,w
 10661  0A6D  00F2               	movwf	??_SPI_Open
 10662  0A6E  3025               	movlw	low ((_spi_configuration+2)| (0+32768))
 10663  0A6F  01F3               	clrf	??_SPI_Open+1
 10664  0A70  35F2               	lslf	??_SPI_Open,f
 10665  0A71  0DF3               	rlf	??_SPI_Open+1,f
 10666  0A72  35F2               	lslf	??_SPI_Open,f
 10667  0A73  0DF3               	rlf	??_SPI_Open+1,f
 10668  0A74  0772               	addwf	??_SPI_Open,w
 10669  0A75  0084               	movwf	4
 10670  0A76  3098               	movlw	high ((_spi_configuration+2)| (0+32768))
 10671  0A77  3D73               	addwfc	??_SPI_Open+1,w
 10672  0A78  0085               	movwf	5
 10673  0A79  0800               	movf	0,w	;code access
 10674  0A7A  0092               	movwf	18	;volatile
 10675                           
 10676                           ;mcc_generated_files/spi.c: 86:         TRISBbits.TRISB6 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 10677  0A7B  0875               	movf	SPI_Open@spiUniqueConfiguration,w
 10678  0A7C  00F2               	movwf	??_SPI_Open
 10679  0A7D  3026               	movlw	low ((_spi_configuration+3)| (0+32768))
 10680  0A7E  01F3               	clrf	??_SPI_Open+1
 10681  0A7F  35F2               	lslf	??_SPI_Open,f
 10682  0A80  0DF3               	rlf	??_SPI_Open+1,f
 10683  0A81  35F2               	lslf	??_SPI_Open,f
 10684  0A82  0DF3               	rlf	??_SPI_Open+1,f
 10685  0A83  0772               	addwf	??_SPI_Open,w
 10686  0A84  0084               	movwf	4
 10687  0A85  3098               	movlw	high ((_spi_configuration+3)| (0+32768))
 10688  0A86  3D73               	addwfc	??_SPI_Open+1,w
 10689  0A87  0085               	movwf	5
 10690  0A88  0800               	movf	0,w	;code access
 10691  0A89  00F4               	movwf	??_SPI_Open+2
 10692  0A8A  0EF4               	swapf	??_SPI_Open+2,f
 10693  0A8B  0DF4               	rlf	??_SPI_Open+2,f
 10694  0A8C  0DF4               	rlf	??_SPI_Open+2,f
 10695  0A8D  0021               	movlb	1	; select bank1
 10696  0A8E  080D               	movf	13,w	;volatile
 10697  0A8F  0674               	xorwf	??_SPI_Open+2,w
 10698  0A90  39BF               	andlw	-65
 10699  0A91  0674               	xorwf	??_SPI_Open+2,w
 10700  0A92  008D               	movwf	13	;volatile
 10701                           
 10702                           ;mcc_generated_files/spi.c: 87:         SSP1CON1bits.SSPEN = 1;
 10703  0A93  0024               	movlb	4	; select bank4
 10704  0A94  1695               	bsf	21,5	;volatile
 10705                           
 10706                           ;mcc_generated_files/spi.c: 88:         return 1;
 10707  0A95  3401               	retlw	1
 10708  0A96                     __end_of_SPI_Open:	
 10709                           ;mcc_generated_files/spi.c: 90:     return 0;
 10710                           
 10711                           
 10712                           	psect	text4
 10713  005E                     __ptext4:	
 10714 ;; *************** function _WakeUp *****************
 10715 ;; Defined at:
 10716 ;;		line 108 in file "main.c"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;		None
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;		None
 10721 ;; Return value:  Size  Location     Type
 10722 ;;                  1    wreg      void 
 10723 ;; Registers used:
 10724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10725 ;; Tracked objects:
 10726 ;;		On entry : 1A/1
 10727 ;;		On exit  : 1F/2
 10728 ;;		Unchanged: 0/0
 10729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10734 ;;Total ram usage:        0 bytes
 10735 ;; Hardware stack levels used: 1
 10736 ;; Hardware stack levels required when called: 9
 10737 ;; This function calls:
 10738 ;;		_ButtonEventReset
 10739 ;;		_ClearFrameMemory
 10740 ;;		_DELAY_milliseconds
 10741 ;;		_DisplayFrame
 10742 ;;		_InitDisplay
 10743 ;;		_ReadConfigurationsFromMemory
 10744 ;;		_TMR1_StartTimer
 10745 ;;		_sendCoilsConfiguration
 10746 ;; This function is called by:
 10747 ;;		_main
 10748 ;; This function uses a non-reentrant model
 10749 ;;
 10750                           
 10751                           
 10752                           ;psect for function _WakeUp
 10753  005E                     _WakeUp:
 10754                           
 10755                           ;main.c: 109:     selection_index = -1;
 10756                           
 10757                           ;incstack = 0
 10758                           ; Regs used in _WakeUp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10759  005E  0021               	movlb	1	; select bank1
 10760  005F  01B1               	clrf	_selection_index^(0+128)
 10761  0060  03B1               	decf	_selection_index^(0+128),f
 10762                           
 10763                           ;main.c: 110:     do { LATAbits.LATA1 = 1; } while(0);
 10764  0061  0022               	movlb	2	; select bank2
 10765  0062  148C               	bsf	12,1	;volatile
 10766                           
 10767                           ;main.c: 111:     ButtonEventReset();
 10768  0063  264C  3180         	fcall	_ButtonEventReset
 10769                           
 10770                           ;main.c: 112:     TMR1_StartTimer();
 10771  0065  2666  3180         	fcall	_TMR1_StartTimer
 10772                           
 10773                           ;main.c: 113:     InitDisplay(lut_full_update);
 10774  0067  30C8               	movlw	low (_lut_full_update| (0+32768))
 10775  0068  00A0               	movwf	InitDisplay@lut
 10776  0069  3097               	movlw	high (_lut_full_update| (0+32768))
 10777  006A  00A1               	movwf	InitDisplay@lut+1
 10778  006B  20BC  3180         	fcall	_InitDisplay
 10779                           
 10780                           ;main.c: 114:     DELAY_milliseconds(1000);
 10781  006D  30E8               	movlw	232
 10782  006E  00F2               	movwf	DELAY_milliseconds@milliseconds
 10783  006F  3003               	movlw	3
 10784  0070  00F3               	movwf	DELAY_milliseconds@milliseconds+1
 10785  0071  2614  3180         	fcall	_DELAY_milliseconds
 10786                           
 10787                           ;main.c: 115:     ClearFrameMemory(0xFF);
 10788  0073  30FF               	movlw	255
 10789  0074  2622  3180         	fcall	_ClearFrameMemory
 10790                           
 10791                           ;main.c: 116:     DisplayFrame();
 10792  0076  219E  3180         	fcall	_DisplayFrame
 10793                           
 10794                           ;main.c: 117:     ClearFrameMemory(0xFF);
 10795  0078  30FF               	movlw	255
 10796  0079  2622  3180         	fcall	_ClearFrameMemory
 10797                           
 10798                           ;main.c: 118:     DisplayFrame();
 10799  007B  219E               	fcall	_DisplayFrame
 10800                           
 10801                           ;main.c: 119:     ReadConfigurationsFromMemory();
 10802  007C  3189  218B  3180   	fcall	_ReadConfigurationsFromMemory
 10803                           
 10804                           ;main.c: 124:     InitDisplay(lut_partial_update);
 10805  007F  30AA               	movlw	low (_lut_partial_update| (0+32768))
 10806  0080  0020               	movlb	0	; select bank0
 10807  0081  00A0               	movwf	InitDisplay@lut
 10808  0082  3097               	movlw	high (_lut_partial_update| (0+32768))
 10809  0083  00A1               	movwf	InitDisplay@lut+1
 10810  0084  20BC               	fcall	_InitDisplay
 10811                           
 10812                           ;main.c: 126:     sendCoilsConfiguration(&saved_pc[switch_pos]);
 10813  0085  087B               	movf	_switch_pos,w
 10814  0086  0709               	addwf	9,w
 10815  0087  0709               	addwf	9,w
 10816  0088  3EB2               	addlw	(low (_saved_pc| 0))& (0+255)
 10817  0089  318E  2E90         	ljmp	_sendCoilsConfiguration
 10818  008B                     __end_of_WakeUp:
 10819  008B                     __ptext47:	
 10820 ;; *************** function _SetMemoryArea *****************
 10821 ;; Defined at:
 10822 ;;		line 219 in file "waveshare29epaper.c"
 10823 ;; Parameters:    Size  Location     Type
 10824 ;;  x_start         2    0[BANK0 ] unsigned short 
 10825 ;;  y_start         2    2[BANK0 ] unsigned short 
 10826 ;;  x_end           2    4[BANK0 ] unsigned short 
 10827 ;;  y_end           2    6[BANK0 ] unsigned short 
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;		None
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  1    wreg      void 
 10832 ;; Registers used:
 10833 ;;		wreg, status,2, status,0, pclath, cstack
 10834 ;; Tracked objects:
 10835 ;;		On entry : 1F/0
 10836 ;;		On exit  : 1F/2
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10839 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10842 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10843 ;;Total ram usage:       10 bytes
 10844 ;; Hardware stack levels used: 1
 10845 ;; Hardware stack levels required when called: 6
 10846 ;; This function calls:
 10847 ;;		_SendCommand
 10848 ;;		_SendData
 10849 ;; This function is called by:
 10850 ;;		_SetFrameMemoryPartial
 10851 ;;		_ClearFrameMemory
 10852 ;;		_ClearFrameMemoryPartial
 10853 ;; This function uses a non-reentrant model
 10854 ;;
 10855                           
 10856                           
 10857                           ;psect for function _SetMemoryArea
 10858  008B                     _SetMemoryArea:
 10859                           
 10860                           ;waveshare29epaper.c: 220:     SendCommand(0x44);
 10861                           
 10862                           ;incstack = 0
 10863                           ; Regs used in _SetMemoryArea: [wreg+status,2+status,0+pclath+cstack]
 10864  008B  3044               	movlw	68
 10865  008C  25B8  3180         	fcall	_SendCommand
 10866                           
 10867                           ;waveshare29epaper.c: 222:     SendData((x_start >> 3) & 0xFF);
 10868  008E  0020               	movlb	0	; select bank0
 10869  008F  0821               	movf	SetMemoryArea@x_start+1,w
 10870  0090  00F5               	movwf	??_SetMemoryArea+1
 10871  0091  0820               	movf	SetMemoryArea@x_start,w
 10872  0092  00F4               	movwf	??_SetMemoryArea
 10873  0093  36F5               	lsrf	??_SetMemoryArea+1,f
 10874  0094  0CF4               	rrf	??_SetMemoryArea,f
 10875  0095  36F5               	lsrf	??_SetMemoryArea+1,f
 10876  0096  0CF4               	rrf	??_SetMemoryArea,f
 10877  0097  36F5               	lsrf	??_SetMemoryArea+1,f
 10878  0098  0CF4               	rrf	??_SetMemoryArea,f
 10879  0099  0874               	movf	??_SetMemoryArea,w
 10880  009A  20F4  3180         	fcall	_SendData
 10881                           
 10882                           ;waveshare29epaper.c: 223:     SendData((x_end >> 3) & 0xFF);
 10883  009C  0020               	movlb	0	; select bank0
 10884  009D  0825               	movf	SetMemoryArea@x_end+1,w
 10885  009E  00F5               	movwf	??_SetMemoryArea+1
 10886  009F  0824               	movf	SetMemoryArea@x_end,w
 10887  00A0  00F4               	movwf	??_SetMemoryArea
 10888  00A1  36F5               	lsrf	??_SetMemoryArea+1,f
 10889  00A2  0CF4               	rrf	??_SetMemoryArea,f
 10890  00A3  36F5               	lsrf	??_SetMemoryArea+1,f
 10891  00A4  0CF4               	rrf	??_SetMemoryArea,f
 10892  00A5  36F5               	lsrf	??_SetMemoryArea+1,f
 10893  00A6  0CF4               	rrf	??_SetMemoryArea,f
 10894  00A7  0874               	movf	??_SetMemoryArea,w
 10895  00A8  20F4  3180         	fcall	_SendData
 10896                           
 10897                           ;waveshare29epaper.c: 224:     SendCommand(0x45);
 10898  00AA  3045               	movlw	69
 10899  00AB  25B8  3180         	fcall	_SendCommand
 10900                           
 10901                           ;waveshare29epaper.c: 225:     SendData(y_start & 0xFF);
 10902  00AD  0020               	movlb	0	; select bank0
 10903  00AE  0822               	movf	SetMemoryArea@y_start,w
 10904  00AF  20F4  3180         	fcall	_SendData
 10905                           
 10906                           ;waveshare29epaper.c: 226:     SendData((y_start >> 8) & 0xFF);
 10907  00B1  0020               	movlb	0	; select bank0
 10908  00B2  0823               	movf	SetMemoryArea@y_start+1,w
 10909  00B3  20F4  3180         	fcall	_SendData
 10910                           
 10911                           ;waveshare29epaper.c: 227:     SendData(y_end & 0xFF);
 10912  00B5  0020               	movlb	0	; select bank0
 10913  00B6  0826               	movf	SetMemoryArea@y_end,w
 10914  00B7  20F4  3180         	fcall	_SendData
 10915                           
 10916                           ;waveshare29epaper.c: 228:     SendData((y_end >> 8) & 0xFF);
 10917  00B9  0020               	movlb	0	; select bank0
 10918  00BA  0827               	movf	SetMemoryArea@y_end+1,w
 10919  00BB  28F4               	ljmp	_SendData
 10920  00BC                     __end_of_SetMemoryArea:
 10921  00BC                     __ptext40:	
 10922 ;; *************** function _InitDisplay *****************
 10923 ;; Defined at:
 10924 ;;		line 34 in file "waveshare29epaper.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;  lut             2    0[BANK0 ] PTR const unsigned char 
 10927 ;;		 -> lut_partial_update(30), lut_full_update(30), 
 10928 ;; Auto vars:     Size  Location     Type
 10929 ;;		None
 10930 ;; Return value:  Size  Location     Type
 10931 ;;                  1    wreg      void 
 10932 ;; Registers used:
 10933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10934 ;; Tracked objects:
 10935 ;;		On entry : 1F/0
 10936 ;;		On exit  : 0/0
 10937 ;;		Unchanged: 0/0
 10938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10939 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10943 ;;Total ram usage:        2 bytes
 10944 ;; Hardware stack levels used: 1
 10945 ;; Hardware stack levels required when called: 7
 10946 ;; This function calls:
 10947 ;;		_ResetDisplay
 10948 ;;		_SendCommand
 10949 ;;		_SendData
 10950 ;;		_SetLut
 10951 ;; This function is called by:
 10952 ;;		_GotoSleep
 10953 ;;		_WakeUp
 10954 ;;		_DisplayFrame
 10955 ;; This function uses a non-reentrant model
 10956 ;;
 10957                           
 10958                           
 10959                           ;psect for function _InitDisplay
 10960  00BC                     _InitDisplay:
 10961  00BC                     l4105:	
 10962                           ;incstack = 0
 10963                           ; Regs used in _InitDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10964                           
 10965                           
 10966                           ;waveshare29epaper.c: 35:     ResetDisplay();
 10967  00BC  2652  3180         	fcall	_ResetDisplay
 10968                           
 10969                           ;waveshare29epaper.c: 36:     SendCommand(0x01);
 10970  00BE  3001               	movlw	1
 10971  00BF  25B8  3180         	fcall	_SendCommand
 10972                           
 10973                           ;waveshare29epaper.c: 37:     SendData((296 - 1) & 0xFF);
 10974  00C1  3027               	movlw	39
 10975  00C2  20F4  3180         	fcall	_SendData
 10976                           
 10977                           ;waveshare29epaper.c: 38:     SendData(((296 - 1) >> 8) & 0xFF);
 10978  00C4  3001               	movlw	1
 10979  00C5  20F4  3180         	fcall	_SendData
 10980                           
 10981                           ;waveshare29epaper.c: 39:     SendData(0x00);
 10982  00C7  3000               	movlw	0
 10983  00C8  20F4  3180         	fcall	_SendData
 10984                           
 10985                           ;waveshare29epaper.c: 40:     SendCommand(0x0C);
 10986  00CA  300C               	movlw	12
 10987  00CB  25B8  3180         	fcall	_SendCommand
 10988                           
 10989                           ;waveshare29epaper.c: 41:     SendData(0xD7);
 10990  00CD  30D7               	movlw	215
 10991  00CE  20F4  3180         	fcall	_SendData
 10992                           
 10993                           ;waveshare29epaper.c: 42:     SendData(0xD6);
 10994  00D0  30D6               	movlw	214
 10995  00D1  20F4  3180         	fcall	_SendData
 10996                           
 10997                           ;waveshare29epaper.c: 43:     SendData(0x9D);
 10998  00D3  309D               	movlw	157
 10999  00D4  20F4  3180         	fcall	_SendData
 11000                           
 11001                           ;waveshare29epaper.c: 44:     SendCommand(0x2C);
 11002  00D6  302C               	movlw	44
 11003  00D7  25B8  3180         	fcall	_SendCommand
 11004                           
 11005                           ;waveshare29epaper.c: 45:     SendData(0xA8);
 11006  00D9  30A8               	movlw	168
 11007  00DA  20F4  3180         	fcall	_SendData
 11008                           
 11009                           ;waveshare29epaper.c: 46:     SendCommand(0x3A);
 11010  00DC  303A               	movlw	58
 11011  00DD  25B8  3180         	fcall	_SendCommand
 11012                           
 11013                           ;waveshare29epaper.c: 47:     SendData(0x1A);
 11014  00DF  301A               	movlw	26
 11015  00E0  20F4  3180         	fcall	_SendData
 11016                           
 11017                           ;waveshare29epaper.c: 48:     SendCommand(0x3B);
 11018  00E2  303B               	movlw	59
 11019  00E3  25B8  3180         	fcall	_SendCommand
 11020                           
 11021                           ;waveshare29epaper.c: 49:     SendData(0x08);
 11022  00E5  3008               	movlw	8
 11023  00E6  20F4  3180         	fcall	_SendData
 11024                           
 11025                           ;waveshare29epaper.c: 50:     SendCommand(0x11);
 11026  00E8  3011               	movlw	17
 11027  00E9  25B8  3180         	fcall	_SendCommand
 11028                           
 11029                           ;waveshare29epaper.c: 51:     SendData(0x03);
 11030  00EB  3003               	movlw	3
 11031  00EC  20F4               	fcall	_SendData
 11032                           
 11033                           ;waveshare29epaper.c: 52:     SetLut(lut);
 11034  00ED  0020               	movlb	0	; select bank0
 11035  00EE  0821               	movf	InitDisplay@lut+1,w
 11036  00EF  00F5               	movwf	SetLut@lut+1
 11037  00F0  0820               	movf	InitDisplay@lut,w
 11038  00F1  00F4               	movwf	SetLut@lut
 11039  00F2  3188  28E2         	ljmp	l4069
 11040  00F4                     __end_of_InitDisplay:
 11041  00F4                     __ptext48:	
 11042 ;; *************** function _SendData *****************
 11043 ;; Defined at:
 11044 ;;		line 68 in file "waveshare29epaper.c"
 11045 ;; Parameters:    Size  Location     Type
 11046 ;;  data            1    wreg     unsigned char 
 11047 ;; Auto vars:     Size  Location     Type
 11048 ;;  data            1    3[COMMON] unsigned char 
 11049 ;; Return value:  Size  Location     Type
 11050 ;;                  1    wreg      void 
 11051 ;; Registers used:
 11052 ;;		wreg, status,2, status,0, pclath, cstack
 11053 ;; Tracked objects:
 11054 ;;		On entry : 0/0
 11055 ;;		On exit  : 1F/2
 11056 ;;		Unchanged: 0/0
 11057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;Total ram usage:        1 bytes
 11063 ;; Hardware stack levels used: 1
 11064 ;; Hardware stack levels required when called: 5
 11065 ;; This function calls:
 11066 ;;		_SPI_ExchangeByte
 11067 ;; This function is called by:
 11068 ;;		_InitDisplay
 11069 ;;		_SetLut
 11070 ;;		_SetFrameMemoryPartial
 11071 ;;		_ClearFrameMemory
 11072 ;;		_ClearFrameMemoryPartial
 11073 ;;		_DisplayFrame
 11074 ;;		_SetMemoryArea
 11075 ;;		_SetMemoryPointer
 11076 ;; This function uses a non-reentrant model
 11077 ;;
 11078                           
 11079                           
 11080                           ;psect for function _SendData
 11081  00F4                     _SendData:
 11082                           
 11083                           ;incstack = 0
 11084                           ; Regs used in _SendData: [wreg+status,2+status,0+pclath+cstack]
 11085                           ;SendData@data stored from wreg
 11086  00F4  00F3               	movwf	SendData@data
 11087                           
 11088                           ;waveshare29epaper.c: 69:     do { LATCbits.LATC4 = 0; } while(0);
 11089  00F5  0022               	movlb	2	; select bank2
 11090  00F6  120E               	bcf	14,4	;volatile
 11091                           
 11092                           ;waveshare29epaper.c: 70:     do { LATAbits.LATA4 = 1; } while(0);
 11093  00F7  160C               	bsf	12,4	;volatile
 11094                           
 11095                           ;waveshare29epaper.c: 71:     SPI_ExchangeByte(data);
 11096  00F8  0873               	movf	SendData@data,w
 11097  00F9  00F2               	movwf	SPI_ExchangeByte@data
 11098  00FA  260A               	fcall	_SPI_ExchangeByte
 11099  00FB  0022               	movlb	2	; select bank2
 11100  00FC  160E               	bsf	14,4	;volatile
 11101  00FD  0008               	return
 11102  00FE                     __end_of_SendData:
 11103  00FE                     __ptext26:	
 11104 ;; *************** function _ButtonEventHandler *****************
 11105 ;; Defined at:
 11106 ;;		line 175 in file "main.c"
 11107 ;; Parameters:    Size  Location     Type
 11108 ;;		None
 11109 ;; Auto vars:     Size  Location     Type
 11110 ;;		None
 11111 ;; Return value:  Size  Location     Type
 11112 ;;                  1    wreg      void 
 11113 ;; Registers used:
 11114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11115 ;; Tracked objects:
 11116 ;;		On entry : 0/1
 11117 ;;		On exit  : 1E/0
 11118 ;;		Unchanged: 0/0
 11119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11121 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11122 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11123 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11124 ;;Total ram usage:        4 bytes
 11125 ;; Hardware stack levels used: 1
 11126 ;; Hardware stack levels required when called: 10
 11127 ;; This function calls:
 11128 ;;		_ButtonEventReset
 11129 ;;		_DisplayFrame
 11130 ;;		_GotoSleep
 11131 ;;		_ImageFromPickupConf
 11132 ;;		_WriteConfigurationToMemory
 11133 ;; This function is called by:
 11134 ;;		_main
 11135 ;; This function uses a non-reentrant model
 11136 ;;
 11137                           
 11138                           
 11139                           ;psect for function _ButtonEventHandler
 11140  00FE                     _ButtonEventHandler:
 11141                           
 11142                           ;main.c: 176:     switch(click_type){
 11143                           
 11144                           ;incstack = 0
 11145                           ; Regs used in _ButtonEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11146  00FE  2982               	goto	l4669
 11147  00FF                     l522:	
 11148                           ;main.c: 177:         case 1:
 11149                           
 11150                           
 11151                           ;main.c: 178:             if(selection_index >= 0){
 11152  00FF  0021               	movlb	1	; select bank1
 11153  0100  1BB1               	btfsc	_selection_index^(0+128),7
 11154  0101  299C               	goto	l4671
 11155                           
 11156                           ;main.c: 181:                 ImageFromPickupConf(&saved_pc[switch_pos], selection_index
      +                          , 0, 0);
 11157  0102  0831               	movf	_selection_index^(0+128),w
 11158  0103  0020               	movlb	0	; select bank0
 11159  0104  00C2               	movwf	ImageFromPickupConf@selection_index
 11160  0105  01C3               	clrf	ImageFromPickupConf@bracket
 11161  0106  01C4               	clrf	ImageFromPickupConf@draw_empty
 11162  0107  087B               	movf	_switch_pos,w
 11163  0108  0709               	addwf	9,w
 11164  0109  0709               	addwf	9,w
 11165  010A  3EB2               	addlw	(low (_saved_pc| 0))& (0+255)
 11166  010B  21CD  3180         	fcall	_ImageFromPickupConf
 11167                           
 11168                           ;main.c: 182:                 DisplayFrame();
 11169  010D  219E  3180         	fcall	_DisplayFrame
 11170                           
 11171                           ;main.c: 183:                 ImageFromPickupConf(&saved_pc[switch_pos], selection_index
      +                          , 0, 0);
 11172  010F  0021               	movlb	1	; select bank1
 11173  0110  0831               	movf	_selection_index^(0+128),w
 11174  0111  0020               	movlb	0	; select bank0
 11175  0112  00C2               	movwf	ImageFromPickupConf@selection_index
 11176  0113  01C3               	clrf	ImageFromPickupConf@bracket
 11177  0114  01C4               	clrf	ImageFromPickupConf@draw_empty
 11178  0115  087B               	movf	_switch_pos,w
 11179  0116  0709               	addwf	9,w
 11180  0117  0709               	addwf	9,w
 11181  0118  3EB2               	addlw	(low (_saved_pc| 0))& (0+255)
 11182  0119  21CD  3180         	fcall	_ImageFromPickupConf
 11183                           
 11184                           ;main.c: 184:                 DisplayFrame();
 11185  011B  219E  3180         	fcall	_DisplayFrame
 11186                           
 11187                           ;main.c: 185:                 selection_index = (selection_index + 1) % 4;
 11188  011D  0021               	movlb	1	; select bank1
 11189  011E  3003               	movlw	3
 11190  011F  0AB1               	incf	_selection_index^(0+128),f
 11191  0120  05B1               	andwf	_selection_index^(0+128),f
 11192  0121                     L9:
 11193                           
 11194                           ;main.c: 186:                 ImageFromPickupConf(&saved_pc[switch_pos], selection_index
      +                          , 1, 0);
 11195  0121  0831               	movf	_selection_index^(0+128),w
 11196  0122  0020               	movlb	0	; select bank0
 11197  0123  00C2               	movwf	ImageFromPickupConf@selection_index
 11198  0124  01C3               	clrf	ImageFromPickupConf@bracket
 11199  0125  0AC3               	incf	ImageFromPickupConf@bracket,f
 11200  0126  01C4               	clrf	ImageFromPickupConf@draw_empty
 11201  0127  087B               	movf	_switch_pos,w
 11202  0128  0709               	addwf	9,w
 11203  0129  0709               	addwf	9,w
 11204  012A  3EB2               	addlw	(low (_saved_pc| 0))& (0+255)
 11205  012B  21CD  3180         	fcall	_ImageFromPickupConf
 11206                           
 11207                           ;main.c: 187:                 DisplayFrame();
 11208  012D  219E  3180         	fcall	_DisplayFrame
 11209  012F  299C               	goto	l4671
 11210  0130                     l4637:
 11211                           
 11212                           ;main.c: 193:             selection_index = selection_index == -1 ? 0 : -1;
 11213  0130  0021               	movlb	1	; select bank1
 11214  0131  0A31               	incf	_selection_index^(0+128),w
 11215  0132  1903               	btfsc	3,2
 11216  0133  2939               	goto	l4641
 11217  0134  30FF               	movlw	255
 11218  0135  0020               	movlb	0	; select bank0
 11219  0136  00CD               	movwf	_ButtonEventHandler$1083
 11220  0137  00CE               	movwf	_ButtonEventHandler$1083+1
 11221  0138  293C               	goto	l4643
 11222  0139                     l4641:
 11223  0139  0020               	movlb	0	; select bank0
 11224  013A  01CD               	clrf	_ButtonEventHandler$1083
 11225  013B  01CE               	clrf	_ButtonEventHandler$1083+1
 11226  013C                     l4643:
 11227  013C  084D               	movf	_ButtonEventHandler$1083,w
 11228  013D  0021               	movlb	1	; select bank1
 11229  013E  00B1               	movwf	_selection_index^(0+128)
 11230                           
 11231                           ;main.c: 194:             if(selection_index == -1){
 11232  013F  0F31               	incfsz	_selection_index^(0+128),w
 11233  0140  295D               	goto	l4653
 11234                           
 11235                           ;main.c: 195:                 ImageFromPickupConf(&saved_pc[switch_pos], selection_index
      +                          , 0, 0);
 11236  0141  0831               	movf	_selection_index^(0+128),w
 11237  0142  0020               	movlb	0	; select bank0
 11238  0143  00C2               	movwf	ImageFromPickupConf@selection_index
 11239  0144  01C3               	clrf	ImageFromPickupConf@bracket
 11240  0145  01C4               	clrf	ImageFromPickupConf@draw_empty
 11241  0146  087B               	movf	_switch_pos,w
 11242  0147  0709               	addwf	9,w
 11243  0148  0709               	addwf	9,w
 11244  0149  3EB2               	addlw	(low (_saved_pc| 0))& (0+255)
 11245  014A  21CD  3180         	fcall	_ImageFromPickupConf
 11246                           
 11247                           ;main.c: 196:                 DisplayFrame();
 11248  014C  219E  3180         	fcall	_DisplayFrame
 11249                           
 11250                           ;main.c: 197:                 ImageFromPickupConf(&saved_pc[switch_pos], selection_index
      +                          , 0, 0);
 11251  014E  0021               	movlb	1	; select bank1
 11252  014F  0831               	movf	_selection_index^(0+128),w
 11253  0150  0020               	movlb	0	; select bank0
 11254  0151  00C2               	movwf	ImageFromPickupConf@selection_index
 11255  0152  01C3               	clrf	ImageFromPickupConf@bracket
 11256  0153  01C4               	clrf	ImageFromPickupConf@draw_empty
 11257  0154  087B               	movf	_switch_pos,w
 11258  0155  0709               	addwf	9,w
 11259  0156  0709               	addwf	9,w
 11260  0157  3EB2               	addlw	(low (_saved_pc| 0))& (0+255)
 11261  0158  21CD  3180         	fcall	_ImageFromPickupConf
 11262                           
 11263                           ;main.c: 198:                 DisplayFrame();
 11264  015A  219E  3180         	fcall	_DisplayFrame
 11265                           
 11266                           ;main.c: 199:             } else {
 11267  015C  299C               	goto	l4671
 11268  015D                     l4653:
 11269                           
 11270                           ;main.c: 200:                 ImageFromPickupConf(&saved_pc[switch_pos], -1, 0, 1);
 11271  015D  0020               	movlb	0	; select bank0
 11272  015E  01C2               	clrf	ImageFromPickupConf@selection_index
 11273  015F  03C2               	decf	ImageFromPickupConf@selection_index,f
 11274  0160  01C3               	clrf	ImageFromPickupConf@bracket
 11275  0161  01C4               	clrf	ImageFromPickupConf@draw_empty
 11276  0162  0AC4               	incf	ImageFromPickupConf@draw_empty,f
 11277  0163  087B               	movf	_switch_pos,w
 11278  0164  0709               	addwf	9,w
 11279  0165  0709               	addwf	9,w
 11280  0166  3EB2               	addlw	(low (_saved_pc| 0))& (0+255)
 11281  0167  21CD  3180         	fcall	_ImageFromPickupConf
 11282                           
 11283                           ;main.c: 201:                 DisplayFrame();
 11284  0169  219E  3180         	fcall	_DisplayFrame
 11285                           
 11286                           ;main.c: 202:                 ImageFromPickupConf(&saved_pc[switch_pos], -1, 0, 1);
 11287  016B  0020               	movlb	0	; select bank0
 11288  016C  01C2               	clrf	ImageFromPickupConf@selection_index
 11289  016D  03C2               	decf	ImageFromPickupConf@selection_index,f
 11290  016E  01C3               	clrf	ImageFromPickupConf@bracket
 11291  016F  01C4               	clrf	ImageFromPickupConf@draw_empty
 11292  0170  0AC4               	incf	ImageFromPickupConf@draw_empty,f
 11293  0171  087B               	movf	_switch_pos,w
 11294  0172  0709               	addwf	9,w
 11295  0173  0709               	addwf	9,w
 11296  0174  3EB2               	addlw	(low (_saved_pc| 0))& (0+255)
 11297  0175  21CD  3180         	fcall	_ImageFromPickupConf
 11298                           
 11299                           ;main.c: 203:                 DisplayFrame();
 11300  0177  219E  3180         	fcall	_DisplayFrame
 11301                           
 11302                           ;main.c: 204:                 ImageFromPickupConf(&saved_pc[switch_pos], selection_index
      +                          , 1, 0);
 11303  0179  0021               	movlb	1	; select bank1
 11304  017A  2921               	goto	L9
 11305  017B                     l4663:
 11306                           
 11307                           ;main.c: 209:             WriteConfigurationToMemory();
 11308  017B  265F  3180         	fcall	_WriteConfigurationToMemory
 11309                           
 11310                           ;main.c: 210:             break;
 11311  017D  299C               	goto	l4671
 11312  017E                     l4665:
 11313                           
 11314                           ;main.c: 214:             GotoSleep();
 11315  017E  3189  2127  3180   	fcall	_GotoSleep
 11316                           
 11317                           ;main.c: 215:             break;
 11318  0181  299C               	goto	l4671
 11319  0182                     l4669:
 11320  0182  0021               	movlb	1	; select bank1
 11321  0183  0859               	movf	_click_type^(0+128),w
 11322  0184  0020               	movlb	0	; select bank0
 11323  0185  00CB               	movwf	??_ButtonEventHandler
 11324  0186  01CC               	clrf	??_ButtonEventHandler+1
 11325  0187  1BCB               	btfsc	??_ButtonEventHandler,7
 11326  0188  03CC               	decf	??_ButtonEventHandler+1,f
 11327                           
 11328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11329                           ; Switch size 1, requested type "speed"
 11330                           ; Number of cases is 1, Range of values is 0 to 0
 11331                           ; switch strategies available:
 11332                           ; Name         Instructions Cycles
 11333                           ; simple_byte            4     3 (average)
 11334                           ; direct_byte            8     6 (fixed)
 11335                           ; jumptable            260     6 (fixed)
 11336                           ;	Chosen strategy is simple_byte
 11337  0189  084C               	movf	??_ButtonEventHandler+1,w
 11338  018A  3A00               	xorlw	0	; case 0
 11339  018B  1903               	skipnz
 11340  018C  298E               	goto	l4871
 11341  018D  299D               	goto	l535
 11342  018E                     l4871:
 11343                           
 11344                           ; Switch size 1, requested type "speed"
 11345                           ; Number of cases is 4, Range of values is 1 to 4
 11346                           ; switch strategies available:
 11347                           ; Name         Instructions Cycles
 11348                           ; simple_byte           13     7 (average)
 11349                           ; direct_byte           17     9 (fixed)
 11350                           ; jumptable            263     9 (fixed)
 11351                           ;	Chosen strategy is simple_byte
 11352  018E  084B               	movf	??_ButtonEventHandler,w
 11353  018F  3A01               	xorlw	1	; case 1
 11354  0190  1903               	skipnz
 11355  0191  28FF               	goto	l522
 11356  0192  3A03               	xorlw	3	; case 2
 11357  0193  1903               	skipnz
 11358  0194  2930               	goto	l4637
 11359  0195  3A01               	xorlw	1	; case 3
 11360  0196  1903               	skipnz
 11361  0197  297B               	goto	l4663
 11362  0198  3A07               	xorlw	7	; case 4
 11363  0199  1903               	skipnz
 11364  019A  297E               	goto	l4665
 11365  019B  299D               	goto	l535
 11366  019C                     l4671:
 11367                           
 11368                           ;main.c: 219:     ButtonEventReset();
 11369  019C  264C               	fcall	_ButtonEventReset
 11370  019D                     l535:
 11371  019D  0008               	return
 11372  019E                     __end_of_ButtonEventHandler:
 11373  019E                     __ptext39:	
 11374 ;; *************** function _DisplayFrame *****************
 11375 ;; Defined at:
 11376 ;;		line 192 in file "waveshare29epaper.c"
 11377 ;; Parameters:    Size  Location     Type
 11378 ;;		None
 11379 ;; Auto vars:     Size  Location     Type
 11380 ;;		None
 11381 ;; Return value:  Size  Location     Type
 11382 ;;                  1    wreg      void 
 11383 ;; Registers used:
 11384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11385 ;; Tracked objects:
 11386 ;;		On entry : 0/0
 11387 ;;		On exit  : 0/0
 11388 ;;		Unchanged: 0/0
 11389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11394 ;;Total ram usage:        0 bytes
 11395 ;; Hardware stack levels used: 1
 11396 ;; Hardware stack levels required when called: 8
 11397 ;; This function calls:
 11398 ;;		_InitDisplay
 11399 ;;		_SendCommand
 11400 ;;		_SendData
 11401 ;;		_WaitUntilIdle
 11402 ;; This function is called by:
 11403 ;;		_GotoSleep
 11404 ;;		_WakeUp
 11405 ;;		_ButtonEventHandler
 11406 ;;		_DisplayRefreshHandler
 11407 ;;		_RotaryEncoderEventHandler
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           
 11412                           ;psect for function _DisplayFrame
 11413  019E                     _DisplayFrame:
 11414  019E                     l4197:	
 11415                           ;incstack = 0
 11416                           ; Regs used in _DisplayFrame: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11417                           
 11418                           
 11419                           ;waveshare29epaper.c: 194:     partial_refresh_count++;
 11420  019E  0021               	movlb	1	; select bank1
 11421  019F  3006               	movlw	6
 11422  01A0  0AD4               	incf	_partial_refresh_count^(0+128),f
 11423                           
 11424                           ;waveshare29epaper.c: 195:     if(partial_refresh_count >= 6)
 11425  01A1  0254               	subwf	_partial_refresh_count^(0+128),w
 11426  01A2  1C03               	skipc
 11427  01A3  29C0               	goto	l4217
 11428                           
 11429                           ;waveshare29epaper.c: 196:     {;waveshare29epaper.c: 197:         InitDisplay(lut_full_
      +                          update);
 11430  01A4  30C8               	movlw	low (_lut_full_update| (0+32768))
 11431  01A5  0020               	movlb	0	; select bank0
 11432  01A6  00A0               	movwf	InitDisplay@lut
 11433  01A7  3097               	movlw	high (_lut_full_update| (0+32768))
 11434  01A8  00A1               	movwf	InitDisplay@lut+1
 11435  01A9  20BC  3180         	fcall	_InitDisplay
 11436                           
 11437                           ;waveshare29epaper.c: 198:         partial_refresh_count = 0;
 11438  01AB  0021               	movlb	1	; select bank1
 11439  01AC  3022               	movlw	34
 11440  01AD  01D4               	clrf	_partial_refresh_count^(0+128)
 11441                           
 11442                           ;waveshare29epaper.c: 199:         SendCommand(0x22);
 11443  01AE  25B8  3180         	fcall	_SendCommand
 11444                           
 11445                           ;waveshare29epaper.c: 200:         SendData(0xC4);
 11446  01B0  30C4               	movlw	196
 11447  01B1  20F4  3180         	fcall	_SendData
 11448                           
 11449                           ;waveshare29epaper.c: 201:         SendCommand(0x20);
 11450  01B3  3020               	movlw	32
 11451  01B4  25B8  3180         	fcall	_SendCommand
 11452                           
 11453                           ;waveshare29epaper.c: 202:         SendCommand(0xFF);
 11454  01B6  30FF               	movlw	255
 11455  01B7  25B8  3180         	fcall	_SendCommand
 11456                           
 11457                           ;waveshare29epaper.c: 203:         WaitUntilIdle();
 11458  01B9  2601  3180         	fcall	_WaitUntilIdle
 11459                           
 11460                           ;waveshare29epaper.c: 204:         InitDisplay(lut_partial_update);
 11461  01BB  30AA               	movlw	low (_lut_partial_update| (0+32768))
 11462  01BC  00A0               	movwf	InitDisplay@lut
 11463  01BD  3097               	movlw	high (_lut_partial_update| (0+32768))
 11464  01BE  00A1               	movwf	InitDisplay@lut+1
 11465  01BF  28BC               	ljmp	l4105
 11466  01C0                     l4217:	
 11467                           ;waveshare29epaper.c: 205:     }
 11468                           
 11469                           
 11470                           ;waveshare29epaper.c: 207:     {;waveshare29epaper.c: 208:         SendCommand(0x22);
 11471  01C0  3022               	movlw	34
 11472  01C1  25B8  3180         	fcall	_SendCommand
 11473                           
 11474                           ;waveshare29epaper.c: 209:         SendData(0xC4);
 11475  01C3  30C4               	movlw	196
 11476  01C4  20F4  3180         	fcall	_SendData
 11477                           
 11478                           ;waveshare29epaper.c: 210:         SendCommand(0x20);
 11479  01C6  3020               	movlw	32
 11480  01C7  25B8  3180         	fcall	_SendCommand
 11481                           
 11482                           ;waveshare29epaper.c: 211:         SendCommand(0xFF);
 11483  01C9  30FF               	movlw	255
 11484  01CA  25B8  3180         	fcall	_SendCommand
 11485                           
 11486                           ;waveshare29epaper.c: 212:         WaitUntilIdle();
 11487  01CC  2E01               	ljmp	l4059
 11488  01CD                     __end_of_DisplayFrame:
 11489  01CD                     __ptext32:	
 11490 ;; *************** function _ImageFromPickupConf *****************
 11491 ;; Defined at:
 11492 ;;		line 131 in file "guitar_image.c"
 11493 ;; Parameters:    Size  Location     Type
 11494 ;;  pc              1    wreg     PTR struct PickupConfigu
 11495 ;;		 -> saved_pc(20), 
 11496 ;;  selection_in    1   34[BANK0 ] char 
 11497 ;;  bracket         1   35[BANK0 ] _Bool 
 11498 ;;  draw_empty      1   36[BANK0 ] _Bool 
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;  pc              1   42[BANK2 ] PTR struct PickupConfigu
 11501 ;;		 -> saved_pc(20), 
 11502 ;;  need_to_skip    4   24[BANK2 ] _Bool [4]
 11503 ;;  need_to_draw    4    0[BANK2 ] _Bool [4]
 11504 ;;  i               2   38[BANK2 ] int 
 11505 ;;  arrow_type      8   10[BANK2 ] PTR unsigned char [4]
 11506 ;;		 -> g_arrow_rot(183), b_arrow_rot(183), m_arrow_rot(183), n_arrow_rot(183), 
 11507 ;;  pickup_index    4   28[BANK2 ] char [4]
 11508 ;;  start_x         2   40[BANK2 ] unsigned short 
 11509 ;;  start_y         2   36[BANK2 ] unsigned short 
 11510 ;;  index           1   35[BANK2 ] char 
 11511 ;;  max_index       1   34[BANK2 ] unsigned char 
 11512 ;; Return value:  Size  Location     Type
 11513 ;;                  1    wreg      void 
 11514 ;; Registers used:
 11515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11516 ;; Tracked objects:
 11517 ;;		On entry : 1F/0
 11518 ;;		On exit  : 0/0
 11519 ;;		Unchanged: 0/0
 11520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11521 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11522 ;;      Locals:         0       0       0      43       0       0       0       0       0       0       0       0       
      +0       0
 11523 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11524 ;;      Totals:         0       9       0      43       0       0       0       0       0       0       0       0       
      +0       0
 11525 ;;Total ram usage:       52 bytes
 11526 ;; Hardware stack levels used: 1
 11527 ;; Hardware stack levels required when called: 9
 11528 ;; This function calls:
 11529 ;;		_ClearFrameMemory
 11530 ;;		_ClearLine
 11531 ;;		_SetFrameMemoryPartial
 11532 ;;		___wmul
 11533 ;; This function is called by:
 11534 ;;		_ButtonEventHandler
 11535 ;;		_DisplayRefreshHandler
 11536 ;;		_RotaryEncoderEventHandler
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540                           
 11541                           ;psect for function _ImageFromPickupConf
 11542  01CD                     _ImageFromPickupConf:
 11543                           
 11544                           ;incstack = 0
 11545                           ; Regs used in _ImageFromPickupConf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11546                           ;ImageFromPickupConf@pc stored from wreg
 11547  01CD  0022               	movlb	2	; select bank2
 11548  01CE  00CA               	movwf	ImageFromPickupConf@pc^(0+256)
 11549                           
 11550                           ;guitar_image.c: 134:     int8_t index = 0;
 11551  01CF  01C3               	clrf	ImageFromPickupConf@index^(0+256)
 11552                           
 11553                           ;guitar_image.c: 135:     uint16_t start_x = 0;
 11554  01D0  01C8               	clrf	ImageFromPickupConf@start_x^(0+256)
 11555  01D1  01C9               	clrf	(ImageFromPickupConf@start_x+1)^(0+256)
 11556                           
 11557                           ;guitar_image.c: 136:     uint16_t start_y = 0;
 11558  01D2  01C4               	clrf	ImageFromPickupConf@start_y^(0+256)
 11559  01D3  01C5               	clrf	(ImageFromPickupConf@start_y+1)^(0+256)
 11560                           
 11561                           ;guitar_image.c: 138:     int8_t pickup_indexes[4];;guitar_image.c: 139:     pickup_inde
      +                          xes[0] = pc->neck;
 11562  01D4  0086               	movwf	6
 11563  01D5  0187               	clrf	7
 11564  01D6  0801               	movf	1,w
 11565  01D7  00BC               	movwf	ImageFromPickupConf@pickup_indexes^(0+256)
 11566                           
 11567                           ;guitar_image.c: 140:     pickup_indexes[1] = pc->middle;
 11568  01D8  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 11569  01D9  0086               	movwf	6
 11570  01DA  3F41               	moviw [1]fsr1
 11571  01DB  00BD               	movwf	(ImageFromPickupConf@pickup_indexes^(0+256)+1)
 11572                           
 11573                           ;guitar_image.c: 141:     pickup_indexes[2] = pc->bridge;
 11574  01DC  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 11575  01DD  0086               	movwf	6
 11576  01DE  3F42               	moviw [2]fsr1
 11577  01DF  00BE               	movwf	(ImageFromPickupConf@pickup_indexes^(0+256)+2)
 11578                           
 11579                           ;guitar_image.c: 142:     pickup_indexes[3] = pc->general;
 11580  01E0  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 11581  01E1  0086               	movwf	6
 11582  01E2  3F43               	moviw [3]fsr1
 11583  01E3  00BF               	movwf	(ImageFromPickupConf@pickup_indexes^(0+256)+3)
 11584                           
 11585                           ;guitar_image.c: 143:     unsigned char *arrow_type[4];;guitar_image.c: 144:     arrow_t
      +                          ype[0] = n_arrow_rot;
 11586  01E4  300B               	movlw	low (_n_arrow_rot| (0+32768))
 11587  01E5  00AA               	movwf	ImageFromPickupConf@arrow_type^(0+256)
 11588  01E6  3093               	movlw	high (_n_arrow_rot| (0+32768))
 11589  01E7  00AB               	movwf	(ImageFromPickupConf@arrow_type^(0+256)+1)
 11590                           
 11591                           ;guitar_image.c: 145:     arrow_type[1] = m_arrow_rot;
 11592  01E8  3054               	movlw	low (_m_arrow_rot| (0+32768))
 11593  01E9  00AC               	movwf	(low ((ImageFromPickupConf@arrow_type| (0+256)+2)))^0
 11594  01EA  3092               	movlw	high (_m_arrow_rot| (0+32768))
 11595  01EB  00AD               	movwf	((low ((ImageFromPickupConf@arrow_type| (0+256)+2)))^0+1)
 11596                           
 11597                           ;guitar_image.c: 146:     arrow_type[2] = b_arrow_rot;
 11598  01EC  309D               	movlw	low (_b_arrow_rot| (0+32768))
 11599  01ED  00AE               	movwf	(low ((ImageFromPickupConf@arrow_type| (0+256)+4)))^0
 11600  01EE  3091               	movlw	high (_b_arrow_rot| (0+32768))
 11601  01EF  00AF               	movwf	((low ((ImageFromPickupConf@arrow_type| (0+256)+4)))^0+1)
 11602                           
 11603                           ;guitar_image.c: 147:     arrow_type[3] = g_arrow_rot;
 11604  01F0  30E6               	movlw	low (_g_arrow_rot| (0+32768))
 11605  01F1  00B0               	movwf	(low ((ImageFromPickupConf@arrow_type| (0+256)+6)))^0
 11606  01F2  3090               	movlw	high (_g_arrow_rot| (0+32768))
 11607  01F3  00B1               	movwf	((low ((ImageFromPickupConf@arrow_type| (0+256)+6)))^0+1)
 11608                           
 11609                           ;guitar_image.c: 149:     if(selection_index >= 0){
 11610  01F4  0020               	movlb	0	; select bank0
 11611  01F5  1BC2               	btfsc	ImageFromPickupConf@selection_index,7
 11612  01F6  2B7C               	goto	l4429
 11613                           
 11614                           ;guitar_image.c: 151:         start_x = (128 >> 1) - ((4 * character_width_rot) >> 1);
 11615  01F7  3010               	movlw	16
 11616  01F8  0022               	movlb	2	; select bank2
 11617  01F9  00C8               	movwf	ImageFromPickupConf@start_x^(0+256)
 11618  01FA  01C9               	clrf	(ImageFromPickupConf@start_x+1)^(0+256)
 11619  01FB  0020               	movlb	0	; select bank0
 11620  01FC  0842               	movf	ImageFromPickupConf@selection_index,w
 11621  01FD  00F2               	movwf	___wmul@multiplier
 11622  01FE  3018               	movlw	24
 11623  01FF  01F3               	clrf	___wmul@multiplier+1
 11624  0200  00F4               	movwf	___wmul@multiplicand
 11625  0201  01F5               	clrf	___wmul@multiplicand+1
 11626  0202  25A3  3180         	fcall	___wmul
 11627  0204  0872               	movf	?___wmul,w
 11628  0205  0022               	movlb	2	; select bank2
 11629  0206  07C8               	addwf	ImageFromPickupConf@start_x^(0+256),f
 11630  0207  0873               	movf	?___wmul+1,w
 11631  0208  3DC9               	addwfc	(ImageFromPickupConf@start_x+1)^(0+256),f
 11632                           
 11633                           ;guitar_image.c: 154:         if(selection_index < 3){
 11634  0209  0020               	movlb	0	; select bank0
 11635  020A  0842               	movf	ImageFromPickupConf@selection_index,w
 11636  020B  3A80               	xorlw	128
 11637  020C  3E7D               	addlw	-131
 11638  020D  1803               	skipnc
 11639  020E  2A2D               	goto	l4391
 11640                           
 11641                           ;guitar_image.c: 155:             ClearLine(start_x, 5);
 11642  020F  0022               	movlb	2	; select bank2
 11643  0210  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 11644  0211  0020               	movlb	0	; select bank0
 11645  0212  00B4               	movwf	ClearLine@start_x+1
 11646  0213  0022               	movlb	2	; select bank2
 11647  0214  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 11648  0215  0020               	movlb	0	; select bank0
 11649  0216  00B3               	movwf	ClearLine@start_x
 11650  0217  3005               	movlw	5
 11651  0218  00B5               	movwf	ClearLine@max_character
 11652  0219  25C2  3180         	fcall	_ClearLine
 11653                           
 11654                           ;guitar_image.c: 156:             max_index = pci[pickup_indexes[selection_index]].lengt
      +                          h;
 11655  021B  0842               	movf	ImageFromPickupConf@selection_index,w
 11656  021C  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 11657  021D  0086               	movwf	6
 11658  021E  3001               	movlw	1	; select bank2/3
 11659  021F  0087               	movwf	7
 11660  0220  0801               	movf	1,w
 11661  0221  00F2               	movwf	___wmul@multiplier
 11662  0222  3007               	movlw	7
 11663  0223  01F3               	clrf	___wmul@multiplier+1
 11664  0224  00F4               	movwf	___wmul@multiplicand
 11665  0225  01F5               	clrf	___wmul@multiplicand+1
 11666  0226  25A3  3180         	fcall	___wmul
 11667  0228  3079               	movlw	121
 11668  0229  0020               	movlb	0	; select bank0
 11669  022A  00C5               	movwf	??_ImageFromPickupConf
 11670  022B  3023               	movlw	35
 11671  022C  2A4A               	goto	L10
 11672  022D                     l4391:	
 11673                           ;guitar_image.c: 157:         }
 11674                           
 11675                           
 11676                           ;guitar_image.c: 159:             ClearLine(start_x, 7);
 11677  022D  0022               	movlb	2	; select bank2
 11678  022E  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 11679  022F  0020               	movlb	0	; select bank0
 11680  0230  00B4               	movwf	ClearLine@start_x+1
 11681  0231  0022               	movlb	2	; select bank2
 11682  0232  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 11683  0233  0020               	movlb	0	; select bank0
 11684  0234  00B3               	movwf	ClearLine@start_x
 11685  0235  3007               	movlw	7
 11686  0236  00B5               	movwf	ClearLine@max_character
 11687  0237  25C2  3180         	fcall	_ClearLine
 11688                           
 11689                           ;guitar_image.c: 160:             max_index = gpci[pickup_indexes[selection_index]].leng
      +                          th;
 11690  0239  0842               	movf	ImageFromPickupConf@selection_index,w
 11691  023A  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 11692  023B  0086               	movwf	6
 11693  023C  3001               	movlw	1	; select bank2/3
 11694  023D  0087               	movwf	7
 11695  023E  0801               	movf	1,w
 11696  023F  00F2               	movwf	___wmul@multiplier
 11697  0240  300B               	movlw	11
 11698  0241  01F3               	clrf	___wmul@multiplier+1
 11699  0242  00F4               	movwf	___wmul@multiplicand
 11700  0243  01F5               	clrf	___wmul@multiplicand+1
 11701  0244  25A3  3180         	fcall	___wmul
 11702  0246  307C               	movlw	124
 11703  0247  0020               	movlb	0	; select bank0
 11704  0248  00C5               	movwf	??_ImageFromPickupConf
 11705  0249  3022               	movlw	34
 11706  024A                     L10:
 11707  024A  00C6               	movwf	??_ImageFromPickupConf+1
 11708  024B  0872               	movf	?___wmul,w
 11709  024C  0745               	addwf	??_ImageFromPickupConf,w
 11710  024D  0086               	movwf	6
 11711  024E  0873               	movf	?___wmul+1,w
 11712  024F  3D46               	addwfc	??_ImageFromPickupConf+1,w
 11713  0250  0087               	movwf	7
 11714  0251  0801               	movf	1,w
 11715  0252  0022               	movlb	2	; select bank2
 11716  0253  00C2               	movwf	ImageFromPickupConf@max_index^(0+256)
 11717                           
 11718                           ;guitar_image.c: 163:         start_y = (296 >> 1) + (((max_index + 2) * character_heigh
      +                          t_rot + arrow_image_height_rot) >> 1);
 11719  0254  00F2               	movwf	___wmul@multiplier
 11720  0255  3019               	movlw	25
 11721  0256  01F3               	clrf	___wmul@multiplier+1
 11722  0257  00F4               	movwf	___wmul@multiplicand
 11723  0258  01F5               	clrf	___wmul@multiplicand+1
 11724  0259  25A3  3180         	fcall	___wmul
 11725  025B  0872               	movf	?___wmul,w
 11726  025C  3E6F               	addlw	111
 11727  025D  0020               	movlb	0	; select bank0
 11728  025E  00C5               	movwf	??_ImageFromPickupConf
 11729  025F  3000               	movlw	0
 11730  0260  3D73               	addwfc	?___wmul+1,w
 11731  0261  00C6               	movwf	??_ImageFromPickupConf+1
 11732  0262  0D46               	rlf	??_ImageFromPickupConf+1,w
 11733  0263  0C46               	rrf	??_ImageFromPickupConf+1,w
 11734  0264  0022               	movlb	2	; select bank2
 11735  0265  00C5               	movwf	(ImageFromPickupConf@start_y+1)^(0+256)
 11736  0266  0020               	movlb	0	; select bank0
 11737  0267  0C45               	rrf	??_ImageFromPickupConf,w
 11738  0268  0022               	movlb	2	; select bank2
 11739  0269  00C4               	movwf	ImageFromPickupConf@start_y^(0+256)
 11740  026A  3094               	movlw	148
 11741  026B  07C4               	addwf	ImageFromPickupConf@start_y^(0+256),f
 11742  026C  1803               	skipnc
 11743  026D  0AC5               	incf	(ImageFromPickupConf@start_y+1)^(0+256),f
 11744  026E  3019               	movlw	25
 11745  026F  02C4               	subwf	ImageFromPickupConf@start_y^(0+256),f
 11746  0270  3000               	movlw	0
 11747  0271  3BC5               	subwfb	(ImageFromPickupConf@start_y+1)^(0+256),f
 11748                           
 11749                           ;guitar_image.c: 165:         if(bracket)
 11750  0272  0020               	movlb	0	; select bank0
 11751  0273  0843               	movf	ImageFromPickupConf@bracket,w
 11752  0274  1903               	btfsc	3,2
 11753  0275  2A95               	goto	l4405
 11754  0276  30B7               	movlw	low (_bracket_left_rot| (0+32768))
 11755  0277  00A8               	movwf	SetFrameMemoryPartial@image_buffer
 11756  0278  3094               	movlw	high (_bracket_left_rot| (0+32768))
 11757  0279  00A9               	movwf	SetFrameMemoryPartial@image_buffer+1
 11758  027A  0022               	movlb	2	; select bank2
 11759  027B  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 11760  027C  0020               	movlb	0	; select bank0
 11761  027D  00AB               	movwf	SetFrameMemoryPartial@x+1
 11762  027E  0022               	movlb	2	; select bank2
 11763  027F  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 11764  0280  0020               	movlb	0	; select bank0
 11765  0281  00AA               	movwf	SetFrameMemoryPartial@x
 11766  0282  0022               	movlb	2	; select bank2
 11767  0283  0845               	movf	(ImageFromPickupConf@start_y+1)^(0+256),w
 11768  0284  0020               	movlb	0	; select bank0
 11769  0285  00AD               	movwf	SetFrameMemoryPartial@y+1
 11770  0286  0022               	movlb	2	; select bank2
 11771  0287  0844               	movf	ImageFromPickupConf@start_y^(0+256),w
 11772  0288  0020               	movlb	0	; select bank0
 11773  0289  00AC               	movwf	SetFrameMemoryPartial@y
 11774  028A  3018               	movlw	24
 11775  028B  00AE               	movwf	SetFrameMemoryPartial@image_width
 11776  028C  3019               	movlw	25
 11777  028D  01AF               	clrf	SetFrameMemoryPartial@image_width+1
 11778  028E  00B0               	movwf	SetFrameMemoryPartial@image_height
 11779  028F  01B1               	clrf	SetFrameMemoryPartial@image_height+1
 11780  0290  01B2               	clrf	SetFrameMemoryPartial@invert_color
 11781  0291  0AB2               	incf	SetFrameMemoryPartial@invert_color,f
 11782  0292  318C  2412  3180   	fcall	_SetFrameMemoryPartial
 11783  0295                     l4405:
 11784  0295  303D               	movlw	61
 11785  0296  0022               	movlb	2	; select bank2
 11786  0297  02C4               	subwf	ImageFromPickupConf@start_y^(0+256),f
 11787  0298  3000               	movlw	0
 11788  0299  3BC5               	subwfb	(ImageFromPickupConf@start_y+1)^(0+256),f
 11789  029A  0020               	movlb	0	; select bank0
 11790  029B  3542               	lslf	ImageFromPickupConf@selection_index,w
 11791  029C  3E2A               	addlw	(low (ImageFromPickupConf@arrow_type| (0+256)))& (0+255)
 11792  029D  0086               	movwf	6
 11793  029E  3001               	movlw	1	; select bank2/3
 11794  029F  0087               	movwf	7
 11795  02A0  3F40               	moviw [0]fsr1
 11796  02A1  00A8               	movwf	SetFrameMemoryPartial@image_buffer
 11797  02A2  3F41               	moviw [1]fsr1
 11798  02A3  00A9               	movwf	SetFrameMemoryPartial@image_buffer+1
 11799  02A4  0022               	movlb	2	; select bank2
 11800  02A5  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 11801  02A6  0020               	movlb	0	; select bank0
 11802  02A7  00AB               	movwf	SetFrameMemoryPartial@x+1
 11803  02A8  0022               	movlb	2	; select bank2
 11804  02A9  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 11805  02AA  0020               	movlb	0	; select bank0
 11806  02AB  00AA               	movwf	SetFrameMemoryPartial@x
 11807  02AC  0022               	movlb	2	; select bank2
 11808  02AD  0845               	movf	(ImageFromPickupConf@start_y+1)^(0+256),w
 11809  02AE  0020               	movlb	0	; select bank0
 11810  02AF  00AD               	movwf	SetFrameMemoryPartial@y+1
 11811  02B0  0022               	movlb	2	; select bank2
 11812  02B1  0844               	movf	ImageFromPickupConf@start_y^(0+256),w
 11813  02B2  0020               	movlb	0	; select bank0
 11814  02B3  00AC               	movwf	SetFrameMemoryPartial@y
 11815  02B4  3018               	movlw	24
 11816  02B5  00AE               	movwf	SetFrameMemoryPartial@image_width
 11817  02B6  303D               	movlw	61
 11818  02B7  01AF               	clrf	SetFrameMemoryPartial@image_width+1
 11819  02B8  00B0               	movwf	SetFrameMemoryPartial@image_height
 11820  02B9  01B1               	clrf	SetFrameMemoryPartial@image_height+1
 11821  02BA  01B2               	clrf	SetFrameMemoryPartial@invert_color
 11822  02BB  0AB2               	incf	SetFrameMemoryPartial@invert_color,f
 11823  02BC  318C  2412  3180   	fcall	_SetFrameMemoryPartial
 11824  02BF                     l4421:	
 11825                           ;guitar_image.c: 171:         while(index < max_index){
 11826                           
 11827                           
 11828                           ;guitar_image.c: 171:         while(index < max_index){
 11829  02BF  0022               	movlb	2	; select bank2
 11830  02C0  0843               	movf	ImageFromPickupConf@index^(0+256),w
 11831  02C1  0020               	movlb	0	; select bank0
 11832  02C2  00C5               	movwf	??_ImageFromPickupConf
 11833  02C3  01C6               	clrf	??_ImageFromPickupConf+1
 11834  02C4  1BC5               	btfsc	??_ImageFromPickupConf,7
 11835  02C5  03C6               	decf	??_ImageFromPickupConf+1,f
 11836  02C6  0846               	movf	??_ImageFromPickupConf+1,w
 11837  02C7  3A80               	xorlw	128
 11838  02C8  00C7               	movwf	??_ImageFromPickupConf+2
 11839  02C9  3080               	movlw	128
 11840  02CA  0247               	subwf	??_ImageFromPickupConf+2,w
 11841  02CB  1D03               	skipz
 11842  02CC  2AD1               	goto	u3085
 11843  02CD  0022               	movlb	2	; select bank2
 11844  02CE  0842               	movf	ImageFromPickupConf@max_index^(0+256),w
 11845  02CF  0020               	movlb	0	; select bank0
 11846  02D0  0245               	subwf	??_ImageFromPickupConf,w
 11847  02D1                     u3085:
 11848  02D1  3019               	movlw	25
 11849  02D2  1803               	btfsc	3,0
 11850  02D3  2B56               	goto	L14
 11851  02D4  0022               	movlb	2	; select bank2
 11852  02D5  02C4               	subwf	ImageFromPickupConf@start_y^(0+256),f
 11853  02D6  3000               	movlw	0
 11854  02D7  3BC5               	subwfb	(ImageFromPickupConf@start_y+1)^(0+256),f
 11855                           
 11856                           ;guitar_image.c: 173:             if(selection_index < 3)
 11857  02D8  0020               	movlb	0	; select bank0
 11858  02D9  0842               	movf	ImageFromPickupConf@selection_index,w
 11859  02DA  3A80               	xorlw	128
 11860  02DB  3E7D               	addlw	-131
 11861  02DC  1803               	skipnc
 11862  02DD  2B08               	goto	l4415
 11863  02DE  0022               	movlb	2	; select bank2
 11864  02DF  0843               	movf	ImageFromPickupConf@index^(0+256),w
 11865  02E0  0020               	movlb	0	; select bank0
 11866  02E1  00C5               	movwf	??_ImageFromPickupConf
 11867  02E2  01C6               	clrf	??_ImageFromPickupConf+1
 11868  02E3  35C5               	lslf	??_ImageFromPickupConf,f
 11869  02E4  0DC6               	rlf	??_ImageFromPickupConf+1,f
 11870  02E5  0842               	movf	ImageFromPickupConf@selection_index,w
 11871  02E6  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 11872  02E7  0086               	movwf	6
 11873  02E8  3001               	movlw	1	; select bank2/3
 11874  02E9  0087               	movwf	7
 11875  02EA  0801               	movf	1,w
 11876  02EB  00F2               	movwf	___wmul@multiplier
 11877  02EC  3007               	movlw	7
 11878  02ED  01F3               	clrf	___wmul@multiplier+1
 11879  02EE  00F4               	movwf	___wmul@multiplicand
 11880  02EF  01F5               	clrf	___wmul@multiplicand+1
 11881  02F0  25A3  3180         	fcall	___wmul
 11882  02F2  307A               	movlw	122
 11883  02F3  0020               	movlb	0	; select bank0
 11884  02F4  00C7               	movwf	??_ImageFromPickupConf+2
 11885  02F5  3023               	movlw	35
 11886  02F6  00C8               	movwf	??_ImageFromPickupConf+3
 11887  02F7  0872               	movf	?___wmul,w
 11888  02F8  0747               	addwf	??_ImageFromPickupConf+2,w
 11889  02F9  00C9               	movwf	??_ImageFromPickupConf+4
 11890  02FA  0873               	movf	?___wmul+1,w
 11891  02FB  3D48               	addwfc	??_ImageFromPickupConf+3,w
 11892  02FC  00CA               	movwf	??_ImageFromPickupConf+5
 11893  02FD  0845               	movf	??_ImageFromPickupConf,w
 11894  02FE  0749               	addwf	??_ImageFromPickupConf+4,w
 11895  02FF  0086               	movwf	6
 11896  0300  0846               	movf	??_ImageFromPickupConf+1,w
 11897  0301  3D4A               	addwfc	??_ImageFromPickupConf+5,w
 11898  0302  0087               	movwf	7
 11899  0303  3F40               	moviw [0]fsr1
 11900  0304  0022               	movlb	2	; select bank2
 11901  0305  00C0               	movwf	_ImageFromPickupConf$2078^(0+256)
 11902  0306  3F41               	moviw [1]fsr1
 11903  0307  2B31               	goto	L12
 11904  0308                     l4415:
 11905  0308  0022               	movlb	2	; select bank2
 11906  0309  0843               	movf	ImageFromPickupConf@index^(0+256),w
 11907  030A  0020               	movlb	0	; select bank0
 11908  030B  00C5               	movwf	??_ImageFromPickupConf
 11909  030C  01C6               	clrf	??_ImageFromPickupConf+1
 11910  030D  35C5               	lslf	??_ImageFromPickupConf,f
 11911  030E  0DC6               	rlf	??_ImageFromPickupConf+1,f
 11912  030F  0842               	movf	ImageFromPickupConf@selection_index,w
 11913  0310  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 11914  0311  0086               	movwf	6
 11915  0312  3001               	movlw	1	; select bank2/3
 11916  0313  0087               	movwf	7
 11917  0314  0801               	movf	1,w
 11918  0315  00F2               	movwf	___wmul@multiplier
 11919  0316  300B               	movlw	11
 11920  0317  01F3               	clrf	___wmul@multiplier+1
 11921  0318  00F4               	movwf	___wmul@multiplicand
 11922  0319  01F5               	clrf	___wmul@multiplicand+1
 11923  031A  25A3  3180         	fcall	___wmul
 11924  031C  307D               	movlw	125
 11925  031D  0020               	movlb	0	; select bank0
 11926  031E  00C7               	movwf	??_ImageFromPickupConf+2
 11927  031F  3022               	movlw	34
 11928  0320  00C8               	movwf	??_ImageFromPickupConf+3
 11929  0321  0872               	movf	?___wmul,w
 11930  0322  0747               	addwf	??_ImageFromPickupConf+2,w
 11931  0323  00C9               	movwf	??_ImageFromPickupConf+4
 11932  0324  0873               	movf	?___wmul+1,w
 11933  0325  3D48               	addwfc	??_ImageFromPickupConf+3,w
 11934  0326  00CA               	movwf	??_ImageFromPickupConf+5
 11935  0327  0845               	movf	??_ImageFromPickupConf,w
 11936  0328  0749               	addwf	??_ImageFromPickupConf+4,w
 11937  0329  0086               	movwf	6
 11938  032A  0846               	movf	??_ImageFromPickupConf+1,w
 11939  032B  3D4A               	addwfc	??_ImageFromPickupConf+5,w
 11940  032C  0087               	movwf	7
 11941  032D  3F40               	moviw [0]fsr1
 11942  032E  0022               	movlb	2	; select bank2
 11943  032F  00C0               	movwf	_ImageFromPickupConf$2078^(0+256)
 11944  0330  3F41               	moviw [1]fsr1
 11945  0331                     L12:
 11946  0331  00C1               	movwf	(_ImageFromPickupConf$2078+1)^(0+256)
 11947  0332  0020               	movlb	0	; select bank0
 11948  0333  00A9               	movwf	SetFrameMemoryPartial@image_buffer+1
 11949  0334  0022               	movlb	2	; select bank2
 11950  0335  0840               	movf	_ImageFromPickupConf$2078^(0+256),w
 11951  0336  0020               	movlb	0	; select bank0
 11952  0337  00A8               	movwf	SetFrameMemoryPartial@image_buffer
 11953  0338  0022               	movlb	2	; select bank2
 11954  0339  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 11955  033A  0020               	movlb	0	; select bank0
 11956  033B  00AB               	movwf	SetFrameMemoryPartial@x+1
 11957  033C  0022               	movlb	2	; select bank2
 11958  033D  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 11959  033E  0020               	movlb	0	; select bank0
 11960  033F  00AA               	movwf	SetFrameMemoryPartial@x
 11961  0340  0022               	movlb	2	; select bank2
 11962  0341  0845               	movf	(ImageFromPickupConf@start_y+1)^(0+256),w
 11963  0342  0020               	movlb	0	; select bank0
 11964  0343  00AD               	movwf	SetFrameMemoryPartial@y+1
 11965  0344  0022               	movlb	2	; select bank2
 11966  0345  0844               	movf	ImageFromPickupConf@start_y^(0+256),w
 11967  0346  0020               	movlb	0	; select bank0
 11968  0347  00AC               	movwf	SetFrameMemoryPartial@y
 11969  0348  3018               	movlw	24
 11970  0349  00AE               	movwf	SetFrameMemoryPartial@image_width
 11971  034A  3019               	movlw	25
 11972  034B  01AF               	clrf	SetFrameMemoryPartial@image_width+1
 11973  034C  00B0               	movwf	SetFrameMemoryPartial@image_height
 11974  034D  01B1               	clrf	SetFrameMemoryPartial@image_height+1
 11975  034E  01B2               	clrf	SetFrameMemoryPartial@invert_color
 11976  034F  0AB2               	incf	SetFrameMemoryPartial@invert_color,f
 11977  0350  318C  2412  3180   	fcall	_SetFrameMemoryPartial
 11978                           
 11979                           ;guitar_image.c: 177:             index++;
 11980  0353  0022               	movlb	2	; select bank2
 11981  0354  0AC3               	incf	ImageFromPickupConf@index^(0+256),f
 11982  0355  2ABF               	goto	l4421
 11983  0356                     L14:
 11984  0356  0022               	movlb	2	; select bank2
 11985  0357  02C4               	subwf	ImageFromPickupConf@start_y^(0+256),f
 11986  0358  3000               	movlw	0
 11987  0359  3BC5               	subwfb	(ImageFromPickupConf@start_y+1)^(0+256),f
 11988                           
 11989                           ;guitar_image.c: 181:         if(bracket)
 11990  035A  0020               	movlb	0	; select bank0
 11991  035B  0843               	movf	ImageFromPickupConf@bracket,w
 11992  035C  1903               	btfsc	3,2
 11993  035D  0008               	return
 11994  035E  306C               	movlw	low (_bracket_right_rot| (0+32768))
 11995  035F  00A8               	movwf	SetFrameMemoryPartial@image_buffer
 11996  0360  3094               	movlw	high (_bracket_right_rot| (0+32768))
 11997  0361  00A9               	movwf	SetFrameMemoryPartial@image_buffer+1
 11998  0362  0022               	movlb	2	; select bank2
 11999  0363  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 12000  0364  0020               	movlb	0	; select bank0
 12001  0365  00AB               	movwf	SetFrameMemoryPartial@x+1
 12002  0366  0022               	movlb	2	; select bank2
 12003  0367  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 12004  0368  0020               	movlb	0	; select bank0
 12005  0369  00AA               	movwf	SetFrameMemoryPartial@x
 12006  036A  0022               	movlb	2	; select bank2
 12007  036B  0845               	movf	(ImageFromPickupConf@start_y+1)^(0+256),w
 12008  036C  0020               	movlb	0	; select bank0
 12009  036D  00AD               	movwf	SetFrameMemoryPartial@y+1
 12010  036E  0022               	movlb	2	; select bank2
 12011  036F  0844               	movf	ImageFromPickupConf@start_y^(0+256),w
 12012  0370  0020               	movlb	0	; select bank0
 12013  0371  00AC               	movwf	SetFrameMemoryPartial@y
 12014  0372  3018               	movlw	24
 12015  0373  00AE               	movwf	SetFrameMemoryPartial@image_width
 12016  0374  3019               	movlw	25
 12017  0375  01AF               	clrf	SetFrameMemoryPartial@image_width+1
 12018  0376  00B0               	movwf	SetFrameMemoryPartial@image_height
 12019  0377  01B1               	clrf	SetFrameMemoryPartial@image_height+1
 12020  0378  01B2               	clrf	SetFrameMemoryPartial@invert_color
 12021  0379  0AB2               	incf	SetFrameMemoryPartial@invert_color,f
 12022  037A  318C  2C12         	ljmp	l4241
 12023  037C                     l4429:
 12024                           
 12025                           ;guitar_image.c: 185:         ClearFrameMemory(0xFF);
 12026  037C  30FF               	movlw	255
 12027  037D  2622  3180         	fcall	_ClearFrameMemory
 12028                           
 12029                           ;guitar_image.c: 189:         start_x = (128 >> 1) - (((((pc->neck == 0) && !draw_empty 
      +                          ? 0 : 1) + ((pc->middle == 0) && !draw_empty ? 0 : 1) + ((pc->bridge == 0) && !draw_empt
      +                          y ? 0 : 1) + 1) * character_width_rot) >> 1);
 12030  037F  0022               	movlb	2	; select bank2
 12031  0380  01A4               	clrf	_ImageFromPickupConf$1215^(0+256)
 12032  0381  0AA4               	incf	_ImageFromPickupConf$1215^(0+256),f
 12033  0382  01A5               	clrf	(_ImageFromPickupConf$1215+1)^(0+256)
 12034  0383  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 12035  0384  3E02               	addlw	2
 12036  0385  0086               	movwf	6
 12037  0386  0187               	clrf	7
 12038  0387  0801               	movf	1,w
 12039  0388  1D03               	btfss	3,2
 12040  0389  2B91               	goto	l4439
 12041  038A  0020               	movlb	0	; select bank0
 12042  038B  0844               	movf	ImageFromPickupConf@draw_empty,w
 12043  038C  1D03               	btfss	3,2
 12044  038D  2B91               	goto	l4439
 12045  038E  0022               	movlb	2	; select bank2
 12046  038F  01A4               	clrf	_ImageFromPickupConf$1215^(0+256)
 12047  0390  01A5               	clrf	(_ImageFromPickupConf$1215+1)^(0+256)
 12048  0391                     l4439:
 12049  0391  0022               	movlb	2	; select bank2
 12050  0392  01A6               	clrf	_ImageFromPickupConf$1216^(0+256)
 12051  0393  0AA6               	incf	_ImageFromPickupConf$1216^(0+256),f
 12052  0394  01A7               	clrf	(_ImageFromPickupConf$1216+1)^(0+256)
 12053  0395  0A4A               	incf	ImageFromPickupConf@pc^(0+256),w
 12054  0396  0086               	movwf	6
 12055  0397  0187               	clrf	7
 12056  0398  0801               	movf	1,w
 12057  0399  1D03               	btfss	3,2
 12058  039A  2BA2               	goto	l4447
 12059  039B  0020               	movlb	0	; select bank0
 12060  039C  0844               	movf	ImageFromPickupConf@draw_empty,w
 12061  039D  1D03               	btfss	3,2
 12062  039E  2BA2               	goto	l4447
 12063  039F  0022               	movlb	2	; select bank2
 12064  03A0  01A6               	clrf	_ImageFromPickupConf$1216^(0+256)
 12065  03A1  01A7               	clrf	(_ImageFromPickupConf$1216+1)^(0+256)
 12066  03A2                     l4447:
 12067  03A2  0022               	movlb	2	; select bank2
 12068  03A3  01A8               	clrf	_ImageFromPickupConf$1217^(0+256)
 12069  03A4  0AA8               	incf	_ImageFromPickupConf$1217^(0+256),f
 12070  03A5  01A9               	clrf	(_ImageFromPickupConf$1217+1)^(0+256)
 12071  03A6  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 12072  03A7  0086               	movwf	6
 12073  03A8  0187               	clrf	7
 12074  03A9  0801               	movf	1,w
 12075  03AA  1D03               	btfss	3,2
 12076  03AB  2BB3               	goto	l4455
 12077  03AC  0020               	movlb	0	; select bank0
 12078  03AD  0844               	movf	ImageFromPickupConf@draw_empty,w
 12079  03AE  1D03               	btfss	3,2
 12080  03AF  2BB3               	goto	l4455
 12081  03B0  0022               	movlb	2	; select bank2
 12082  03B1  01A8               	clrf	_ImageFromPickupConf$1217^(0+256)
 12083  03B2  01A9               	clrf	(_ImageFromPickupConf$1217+1)^(0+256)
 12084  03B3                     l4455:
 12085  03B3  3040               	movlw	64
 12086  03B4  0022               	movlb	2	; select bank2
 12087  03B5  00C8               	movwf	ImageFromPickupConf@start_x^(0+256)
 12088  03B6  01C9               	clrf	(ImageFromPickupConf@start_x+1)^(0+256)
 12089  03B7  0826               	movf	_ImageFromPickupConf$1216^(0+256),w
 12090  03B8  0728               	addwf	_ImageFromPickupConf$1217^(0+256),w
 12091  03B9  00F2               	movwf	___wmul@multiplier
 12092  03BA  0827               	movf	(_ImageFromPickupConf$1216+1)^(0+256),w
 12093  03BB  3D29               	addwfc	(_ImageFromPickupConf$1217+1)^(0+256),w
 12094  03BC  00F3               	movwf	___wmul@multiplier+1
 12095  03BD  0824               	movf	_ImageFromPickupConf$1215^(0+256),w
 12096  03BE  07F2               	addwf	___wmul@multiplier,f
 12097  03BF  0825               	movf	(_ImageFromPickupConf$1215+1)^(0+256),w
 12098  03C0  3DF3               	addwfc	___wmul@multiplier+1,f
 12099  03C1  0AF2               	incf	___wmul@multiplier,f
 12100  03C2  1903               	skipnz
 12101  03C3  0AF3               	incf	___wmul@multiplier+1,f
 12102  03C4  3018               	movlw	24
 12103  03C5  00F4               	movwf	___wmul@multiplicand
 12104  03C6  01F5               	clrf	___wmul@multiplicand+1
 12105  03C7  25A3  3180         	fcall	___wmul
 12106  03C9  0872               	movf	?___wmul,w
 12107  03CA  0020               	movlb	0	; select bank0
 12108  03CB  00C5               	movwf	??_ImageFromPickupConf
 12109  03CC  0873               	movf	?___wmul+1,w
 12110  03CD  00C6               	movwf	??_ImageFromPickupConf+1
 12111  03CE  0D46               	rlf	??_ImageFromPickupConf+1,w
 12112  03CF  0CC6               	rrf	??_ImageFromPickupConf+1,f
 12113  03D0  0CC5               	rrf	??_ImageFromPickupConf,f
 12114  03D1  0845               	movf	??_ImageFromPickupConf,w
 12115  03D2  0022               	movlb	2	; select bank2
 12116  03D3  02C8               	subwf	ImageFromPickupConf@start_x^(0+256),f
 12117  03D4  0020               	movlb	0	; select bank0
 12118  03D5  0846               	movf	??_ImageFromPickupConf+1,w
 12119  03D6  0022               	movlb	2	; select bank2
 12120  03D7  3BC9               	subwfb	(ImageFromPickupConf@start_x+1)^(0+256),f
 12121                           
 12122                           ;guitar_image.c: 191:         _Bool need_to_draw_row[4];;guitar_image.c: 192:         ne
      +                          ed_to_draw_row[0] = pc->neck != 0 || draw_empty;
 12123  03D8  01B2               	clrf	_ImageFromPickupConf$1219^(0+256)
 12124  03D9  0AB2               	incf	_ImageFromPickupConf$1219^(0+256),f
 12125  03DA  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 12126  03DB  0086               	movwf	6
 12127  03DC  0187               	clrf	7
 12128  03DD  0801               	movf	1,w
 12129  03DE  1D03               	btfss	3,2
 12130  03DF  2BE6               	goto	l4467
 12131  03E0  0020               	movlb	0	; select bank0
 12132  03E1  0844               	movf	ImageFromPickupConf@draw_empty,w
 12133  03E2  1D03               	btfss	3,2
 12134  03E3  2BE6               	goto	l4467
 12135  03E4  0022               	movlb	2	; select bank2
 12136  03E5  01B2               	clrf	_ImageFromPickupConf$1219^(0+256)
 12137  03E6                     l4467:
 12138  03E6  0022               	movlb	2	; select bank2
 12139  03E7  0832               	movf	_ImageFromPickupConf$1219^(0+256),w
 12140  03E8  1903               	btfsc	3,2
 12141  03E9  2BEC               	goto	u3180
 12142  03EA  3001               	movlw	1
 12143  03EB  2BED               	goto	u3190
 12144  03EC                     u3180:
 12145  03EC  3000               	movlw	0
 12146  03ED                     u3190:
 12147  03ED  00A0               	movwf	ImageFromPickupConf@need_to_draw_row^(0+256)
 12148                           
 12149                           ;guitar_image.c: 193:         need_to_draw_row[1] = pc->middle != 0 || draw_empty;
 12150  03EE  01B3               	clrf	_ImageFromPickupConf$1220^(0+256)
 12151  03EF  0AB3               	incf	_ImageFromPickupConf$1220^(0+256),f
 12152  03F0  0A4A               	incf	ImageFromPickupConf@pc^(0+256),w
 12153  03F1  0086               	movwf	6
 12154  03F2  0187               	clrf	7
 12155  03F3  0801               	movf	1,w
 12156  03F4  1D03               	btfss	3,2
 12157  03F5  2BFC               	goto	l4477
 12158  03F6  0020               	movlb	0	; select bank0
 12159  03F7  0844               	movf	ImageFromPickupConf@draw_empty,w
 12160  03F8  1D03               	btfss	3,2
 12161  03F9  2BFC               	goto	l4477
 12162  03FA  0022               	movlb	2	; select bank2
 12163  03FB  01B3               	clrf	_ImageFromPickupConf$1220^(0+256)
 12164  03FC                     l4477:
 12165  03FC  0022               	movlb	2	; select bank2
 12166  03FD  0833               	movf	_ImageFromPickupConf$1220^(0+256),w
 12167  03FE  1903               	btfsc	3,2
 12168  03FF  2C02               	goto	u3220
 12169  0400  3001               	movlw	1
 12170  0401  2C03               	goto	u3230
 12171  0402                     u3220:
 12172  0402  3000               	movlw	0
 12173  0403                     u3230:
 12174  0403  00A1               	movwf	(ImageFromPickupConf@need_to_draw_row^(0+256)+1)
 12175                           
 12176                           ;guitar_image.c: 194:         need_to_draw_row[2] = pc->bridge != 0 || draw_empty;
 12177  0404  01B4               	clrf	_ImageFromPickupConf$1221^(0+256)
 12178  0405  0AB4               	incf	_ImageFromPickupConf$1221^(0+256),f
 12179  0406  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 12180  0407  3E02               	addlw	2
 12181  0408  0086               	movwf	6
 12182  0409  0187               	clrf	7
 12183  040A  0801               	movf	1,w
 12184  040B  1D03               	btfss	3,2
 12185  040C  2C13               	goto	l4487
 12186  040D  0020               	movlb	0	; select bank0
 12187  040E  0844               	movf	ImageFromPickupConf@draw_empty,w
 12188  040F  1D03               	btfss	3,2
 12189  0410  2C13               	goto	l4487
 12190  0411  0022               	movlb	2	; select bank2
 12191  0412  01B4               	clrf	_ImageFromPickupConf$1221^(0+256)
 12192  0413                     l4487:
 12193  0413  0022               	movlb	2	; select bank2
 12194  0414  0834               	movf	_ImageFromPickupConf$1221^(0+256),w
 12195  0415  1903               	btfsc	3,2
 12196  0416  2C19               	goto	u3260
 12197  0417  3001               	movlw	1
 12198  0418  2C1A               	goto	u3270
 12199  0419                     u3260:
 12200  0419  3000               	movlw	0
 12201  041A                     u3270:
 12202  041A  00A2               	movwf	(ImageFromPickupConf@need_to_draw_row^(0+256)+2)
 12203                           
 12204                           ;guitar_image.c: 195:         need_to_draw_row[3] = 1;
 12205  041B  01A3               	clrf	(ImageFromPickupConf@need_to_draw_row^(0+256)+3)
 12206  041C  0AA3               	incf	(ImageFromPickupConf@need_to_draw_row^(0+256)+3),f
 12207                           
 12208                           ;guitar_image.c: 196:         _Bool need_to_skip_row[4];;guitar_image.c: 197:         ne
      +                          ed_to_skip_row[0] = 0;
 12209  041D  01B8               	clrf	ImageFromPickupConf@need_to_skip_row^(0+256)
 12210                           
 12211                           ;guitar_image.c: 198:         need_to_skip_row[1] = pc->neck != 0 || draw_empty;
 12212  041E  01B5               	clrf	_ImageFromPickupConf$1223^(0+256)
 12213  041F  0AB5               	incf	_ImageFromPickupConf$1223^(0+256),f
 12214  0420  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 12215  0421  0086               	movwf	6
 12216  0422  0187               	clrf	7
 12217  0423  0801               	movf	1,w
 12218  0424  1D03               	btfss	3,2
 12219  0425  2C2C               	goto	l4501
 12220  0426  0020               	movlb	0	; select bank0
 12221  0427  0844               	movf	ImageFromPickupConf@draw_empty,w
 12222  0428  1D03               	btfss	3,2
 12223  0429  2C2C               	goto	l4501
 12224  042A  0022               	movlb	2	; select bank2
 12225  042B  01B5               	clrf	_ImageFromPickupConf$1223^(0+256)
 12226  042C                     l4501:
 12227  042C  0022               	movlb	2	; select bank2
 12228  042D  0835               	movf	_ImageFromPickupConf$1223^(0+256),w
 12229  042E  1903               	btfsc	3,2
 12230  042F  2C32               	goto	u3300
 12231  0430  3001               	movlw	1
 12232  0431  2C33               	goto	u3310
 12233  0432                     u3300:
 12234  0432  3000               	movlw	0
 12235  0433                     u3310:
 12236  0433  00B9               	movwf	(ImageFromPickupConf@need_to_skip_row^(0+256)+1)
 12237                           
 12238                           ;guitar_image.c: 199:         need_to_skip_row[2] = need_to_skip_row[1] || pc->middle !=
      +                           0;
 12239  0434  01B6               	clrf	_ImageFromPickupConf$1224^(0+256)
 12240  0435  0AB6               	incf	_ImageFromPickupConf$1224^(0+256),f
 12241  0436  0839               	movf	(ImageFromPickupConf@need_to_skip_row^(0+256)+1),w
 12242  0437  1D03               	btfss	3,2
 12243  0438  2C3F               	goto	l4511
 12244  0439  0A4A               	incf	ImageFromPickupConf@pc^(0+256),w
 12245  043A  0086               	movwf	6
 12246  043B  0187               	clrf	7
 12247  043C  0801               	movf	1,w
 12248  043D  1903               	btfsc	3,2
 12249  043E  01B6               	clrf	_ImageFromPickupConf$1224^(0+256)
 12250  043F                     l4511:
 12251  043F  0836               	movf	_ImageFromPickupConf$1224^(0+256),w
 12252  0440  1903               	btfsc	3,2
 12253  0441  2C44               	goto	u3340
 12254  0442  3001               	movlw	1
 12255  0443  2C45               	goto	u3350
 12256  0444                     u3340:
 12257  0444  3000               	movlw	0
 12258  0445                     u3350:
 12259  0445  00BA               	movwf	(ImageFromPickupConf@need_to_skip_row^(0+256)+2)
 12260                           
 12261                           ;guitar_image.c: 200:         need_to_skip_row[3] = need_to_skip_row[2] || pc->bridge !=
      +                           0;
 12262  0446  01B7               	clrf	_ImageFromPickupConf$1225^(0+256)
 12263  0447  0AB7               	incf	_ImageFromPickupConf$1225^(0+256),f
 12264  0448  083A               	movf	(ImageFromPickupConf@need_to_skip_row^(0+256)+2),w
 12265  0449  1D03               	btfss	3,2
 12266  044A  2C52               	goto	l4521
 12267  044B  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 12268  044C  3E02               	addlw	2
 12269  044D  0086               	movwf	6
 12270  044E  0187               	clrf	7
 12271  044F  0801               	movf	1,w
 12272  0450  1903               	btfsc	3,2
 12273  0451  01B7               	clrf	_ImageFromPickupConf$1225^(0+256)
 12274  0452                     l4521:
 12275  0452  0837               	movf	_ImageFromPickupConf$1225^(0+256),w
 12276  0453  1903               	btfsc	3,2
 12277  0454  2C57               	goto	u3380
 12278  0455  3001               	movlw	1
 12279  0456  2C58               	goto	u3390
 12280  0457                     u3380:
 12281  0457  3000               	movlw	0
 12282  0458                     u3390:
 12283  0458  00BB               	movwf	(ImageFromPickupConf@need_to_skip_row^(0+256)+3)
 12284                           
 12285                           ;guitar_image.c: 201:         int i;;guitar_image.c: 202:         for(i = 0; i < 4; ++i)
 12286  0459  01C6               	clrf	ImageFromPickupConf@i^(0+256)
 12287  045A  01C7               	clrf	(ImageFromPickupConf@i+1)^(0+256)
 12288  045B                     l4525:
 12289  045B  0847               	movf	(ImageFromPickupConf@i+1)^(0+256),w
 12290  045C  3A80               	xorlw	128
 12291  045D  0020               	movlb	0	; select bank0
 12292  045E  00C5               	movwf	??_ImageFromPickupConf
 12293  045F  3080               	movlw	128
 12294  0460  0245               	subwf	??_ImageFromPickupConf,w
 12295  0461  1D03               	skipz
 12296  0462  2C66               	goto	u3405
 12297  0463  3004               	movlw	4
 12298  0464  0022               	movlb	2	; select bank2
 12299  0465  0246               	subwf	ImageFromPickupConf@i^(0+256),w
 12300  0466                     u3405:
 12301  0466  1803               	btfsc	3,0
 12302  0467  0008               	return
 12303                           
 12304                           ;guitar_image.c: 203:         {;guitar_image.c: 204:             if(need_to_draw_row[i])
 12305  0468  0022               	movlb	2	; select bank2
 12306  0469  0846               	movf	ImageFromPickupConf@i^(0+256),w
 12307  046A  3E20               	addlw	(low (ImageFromPickupConf@need_to_draw_row| (0+256)))& (0+255)
 12308  046B  0086               	movwf	6
 12309  046C  3001               	movlw	1	; select bank2/3
 12310  046D  0087               	movwf	7
 12311  046E  0801               	movf	1,w
 12312  046F  1903               	btfsc	3,2
 12313  0470  2D9E               	goto	l4565
 12314                           
 12315                           ;guitar_image.c: 205:             {;guitar_image.c: 206:                 if(i < 3)
 12316  0471  0847               	movf	(ImageFromPickupConf@i+1)^(0+256),w
 12317  0472  3A80               	xorlw	128
 12318  0473  0020               	movlb	0	; select bank0
 12319  0474  00C5               	movwf	??_ImageFromPickupConf
 12320  0475  3080               	movlw	128
 12321  0476  0245               	subwf	??_ImageFromPickupConf,w
 12322  0477  1D03               	skipz
 12323  0478  2C7C               	goto	u3425
 12324  0479  3003               	movlw	3
 12325  047A  0022               	movlb	2	; select bank2
 12326  047B  0246               	subwf	ImageFromPickupConf@i^(0+256),w
 12327  047C                     u3425:
 12328  047C  1803               	skipnc
 12329  047D  2C91               	goto	l4535
 12330                           
 12331                           ;guitar_image.c: 207:                     max_index = pci[pickup_indexes[i]].length;
 12332  047E  0022               	movlb	2	; select bank2
 12333  047F  0846               	movf	ImageFromPickupConf@i^(0+256),w
 12334  0480  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 12335  0481  0086               	movwf	6
 12336  0482  3001               	movlw	1	; select bank2/3
 12337  0483  0087               	movwf	7
 12338  0484  0801               	movf	1,w
 12339  0485  00F2               	movwf	___wmul@multiplier
 12340  0486  3007               	movlw	7
 12341  0487  01F3               	clrf	___wmul@multiplier+1
 12342  0488  00F4               	movwf	___wmul@multiplicand
 12343  0489  01F5               	clrf	___wmul@multiplicand+1
 12344  048A  25A3  3180         	fcall	___wmul
 12345  048C  3079               	movlw	121
 12346  048D  0020               	movlb	0	; select bank0
 12347  048E  00C5               	movwf	??_ImageFromPickupConf
 12348  048F  3023               	movlw	35
 12349  0490  2CA3               	goto	L11
 12350  0491                     l4535:
 12351                           
 12352                           ;guitar_image.c: 209:                     max_index = gpci[pickup_indexes[i]].length;
 12353  0491  0022               	movlb	2	; select bank2
 12354  0492  0846               	movf	ImageFromPickupConf@i^(0+256),w
 12355  0493  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 12356  0494  0086               	movwf	6
 12357  0495  3001               	movlw	1	; select bank2/3
 12358  0496  0087               	movwf	7
 12359  0497  0801               	movf	1,w
 12360  0498  00F2               	movwf	___wmul@multiplier
 12361  0499  300B               	movlw	11
 12362  049A  01F3               	clrf	___wmul@multiplier+1
 12363  049B  00F4               	movwf	___wmul@multiplicand
 12364  049C  01F5               	clrf	___wmul@multiplicand+1
 12365  049D  25A3  3180         	fcall	___wmul
 12366  049F  307C               	movlw	124
 12367  04A0  0020               	movlb	0	; select bank0
 12368  04A1  00C5               	movwf	??_ImageFromPickupConf
 12369  04A2  3022               	movlw	34
 12370  04A3                     L11:
 12371  04A3  00C6               	movwf	??_ImageFromPickupConf+1
 12372  04A4  0872               	movf	?___wmul,w
 12373  04A5  0745               	addwf	??_ImageFromPickupConf,w
 12374  04A6  0086               	movwf	6
 12375  04A7  0873               	movf	?___wmul+1,w
 12376  04A8  3D46               	addwfc	??_ImageFromPickupConf+1,w
 12377  04A9  0087               	movwf	7
 12378  04AA  0801               	movf	1,w
 12379  04AB  0022               	movlb	2	; select bank2
 12380  04AC  00C2               	movwf	ImageFromPickupConf@max_index^(0+256)
 12381                           
 12382                           ;guitar_image.c: 210:                 if(need_to_skip_row[i])
 12383  04AD  0846               	movf	ImageFromPickupConf@i^(0+256),w
 12384  04AE  3E38               	addlw	(low (ImageFromPickupConf@need_to_skip_row| (0+256)))& (0+255)
 12385  04AF  0086               	movwf	6
 12386  04B0  3001               	movlw	1	; select bank2/3
 12387  04B1  0087               	movwf	7
 12388  04B2  0801               	movf	1,w
 12389  04B3  1903               	btfsc	3,2
 12390  04B4  2CB9               	goto	l4541
 12391  04B5  3018               	movlw	24
 12392  04B6  07C8               	addwf	ImageFromPickupConf@start_x^(0+256),f
 12393  04B7  1803               	skipnc
 12394  04B8  0AC9               	incf	(ImageFromPickupConf@start_x+1)^(0+256),f
 12395  04B9                     l4541:
 12396  04B9  0842               	movf	ImageFromPickupConf@max_index^(0+256),w
 12397  04BA  00F2               	movwf	___wmul@multiplier
 12398  04BB  3019               	movlw	25
 12399  04BC  01F3               	clrf	___wmul@multiplier+1
 12400  04BD  00F4               	movwf	___wmul@multiplicand
 12401  04BE  01F5               	clrf	___wmul@multiplicand+1
 12402  04BF  25A3  3180         	fcall	___wmul
 12403  04C1  0872               	movf	?___wmul,w
 12404  04C2  3E3D               	addlw	61
 12405  04C3  0020               	movlb	0	; select bank0
 12406  04C4  00C5               	movwf	??_ImageFromPickupConf
 12407  04C5  3000               	movlw	0
 12408  04C6  3D73               	addwfc	?___wmul+1,w
 12409  04C7  00C6               	movwf	??_ImageFromPickupConf+1
 12410  04C8  0D46               	rlf	??_ImageFromPickupConf+1,w
 12411  04C9  0C46               	rrf	??_ImageFromPickupConf+1,w
 12412  04CA  0022               	movlb	2	; select bank2
 12413  04CB  00C5               	movwf	(ImageFromPickupConf@start_y+1)^(0+256)
 12414  04CC  0020               	movlb	0	; select bank0
 12415  04CD  0C45               	rrf	??_ImageFromPickupConf,w
 12416  04CE  0022               	movlb	2	; select bank2
 12417  04CF  00C4               	movwf	ImageFromPickupConf@start_y^(0+256)
 12418  04D0  3094               	movlw	148
 12419  04D1  07C4               	addwf	ImageFromPickupConf@start_y^(0+256),f
 12420  04D2  1803               	skipnc
 12421  04D3  0AC5               	incf	(ImageFromPickupConf@start_y+1)^(0+256),f
 12422  04D4  303D               	movlw	61
 12423  04D5  02C4               	subwf	ImageFromPickupConf@start_y^(0+256),f
 12424  04D6  3000               	movlw	0
 12425  04D7  3BC5               	subwfb	(ImageFromPickupConf@start_y+1)^(0+256),f
 12426  04D8  3546               	lslf	ImageFromPickupConf@i^(0+256),w
 12427  04D9  3E2A               	addlw	(low (ImageFromPickupConf@arrow_type| (0+256)))& (0+255)
 12428  04DA  0086               	movwf	6
 12429  04DB  3001               	movlw	1	; select bank2/3
 12430  04DC  0087               	movwf	7
 12431  04DD  3F40               	moviw [0]fsr1
 12432  04DE  0020               	movlb	0	; select bank0
 12433  04DF  00A8               	movwf	SetFrameMemoryPartial@image_buffer
 12434  04E0  3F41               	moviw [1]fsr1
 12435  04E1  00A9               	movwf	SetFrameMemoryPartial@image_buffer+1
 12436  04E2  0022               	movlb	2	; select bank2
 12437  04E3  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 12438  04E4  0020               	movlb	0	; select bank0
 12439  04E5  00AB               	movwf	SetFrameMemoryPartial@x+1
 12440  04E6  0022               	movlb	2	; select bank2
 12441  04E7  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 12442  04E8  0020               	movlb	0	; select bank0
 12443  04E9  00AA               	movwf	SetFrameMemoryPartial@x
 12444  04EA  0022               	movlb	2	; select bank2
 12445  04EB  0845               	movf	(ImageFromPickupConf@start_y+1)^(0+256),w
 12446  04EC  0020               	movlb	0	; select bank0
 12447  04ED  00AD               	movwf	SetFrameMemoryPartial@y+1
 12448  04EE  0022               	movlb	2	; select bank2
 12449  04EF  0844               	movf	ImageFromPickupConf@start_y^(0+256),w
 12450  04F0  0020               	movlb	0	; select bank0
 12451  04F1  00AC               	movwf	SetFrameMemoryPartial@y
 12452  04F2  3018               	movlw	24
 12453  04F3  00AE               	movwf	SetFrameMemoryPartial@image_width
 12454  04F4  303D               	movlw	61
 12455  04F5  01AF               	clrf	SetFrameMemoryPartial@image_width+1
 12456  04F6  00B0               	movwf	SetFrameMemoryPartial@image_height
 12457  04F7  01B1               	clrf	SetFrameMemoryPartial@image_height+1
 12458  04F8  01B2               	clrf	SetFrameMemoryPartial@invert_color
 12459  04F9  0AB2               	incf	SetFrameMemoryPartial@invert_color,f
 12460  04FA  318C  2412  3180   	fcall	_SetFrameMemoryPartial
 12461                           
 12462                           ;guitar_image.c: 215:                 index = 0;
 12463  04FD  0022               	movlb	2	; select bank2
 12464  04FE  01C3               	clrf	ImageFromPickupConf@index^(0+256)
 12465  04FF                     l4563:	
 12466                           ;guitar_image.c: 216:                 while(index < max_index)
 12467                           
 12468                           
 12469                           ;guitar_image.c: 216:                 while(index < max_index)
 12470  04FF  0843               	movf	ImageFromPickupConf@index^(0+256),w
 12471  0500  0020               	movlb	0	; select bank0
 12472  0501  00C5               	movwf	??_ImageFromPickupConf
 12473  0502  01C6               	clrf	??_ImageFromPickupConf+1
 12474  0503  1BC5               	btfsc	??_ImageFromPickupConf,7
 12475  0504  03C6               	decf	??_ImageFromPickupConf+1,f
 12476  0505  0846               	movf	??_ImageFromPickupConf+1,w
 12477  0506  3A80               	xorlw	128
 12478  0507  00C7               	movwf	??_ImageFromPickupConf+2
 12479  0508  3080               	movlw	128
 12480  0509  0247               	subwf	??_ImageFromPickupConf+2,w
 12481  050A  1D03               	skipz
 12482  050B  2D10               	goto	u3455
 12483  050C  0022               	movlb	2	; select bank2
 12484  050D  0842               	movf	ImageFromPickupConf@max_index^(0+256),w
 12485  050E  0020               	movlb	0	; select bank0
 12486  050F  0245               	subwf	??_ImageFromPickupConf,w
 12487  0510                     u3455:
 12488  0510  1803               	btfsc	3,0
 12489  0511  2D9E               	goto	l4565
 12490  0512  3019               	movlw	25
 12491  0513  0022               	movlb	2	; select bank2
 12492  0514  02C4               	subwf	ImageFromPickupConf@start_y^(0+256),f
 12493  0515  3000               	movlw	0
 12494  0516  3BC5               	subwfb	(ImageFromPickupConf@start_y+1)^(0+256),f
 12495                           
 12496                           ;guitar_image.c: 219:                     if(i < 3)
 12497  0517  0847               	movf	(ImageFromPickupConf@i+1)^(0+256),w
 12498  0518  3A80               	xorlw	128
 12499  0519  0020               	movlb	0	; select bank0
 12500  051A  00C5               	movwf	??_ImageFromPickupConf
 12501  051B  3080               	movlw	128
 12502  051C  0245               	subwf	??_ImageFromPickupConf,w
 12503  051D  1D03               	skipz
 12504  051E  2D22               	goto	u3445
 12505  051F  3003               	movlw	3
 12506  0520  0022               	movlb	2	; select bank2
 12507  0521  0246               	subwf	ImageFromPickupConf@i^(0+256),w
 12508  0522                     u3445:
 12509  0522  1803               	skipnc
 12510  0523  2D4F               	goto	l4557
 12511  0524  0022               	movlb	2	; select bank2
 12512  0525  0843               	movf	ImageFromPickupConf@index^(0+256),w
 12513  0526  0020               	movlb	0	; select bank0
 12514  0527  00C5               	movwf	??_ImageFromPickupConf
 12515  0528  01C6               	clrf	??_ImageFromPickupConf+1
 12516  0529  35C5               	lslf	??_ImageFromPickupConf,f
 12517  052A  0DC6               	rlf	??_ImageFromPickupConf+1,f
 12518  052B  0022               	movlb	2	; select bank2
 12519  052C  0846               	movf	ImageFromPickupConf@i^(0+256),w
 12520  052D  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 12521  052E  0086               	movwf	6
 12522  052F  3001               	movlw	1	; select bank2/3
 12523  0530  0087               	movwf	7
 12524  0531  0801               	movf	1,w
 12525  0532  00F2               	movwf	___wmul@multiplier
 12526  0533  3007               	movlw	7
 12527  0534  01F3               	clrf	___wmul@multiplier+1
 12528  0535  00F4               	movwf	___wmul@multiplicand
 12529  0536  01F5               	clrf	___wmul@multiplicand+1
 12530  0537  25A3  3180         	fcall	___wmul
 12531  0539  307A               	movlw	122
 12532  053A  0020               	movlb	0	; select bank0
 12533  053B  00C7               	movwf	??_ImageFromPickupConf+2
 12534  053C  3023               	movlw	35
 12535  053D  00C8               	movwf	??_ImageFromPickupConf+3
 12536  053E  0872               	movf	?___wmul,w
 12537  053F  0747               	addwf	??_ImageFromPickupConf+2,w
 12538  0540  00C9               	movwf	??_ImageFromPickupConf+4
 12539  0541  0873               	movf	?___wmul+1,w
 12540  0542  3D48               	addwfc	??_ImageFromPickupConf+3,w
 12541  0543  00CA               	movwf	??_ImageFromPickupConf+5
 12542  0544  0845               	movf	??_ImageFromPickupConf,w
 12543  0545  0749               	addwf	??_ImageFromPickupConf+4,w
 12544  0546  0086               	movwf	6
 12545  0547  0846               	movf	??_ImageFromPickupConf+1,w
 12546  0548  3D4A               	addwfc	??_ImageFromPickupConf+5,w
 12547  0549  0087               	movwf	7
 12548  054A  3F40               	moviw [0]fsr1
 12549  054B  0022               	movlb	2	; select bank2
 12550  054C  00C0               	movwf	_ImageFromPickupConf$2078^(0+256)
 12551  054D  3F41               	moviw [1]fsr1
 12552  054E  2D79               	goto	L13
 12553  054F                     l4557:
 12554  054F  0022               	movlb	2	; select bank2
 12555  0550  0843               	movf	ImageFromPickupConf@index^(0+256),w
 12556  0551  0020               	movlb	0	; select bank0
 12557  0552  00C5               	movwf	??_ImageFromPickupConf
 12558  0553  01C6               	clrf	??_ImageFromPickupConf+1
 12559  0554  35C5               	lslf	??_ImageFromPickupConf,f
 12560  0555  0DC6               	rlf	??_ImageFromPickupConf+1,f
 12561  0556  0022               	movlb	2	; select bank2
 12562  0557  0846               	movf	ImageFromPickupConf@i^(0+256),w
 12563  0558  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 12564  0559  0086               	movwf	6
 12565  055A  3001               	movlw	1	; select bank2/3
 12566  055B  0087               	movwf	7
 12567  055C  0801               	movf	1,w
 12568  055D  00F2               	movwf	___wmul@multiplier
 12569  055E  300B               	movlw	11
 12570  055F  01F3               	clrf	___wmul@multiplier+1
 12571  0560  00F4               	movwf	___wmul@multiplicand
 12572  0561  01F5               	clrf	___wmul@multiplicand+1
 12573  0562  25A3  3180         	fcall	___wmul
 12574  0564  307D               	movlw	125
 12575  0565  0020               	movlb	0	; select bank0
 12576  0566  00C7               	movwf	??_ImageFromPickupConf+2
 12577  0567  3022               	movlw	34
 12578  0568  00C8               	movwf	??_ImageFromPickupConf+3
 12579  0569  0872               	movf	?___wmul,w
 12580  056A  0747               	addwf	??_ImageFromPickupConf+2,w
 12581  056B  00C9               	movwf	??_ImageFromPickupConf+4
 12582  056C  0873               	movf	?___wmul+1,w
 12583  056D  3D48               	addwfc	??_ImageFromPickupConf+3,w
 12584  056E  00CA               	movwf	??_ImageFromPickupConf+5
 12585  056F  0845               	movf	??_ImageFromPickupConf,w
 12586  0570  0749               	addwf	??_ImageFromPickupConf+4,w
 12587  0571  0086               	movwf	6
 12588  0572  0846               	movf	??_ImageFromPickupConf+1,w
 12589  0573  3D4A               	addwfc	??_ImageFromPickupConf+5,w
 12590  0574  0087               	movwf	7
 12591  0575  3F40               	moviw [0]fsr1
 12592  0576  0022               	movlb	2	; select bank2
 12593  0577  00C0               	movwf	_ImageFromPickupConf$2078^(0+256)
 12594  0578  3F41               	moviw [1]fsr1
 12595  0579                     L13:
 12596  0579  00C1               	movwf	(_ImageFromPickupConf$2078+1)^(0+256)
 12597  057A  0020               	movlb	0	; select bank0
 12598  057B  00A9               	movwf	SetFrameMemoryPartial@image_buffer+1
 12599  057C  0022               	movlb	2	; select bank2
 12600  057D  0840               	movf	_ImageFromPickupConf$2078^(0+256),w
 12601  057E  0020               	movlb	0	; select bank0
 12602  057F  00A8               	movwf	SetFrameMemoryPartial@image_buffer
 12603  0580  0022               	movlb	2	; select bank2
 12604  0581  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 12605  0582  0020               	movlb	0	; select bank0
 12606  0583  00AB               	movwf	SetFrameMemoryPartial@x+1
 12607  0584  0022               	movlb	2	; select bank2
 12608  0585  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 12609  0586  0020               	movlb	0	; select bank0
 12610  0587  00AA               	movwf	SetFrameMemoryPartial@x
 12611  0588  0022               	movlb	2	; select bank2
 12612  0589  0845               	movf	(ImageFromPickupConf@start_y+1)^(0+256),w
 12613  058A  0020               	movlb	0	; select bank0
 12614  058B  00AD               	movwf	SetFrameMemoryPartial@y+1
 12615  058C  0022               	movlb	2	; select bank2
 12616  058D  0844               	movf	ImageFromPickupConf@start_y^(0+256),w
 12617  058E  0020               	movlb	0	; select bank0
 12618  058F  00AC               	movwf	SetFrameMemoryPartial@y
 12619  0590  3018               	movlw	24
 12620  0591  00AE               	movwf	SetFrameMemoryPartial@image_width
 12621  0592  3019               	movlw	25
 12622  0593  01AF               	clrf	SetFrameMemoryPartial@image_width+1
 12623  0594  00B0               	movwf	SetFrameMemoryPartial@image_height
 12624  0595  01B1               	clrf	SetFrameMemoryPartial@image_height+1
 12625  0596  01B2               	clrf	SetFrameMemoryPartial@invert_color
 12626  0597  0AB2               	incf	SetFrameMemoryPartial@invert_color,f
 12627  0598  318C  2412  3180   	fcall	_SetFrameMemoryPartial
 12628                           
 12629                           ;guitar_image.c: 223:                     index++;
 12630  059B  0022               	movlb	2	; select bank2
 12631  059C  0AC3               	incf	ImageFromPickupConf@index^(0+256),f
 12632  059D  2CFF               	goto	l4563
 12633  059E                     l4565:
 12634                           
 12635                           ;guitar_image.c: 226:         }
 12636  059E  0022               	movlb	2	; select bank2
 12637  059F  0AC6               	incf	ImageFromPickupConf@i^(0+256),f
 12638  05A0  1903               	skipnz
 12639  05A1  0AC7               	incf	(ImageFromPickupConf@i+1)^(0+256),f
 12640  05A2  2C5B               	goto	l4525
 12641  05A3                     __end_of_ImageFromPickupConf:
 12642  05A3                     __ptext36:	
 12643 ;; *************** function ___wmul *****************
 12644 ;; Defined at:
 12645 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;  multiplier      2    2[COMMON] unsigned int 
 12648 ;;  multiplicand    2    4[COMMON] unsigned int 
 12649 ;; Auto vars:     Size  Location     Type
 12650 ;;  product         2    6[COMMON] unsigned int 
 12651 ;; Return value:  Size  Location     Type
 12652 ;;                  2    2[COMMON] unsigned int 
 12653 ;; Registers used:
 12654 ;;		wreg, status,2, status,0
 12655 ;; Tracked objects:
 12656 ;;		On entry : 1D/0
 12657 ;;		On exit  : 1D/0
 12658 ;;		Unchanged: 1D/0
 12659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12661 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12663 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12664 ;;Total ram usage:        6 bytes
 12665 ;; Hardware stack levels used: 1
 12666 ;; Hardware stack levels required when called: 4
 12667 ;; This function calls:
 12668 ;;		Nothing
 12669 ;; This function is called by:
 12670 ;;		_ClearLine
 12671 ;;		_ImageFromPickupConf
 12672 ;;		_SetFrameMemoryPartial
 12673 ;;		_ClearFrameMemoryPartial
 12674 ;; This function uses a non-reentrant model
 12675 ;;
 12676                           
 12677                           
 12678                           ;psect for function ___wmul
 12679  05A3                     ___wmul:
 12680                           
 12681                           ;incstack = 0
 12682                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12683  05A3  01F6               	clrf	___wmul@product
 12684  05A4  01F7               	clrf	___wmul@product+1
 12685  05A5                     l4091:
 12686  05A5  1C72               	btfss	___wmul@multiplier,0
 12687  05A6  2DAB               	goto	l4095
 12688  05A7  0874               	movf	___wmul@multiplicand,w
 12689  05A8  07F6               	addwf	___wmul@product,f
 12690  05A9  0875               	movf	___wmul@multiplicand+1,w
 12691  05AA  3DF7               	addwfc	___wmul@product+1,f
 12692  05AB                     l4095:
 12693  05AB  35F4               	lslf	___wmul@multiplicand,f
 12694  05AC  0DF5               	rlf	___wmul@multiplicand+1,f
 12695  05AD  36F3               	lsrf	___wmul@multiplier+1,f
 12696  05AE  0CF2               	rrf	___wmul@multiplier,f
 12697  05AF  0872               	movf	___wmul@multiplier,w
 12698  05B0  0473               	iorwf	___wmul@multiplier+1,w
 12699  05B1  1D03               	btfss	3,2
 12700  05B2  2DA5               	goto	l4091
 12701  05B3  0877               	movf	___wmul@product+1,w
 12702  05B4  00F3               	movwf	?___wmul+1
 12703  05B5  0876               	movf	___wmul@product,w
 12704  05B6  00F2               	movwf	?___wmul
 12705  05B7  0008               	return
 12706  05B8                     __end_of___wmul:
 12707  05B8                     __ptext49:	
 12708 ;; *************** function _SendCommand *****************
 12709 ;; Defined at:
 12710 ;;		line 58 in file "waveshare29epaper.c"
 12711 ;; Parameters:    Size  Location     Type
 12712 ;;  command         1    wreg     unsigned char 
 12713 ;; Auto vars:     Size  Location     Type
 12714 ;;  command         1    3[COMMON] unsigned char 
 12715 ;; Return value:  Size  Location     Type
 12716 ;;                  1    wreg      void 
 12717 ;; Registers used:
 12718 ;;		wreg, status,2, status,0, pclath, cstack
 12719 ;; Tracked objects:
 12720 ;;		On entry : 0/0
 12721 ;;		On exit  : 1F/2
 12722 ;;		Unchanged: 0/0
 12723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12725 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12728 ;;Total ram usage:        1 bytes
 12729 ;; Hardware stack levels used: 1
 12730 ;; Hardware stack levels required when called: 5
 12731 ;; This function calls:
 12732 ;;		_SPI_ExchangeByte
 12733 ;; This function is called by:
 12734 ;;		_InitDisplay
 12735 ;;		_SetLut
 12736 ;;		_SetFrameMemoryPartial
 12737 ;;		_ClearFrameMemory
 12738 ;;		_ClearFrameMemoryPartial
 12739 ;;		_DisplayFrame
 12740 ;;		_SetMemoryArea
 12741 ;;		_SetMemoryPointer
 12742 ;;		_SleepDisplay
 12743 ;; This function uses a non-reentrant model
 12744 ;;
 12745                           
 12746                           
 12747                           ;psect for function _SendCommand
 12748  05B8                     _SendCommand:
 12749                           
 12750                           ;incstack = 0
 12751                           ; Regs used in _SendCommand: [wreg+status,2+status,0+pclath+cstack]
 12752                           ;SendCommand@command stored from wreg
 12753  05B8  00F3               	movwf	SendCommand@command
 12754                           
 12755                           ;waveshare29epaper.c: 59:     do { LATCbits.LATC4 = 0; } while(0);
 12756  05B9  0022               	movlb	2	; select bank2
 12757  05BA  120E               	bcf	14,4	;volatile
 12758                           
 12759                           ;waveshare29epaper.c: 60:     do { LATAbits.LATA4 = 0; } while(0);
 12760  05BB  120C               	bcf	12,4	;volatile
 12761                           
 12762                           ;waveshare29epaper.c: 61:     SPI_ExchangeByte(command);
 12763  05BC  0873               	movf	SendCommand@command,w
 12764  05BD  00F2               	movwf	SPI_ExchangeByte@data
 12765  05BE  260A               	fcall	_SPI_ExchangeByte
 12766  05BF  0022               	movlb	2	; select bank2
 12767  05C0  160E               	bsf	14,4	;volatile
 12768  05C1  0008               	return
 12769  05C2                     __end_of_SendCommand:
 12770  05C2                     __ptext34:	
 12771 ;; *************** function _ClearLine *****************
 12772 ;; Defined at:
 12773 ;;		line 125 in file "guitar_image.c"
 12774 ;; Parameters:    Size  Location     Type
 12775 ;;  start_x         2   19[BANK0 ] unsigned short 
 12776 ;;  max_characte    1   21[BANK0 ] unsigned char 
 12777 ;; Auto vars:     Size  Location     Type
 12778 ;;  start_y         2   24[BANK0 ] unsigned short 
 12779 ;; Return value:  Size  Location     Type
 12780 ;;                  1    wreg      void 
 12781 ;; Registers used:
 12782 ;;		wreg, status,2, status,0, pclath, cstack
 12783 ;; Tracked objects:
 12784 ;;		On entry : 1F/0
 12785 ;;		On exit  : 1F/0
 12786 ;;		Unchanged: 0/0
 12787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12788 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12789 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12790 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12791 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12792 ;;Total ram usage:        7 bytes
 12793 ;; Hardware stack levels used: 1
 12794 ;; Hardware stack levels required when called: 8
 12795 ;; This function calls:
 12796 ;;		_ClearFrameMemoryPartial
 12797 ;;		___wmul
 12798 ;; This function is called by:
 12799 ;;		_ImageFromPickupConf
 12800 ;; This function uses a non-reentrant model
 12801 ;;
 12802                           
 12803                           
 12804                           ;psect for function _ClearLine
 12805  05C2                     _ClearLine:
 12806                           
 12807                           ;incstack = 0
 12808                           ; Regs used in _ClearLine: [wreg+status,2+status,0+pclath+cstack]
 12809  05C2  0835               	movf	ClearLine@max_character,w
 12810  05C3  00F2               	movwf	___wmul@multiplier
 12811  05C4  3019               	movlw	25
 12812  05C5  01F3               	clrf	___wmul@multiplier+1
 12813  05C6  00F4               	movwf	___wmul@multiplicand
 12814  05C7  01F5               	clrf	___wmul@multiplicand+1
 12815  05C8  25A3  3180         	fcall	___wmul
 12816  05CA  0872               	movf	?___wmul,w
 12817  05CB  3E3D               	addlw	61
 12818  05CC  0020               	movlb	0	; select bank0
 12819  05CD  00B6               	movwf	??_ClearLine
 12820  05CE  3000               	movlw	0
 12821  05CF  3D73               	addwfc	?___wmul+1,w
 12822  05D0  00B7               	movwf	??_ClearLine+1
 12823  05D1  0D37               	rlf	??_ClearLine+1,w
 12824  05D2  0C37               	rrf	??_ClearLine+1,w
 12825  05D3  00B9               	movwf	ClearLine@start_y+1
 12826  05D4  0C36               	rrf	??_ClearLine,w
 12827  05D5  00B8               	movwf	ClearLine@start_y
 12828  05D6  3094               	movlw	148
 12829  05D7  07B8               	addwf	ClearLine@start_y,f
 12830  05D8  1803               	skipnc
 12831  05D9  0AB9               	incf	ClearLine@start_y+1,f
 12832  05DA  0835               	movf	ClearLine@max_character,w
 12833  05DB  00F2               	movwf	___wmul@multiplier
 12834  05DC  30E7               	movlw	231
 12835  05DD  01F3               	clrf	___wmul@multiplier+1
 12836  05DE  00F4               	movwf	___wmul@multiplicand
 12837  05DF  30FF               	movlw	255
 12838  05E0  00F5               	movwf	___wmul@multiplicand+1
 12839  05E1  25A3               	fcall	___wmul
 12840  05E2  0873               	movf	?___wmul+1,w
 12841  05E3  0020               	movlb	0	; select bank0
 12842  05E4  00AB               	movwf	ClearFrameMemoryPartial@y_start+1
 12843  05E5  0872               	movf	?___wmul,w
 12844  05E6  00AA               	movwf	ClearFrameMemoryPartial@y_start
 12845  05E7  0838               	movf	ClearLine@start_y,w
 12846  05E8  07AA               	addwf	ClearFrameMemoryPartial@y_start,f
 12847  05E9  0839               	movf	ClearLine@start_y+1,w
 12848  05EA  3DAB               	addwfc	ClearFrameMemoryPartial@y_start+1,f
 12849  05EB  30C3               	movlw	195
 12850  05EC  07AA               	addwf	ClearFrameMemoryPartial@y_start,f
 12851  05ED  30FF               	movlw	255
 12852  05EE  3DAB               	addwfc	ClearFrameMemoryPartial@y_start+1,f
 12853  05EF  0834               	movf	ClearLine@start_x+1,w
 12854  05F0  00A9               	movwf	ClearFrameMemoryPartial@x_start+1
 12855  05F1  0833               	movf	ClearLine@start_x,w
 12856  05F2  00A8               	movwf	ClearFrameMemoryPartial@x_start
 12857  05F3  0833               	movf	ClearLine@start_x,w
 12858  05F4  3E13               	addlw	19
 12859  05F5  00AC               	movwf	ClearFrameMemoryPartial@x_end
 12860  05F6  3000               	movlw	0
 12861  05F7  3D34               	addwfc	ClearLine@start_x+1,w
 12862  05F8  00AD               	movwf	ClearFrameMemoryPartial@x_end+1
 12863  05F9  0839               	movf	ClearLine@start_y+1,w
 12864  05FA  00AF               	movwf	ClearFrameMemoryPartial@y_end+1
 12865  05FB  0838               	movf	ClearLine@start_y,w
 12866  05FC  00AE               	movwf	ClearFrameMemoryPartial@y_end
 12867  05FD  30FF               	movlw	255
 12868  05FE  00B0               	movwf	ClearFrameMemoryPartial@color
 12869  05FF  318B  2BC9         	ljmp	l4109
 12870  0601                     __end_of_ClearLine:
 12871  0601                     __ptext45:	
 12872 ;; *************** function _WaitUntilIdle *****************
 12873 ;; Defined at:
 12874 ;;		line 78 in file "waveshare29epaper.c"
 12875 ;; Parameters:    Size  Location     Type
 12876 ;;		None
 12877 ;; Auto vars:     Size  Location     Type
 12878 ;;		None
 12879 ;; Return value:  Size  Location     Type
 12880 ;;                  1    wreg      void 
 12881 ;; Registers used:
 12882 ;;		wreg, status,2, status,0, pclath, cstack
 12883 ;; Tracked objects:
 12884 ;;		On entry : 1F/2
 12885 ;;		On exit  : 1F/0
 12886 ;;		Unchanged: 0/0
 12887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12892 ;;Total ram usage:        0 bytes
 12893 ;; Hardware stack levels used: 1
 12894 ;; Hardware stack levels required when called: 5
 12895 ;; This function calls:
 12896 ;;		_DELAY_milliseconds
 12897 ;; This function is called by:
 12898 ;;		_DisplayFrame
 12899 ;;		_SetMemoryPointer
 12900 ;;		_SleepDisplay
 12901 ;; This function uses a non-reentrant model
 12902 ;;
 12903                           
 12904                           
 12905                           ;psect for function _WaitUntilIdle
 12906  0601                     _WaitUntilIdle:
 12907  0601                     l4059:	
 12908                           ;incstack = 0
 12909                           ; Regs used in _WaitUntilIdle: [wreg+status,2+status,0+pclath+cstack]
 12910                           
 12911  0601                     l4063:	
 12912                           ;waveshare29epaper.c: 79:     while (PORTCbits.RC3 == 1) {
 12913                           
 12914                           
 12915                           ;waveshare29epaper.c: 79:     while (PORTCbits.RC3 == 1) {
 12916  0601  0020               	movlb	0	; select bank0
 12917  0602  1D8E               	btfss	14,3	;volatile
 12918  0603  0008               	return
 12919                           
 12920                           ;waveshare29epaper.c: 80:         DELAY_milliseconds(10);
 12921  0604  300A               	movlw	10
 12922  0605  00F2               	movwf	DELAY_milliseconds@milliseconds
 12923  0606  01F3               	clrf	DELAY_milliseconds@milliseconds+1
 12924  0607  2614  3180         	fcall	_DELAY_milliseconds
 12925  0609  2E01               	goto	l4063
 12926  060A                     __end_of_WaitUntilIdle:
 12927  060A                     __ptext50:	
 12928 ;; *************** function _SPI_ExchangeByte *****************
 12929 ;; Defined at:
 12930 ;;		line 98 in file "mcc_generated_files/spi.c"
 12931 ;; Parameters:    Size  Location     Type
 12932 ;;  data            1    2[COMMON] unsigned char 
 12933 ;; Auto vars:     Size  Location     Type
 12934 ;;		None
 12935 ;; Return value:  Size  Location     Type
 12936 ;;                  1    wreg      unsigned char 
 12937 ;; Registers used:
 12938 ;;		wreg
 12939 ;; Tracked objects:
 12940 ;;		On entry : 1F/2
 12941 ;;		On exit  : 1F/4
 12942 ;;		Unchanged: 0/0
 12943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12944 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12947 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12948 ;;Total ram usage:        1 bytes
 12949 ;; Hardware stack levels used: 1
 12950 ;; Hardware stack levels required when called: 4
 12951 ;; This function calls:
 12952 ;;		Nothing
 12953 ;; This function is called by:
 12954 ;;		_SendCommand
 12955 ;;		_SendData
 12956 ;;		_SPI_WriteBlock
 12957 ;;		_SPI_ReadBlock
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           
 12962                           ;psect for function _SPI_ExchangeByte
 12963  060A                     _SPI_ExchangeByte:
 12964                           
 12965                           ;mcc_generated_files/spi.c: 98: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 99: {;mcc_generated_files/spi.c: 100:     SSP1BUF = data;
 12966                           
 12967                           ;incstack = 0
 12968                           ; Regs used in _SPI_ExchangeByte: [wreg]
 12969  060A  0872               	movf	SPI_ExchangeByte@data,w
 12970  060B  0024               	movlb	4	; select bank4
 12971  060C  0091               	movwf	17	;volatile
 12972  060D                     l214:	
 12973                           ;mcc_generated_files/spi.c: 101:     while(!PIR1bits.SSP1IF);
 12974                           
 12975  060D  0020               	movlb	0	; select bank0
 12976  060E  1D91               	btfss	17,3	;volatile
 12977  060F  2E0D               	goto	l214
 12978                           
 12979                           ;mcc_generated_files/spi.c: 102:     PIR1bits.SSP1IF = 0;
 12980  0610  1191               	bcf	17,3	;volatile
 12981                           
 12982                           ;mcc_generated_files/spi.c: 103:     return SSP1BUF;
 12983  0611  0024               	movlb	4	; select bank4
 12984  0612  0811               	movf	17,w	;volatile
 12985  0613  0008               	return
 12986  0614                     __end_of_SPI_ExchangeByte:
 12987  0614                     __ptext46:	
 12988 ;; *************** function _DELAY_milliseconds *****************
 12989 ;; Defined at:
 12990 ;;		line 38 in file "mcc_generated_files/delay.c"
 12991 ;; Parameters:    Size  Location     Type
 12992 ;;  milliseconds    2    2[COMMON] unsigned short 
 12993 ;; Auto vars:     Size  Location     Type
 12994 ;;		None
 12995 ;; Return value:  Size  Location     Type
 12996 ;;                  1    wreg      void 
 12997 ;; Registers used:
 12998 ;;		wreg, status,2, status,0
 12999 ;; Tracked objects:
 13000 ;;		On entry : 0/0
 13001 ;;		On exit  : 0/0
 13002 ;;		Unchanged: 0/0
 13003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13007 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13008 ;;Total ram usage:        2 bytes
 13009 ;; Hardware stack levels used: 1
 13010 ;; Hardware stack levels required when called: 4
 13011 ;; This function calls:
 13012 ;;		Nothing
 13013 ;; This function is called by:
 13014 ;;		_GotoSleep
 13015 ;;		_WakeUp
 13016 ;;		_WaitUntilIdle
 13017 ;;		_ResetDisplay
 13018 ;; This function uses a non-reentrant model
 13019 ;;
 13020                           
 13021                           
 13022                           ;psect for function _DELAY_milliseconds
 13023  0614                     _DELAY_milliseconds:
 13024  0614                     l4039:	
 13025                           ;incstack = 0
 13026                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 13027                           
 13028  0614                     l4043:	
 13029                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 13030                           
 13031                           
 13032                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 13033  0614  3001               	movlw	1
 13034  0615  02F2               	subwf	DELAY_milliseconds@milliseconds,f
 13035  0616  3000               	movlw	0
 13036  0617  3BF3               	subwfb	DELAY_milliseconds@milliseconds+1,f
 13037  0618  0F72               	incfsz	DELAY_milliseconds@milliseconds,w
 13038  0619  2E1D               	goto	l4041
 13039  061A  0A73               	incf	DELAY_milliseconds@milliseconds+1,w
 13040  061B  1903               	btfsc	3,2
 13041  061C  0008               	return
 13042  061D                     l4041:
 13043                           
 13044                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(4000000/4000.0)));
 13045  061D  30C8               	movlw	200
 13046  061E                     u3677:
 13047  061E  3200               	nop2
 13048  061F  0B89               	decfsz	9,f
 13049  0620  2E1E               	goto	u3677
 13050  0621  2E14               	goto	l4043
 13051  0622                     __end_of_DELAY_milliseconds:
 13052  0622                     __ptext43:	
 13053 ;; *************** function _ClearFrameMemory *****************
 13054 ;; Defined at:
 13055 ;;		line 163 in file "waveshare29epaper.c"
 13056 ;; Parameters:    Size  Location     Type
 13057 ;;  color           1    wreg     unsigned char 
 13058 ;; Auto vars:     Size  Location     Type
 13059 ;;  color           1    8[BANK0 ] unsigned char 
 13060 ;;  i               2    9[BANK0 ] unsigned short 
 13061 ;; Return value:  Size  Location     Type
 13062 ;;                  1    wreg      void 
 13063 ;; Registers used:
 13064 ;;		wreg, status,2, status,0, pclath, cstack
 13065 ;; Tracked objects:
 13066 ;;		On entry : 0/0
 13067 ;;		On exit  : 1F/0
 13068 ;;		Unchanged: 0/0
 13069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13071 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13073 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13074 ;;Total ram usage:        3 bytes
 13075 ;; Hardware stack levels used: 1
 13076 ;; Hardware stack levels required when called: 7
 13077 ;; This function calls:
 13078 ;;		_SendCommand
 13079 ;;		_SendData
 13080 ;;		_SetMemoryArea
 13081 ;;		_SetMemoryPointer
 13082 ;; This function is called by:
 13083 ;;		_GotoSleep
 13084 ;;		_WakeUp
 13085 ;;		_ImageFromPickupConf
 13086 ;; This function uses a non-reentrant model
 13087 ;;
 13088                           
 13089                           
 13090                           ;psect for function _ClearFrameMemory
 13091  0622                     _ClearFrameMemory:
 13092                           
 13093                           ;incstack = 0
 13094                           ; Regs used in _ClearFrameMemory: [wreg+status,2+status,0+pclath+cstack]
 13095                           ;ClearFrameMemory@color stored from wreg
 13096  0622  0020               	movlb	0	; select bank0
 13097  0623  00A8               	movwf	ClearFrameMemory@color
 13098  0624  307F               	movlw	127
 13099                           
 13100                           ;waveshare29epaper.c: 164:     SetMemoryArea(0, 0, 128 - 1, 296 - 1);
 13101  0625  01A0               	clrf	SetMemoryArea@x_start
 13102  0626  01A1               	clrf	SetMemoryArea@x_start+1
 13103  0627  01A2               	clrf	SetMemoryArea@y_start
 13104  0628  01A3               	clrf	SetMemoryArea@y_start+1
 13105  0629  00A4               	movwf	SetMemoryArea@x_end
 13106  062A  3027               	movlw	39
 13107  062B  01A5               	clrf	SetMemoryArea@x_end+1
 13108  062C  00A6               	movwf	SetMemoryArea@y_end
 13109  062D  3001               	movlw	1
 13110  062E  00A7               	movwf	SetMemoryArea@y_end+1
 13111  062F  208B               	fcall	_SetMemoryArea
 13112                           
 13113                           ;waveshare29epaper.c: 165:     SetMemoryPointer(0, 0);
 13114  0630  01F4               	clrf	SetMemoryPointer@x
 13115  0631  01F5               	clrf	SetMemoryPointer@x+1
 13116  0632  01F6               	clrf	SetMemoryPointer@y
 13117  0633  01F7               	clrf	SetMemoryPointer@y+1
 13118  0634  318C  24DE  3180   	fcall	_SetMemoryPointer
 13119                           
 13120                           ;waveshare29epaper.c: 166:     SendCommand(0x24);
 13121  0637  3024               	movlw	36
 13122  0638  25B8  3180         	fcall	_SendCommand
 13123                           
 13124                           ;waveshare29epaper.c: 168:     uint16_t i;;waveshare29epaper.c: 169:     for (i = 0; i <
      +                           128 / 8 * 296; i++) {
 13125  063A  0020               	movlb	0	; select bank0
 13126  063B  01A9               	clrf	ClearFrameMemory@i
 13127  063C  01AA               	clrf	ClearFrameMemory@i+1
 13128  063D                     l4191:
 13129                           
 13130                           ;waveshare29epaper.c: 170:         SendData(color);
 13131  063D  0828               	movf	ClearFrameMemory@color,w
 13132  063E  20F4  3180         	fcall	_SendData
 13133                           
 13134                           ;waveshare29epaper.c: 171:     }
 13135  0640  0020               	movlb	0	; select bank0
 13136  0641  0AA9               	incf	ClearFrameMemory@i,f
 13137  0642  1903               	skipnz
 13138  0643  0AAA               	incf	ClearFrameMemory@i+1,f
 13139  0644  3012               	movlw	18
 13140  0645  022A               	subwf	ClearFrameMemory@i+1,w
 13141  0646  3080               	movlw	128
 13142  0647  1903               	skipnz
 13143  0648  0229               	subwf	ClearFrameMemory@i,w
 13144  0649  1803               	btfsc	3,0
 13145  064A  0008               	return
 13146  064B  2E3D               	goto	l4191
 13147  064C                     __end_of_ClearFrameMemory:
 13148  064C                     __ptext52:	
 13149 ;; *************** function _ButtonEventReset *****************
 13150 ;; Defined at:
 13151 ;;		line 133 in file "main.c"
 13152 ;; Parameters:    Size  Location     Type
 13153 ;;		None
 13154 ;; Auto vars:     Size  Location     Type
 13155 ;;		None
 13156 ;; Return value:  Size  Location     Type
 13157 ;;                  1    wreg      void 
 13158 ;; Registers used:
 13159 ;;		status,2
 13160 ;; Tracked objects:
 13161 ;;		On entry : 0/2
 13162 ;;		On exit  : 1F/1
 13163 ;;		Unchanged: 0/0
 13164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13169 ;;Total ram usage:        0 bytes
 13170 ;; Hardware stack levels used: 1
 13171 ;; Hardware stack levels required when called: 4
 13172 ;; This function calls:
 13173 ;;		Nothing
 13174 ;; This function is called by:
 13175 ;;		_GotoSleep
 13176 ;;		_WakeUp
 13177 ;;		_ButtonCaseHandler
 13178 ;;		_ButtonEventHandler
 13179 ;; This function uses a non-reentrant model
 13180 ;;
 13181                           
 13182                           
 13183                           ;psect for function _ButtonEventReset
 13184  064C                     _ButtonEventReset:
 13185  064C                     l4221:	
 13186                           ;incstack = 0
 13187                           ; Regs used in _ButtonEventReset: [status,2]
 13188                           
 13189                           
 13190                           ;main.c: 134:     click_type = 0;
 13191  064C  0021               	movlb	1	; select bank1
 13192  064D  01D9               	clrf	_click_type^(0+128)
 13193                           
 13194                           ;main.c: 135:     click_timer = 0;
 13195  064E  01D2               	clrf	_click_timer^(0+128)	;volatile
 13196  064F  01D3               	clrf	(_click_timer+1)^(0+128)	;volatile
 13197                           
 13198                           ;main.c: 136:     button_clicked = 0;
 13199  0650  01FA               	clrf	_button_clicked	;volatile
 13200  0651  0008               	return
 13201  0652                     __end_of_ButtonEventReset:
 13202  0652                     __ptext42:	
 13203 ;; *************** function _ResetDisplay *****************
 13204 ;; Defined at:
 13205 ;;		line 89 in file "waveshare29epaper.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;		None
 13208 ;; Auto vars:     Size  Location     Type
 13209 ;;		None
 13210 ;; Return value:  Size  Location     Type
 13211 ;;                  1    wreg      void 
 13212 ;; Registers used:
 13213 ;;		wreg, status,2, status,0, pclath, cstack
 13214 ;; Tracked objects:
 13215 ;;		On entry : 1F/0
 13216 ;;		On exit  : 0/0
 13217 ;;		Unchanged: 0/0
 13218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13223 ;;Total ram usage:        0 bytes
 13224 ;; Hardware stack levels used: 1
 13225 ;; Hardware stack levels required when called: 5
 13226 ;; This function calls:
 13227 ;;		_DELAY_milliseconds
 13228 ;; This function is called by:
 13229 ;;		_InitDisplay
 13230 ;; This function uses a non-reentrant model
 13231 ;;
 13232                           
 13233                           
 13234                           ;psect for function _ResetDisplay
 13235  0652                     _ResetDisplay:
 13236                           
 13237                           ;incstack = 0
 13238                           ; Regs used in _ResetDisplay: [wreg+status,2+status,0+pclath+cstack]
 13239                           ;waveshare29epaper.c: 90:     do { LATCbits.LATC5 = 0; } while(0);
 13240  0652  0022               	movlb	2	; select bank2
 13241  0653  128E               	bcf	14,5	;volatile
 13242                           
 13243                           ;waveshare29epaper.c: 91:     DELAY_milliseconds(200);
 13244  0654  30C8               	movlw	200
 13245  0655  00F2               	movwf	DELAY_milliseconds@milliseconds
 13246  0656  01F3               	clrf	DELAY_milliseconds@milliseconds+1
 13247  0657  2614  3180         	fcall	_DELAY_milliseconds
 13248  0659  0022               	movlb	2	; select bank2
 13249  065A  168E               	bsf	14,5	;volatile
 13250                           
 13251                           ;waveshare29epaper.c: 93:     DELAY_milliseconds(200);
 13252  065B  30C8               	movlw	200
 13253  065C  00F2               	movwf	DELAY_milliseconds@milliseconds
 13254  065D  01F3               	clrf	DELAY_milliseconds@milliseconds+1
 13255  065E  2E14               	ljmp	l4039
 13256  065F                     __end_of_ResetDisplay:
 13257  065F                     __ptext27:	
 13258 ;; *************** function _WriteConfigurationToMemory *****************
 13259 ;; Defined at:
 13260 ;;		line 83 in file "main.c"
 13261 ;; Parameters:    Size  Location     Type
 13262 ;;		None
 13263 ;; Auto vars:     Size  Location     Type
 13264 ;;		None
 13265 ;; Return value:  Size  Location     Type
 13266 ;;                  1    wreg      void 
 13267 ;; Registers used:
 13268 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13269 ;; Tracked objects:
 13270 ;;		On entry : 0/0
 13271 ;;		On exit  : 1C/0
 13272 ;;		Unchanged: 0/0
 13273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13278 ;;Total ram usage:        0 bytes
 13279 ;; Hardware stack levels used: 1
 13280 ;; Hardware stack levels required when called: 7
 13281 ;; This function calls:
 13282 ;;		_HEFLASH_writeBlock
 13283 ;; This function is called by:
 13284 ;;		_ButtonEventHandler
 13285 ;; This function uses a non-reentrant model
 13286 ;;
 13287                           
 13288                           
 13289                           ;psect for function _WriteConfigurationToMemory
 13290  065F                     _WriteConfigurationToMemory:
 13291                           
 13292                           ;main.c: 84:     HEFLASH_writeBlock(0, (void*)&saved_pc, sizeof(saved_pc));
 13293                           
 13294                           ;incstack = 0
 13295                           ; Regs used in _WriteConfigurationToMemory: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 13296  065F  30B2               	movlw	(low (_saved_pc| 0))& (0+255)
 13297  0660  00F8               	movwf	HEFLASH_writeBlock@buffer
 13298  0661  3014               	movlw	20
 13299  0662  00F9               	movwf	HEFLASH_writeBlock@count
 13300  0663  3000               	movlw	0
 13301  0664  318A  2A96         	ljmp	_HEFLASH_writeBlock
 13302  0666                     __end_of_WriteConfigurationToMemory:
 13303  0666                     __ptext5:	
 13304 ;; *************** function _TMR1_StartTimer *****************
 13305 ;; Defined at:
 13306 ;;		line 93 in file "mcc_generated_files/tmr1.c"
 13307 ;; Parameters:    Size  Location     Type
 13308 ;;		None
 13309 ;; Auto vars:     Size  Location     Type
 13310 ;;		None
 13311 ;; Return value:  Size  Location     Type
 13312 ;;                  1    wreg      void 
 13313 ;; Registers used:
 13314 ;;		None
 13315 ;; Tracked objects:
 13316 ;;		On entry : 1F/1
 13317 ;;		On exit  : 1F/0
 13318 ;;		Unchanged: 0/0
 13319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13324 ;;Total ram usage:        0 bytes
 13325 ;; Hardware stack levels used: 1
 13326 ;; Hardware stack levels required when called: 4
 13327 ;; This function calls:
 13328 ;;		Nothing
 13329 ;; This function is called by:
 13330 ;;		_WakeUp
 13331 ;; This function uses a non-reentrant model
 13332 ;;
 13333                           
 13334                           
 13335                           ;psect for function _TMR1_StartTimer
 13336  0666                     _TMR1_StartTimer:
 13337                           
 13338                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
 13339                           
 13340                           ;incstack = 0
 13341                           ; Regs used in _TMR1_StartTimer: []
 13342  0666  0020               	movlb	0	; select bank0
 13343  0667  1418               	bsf	24,0	;volatile
 13344  0668  0008               	return
 13345  0669                     __end_of_TMR1_StartTimer:
 13346                           
 13347                           	psect	text6
 13348  098B                     __ptext6:	
 13349 ;; *************** function _ReadConfigurationsFromMemory *****************
 13350 ;; Defined at:
 13351 ;;		line 79 in file "main.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;		None
 13354 ;; Auto vars:     Size  Location     Type
 13355 ;;		None
 13356 ;; Return value:  Size  Location     Type
 13357 ;;                  1    wreg      void 
 13358 ;; Registers used:
 13359 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13360 ;; Tracked objects:
 13361 ;;		On entry : 0/0
 13362 ;;		On exit  : 0/0
 13363 ;;		Unchanged: 0/0
 13364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13369 ;;Total ram usage:        0 bytes
 13370 ;; Hardware stack levels used: 1
 13371 ;; Hardware stack levels required when called: 6
 13372 ;; This function calls:
 13373 ;;		_HEFLASH_readBlock
 13374 ;; This function is called by:
 13375 ;;		_WakeUp
 13376 ;; This function uses a non-reentrant model
 13377 ;;
 13378                           
 13379                           
 13380                           ;psect for function _ReadConfigurationsFromMemory
 13381  098B                     _ReadConfigurationsFromMemory:
 13382                           
 13383                           ;incstack = 0
 13384                           ; Regs used in _ReadConfigurationsFromMemory: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 13385  098B  3014               	movlw	20
 13386                           
 13387                           ;main.c: 80:     HEFLASH_readBlock((void*)&saved_pc, 0, sizeof(saved_pc));
 13388  098C  01F4               	clrf	HEFLASH_readBlock@radd
 13389  098D  00F5               	movwf	HEFLASH_readBlock@count
 13390  098E  30B2               	movlw	(low (_saved_pc| 0))& (0+255)
 13391  098F  2990               	ljmp	_HEFLASH_readBlock
 13392  0990                     __end_of_ReadConfigurationsFromMemory:
 13393  0990                     __ptext7:	
 13394 ;; *************** function _HEFLASH_readBlock *****************
 13395 ;; Defined at:
 13396 ;;		line 37 in file "HEFlash.c"
 13397 ;; Parameters:    Size  Location     Type
 13398 ;;  buffer          1    wreg     PTR unsigned char 
 13399 ;;		 -> saved_pc(20), 
 13400 ;;  radd            1    4[COMMON] unsigned char 
 13401 ;;  count           1    5[COMMON] unsigned char 
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;  buffer          1    6[COMMON] PTR unsigned char 
 13404 ;;		 -> saved_pc(20), 
 13405 ;;  add             2    7[COMMON] unsigned int 
 13406 ;; Return value:  Size  Location     Type
 13407 ;;                  1    wreg      unsigned char 
 13408 ;; Registers used:
 13409 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13410 ;; Tracked objects:
 13411 ;;		On entry : 0/0
 13412 ;;		On exit  : 0/0
 13413 ;;		Unchanged: 0/0
 13414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13416 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13418 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13419 ;;Total ram usage:        5 bytes
 13420 ;; Hardware stack levels used: 1
 13421 ;; Hardware stack levels required when called: 5
 13422 ;; This function calls:
 13423 ;;		_FLASH_read
 13424 ;; This function is called by:
 13425 ;;		_ReadConfigurationsFromMemory
 13426 ;; This function uses a non-reentrant model
 13427 ;;
 13428                           
 13429                           
 13430                           ;psect for function _HEFLASH_readBlock
 13431  0990                     _HEFLASH_readBlock:
 13432                           
 13433                           ;incstack = 0
 13434                           ; Regs used in _HEFLASH_readBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13435                           ;HEFLASH_readBlock@buffer stored from wreg
 13436  0990  00F6               	movwf	HEFLASH_readBlock@buffer
 13437                           
 13438                           ;HEFlash.c: 37: char HEFLASH_readBlock(char* buffer, char radd, char count);HEFlash.c: 3
      +                          8: {;HEFlash.c: 40:     unsigned add = radd * 32 + 0x1F80;
 13439  0991  0874               	movf	HEFLASH_readBlock@radd,w
 13440  0992  00F7               	movwf	HEFLASH_readBlock@add
 13441  0993  3005               	movlw	5
 13442  0994  01F8               	clrf	HEFLASH_readBlock@add+1
 13443  0995                     u1445:
 13444  0995  35F7               	lslf	HEFLASH_readBlock@add,f
 13445  0996  0DF8               	rlf	HEFLASH_readBlock@add+1,f
 13446  0997  0B89               	decfsz	9,f
 13447  0998  2995               	goto	u1445
 13448  0999  3080               	movlw	128
 13449  099A  07F7               	addwf	HEFLASH_readBlock@add,f
 13450  099B  301F               	movlw	31
 13451  099C  3DF8               	addwfc	HEFLASH_readBlock@add+1,f
 13452                           
 13453                           ;HEFlash.c: 42:     if ((count > 32)||(radd >= (0x1FFF -0x1F80 +1)/32))
 13454  099D  3021               	movlw	33
 13455  099E  0275               	subwf	HEFLASH_readBlock@count,w
 13456  099F  1803               	skipnc
 13457  09A0  0008               	return
 13458  09A1  3004               	movlw	4
 13459  09A2  0274               	subwf	HEFLASH_readBlock@radd,w
 13460  09A3  1803               	btfsc	3,0
 13461  09A4  0008               	return
 13462  09A5                     l3095:
 13463                           
 13464                           ;HEFlash.c: 45:     while (count > 0)
 13465  09A5  0875               	movf	HEFLASH_readBlock@count,w
 13466  09A6  1903               	btfsc	3,2
 13467  09A7  0008               	return
 13468                           
 13469                           ;HEFlash.c: 46:     {;HEFlash.c: 47:         *buffer++ = (char)FLASH_read (add++);
 13470  09A8  0876               	movf	HEFLASH_readBlock@buffer,w
 13471  09A9  0086               	movwf	6
 13472  09AA  0187               	clrf	7
 13473  09AB  0878               	movf	HEFLASH_readBlock@add+1,w
 13474  09AC  00F3               	movwf	FLASH_read@address+1
 13475  09AD  0877               	movf	HEFLASH_readBlock@add,w
 13476  09AE  00F2               	movwf	FLASH_read@address
 13477  09AF  21B9  3189         	fcall	_FLASH_read
 13478  09B1  0872               	movf	?_FLASH_read,w
 13479  09B2  0081               	movwf	1
 13480  09B3  0AF7               	incf	HEFLASH_readBlock@add,f
 13481  09B4  1903               	skipnz
 13482  09B5  0AF8               	incf	HEFLASH_readBlock@add+1,f
 13483  09B6  0AF6               	incf	HEFLASH_readBlock@buffer,f
 13484                           
 13485                           ;HEFlash.c: 48:         count--;
 13486  09B7  03F5               	decf	HEFLASH_readBlock@count,f
 13487  09B8  29A5               	goto	l3095
 13488  09B9                     __end_of_HEFLASH_readBlock:
 13489  09B9                     __ptext8:	
 13490 ;; *************** function _FLASH_read *****************
 13491 ;; Defined at:
 13492 ;;		line 24 in file "Flash.c"
 13493 ;; Parameters:    Size  Location     Type
 13494 ;;  address         2    2[COMMON] unsigned int 
 13495 ;; Auto vars:     Size  Location     Type
 13496 ;;		None
 13497 ;; Return value:  Size  Location     Type
 13498 ;;                  2    2[COMMON] unsigned int 
 13499 ;; Registers used:
 13500 ;;		wreg
 13501 ;; Tracked objects:
 13502 ;;		On entry : 0/0
 13503 ;;		On exit  : 1F/3
 13504 ;;		Unchanged: 0/0
 13505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13510 ;;Total ram usage:        2 bytes
 13511 ;; Hardware stack levels used: 1
 13512 ;; Hardware stack levels required when called: 4
 13513 ;; This function calls:
 13514 ;;		Nothing
 13515 ;; This function is called by:
 13516 ;;		_HEFLASH_readBlock
 13517 ;; This function uses a non-reentrant model
 13518 ;;
 13519                           
 13520                           
 13521                           ;psect for function _FLASH_read
 13522  09B9                     _FLASH_read:
 13523                           
 13524                           ;Flash.c: 24: unsigned FLASH_read (unsigned address);Flash.c: 25: {;Flash.c: 27:     PMA
      +                          DR = address;
 13525                           
 13526                           ;incstack = 0
 13527                           ; Regs used in _FLASH_read: [wreg]
 13528  09B9  0873               	movf	FLASH_read@address+1,w
 13529  09BA  0023               	movlb	3	; select bank3
 13530  09BB  0092               	movwf	18	;volatile
 13531  09BC  0872               	movf	FLASH_read@address,w
 13532  09BD  0091               	movwf	17	;volatile
 13533                           
 13534                           ;Flash.c: 28:     PMCON1bits.CFGS = 0;
 13535  09BE  1315               	bcf	21,6	;volatile
 13536                           
 13537                           ;Flash.c: 29:     PMCON1bits.RD = 1;
 13538  09BF  1415               	bsf	21,0	;volatile
 13539                           
 13540                           ;Flash.c: 30:     __nop();
 13541  09C0  0000               	nop
 13542                           
 13543                           ;Flash.c: 31:     __nop();
 13544  09C1  0000               	nop
 13545                           
 13546                           ;Flash.c: 33:     return PMDAT;
 13547  09C2  0023               	movlb	3	; select bank3
 13548  09C3  0814               	movf	20,w	;volatile
 13549  09C4  00F3               	movwf	?_FLASH_read+1
 13550  09C5  0813               	movf	19,w	;volatile
 13551  09C6  00F2               	movwf	?_FLASH_read
 13552  09C7  0008               	return
 13553  09C8                     __end_of_FLASH_read:
 13554                           
 13555                           	psect	text9
 13556  0A06                     __ptext9:	
 13557 ;; *************** function _SwitchEventHandler *****************
 13558 ;; Defined at:
 13559 ;;		line 222 in file "main.c"
 13560 ;; Parameters:    Size  Location     Type
 13561 ;;		None
 13562 ;; Auto vars:     Size  Location     Type
 13563 ;;  new_switch_p    1   50[BANK0 ] unsigned char 
 13564 ;;  a3              1   49[BANK0 ] _Bool 
 13565 ;;  a2              1   48[BANK0 ] _Bool 
 13566 ;;  a1              1   47[BANK0 ] _Bool 
 13567 ;; Return value:  Size  Location     Type
 13568 ;;                  1    wreg      void 
 13569 ;; Registers used:
 13570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13571 ;; Tracked objects:
 13572 ;;		On entry : 1E/1
 13573 ;;		On exit  : 1D/0
 13574 ;;		Unchanged: 0/0
 13575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13577 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13578 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13579 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13580 ;;Total ram usage:       14 bytes
 13581 ;; Hardware stack levels used: 1
 13582 ;; Hardware stack levels required when called: 6
 13583 ;; This function calls:
 13584 ;;		_sendCoilsConfiguration
 13585 ;; This function is called by:
 13586 ;;		_main
 13587 ;; This function uses a non-reentrant model
 13588 ;;
 13589                           
 13590                           
 13591                           ;psect for function _SwitchEventHandler
 13592  0A06                     _SwitchEventHandler:
 13593                           
 13594                           ;main.c: 224:     const uint8_t conv_table[6] = {0, 2, 1, 4, 0, 3};;main.c: 225:     _Bo
      +                          ol a1 = !PORTCbits.RC0;
 13595                           
 13596                           ;incstack = 0
 13597                           ; Regs used in _SwitchEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13598  0A06  1003               	clrc
 13599  0A07  0020               	movlb	0	; select bank0
 13600  0A08  1C0E               	btfss	14,0	;volatile
 13601  0A09  1403               	setc
 13602  0A0A  3000               	movlw	0
 13603  0A0B  1803               	btfsc	3,0
 13604  0A0C  3001               	movlw	1
 13605  0A0D  00CF               	movwf	SwitchEventHandler@a1
 13606                           
 13607                           ;main.c: 226:     _Bool a2 = !PORTCbits.RC1;
 13608  0A0E  1003               	clrc
 13609  0A0F  1C8E               	btfss	14,1	;volatile
 13610  0A10  1403               	setc
 13611  0A11  3000               	movlw	0
 13612  0A12  1803               	btfsc	3,0
 13613  0A13  3001               	movlw	1
 13614  0A14  00D0               	movwf	SwitchEventHandler@a2
 13615                           
 13616                           ;main.c: 227:     _Bool a3 = !PORTCbits.RC2;
 13617  0A15  1003               	clrc
 13618  0A16  1D0E               	btfss	14,2	;volatile
 13619  0A17  1403               	setc
 13620  0A18  3000               	movlw	0
 13621  0A19  1803               	btfsc	3,0
 13622  0A1A  3001               	movlw	1
 13623  0A1B  00D1               	movwf	SwitchEventHandler@a3
 13624                           
 13625                           ;main.c: 229:     uint8_t new_switch_pos = conv_table[((a3 << 2) | (a2 << 1) | a1) - 1];
 13626  0A1C  084F               	movf	SwitchEventHandler@a1,w
 13627  0A1D  00C5               	movwf	??_SwitchEventHandler
 13628  0A1E  01C6               	clrf	??_SwitchEventHandler+1
 13629  0A1F  0850               	movf	SwitchEventHandler@a2,w
 13630  0A20  00C7               	movwf	??_SwitchEventHandler+2
 13631  0A21  01C8               	clrf	??_SwitchEventHandler+3
 13632  0A22  35C7               	lslf	??_SwitchEventHandler+2,f
 13633  0A23  0DC8               	rlf	??_SwitchEventHandler+3,f
 13634  0A24  0851               	movf	SwitchEventHandler@a3,w
 13635  0A25  00C9               	movwf	??_SwitchEventHandler+4
 13636  0A26  01CA               	clrf	??_SwitchEventHandler+5
 13637  0A27  35C9               	lslf	??_SwitchEventHandler+4,f
 13638  0A28  0DCA               	rlf	??_SwitchEventHandler+5,f
 13639  0A29  35C9               	lslf	??_SwitchEventHandler+4,f
 13640  0A2A  0DCA               	rlf	??_SwitchEventHandler+5,f
 13641  0A2B  0847               	movf	??_SwitchEventHandler+2,w
 13642  0A2C  0449               	iorwf	??_SwitchEventHandler+4,w
 13643  0A2D  00CB               	movwf	??_SwitchEventHandler+6
 13644  0A2E  0848               	movf	??_SwitchEventHandler+3,w
 13645  0A2F  044A               	iorwf	??_SwitchEventHandler+5,w
 13646  0A30  00CC               	movwf	??_SwitchEventHandler+7
 13647  0A31  0845               	movf	??_SwitchEventHandler,w
 13648  0A32  044B               	iorwf	??_SwitchEventHandler+6,w
 13649  0A33  00CD               	movwf	??_SwitchEventHandler+8
 13650  0A34  0846               	movf	??_SwitchEventHandler+1,w
 13651  0A35  044C               	iorwf	??_SwitchEventHandler+7,w
 13652  0A36  00CE               	movwf	??_SwitchEventHandler+9
 13653  0A37  302A               	movlw	low ((SwitchEventHandler@conv_table+65535)| (0+32768))
 13654  0A38  074D               	addwf	??_SwitchEventHandler+8,w
 13655  0A39  0084               	movwf	4
 13656  0A3A  3098               	movlw	high ((SwitchEventHandler@conv_table+65535)| (0+32768))
 13657  0A3B  3D4E               	addwfc	??_SwitchEventHandler+9,w
 13658  0A3C  0085               	movwf	5
 13659  0A3D  0800               	movf	0,w	;code access
 13660  0A3E  00D2               	movwf	SwitchEventHandler@new_switch_pos
 13661                           
 13662                           ;main.c: 230:     if(new_switch_pos != switch_pos){
 13663  0A3F  067B               	xorwf	_switch_pos,w
 13664  0A40  1903               	skipnz
 13665  0A41  0008               	return
 13666                           
 13667                           ;main.c: 231:         switch_pos = new_switch_pos;
 13668  0A42  0852               	movf	SwitchEventHandler@new_switch_pos,w
 13669  0A43  00FB               	movwf	_switch_pos
 13670                           
 13671                           ;main.c: 232:         sendCoilsConfiguration(&saved_pc[switch_pos]);
 13672  0A44  0709               	addwf	9,w
 13673  0A45  0709               	addwf	9,w
 13674  0A46  3EB2               	addlw	(low (_saved_pc| 0))& (0+255)
 13675  0A47  318E  2E90         	ljmp	_sendCoilsConfiguration
 13676  0A49                     __end_of_SwitchEventHandler:
 13677                           
 13678                           	psect	text12
 13679  08AD                     __ptext12:	
 13680 ;; *************** function _TMR1_Initialize *****************
 13681 ;; Defined at:
 13682 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 13683 ;; Parameters:    Size  Location     Type
 13684 ;;		None
 13685 ;; Auto vars:     Size  Location     Type
 13686 ;;		None
 13687 ;; Return value:  Size  Location     Type
 13688 ;;                  1    wreg      void 
 13689 ;; Registers used:
 13690 ;;		wreg, status,2, status,0, pclath, cstack
 13691 ;; Tracked objects:
 13692 ;;		On entry : 1F/1
 13693 ;;		On exit  : 1F/0
 13694 ;;		Unchanged: 0/0
 13695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13700 ;;Total ram usage:        0 bytes
 13701 ;; Hardware stack levels used: 1
 13702 ;; Hardware stack levels required when called: 5
 13703 ;; This function calls:
 13704 ;;		_TMR1_SetInterruptHandler
 13705 ;; This function is called by:
 13706 ;;		_SYSTEM_Initialize
 13707 ;; This function uses a non-reentrant model
 13708 ;;
 13709                           
 13710                           
 13711                           ;psect for function _TMR1_Initialize
 13712  08AD                     _TMR1_Initialize:
 13713  08AD                     l3377:	
 13714                           ;incstack = 0
 13715                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13716                           
 13717                           
 13718                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 13719  08AD  0020               	movlb	0	; select bank0
 13720  08AE  0199               	clrf	25	;volatile
 13721                           
 13722                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFC;
 13723  08AF  30FC               	movlw	252
 13724  08B0  0097               	movwf	23	;volatile
 13725                           
 13726                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x18;
 13727  08B1  3018               	movlw	24
 13728  08B2  0096               	movwf	22	;volatile
 13729                           
 13730                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
 13731  08B3  1011               	bcf	17,0	;volatile
 13732                           
 13733                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13734  08B4  0817               	movf	23,w	;volatile
 13735  08B5  0021               	movlb	1	; select bank1
 13736  08B6  00DE               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 13737  08B7  01DD               	clrf	_timer1ReloadVal^(0+128)	;volatile
 13738  08B8  0020               	movlb	0	; select bank0
 13739  08B9  0816               	movf	22,w	;volatile
 13740  08BA  0021               	movlb	1	; select bank1
 13741  08BB  04DD               	iorwf	_timer1ReloadVal^(0+128),f	;volatile
 13742                           
 13743                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
 13744  08BC  1411               	bsf	17,0	;volatile
 13745                           
 13746                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 13747  08BD  30FF               	movlw	low _TMR1_DefaultInterruptHandler
 13748  08BE  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 13749  08BF  3007               	movlw	high _TMR1_DefaultInterruptHandler
 13750  08C0  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 13751  08C1  318F  27BB         	fcall	_TMR1_SetInterruptHandler
 13752                           
 13753                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
 13754  08C3  3001               	movlw	1
 13755  08C4  0020               	movlb	0	; select bank0
 13756  08C5  0098               	movwf	24	;volatile
 13757  08C6  0008               	return
 13758  08C7                     __end_of_TMR1_Initialize:
 13759                           
 13760                           	psect	text15
 13761  09C8                     __ptext15:	
 13762 ;; *************** function _PIN_MANAGER_Initialize *****************
 13763 ;; Defined at:
 13764 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13765 ;; Parameters:    Size  Location     Type
 13766 ;;		None
 13767 ;; Auto vars:     Size  Location     Type
 13768 ;;		None
 13769 ;; Return value:  Size  Location     Type
 13770 ;;                  1    wreg      void 
 13771 ;; Registers used:
 13772 ;;		wreg, status,2, status,0, pclath, cstack
 13773 ;; Tracked objects:
 13774 ;;		On entry : B1F/4
 13775 ;;		On exit  : 1F/1C
 13776 ;;		Unchanged: 0/0
 13777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13782 ;;Total ram usage:        0 bytes
 13783 ;; Hardware stack levels used: 1
 13784 ;; Hardware stack levels required when called: 5
 13785 ;; This function calls:
 13786 ;;		_IOCAF0_SetInterruptHandler
 13787 ;; This function is called by:
 13788 ;;		_SYSTEM_Initialize
 13789 ;; This function uses a non-reentrant model
 13790 ;;
 13791                           
 13792                           
 13793                           ;psect for function _PIN_MANAGER_Initialize
 13794  09C8                     _PIN_MANAGER_Initialize:
 13795                           
 13796                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x26;
 13797                           
 13798                           ;incstack = 0
 13799                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13800  09C8  3026               	movlw	38
 13801  09C9  0022               	movlb	2	; select bank2
 13802  09CA  008C               	movwf	12	;volatile
 13803                           
 13804                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 13805  09CB  018D               	clrf	13	;volatile
 13806                           
 13807                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 13808  09CC  018E               	clrf	14	;volatile
 13809                           
 13810                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x01;
 13811  09CD  3001               	movlw	1
 13812  09CE  0021               	movlb	1	; select bank1
 13813  09CF  008C               	movwf	12	;volatile
 13814                           
 13815                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x30;
 13816  09D0  3030               	movlw	48
 13817  09D1  008D               	movwf	13	;volatile
 13818                           
 13819                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x0F;
 13820  09D2  300F               	movlw	15
 13821  09D3  008E               	movwf	14	;volatile
 13822                           
 13823                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x00;
 13824  09D4  0023               	movlb	3	; select bank3
 13825  09D5  018E               	clrf	14	;volatile
 13826                           
 13827                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x00;
 13828  09D6  018D               	clrf	13	;volatile
 13829                           
 13830                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x00;
 13831  09D7  018C               	clrf	12	;volatile
 13832                           
 13833                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x30;
 13834  09D8  3030               	movlw	48
 13835  09D9  0024               	movlb	4	; select bank4
 13836  09DA  008D               	movwf	13	;volatile
 13837                           
 13838                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x01;
 13839  09DB  3001               	movlw	1
 13840  09DC  008C               	movwf	12	;volatile
 13841                           
 13842                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x07;
 13843  09DD  3007               	movlw	7
 13844  09DE  008E               	movwf	14	;volatile
 13845                           
 13846                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 0;
 13847  09DF  0021               	movlb	1	; select bank1
 13848  09E0  1395               	bcf	21,7	;volatile
 13849                           
 13850                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
 13851  09E1  0025               	movlb	5	; select bank5
 13852  09E2  018C               	clrf	12	;volatile
 13853                           
 13854                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
 13855  09E3  018D               	clrf	13	;volatile
 13856                           
 13857                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
 13858  09E4  018E               	clrf	14	;volatile
 13859                           
 13860                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
 13861  09E5  3037               	movlw	55
 13862  09E6  0026               	movlb	6	; select bank6
 13863  09E7  008C               	movwf	12	;volatile
 13864                           
 13865                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
 13866  09E8  30F0               	movlw	240
 13867  09E9  008D               	movwf	13	;volatile
 13868                           
 13869                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
 13870  09EA  30FF               	movlw	255
 13871  09EB  008E               	movwf	14	;volatile
 13872                           
 13873                           ;mcc_generated_files/pin_manager.c: 105:     INLVLA = 0x3F;
 13874  09EC  303F               	movlw	63
 13875  09ED  0027               	movlb	7	; select bank7
 13876  09EE  008C               	movwf	12	;volatile
 13877                           
 13878                           ;mcc_generated_files/pin_manager.c: 106:     INLVLB = 0xF0;
 13879  09EF  30F0               	movlw	240
 13880  09F0  008D               	movwf	13	;volatile
 13881                           
 13882                           ;mcc_generated_files/pin_manager.c: 107:     INLVLC = 0xFF;
 13883  09F1  30FF               	movlw	255
 13884  09F2  008E               	movwf	14	;volatile
 13885                           
 13886                           ;mcc_generated_files/pin_manager.c: 114:     IOCAFbits.IOCAF0 = 0;
 13887  09F3  1013               	bcf	19,0	;volatile
 13888                           
 13889                           ;mcc_generated_files/pin_manager.c: 116:     IOCANbits.IOCAN0 = 1;
 13890  09F4  1412               	bsf	18,0	;volatile
 13891                           
 13892                           ;mcc_generated_files/pin_manager.c: 118:     IOCAPbits.IOCAP0 = 1;
 13893  09F5  1411               	bsf	17,0	;volatile
 13894                           
 13895                           ;mcc_generated_files/pin_manager.c: 123:     IOCAF0_SetInterruptHandler(IOCAF0_DefaultIn
      +                          terruptHandler);
 13896  09F6  3003               	movlw	low _IOCAF0_DefaultInterruptHandler
 13897  09F7  00F2               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler
 13898  09F8  3000               	movlw	high _IOCAF0_DefaultInterruptHandler
 13899  09F9  00F3               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler+1
 13900  09FA  318F  27B5         	fcall	_IOCAF0_SetInterruptHandler
 13901                           
 13902                           ;mcc_generated_files/pin_manager.c: 126:     INTCONbits.IOCIE = 1;
 13903  09FC  158B               	bsf	11,3	;volatile
 13904                           
 13905                           ;mcc_generated_files/pin_manager.c: 130:     RB6PPS = 0x12;
 13906  09FD  3012               	movlw	18
 13907  09FE  003D               	movlb	29	; select bank29
 13908  09FF  009E               	movwf	30	;volatile
 13909                           
 13910                           ;mcc_generated_files/pin_manager.c: 132:     RB7PPS = 0x14;
 13911  0A00  3014               	movlw	20
 13912  0A01  009F               	movwf	31	;volatile
 13913                           
 13914                           ;mcc_generated_files/pin_manager.c: 134:     SSPCLKPPS = 0x0E;
 13915  0A02  300E               	movlw	14
 13916  0A03  003C               	movlb	28	; select bank28
 13917  0A04  00A0               	movwf	32	;volatile
 13918  0A05  0008               	return
 13919  0A06                     __end_of_PIN_MANAGER_Initialize:
 13920                           
 13921                           	psect	swtext1
 13922  0800                     __pswtext1:
 13923  0800                     S4869:
 13924  0800  318D  2DBD         	ljmp	l4707
 13925  0802  318D  2DCA         	ljmp	l4709
 13926  0804  318D  2DD7         	ljmp	l4711
 13927  0806  318D  2DE4         	ljmp	l4713
 13928                           
 13929                           	psect	text20
 13930  0B13                     __ptext20:	
 13931 ;; *************** function _shiftOut *****************
 13932 ;; Defined at:
 13933 ;;		line 301 in file "main.c"
 13934 ;; Parameters:    Size  Location     Type
 13935 ;;  bitOrder        1    wreg     unsigned char 
 13936 ;;  val             8    2[COMMON] unsigned long long 
 13937 ;; Auto vars:     Size  Location     Type
 13938 ;;  bitOrder        1   17[BANK0 ] unsigned char 
 13939 ;;  i               8   18[BANK0 ] unsigned long long 
 13940 ;; Return value:  Size  Location     Type
 13941 ;;                  1    wreg      void 
 13942 ;; Registers used:
 13943 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13944 ;; Tracked objects:
 13945 ;;		On entry : 1F/1
 13946 ;;		On exit  : 1F/2
 13947 ;;		Unchanged: 0/0
 13948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13949 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13950 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13951 ;;      Temps:          0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13952 ;;      Totals:         8      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13953 ;;Total ram usage:       34 bytes
 13954 ;; Hardware stack levels used: 1
 13955 ;; Hardware stack levels required when called: 4
 13956 ;; This function calls:
 13957 ;;		Nothing
 13958 ;; This function is called by:
 13959 ;;		_sendCoilsConfiguration
 13960 ;; This function uses a non-reentrant model
 13961 ;;
 13962                           
 13963                           
 13964                           ;psect for function _shiftOut
 13965  0B13                     _shiftOut:
 13966                           
 13967                           ;incstack = 0
 13968                           ; Regs used in _shiftOut: [wreg+fsr1l+fsr1h+status,2+status,0]
 13969                           ;shiftOut@bitOrder stored from wreg
 13970  0B13  0020               	movlb	0	; select bank0
 13971  0B14  00B1               	movwf	shiftOut@bitOrder
 13972                           
 13973                           ;main.c: 301: void shiftOut(uint8_t bitOrder, uint64_t val);main.c: 302: {;main.c: 303: 
      +                              uint64_t i;;main.c: 304:     do { LATAbits.LATA5 = 0; } while(0);
 13974  0B15  0022               	movlb	2	; select bank2
 13975  0B16  128C               	bcf	12,5	;volatile
 13976                           
 13977                           ;main.c: 305:     for (i = 0; i < 48; i++) {
 13978  0B17  3032               	movlw	low shiftOut@i
 13979  0B18  0086               	movwf	6
 13980  0B19  3000               	movlw	high shiftOut@i
 13981  0B1A  0087               	movwf	7
 13982  0B1B  3008               	movlw	8
 13983  0B1C  0020               	movlb	0	; select bank0
 13984  0B1D  00A0               	movwf	??_shiftOut
 13985  0B1E  3000               	movlw	0
 13986  0B1F                     u2820:
 13987  0B1F  001E               	movwi fsr1++
 13988  0B20  0BA0               	decfsz	??_shiftOut,f
 13989  0B21  2B1F               	goto	u2820
 13990  0B22                     l4227:
 13991                           
 13992                           ;main.c: 306:         if (bitOrder == 0)
 13993  0B22  0020               	movlb	0	; select bank0
 13994  0B23  0831               	movf	shiftOut@bitOrder,w
 13995                           
 13996                           ;main.c: 307:             if (!!(val & ((uint64_t)1 << i)))
 13997  0B24  3072               	movlw	low shiftOut@val
 13998  0B25  0086               	movwf	6
 13999  0B26  3000               	movlw	high shiftOut@val
 14000  0B27  0087               	movwf	7
 14001  0B28  1D03               	btfss	3,2
 14002  0B29  2B54               	goto	L7
 14003  0B2A  3F40               	moviw [0]fsr1
 14004  0B2B  00A0               	movwf	??_shiftOut
 14005  0B2C  3F41               	moviw [1]fsr1
 14006  0B2D  00A1               	movwf	??_shiftOut+1
 14007  0B2E  3F42               	moviw [2]fsr1
 14008  0B2F  00A2               	movwf	??_shiftOut+2
 14009  0B30  3F43               	moviw [3]fsr1
 14010  0B31  00A3               	movwf	??_shiftOut+3
 14011  0B32  3F44               	moviw [4]fsr1
 14012  0B33  00A4               	movwf	??_shiftOut+4
 14013  0B34  3F45               	moviw [5]fsr1
 14014  0B35  00A5               	movwf	??_shiftOut+5
 14015  0B36  3F46               	moviw [6]fsr1
 14016  0B37  00A6               	movwf	??_shiftOut+6
 14017  0B38  3F47               	moviw [7]fsr1
 14018  0B39  00A7               	movwf	??_shiftOut+7
 14019  0B3A  0A32               	incf	shiftOut@i,w
 14020  0B3B  00A8               	movwf	??_shiftOut+8
 14021  0B3C  3001               	movlw	1
 14022  0B3D  00A9               	movwf	??_shiftOut+9
 14023  0B3E  3000               	movlw	0
 14024  0B3F  00AA               	movwf	??_shiftOut+10
 14025  0B40  00AB               	movwf	??_shiftOut+11
 14026  0B41  00AC               	movwf	??_shiftOut+12
 14027  0B42  00AD               	movwf	??_shiftOut+13
 14028  0B43  00AE               	movwf	??_shiftOut+14
 14029  0B44  00AF               	movwf	??_shiftOut+15
 14030  0B45  00B0               	movwf	??_shiftOut+16
 14031  0B46  2B51               	goto	u2840
 14032  0B47                     u2845:
 14033  0B47  1003               	clrc
 14034  0B48  0020               	movlb	0	; select bank0
 14035  0B49  0DA9               	rlf	??_shiftOut+9,f
 14036  0B4A  0DAA               	rlf	??_shiftOut+10,f
 14037  0B4B  0DAB               	rlf	??_shiftOut+11,f
 14038  0B4C  0DAC               	rlf	??_shiftOut+12,f
 14039  0B4D  0DAD               	rlf	??_shiftOut+13,f
 14040  0B4E  0DAE               	rlf	??_shiftOut+14,f
 14041  0B4F  0DAF               	rlf	??_shiftOut+15,f
 14042  0B50  0DB0               	rlf	??_shiftOut+16,f
 14043  0B51                     u2840:
 14044  0B51  0BA8               	decfsz	??_shiftOut+8,f
 14045  0B52  2B47               	goto	u2845
 14046  0B53  2B80               	goto	L6
 14047  0B54                     L7:	
 14048                           ;main.c: 312:             if (!!(val & ((uint64_t)1 << (47 - i))))
 14049                           
 14050                           ;main.c: 310:                 do { LATCbits.LATC6 = 0; } while(0);
 14051                           
 14052                           ;main.c: 308:                 do { LATCbits.LATC6 = 1; } while(0);
 14053                           
 14054  0B54  3F40               	moviw [0]fsr1
 14055  0B55  00A0               	movwf	??_shiftOut
 14056  0B56  3F41               	moviw [1]fsr1
 14057  0B57  00A1               	movwf	??_shiftOut+1
 14058  0B58  3F42               	moviw [2]fsr1
 14059  0B59  00A2               	movwf	??_shiftOut+2
 14060  0B5A  3F43               	moviw [3]fsr1
 14061  0B5B  00A3               	movwf	??_shiftOut+3
 14062  0B5C  3F44               	moviw [4]fsr1
 14063  0B5D  00A4               	movwf	??_shiftOut+4
 14064  0B5E  3F45               	moviw [5]fsr1
 14065  0B5F  00A5               	movwf	??_shiftOut+5
 14066  0B60  3F46               	moviw [6]fsr1
 14067  0B61  00A6               	movwf	??_shiftOut+6
 14068  0B62  3F47               	moviw [7]fsr1
 14069  0B63  00A7               	movwf	??_shiftOut+7
 14070  0B64  302F               	movlw	47
 14071  0B65  00A8               	movwf	??_shiftOut+8
 14072  0B66  0832               	movf	shiftOut@i,w
 14073  0B67  02A8               	subwf	??_shiftOut+8,f
 14074  0B68  3001               	movlw	1
 14075  0B69  0AA8               	incf	??_shiftOut+8,f
 14076  0B6A  00A9               	movwf	??_shiftOut+9
 14077  0B6B  3000               	movlw	0
 14078  0B6C  00AA               	movwf	??_shiftOut+10
 14079  0B6D  00AB               	movwf	??_shiftOut+11
 14080  0B6E  00AC               	movwf	??_shiftOut+12
 14081  0B6F  00AD               	movwf	??_shiftOut+13
 14082  0B70  00AE               	movwf	??_shiftOut+14
 14083  0B71  00AF               	movwf	??_shiftOut+15
 14084  0B72  00B0               	movwf	??_shiftOut+16
 14085  0B73  2B7E               	goto	u2860
 14086  0B74                     u2865:
 14087  0B74  1003               	clrc
 14088  0B75  0020               	movlb	0	; select bank0
 14089  0B76  0DA9               	rlf	??_shiftOut+9,f
 14090  0B77  0DAA               	rlf	??_shiftOut+10,f
 14091  0B78  0DAB               	rlf	??_shiftOut+11,f
 14092  0B79  0DAC               	rlf	??_shiftOut+12,f
 14093  0B7A  0DAD               	rlf	??_shiftOut+13,f
 14094  0B7B  0DAE               	rlf	??_shiftOut+14,f
 14095  0B7C  0DAF               	rlf	??_shiftOut+15,f
 14096  0B7D  0DB0               	rlf	??_shiftOut+16,f
 14097  0B7E                     u2860:
 14098  0B7E  0BA8               	decfsz	??_shiftOut+8,f
 14099  0B7F  2B74               	goto	u2865
 14100  0B80                     L6:
 14101  0B80  0020               	movlb	0	; select bank0
 14102  0B81  0829               	movf	??_shiftOut+9,w
 14103  0B82  05A0               	andwf	??_shiftOut,f
 14104  0B83  082A               	movf	??_shiftOut+10,w
 14105  0B84  05A1               	andwf	??_shiftOut+1,f
 14106  0B85  082B               	movf	??_shiftOut+11,w
 14107  0B86  05A2               	andwf	??_shiftOut+2,f
 14108  0B87  082C               	movf	??_shiftOut+12,w
 14109  0B88  05A3               	andwf	??_shiftOut+3,f
 14110  0B89  082D               	movf	??_shiftOut+13,w
 14111  0B8A  05A4               	andwf	??_shiftOut+4,f
 14112  0B8B  082E               	movf	??_shiftOut+14,w
 14113  0B8C  05A5               	andwf	??_shiftOut+5,f
 14114  0B8D  082F               	movf	??_shiftOut+15,w
 14115  0B8E  05A6               	andwf	??_shiftOut+6,f
 14116  0B8F  0830               	movf	??_shiftOut+16,w
 14117  0B90  05A7               	andwf	??_shiftOut+7,f
 14118  0B91  0820               	movf	??_shiftOut,w
 14119  0B92  0421               	iorwf	??_shiftOut+1,w
 14120  0B93  0422               	iorwf	??_shiftOut+2,w
 14121  0B94  0423               	iorwf	??_shiftOut+3,w
 14122  0B95  0424               	iorwf	??_shiftOut+4,w
 14123  0B96  0425               	iorwf	??_shiftOut+5,w
 14124  0B97  0426               	iorwf	??_shiftOut+6,w
 14125  0B98  0427               	iorwf	??_shiftOut+7,w
 14126  0B99  1903               	skipnz
 14127  0B9A  2B9E               	goto	l592
 14128                           
 14129                           ;main.c: 313:                 do { LATCbits.LATC6 = 1; } while(0);
 14130  0B9B  0022               	movlb	2	; select bank2
 14131  0B9C  170E               	bsf	14,6	;volatile
 14132  0B9D  2BA0               	goto	l594
 14133  0B9E                     l592:	
 14134                           ;main.c: 315:                 do { LATCbits.LATC6 = 0; } while(0);
 14135                           
 14136  0B9E  0022               	movlb	2	; select bank2
 14137  0B9F  130E               	bcf	14,6	;volatile
 14138  0BA0                     l594:	
 14139                           ;main.c: 317:         do { LATCbits.LATC7 = 1; } while(0);
 14140                           
 14141  0BA0  178E               	bsf	14,7	;volatile
 14142                           
 14143                           ;main.c: 318:         do { LATCbits.LATC7 = 0; } while(0);
 14144  0BA1  138E               	bcf	14,7	;volatile
 14145                           
 14146                           ;main.c: 319:     }
 14147  0BA2  3001               	movlw	1
 14148  0BA3  0020               	movlb	0	; select bank0
 14149  0BA4  07B2               	addwf	shiftOut@i,f
 14150  0BA5  3000               	movlw	0
 14151  0BA6  3DB3               	addwfc	shiftOut@i+1,f
 14152  0BA7  3DB4               	addwfc	shiftOut@i+2,f
 14153  0BA8  3DB5               	addwfc	shiftOut@i+3,f
 14154  0BA9  3DB6               	addwfc	shiftOut@i+4,f
 14155  0BAA  3DB7               	addwfc	shiftOut@i+5,f
 14156  0BAB  3DB8               	addwfc	shiftOut@i+6,f
 14157  0BAC  3DB9               	addwfc	shiftOut@i+7,f
 14158  0BAD  0839               	movf	shiftOut@i+7,w
 14159  0BAE  1D03               	btfss	3,2
 14160  0BAF  2BC6               	goto	l598
 14161  0BB0  0838               	movf	shiftOut@i+6,w
 14162  0BB1  1D03               	btfss	3,2
 14163  0BB2  2BC6               	goto	l598
 14164  0BB3  0837               	movf	shiftOut@i+5,w
 14165  0BB4  1D03               	btfss	3,2
 14166  0BB5  2BC6               	goto	l598
 14167  0BB6  0836               	movf	shiftOut@i+4,w
 14168  0BB7  1D03               	btfss	3,2
 14169  0BB8  2BC6               	goto	l598
 14170  0BB9  0835               	movf	shiftOut@i+3,w
 14171  0BBA  1D03               	btfss	3,2
 14172  0BBB  2BC6               	goto	l598
 14173  0BBC  0834               	movf	shiftOut@i+2,w
 14174  0BBD  1D03               	btfss	3,2
 14175  0BBE  2BC6               	goto	l598
 14176  0BBF  0833               	movf	shiftOut@i+1,w
 14177  0BC0  1D03               	btfss	3,2
 14178  0BC1  2BC6               	goto	l598
 14179  0BC2  3030               	movlw	48
 14180  0BC3  0232               	subwf	shiftOut@i,w
 14181  0BC4  1C03               	btfss	3,0
 14182  0BC5  2B22               	goto	l4227
 14183  0BC6                     l598:	
 14184                           ;main.c: 320:     do { LATAbits.LATA5 = 1; } while(0);
 14185                           
 14186  0BC6  0022               	movlb	2	; select bank2
 14187  0BC7  168C               	bsf	12,5	;volatile
 14188  0BC8  0008               	return
 14189  0BC9                     __end_of_shiftOut:
 14190                           
 14191                           	psect	text23
 14192  0952                     __ptext23:	
 14193 ;; *************** function ___awmod *****************
 14194 ;; Defined at:
 14195 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 14196 ;; Parameters:    Size  Location     Type
 14197 ;;  divisor         2    6[COMMON] int 
 14198 ;;  dividend        2    8[COMMON] int 
 14199 ;; Auto vars:     Size  Location     Type
 14200 ;;  sign            1    1[BANK0 ] unsigned char 
 14201 ;;  counter         1    0[BANK0 ] unsigned char 
 14202 ;; Return value:  Size  Location     Type
 14203 ;;                  2    6[COMMON] int 
 14204 ;; Registers used:
 14205 ;;		wreg, status,2, status,0
 14206 ;; Tracked objects:
 14207 ;;		On entry : 1F/0
 14208 ;;		On exit  : 1F/0
 14209 ;;		Unchanged: 0/0
 14210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14212 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14214 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14215 ;;Total ram usage:        6 bytes
 14216 ;; Hardware stack levels used: 1
 14217 ;; Hardware stack levels required when called: 4
 14218 ;; This function calls:
 14219 ;;		Nothing
 14220 ;; This function is called by:
 14221 ;;		_modulo
 14222 ;; This function uses a non-reentrant model
 14223 ;;
 14224                           
 14225                           
 14226                           ;psect for function ___awmod
 14227  0952                     ___awmod:
 14228                           
 14229                           ;incstack = 0
 14230                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 14231  0952  01A1               	clrf	___awmod@sign
 14232  0953  1FF9               	btfss	___awmod@dividend+1,7
 14233  0954  295C               	goto	l4295
 14234  0955  09F8               	comf	___awmod@dividend,f
 14235  0956  09F9               	comf	___awmod@dividend+1,f
 14236  0957  0AF8               	incf	___awmod@dividend,f
 14237  0958  1903               	skipnz
 14238  0959  0AF9               	incf	___awmod@dividend+1,f
 14239  095A  01A1               	clrf	___awmod@sign
 14240  095B  0AA1               	incf	___awmod@sign,f
 14241  095C                     l4295:
 14242  095C  1FF7               	btfss	___awmod@divisor+1,7
 14243  095D  2963               	goto	l4299
 14244  095E  09F6               	comf	___awmod@divisor,f
 14245  095F  09F7               	comf	___awmod@divisor+1,f
 14246  0960  0AF6               	incf	___awmod@divisor,f
 14247  0961  1903               	skipnz
 14248  0962  0AF7               	incf	___awmod@divisor+1,f
 14249  0963                     l4299:
 14250  0963  0876               	movf	___awmod@divisor,w
 14251  0964  0477               	iorwf	___awmod@divisor+1,w
 14252  0965  1903               	btfsc	3,2
 14253  0966  297E               	goto	l4315
 14254  0967  01A0               	clrf	___awmod@counter
 14255  0968                     L8:
 14256  0968  0AA0               	incf	___awmod@counter,f
 14257  0969  1BF7               	btfsc	___awmod@divisor+1,7
 14258  096A  296E               	goto	l4307
 14259  096B  35F6               	lslf	___awmod@divisor,f
 14260  096C  0DF7               	rlf	___awmod@divisor+1,f
 14261  096D  2968               	goto	L8
 14262  096E                     l4307:
 14263  096E  0877               	movf	___awmod@divisor+1,w
 14264  096F  0279               	subwf	___awmod@dividend+1,w
 14265  0970  1D03               	skipz
 14266  0971  2974               	goto	u2985
 14267  0972  0876               	movf	___awmod@divisor,w
 14268  0973  0278               	subwf	___awmod@dividend,w
 14269  0974                     u2985:
 14270  0974  1C03               	skipc
 14271  0975  297A               	goto	l4311
 14272  0976  0876               	movf	___awmod@divisor,w
 14273  0977  02F8               	subwf	___awmod@dividend,f
 14274  0978  0877               	movf	___awmod@divisor+1,w
 14275  0979  3BF9               	subwfb	___awmod@dividend+1,f
 14276  097A                     l4311:
 14277  097A  36F7               	lsrf	___awmod@divisor+1,f
 14278  097B  0CF6               	rrf	___awmod@divisor,f
 14279  097C  0BA0               	decfsz	___awmod@counter,f
 14280  097D  296E               	goto	l4307
 14281  097E                     l4315:
 14282  097E  0821               	movf	___awmod@sign,w
 14283  097F  1903               	btfsc	3,2
 14284  0980  2986               	goto	l4319
 14285  0981  09F8               	comf	___awmod@dividend,f
 14286  0982  09F9               	comf	___awmod@dividend+1,f
 14287  0983  0AF8               	incf	___awmod@dividend,f
 14288  0984  1903               	skipnz
 14289  0985  0AF9               	incf	___awmod@dividend+1,f
 14290  0986                     l4319:
 14291  0986  0879               	movf	___awmod@dividend+1,w
 14292  0987  00F7               	movwf	?___awmod+1
 14293  0988  0878               	movf	___awmod@dividend,w
 14294  0989  00F6               	movwf	?___awmod
 14295  098A  0008               	return
 14296  098B                     __end_of___awmod:
 14297                           
 14298                           	psect	text28
 14299  0A96                     __ptext28:	
 14300 ;; *************** function _HEFLASH_writeBlock *****************
 14301 ;; Defined at:
 14302 ;;		line 14 in file "HEFlash.c"
 14303 ;; Parameters:    Size  Location     Type
 14304 ;;  radd            1    wreg     unsigned char 
 14305 ;;  buffer          1    8[COMMON] PTR unsigned char 
 14306 ;;		 -> saved_pc(20), 
 14307 ;;  count           1    9[COMMON] unsigned char 
 14308 ;; Auto vars:     Size  Location     Type
 14309 ;;  radd            1    0[BANK0 ] unsigned char 
 14310 ;;  add             2    1[BANK0 ] unsigned int 
 14311 ;; Return value:  Size  Location     Type
 14312 ;;                  1    wreg      unsigned char 
 14313 ;; Registers used:
 14314 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14315 ;; Tracked objects:
 14316 ;;		On entry : 0/0
 14317 ;;		On exit  : 1C/0
 14318 ;;		Unchanged: 0/0
 14319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14321 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14323 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14324 ;;Total ram usage:        5 bytes
 14325 ;; Hardware stack levels used: 1
 14326 ;; Hardware stack levels required when called: 6
 14327 ;; This function calls:
 14328 ;;		_FLASH_erase
 14329 ;;		_FLASH_write
 14330 ;; This function is called by:
 14331 ;;		_WriteConfigurationToMemory
 14332 ;; This function uses a non-reentrant model
 14333 ;;
 14334                           
 14335                           
 14336                           ;psect for function _HEFLASH_writeBlock
 14337  0A96                     _HEFLASH_writeBlock:
 14338                           
 14339                           ;incstack = 0
 14340                           ; Regs used in _HEFLASH_writeBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14341                           ;HEFLASH_writeBlock@radd stored from wreg
 14342  0A96  0020               	movlb	0	; select bank0
 14343  0A97  00A0               	movwf	HEFLASH_writeBlock@radd
 14344                           
 14345                           ;HEFlash.c: 14: char HEFLASH_writeBlock(char radd, char* buffer, char count);HEFlash.c: 
      +                          15: {;HEFlash.c: 17:     unsigned add = radd * 32 + 0x1F80;
 14346  0A98  00A1               	movwf	HEFLASH_writeBlock@add
 14347  0A99  3005               	movlw	5
 14348  0A9A  01A2               	clrf	HEFLASH_writeBlock@add+1
 14349  0A9B                     u2765:
 14350  0A9B  35A1               	lslf	HEFLASH_writeBlock@add,f
 14351  0A9C  0DA2               	rlf	HEFLASH_writeBlock@add+1,f
 14352  0A9D  0B89               	decfsz	9,f
 14353  0A9E  2A9B               	goto	u2765
 14354  0A9F  3080               	movlw	128
 14355  0AA0  07A1               	addwf	HEFLASH_writeBlock@add,f
 14356  0AA1  301F               	movlw	31
 14357  0AA2  3DA2               	addwfc	HEFLASH_writeBlock@add+1,f
 14358                           
 14359                           ;HEFlash.c: 19:     if ((count > 32)||(radd >= (0x1FFF -0x1F80 +1)/32))
 14360  0AA3  3021               	movlw	33
 14361  0AA4  0279               	subwf	HEFLASH_writeBlock@count,w
 14362  0AA5  1803               	skipnc
 14363  0AA6  0008               	return
 14364  0AA7  3004               	movlw	4
 14365  0AA8  0220               	subwf	HEFLASH_writeBlock@radd,w
 14366  0AA9  1803               	btfsc	3,0
 14367  0AAA  0008               	return
 14368                           
 14369                           ;HEFlash.c: 22:     FLASH_erase(add);
 14370  0AAB  0822               	movf	HEFLASH_writeBlock@add+1,w
 14371  0AAC  00F3               	movwf	FLASH_erase@address+1
 14372  0AAD  0821               	movf	HEFLASH_writeBlock@add,w
 14373  0AAE  00F2               	movwf	FLASH_erase@address
 14374  0AAF  22F6  318A         	fcall	_FLASH_erase
 14375  0AB1                     l4175:	
 14376                           ;HEFlash.c: 24:     while (count > 1)
 14377                           
 14378                           
 14379                           ;HEFlash.c: 24:     while (count > 1)
 14380  0AB1  3002               	movlw	2
 14381  0AB2  0279               	subwf	HEFLASH_writeBlock@count,w
 14382  0AB3  1C03               	btfss	3,0
 14383  0AB4  2ACB               	goto	l4177
 14384                           
 14385                           ;HEFlash.c: 25:     {;HEFlash.c: 27:         FLASH_write(add++, (unsigned)*buffer++, 1);
 14386  0AB5  0020               	movlb	0	; select bank0
 14387  0AB6  0822               	movf	HEFLASH_writeBlock@add+1,w
 14388  0AB7  00F3               	movwf	FLASH_write@address+1
 14389  0AB8  0821               	movf	HEFLASH_writeBlock@add,w
 14390  0AB9  00F2               	movwf	FLASH_write@address
 14391  0ABA  0878               	movf	HEFLASH_writeBlock@buffer,w
 14392  0ABB  0086               	movwf	6
 14393  0ABC  0187               	clrf	7
 14394  0ABD  0801               	movf	1,w
 14395  0ABE  00F4               	movwf	FLASH_write@data
 14396  0ABF  01F5               	clrf	FLASH_write@data+1
 14397  0AC0  01F6               	clrf	FLASH_write@latch
 14398  0AC1  0AF6               	incf	FLASH_write@latch,f
 14399  0AC2  22DB  318A         	fcall	_FLASH_write
 14400  0AC4  0AF8               	incf	HEFLASH_writeBlock@buffer,f
 14401  0AC5  0020               	movlb	0	; select bank0
 14402  0AC6  0AA1               	incf	HEFLASH_writeBlock@add,f
 14403  0AC7  1903               	skipnz
 14404  0AC8  0AA2               	incf	HEFLASH_writeBlock@add+1,f
 14405                           
 14406                           ;HEFlash.c: 28:         count--;
 14407  0AC9  03F9               	decf	HEFLASH_writeBlock@count,f
 14408  0ACA  2AB1               	goto	l4175
 14409  0ACB                     l4177:
 14410                           
 14411                           ;HEFlash.c: 32:     FLASH_write (add, (unsigned) *buffer, 0);
 14412  0ACB  0020               	movlb	0	; select bank0
 14413  0ACC  0822               	movf	HEFLASH_writeBlock@add+1,w
 14414  0ACD  00F3               	movwf	FLASH_write@address+1
 14415  0ACE  0821               	movf	HEFLASH_writeBlock@add,w
 14416  0ACF  00F2               	movwf	FLASH_write@address
 14417  0AD0  0878               	movf	HEFLASH_writeBlock@buffer,w
 14418  0AD1  0086               	movwf	6
 14419  0AD2  0187               	clrf	7
 14420  0AD3  0801               	movf	1,w
 14421  0AD4  00F4               	movwf	FLASH_write@data
 14422  0AD5  01F5               	clrf	FLASH_write@data+1
 14423  0AD6  01F6               	clrf	FLASH_write@latch
 14424  0AD7  22DB               	fcall	_FLASH_write
 14425                           
 14426                           ;HEFlash.c: 35:     return PMCON1bits.WRERR;;	Return value of _HEFLASH_writeBlock is nev
      +                          er used
 14427  0AD8  0023               	movlb	3	; select bank3
 14428  0AD9  0815               	movf	21,w	;volatile
 14429  0ADA  0008               	return
 14430  0ADB                     __end_of_HEFLASH_writeBlock:
 14431  0ADB                     __ptext29:	
 14432 ;; *************** function _FLASH_write *****************
 14433 ;; Defined at:
 14434 ;;		line 57 in file "Flash.c"
 14435 ;; Parameters:    Size  Location     Type
 14436 ;;  address         2    2[COMMON] unsigned int 
 14437 ;;  data            2    4[COMMON] unsigned int 
 14438 ;;  latch           1    6[COMMON] unsigned char 
 14439 ;; Auto vars:     Size  Location     Type
 14440 ;;  temp            1    7[COMMON] unsigned char 
 14441 ;; Return value:  Size  Location     Type
 14442 ;;                  1    wreg      void 
 14443 ;; Registers used:
 14444 ;;		wreg, status,2, status,0, pclath, cstack
 14445 ;; Tracked objects:
 14446 ;;		On entry : 1F/0
 14447 ;;		On exit  : 0/0
 14448 ;;		Unchanged: 0/0
 14449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14450 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14453 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14454 ;;Total ram usage:        6 bytes
 14455 ;; Hardware stack levels used: 1
 14456 ;; Hardware stack levels required when called: 5
 14457 ;; This function calls:
 14458 ;;		__unlock
 14459 ;; This function is called by:
 14460 ;;		_HEFLASH_writeBlock
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464                           
 14465                           ;psect for function _FLASH_write
 14466  0ADB                     _FLASH_write:
 14467                           
 14468                           ;Flash.c: 57: void FLASH_write (unsigned address, unsigned data, char latch);Flash.c: 58
      +                          : {;Flash.c: 60:     char temp = INTCONbits.GIE;
 14469                           
 14470                           ;incstack = 0
 14471                           ; Regs used in _FLASH_write: [wreg+status,2+status,0+pclath+cstack]
 14472  0ADB  3000               	movlw	0
 14473  0ADC  1B8B               	btfsc	11,7	;volatile
 14474  0ADD  3001               	movlw	1
 14475  0ADE  00F7               	movwf	FLASH_write@temp
 14476                           
 14477                           ;Flash.c: 61:     INTCONbits.GIE = 0;
 14478  0ADF  138B               	bcf	11,7	;volatile
 14479                           
 14480                           ;Flash.c: 63:     PMADR = address;
 14481  0AE0  0873               	movf	FLASH_write@address+1,w
 14482  0AE1  0023               	movlb	3	; select bank3
 14483  0AE2  0092               	movwf	18	;volatile
 14484  0AE3  0872               	movf	FLASH_write@address,w
 14485  0AE4  0091               	movwf	17	;volatile
 14486                           
 14487                           ;Flash.c: 64:     PMDAT = data;
 14488  0AE5  0875               	movf	FLASH_write@data+1,w
 14489  0AE6  0094               	movwf	20	;volatile
 14490  0AE7  0874               	movf	FLASH_write@data,w
 14491  0AE8  0093               	movwf	19	;volatile
 14492                           
 14493                           ;Flash.c: 65:     PMCON1bits.LWLO = latch;
 14494  0AE9  0C76               	rrf	FLASH_write@latch,w
 14495  0AEA  1C03               	skipc
 14496  0AEB  1295               	bcf	21,5	;volatile
 14497  0AEC  1803               	skipnc
 14498  0AED  1695               	bsf	21,5	;volatile
 14499                           
 14500                           ;Flash.c: 66:     PMCON1bits.CFGS = 0;
 14501  0AEE  1315               	bcf	21,6	;volatile
 14502                           
 14503                           ;Flash.c: 67:     PMCON1bits.FREE = 0;
 14504  0AEF  1215               	bcf	21,4	;volatile
 14505                           
 14506                           ;Flash.c: 68:     PMCON1bits.WREN = 1;
 14507  0AF0  1515               	bsf	21,2	;volatile
 14508                           
 14509                           ;Flash.c: 70:     _unlock();
 14510  0AF1  230A               	fcall	__unlock
 14511                           
 14512                           ;Flash.c: 72:     if (temp)
 14513  0AF2  0877               	movf	FLASH_write@temp,w
 14514  0AF3  1D03               	btfss	3,2
 14515                           
 14516                           ;Flash.c: 73:         INTCONbits.GIE = 1;
 14517  0AF4  178B               	bsf	11,7	;volatile
 14518  0AF5  0008               	return
 14519  0AF6                     __end_of_FLASH_write:
 14520  0AF6                     __ptext30:	
 14521 ;; *************** function _FLASH_erase *****************
 14522 ;; Defined at:
 14523 ;;		line 75 in file "Flash.c"
 14524 ;; Parameters:    Size  Location     Type
 14525 ;;  address         2    2[COMMON] unsigned int 
 14526 ;; Auto vars:     Size  Location     Type
 14527 ;;  temp            1    4[COMMON] unsigned char 
 14528 ;; Return value:  Size  Location     Type
 14529 ;;                  1    wreg      void 
 14530 ;; Registers used:
 14531 ;;		wreg, status,2, status,0, pclath, cstack
 14532 ;; Tracked objects:
 14533 ;;		On entry : 1F/0
 14534 ;;		On exit  : 1F/3
 14535 ;;		Unchanged: 0/0
 14536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14540 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14541 ;;Total ram usage:        3 bytes
 14542 ;; Hardware stack levels used: 1
 14543 ;; Hardware stack levels required when called: 5
 14544 ;; This function calls:
 14545 ;;		__unlock
 14546 ;; This function is called by:
 14547 ;;		_HEFLASH_writeBlock
 14548 ;; This function uses a non-reentrant model
 14549 ;;
 14550                           
 14551                           
 14552                           ;psect for function _FLASH_erase
 14553  0AF6                     _FLASH_erase:
 14554                           
 14555                           ;Flash.c: 75: void FLASH_erase (unsigned address);Flash.c: 76: {;Flash.c: 78:     char t
      +                          emp = INTCONbits.GIE;
 14556                           
 14557                           ;incstack = 0
 14558                           ; Regs used in _FLASH_erase: [wreg+status,2+status,0+pclath+cstack]
 14559  0AF6  3000               	movlw	0
 14560  0AF7  1B8B               	btfsc	11,7	;volatile
 14561  0AF8  3001               	movlw	1
 14562  0AF9  00F4               	movwf	FLASH_erase@temp
 14563                           
 14564                           ;Flash.c: 79:     INTCONbits.GIE = 0;
 14565  0AFA  138B               	bcf	11,7	;volatile
 14566                           
 14567                           ;Flash.c: 81:     PMADR = address;
 14568  0AFB  0873               	movf	FLASH_erase@address+1,w
 14569  0AFC  0023               	movlb	3	; select bank3
 14570  0AFD  0092               	movwf	18	;volatile
 14571  0AFE  0872               	movf	FLASH_erase@address,w
 14572  0AFF  0091               	movwf	17	;volatile
 14573                           
 14574                           ;Flash.c: 82:     PMCON1bits.CFGS = 0;
 14575  0B00  1315               	bcf	21,6	;volatile
 14576                           
 14577                           ;Flash.c: 83:     PMCON1bits.FREE = 1;
 14578  0B01  1615               	bsf	21,4	;volatile
 14579                           
 14580                           ;Flash.c: 84:     PMCON1bits.WREN = 1;
 14581  0B02  1515               	bsf	21,2	;volatile
 14582                           
 14583                           ;Flash.c: 86:     _unlock();
 14584  0B03  230A               	fcall	__unlock
 14585                           
 14586                           ;Flash.c: 88:     PMCON1bits.WREN = 0;
 14587  0B04  0023               	movlb	3	; select bank3
 14588  0B05  1115               	bcf	21,2	;volatile
 14589                           
 14590                           ;Flash.c: 89:     if (temp)
 14591  0B06  0874               	movf	FLASH_erase@temp,w
 14592  0B07  1D03               	btfss	3,2
 14593                           
 14594                           ;Flash.c: 90:         INTCONbits.GIE = 1;
 14595  0B08  178B               	bsf	11,7	;volatile
 14596  0B09  0008               	return
 14597  0B0A                     __end_of_FLASH_erase:
 14598  0B0A                     __ptext31:	
 14599 ;; *************** function __unlock *****************
 14600 ;; Defined at:
 14601 ;;		line 46 in file "Flash.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;		None
 14604 ;; Auto vars:     Size  Location     Type
 14605 ;;		None
 14606 ;; Return value:  Size  Location     Type
 14607 ;;                  1    wreg      void 
 14608 ;; Registers used:
 14609 ;;		None
 14610 ;; Tracked objects:
 14611 ;;		On entry : 1F/3
 14612 ;;		On exit  : 0/0
 14613 ;;		Unchanged: 0/0
 14614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14619 ;;Total ram usage:        0 bytes
 14620 ;; Hardware stack levels used: 1
 14621 ;; Hardware stack levels required when called: 4
 14622 ;; This function calls:
 14623 ;;		Nothing
 14624 ;; This function is called by:
 14625 ;;		_FLASH_write
 14626 ;;		_FLASH_erase
 14627 ;; This function uses a non-reentrant model
 14628 ;;
 14629                           
 14630                           
 14631                           ;psect for function __unlock
 14632  0B0A                     __unlock:
 14633                           
 14634                           ;incstack = 0
 14635                           ; Regs used in __unlock: []
 14636  0B0A  0023               	banksel	406	;# 
 14637  0B0B  3055               	movlw	85	;# 
 14638  0B0C  0096               	movwf	22	;# 
 14639  0B0D  30AA               	movlw	170	;# 
 14640  0B0E  0096               	movwf	22	;# 
 14641  0B0F  1495               	bsf	21,1	; set WR bit ;# 
 14642  0B10  0000               	nop	;# 
 14643  0B11  0000               	nop	;# 
 14644  0B12  0008               	return
 14645  0B13                     __end_of__unlock:
 14646                           
 14647                           	psect	text35
 14648  0BC9                     __ptext35:	
 14649 ;; *************** function _ClearFrameMemoryPartial *****************
 14650 ;; Defined at:
 14651 ;;		line 174 in file "waveshare29epaper.c"
 14652 ;; Parameters:    Size  Location     Type
 14653 ;;  x_start         2    8[BANK0 ] unsigned short 
 14654 ;;  y_start         2   10[BANK0 ] unsigned short 
 14655 ;;  x_end           2   12[BANK0 ] unsigned short 
 14656 ;;  y_end           2   14[BANK0 ] unsigned short 
 14657 ;;  color           1   16[BANK0 ] unsigned char 
 14658 ;; Auto vars:     Size  Location     Type
 14659 ;;  i               2   17[BANK0 ] unsigned short 
 14660 ;; Return value:  Size  Location     Type
 14661 ;;                  1    wreg      void 
 14662 ;; Registers used:
 14663 ;;		wreg, status,2, status,0, pclath, cstack
 14664 ;; Tracked objects:
 14665 ;;		On entry : 1F/0
 14666 ;;		On exit  : 1F/0
 14667 ;;		Unchanged: 0/0
 14668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14669 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14673 ;;Total ram usage:       11 bytes
 14674 ;; Hardware stack levels used: 1
 14675 ;; Hardware stack levels required when called: 7
 14676 ;; This function calls:
 14677 ;;		_SendCommand
 14678 ;;		_SendData
 14679 ;;		_SetMemoryArea
 14680 ;;		_SetMemoryPointer
 14681 ;;		___wmul
 14682 ;; This function is called by:
 14683 ;;		_ClearLine
 14684 ;; This function uses a non-reentrant model
 14685 ;;
 14686                           
 14687                           
 14688                           ;psect for function _ClearFrameMemoryPartial
 14689  0BC9                     _ClearFrameMemoryPartial:
 14690  0BC9                     l4109:	
 14691                           ;incstack = 0
 14692                           ; Regs used in _ClearFrameMemoryPartial: [wreg+status,2+status,0+pclath+cstack]
 14693                           
 14694                           
 14695                           ;waveshare29epaper.c: 175:     SetMemoryArea(x_start, y_start, x_end, y_end);
 14696  0BC9  0829               	movf	ClearFrameMemoryPartial@x_start+1,w
 14697  0BCA  00A1               	movwf	SetMemoryArea@x_start+1
 14698  0BCB  0828               	movf	ClearFrameMemoryPartial@x_start,w
 14699  0BCC  00A0               	movwf	SetMemoryArea@x_start
 14700  0BCD  082B               	movf	ClearFrameMemoryPartial@y_start+1,w
 14701  0BCE  00A3               	movwf	SetMemoryArea@y_start+1
 14702  0BCF  082A               	movf	ClearFrameMemoryPartial@y_start,w
 14703  0BD0  00A2               	movwf	SetMemoryArea@y_start
 14704  0BD1  082D               	movf	ClearFrameMemoryPartial@x_end+1,w
 14705  0BD2  00A5               	movwf	SetMemoryArea@x_end+1
 14706  0BD3  082C               	movf	ClearFrameMemoryPartial@x_end,w
 14707  0BD4  00A4               	movwf	SetMemoryArea@x_end
 14708  0BD5  082F               	movf	ClearFrameMemoryPartial@y_end+1,w
 14709  0BD6  00A7               	movwf	SetMemoryArea@y_end+1
 14710  0BD7  082E               	movf	ClearFrameMemoryPartial@y_end,w
 14711  0BD8  00A6               	movwf	SetMemoryArea@y_end
 14712  0BD9  3180  208B  318B   	fcall	_SetMemoryArea
 14713                           
 14714                           ;waveshare29epaper.c: 176:     SetMemoryPointer(x_start, y_start);
 14715  0BDC  0020               	movlb	0	; select bank0
 14716  0BDD  0829               	movf	ClearFrameMemoryPartial@x_start+1,w
 14717  0BDE  00F5               	movwf	SetMemoryPointer@x+1
 14718  0BDF  0828               	movf	ClearFrameMemoryPartial@x_start,w
 14719  0BE0  00F4               	movwf	SetMemoryPointer@x
 14720  0BE1  082B               	movf	ClearFrameMemoryPartial@y_start+1,w
 14721  0BE2  00F7               	movwf	SetMemoryPointer@y+1
 14722  0BE3  082A               	movf	ClearFrameMemoryPartial@y_start,w
 14723  0BE4  00F6               	movwf	SetMemoryPointer@y
 14724  0BE5  24DE               	fcall	_SetMemoryPointer
 14725                           
 14726                           ;waveshare29epaper.c: 177:     SendCommand(0x24);
 14727  0BE6  3024               	movlw	36
 14728  0BE7  3185  25B8  318B   	fcall	_SendCommand
 14729                           
 14730                           ;waveshare29epaper.c: 179:     uint16_t i;;waveshare29epaper.c: 180:     for (i = 0; i <
      +                           (x_end - x_start) * (y_end - y_start); i++) {
 14731  0BEA  0020               	movlb	0	; select bank0
 14732  0BEB  01B1               	clrf	ClearFrameMemoryPartial@i
 14733  0BEC  01B2               	clrf	ClearFrameMemoryPartial@i+1
 14734  0BED                     l4117:
 14735  0BED  082F               	movf	ClearFrameMemoryPartial@y_end+1,w
 14736  0BEE  00F5               	movwf	___wmul@multiplicand+1
 14737  0BEF  082E               	movf	ClearFrameMemoryPartial@y_end,w
 14738  0BF0  00F4               	movwf	___wmul@multiplicand
 14739  0BF1  082A               	movf	ClearFrameMemoryPartial@y_start,w
 14740  0BF2  02F4               	subwf	___wmul@multiplicand,f
 14741  0BF3  082B               	movf	ClearFrameMemoryPartial@y_start+1,w
 14742  0BF4  3BF5               	subwfb	___wmul@multiplicand+1,f
 14743  0BF5  082D               	movf	ClearFrameMemoryPartial@x_end+1,w
 14744  0BF6  00F3               	movwf	___wmul@multiplier+1
 14745  0BF7  082C               	movf	ClearFrameMemoryPartial@x_end,w
 14746  0BF8  00F2               	movwf	___wmul@multiplier
 14747  0BF9  0828               	movf	ClearFrameMemoryPartial@x_start,w
 14748  0BFA  02F2               	subwf	___wmul@multiplier,f
 14749  0BFB  0829               	movf	ClearFrameMemoryPartial@x_start+1,w
 14750  0BFC  3BF3               	subwfb	___wmul@multiplier+1,f
 14751  0BFD  3185  25A3  318B   	fcall	___wmul
 14752  0C00  0873               	movf	?___wmul+1,w
 14753  0C01  0020               	movlb	0	; select bank0
 14754  0C02  0232               	subwf	ClearFrameMemoryPartial@i+1,w
 14755  0C03  1D03               	skipz
 14756  0C04  2C07               	goto	u2735
 14757  0C05  0872               	movf	?___wmul,w
 14758  0C06  0231               	subwf	ClearFrameMemoryPartial@i,w
 14759  0C07                     u2735:
 14760  0C07  1803               	btfsc	3,0
 14761  0C08  0008               	return
 14762                           
 14763                           ;waveshare29epaper.c: 181:         SendData(color);
 14764  0C09  0830               	movf	ClearFrameMemoryPartial@color,w
 14765  0C0A  3180  20F4  318B   	fcall	_SendData
 14766                           
 14767                           ;waveshare29epaper.c: 182:     }
 14768  0C0D  0020               	movlb	0	; select bank0
 14769  0C0E  0AB1               	incf	ClearFrameMemoryPartial@i,f
 14770  0C0F  1903               	skipnz
 14771  0C10  0AB2               	incf	ClearFrameMemoryPartial@i+1,f
 14772  0C11  2BED               	goto	l4117
 14773  0C12                     __end_of_ClearFrameMemoryPartial:
 14774  0C12                     __ptext33:	
 14775 ;; *************** function _SetFrameMemoryPartial *****************
 14776 ;; Defined at:
 14777 ;;		line 110 in file "waveshare29epaper.c"
 14778 ;; Parameters:    Size  Location     Type
 14779 ;;  image_buffer    2    8[BANK0 ] PTR const unsigned char 
 14780 ;;		 -> bracket_right_rot(75), bracket_left_rot(75), g_arrow_rot(183), b_arrow_rot(183), 
 14781 ;;		 -> m_arrow_rot(183), n_arrow_rot(183), b_rot(75), m_rot(75), 
 14782 ;;		 -> parallel_rot(75), serie_rot(75), s_prime_rot(75), n_prime_rot(75), 
 14783 ;;		 -> s_rot(75), n_rot(75), 
 14784 ;;  x               2   10[BANK0 ] unsigned short 
 14785 ;;  y               2   12[BANK0 ] unsigned short 
 14786 ;;  image_width     2   14[BANK0 ] unsigned short 
 14787 ;;  image_height    2   16[BANK0 ] unsigned short 
 14788 ;;  invert_color    1   18[BANK0 ] _Bool 
 14789 ;; Auto vars:     Size  Location     Type
 14790 ;;  y_end           2   32[BANK0 ] unsigned short 
 14791 ;;  x_end           2   30[BANK0 ] unsigned short 
 14792 ;;  j               2   28[BANK0 ] unsigned short 
 14793 ;;  i               2   26[BANK0 ] unsigned short 
 14794 ;;  data            1   25[BANK0 ] unsigned char 
 14795 ;; Return value:  Size  Location     Type
 14796 ;;                  1    wreg      void 
 14797 ;; Registers used:
 14798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14799 ;; Tracked objects:
 14800 ;;		On entry : 1F/0
 14801 ;;		On exit  : 1F/0
 14802 ;;		Unchanged: 0/0
 14803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14804 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14805 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14806 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14807 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14808 ;;Total ram usage:       26 bytes
 14809 ;; Hardware stack levels used: 1
 14810 ;; Hardware stack levels required when called: 7
 14811 ;; This function calls:
 14812 ;;		_SendCommand
 14813 ;;		_SendData
 14814 ;;		_SetMemoryArea
 14815 ;;		_SetMemoryPointer
 14816 ;;		___wmul
 14817 ;; This function is called by:
 14818 ;;		_ImageFromPickupConf
 14819 ;; This function uses a non-reentrant model
 14820 ;;
 14821                           
 14822                           
 14823                           ;psect for function _SetFrameMemoryPartial
 14824  0C12                     _SetFrameMemoryPartial:
 14825  0C12                     l4241:	
 14826                           ;incstack = 0
 14827                           ; Regs used in _SetFrameMemoryPartial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14828                           
 14829                           
 14830                           ;waveshare29epaper.c: 111:     uint16_t x_end, y_end;;waveshare29epaper.c: 114:     x &=
      +                           0xF8;
 14831  0C12  30F8               	movlw	248
 14832  0C13  05AA               	andwf	SetFrameMemoryPartial@x,f
 14833  0C14  01AB               	clrf	SetFrameMemoryPartial@x+1
 14834                           
 14835                           ;waveshare29epaper.c: 115:     image_width &= 0xF8;
 14836  0C15  05AE               	andwf	SetFrameMemoryPartial@image_width,f
 14837  0C16  01AF               	clrf	SetFrameMemoryPartial@image_width+1
 14838                           
 14839                           ;waveshare29epaper.c: 116:     if (x + image_width >= 128) {
 14840  0C17  082E               	movf	SetFrameMemoryPartial@image_width,w
 14841  0C18  072A               	addwf	SetFrameMemoryPartial@x,w
 14842  0C19  00B3               	movwf	??_SetFrameMemoryPartial
 14843  0C1A  082F               	movf	SetFrameMemoryPartial@image_width+1,w
 14844  0C1B  3D2B               	addwfc	SetFrameMemoryPartial@x+1,w
 14845  0C1C  00B4               	movwf	??_SetFrameMemoryPartial+1
 14846  0C1D  3000               	movlw	0
 14847  0C1E  0234               	subwf	??_SetFrameMemoryPartial+1,w
 14848  0C1F  3080               	movlw	128
 14849  0C20  1903               	skipnz
 14850  0C21  0233               	subwf	??_SetFrameMemoryPartial,w
 14851  0C22  1C03               	skipc
 14852  0C23  2C28               	goto	l4247
 14853                           
 14854                           ;waveshare29epaper.c: 117:         x_end = 128 - 1;
 14855  0C24  307F               	movlw	127
 14856  0C25  00BE               	movwf	SetFrameMemoryPartial@x_end
 14857  0C26  01BF               	clrf	SetFrameMemoryPartial@x_end+1
 14858                           
 14859                           ;waveshare29epaper.c: 118:     } else {
 14860  0C27  2C31               	goto	l4251
 14861  0C28                     l4247:
 14862                           
 14863                           ;waveshare29epaper.c: 119:         x_end = x + image_width - 1;
 14864  0C28  082E               	movf	SetFrameMemoryPartial@image_width,w
 14865  0C29  072A               	addwf	SetFrameMemoryPartial@x,w
 14866  0C2A  00BE               	movwf	SetFrameMemoryPartial@x_end
 14867  0C2B  082F               	movf	SetFrameMemoryPartial@image_width+1,w
 14868  0C2C  3D2B               	addwfc	SetFrameMemoryPartial@x+1,w
 14869  0C2D  00BF               	movwf	SetFrameMemoryPartial@x_end+1
 14870  0C2E  30FF               	movlw	255
 14871  0C2F  07BE               	addwf	SetFrameMemoryPartial@x_end,f
 14872  0C30  3DBF               	addwfc	SetFrameMemoryPartial@x_end+1,f
 14873  0C31                     l4251:
 14874                           
 14875                           ;waveshare29epaper.c: 121:     if (y + image_height >= 296) {
 14876  0C31  0830               	movf	SetFrameMemoryPartial@image_height,w
 14877  0C32  072C               	addwf	SetFrameMemoryPartial@y,w
 14878  0C33  00B3               	movwf	??_SetFrameMemoryPartial
 14879  0C34  0831               	movf	SetFrameMemoryPartial@image_height+1,w
 14880  0C35  3D2D               	addwfc	SetFrameMemoryPartial@y+1,w
 14881  0C36  00B4               	movwf	??_SetFrameMemoryPartial+1
 14882  0C37  3001               	movlw	1
 14883  0C38  0234               	subwf	??_SetFrameMemoryPartial+1,w
 14884  0C39  3028               	movlw	40
 14885  0C3A  1903               	skipnz
 14886  0C3B  0233               	subwf	??_SetFrameMemoryPartial,w
 14887  0C3C  1C03               	skipc
 14888  0C3D  2C43               	goto	l4255
 14889                           
 14890                           ;waveshare29epaper.c: 122:         y_end = 296 - 1;
 14891  0C3E  3027               	movlw	39
 14892  0C3F  00C0               	movwf	SetFrameMemoryPartial@y_end
 14893  0C40  3001               	movlw	1
 14894  0C41  00C1               	movwf	SetFrameMemoryPartial@y_end+1
 14895                           
 14896                           ;waveshare29epaper.c: 123:     } else {
 14897  0C42  2C4C               	goto	l4259
 14898  0C43                     l4255:
 14899                           
 14900                           ;waveshare29epaper.c: 124:         y_end = y + image_height - 1;
 14901  0C43  0830               	movf	SetFrameMemoryPartial@image_height,w
 14902  0C44  072C               	addwf	SetFrameMemoryPartial@y,w
 14903  0C45  00C0               	movwf	SetFrameMemoryPartial@y_end
 14904  0C46  0831               	movf	SetFrameMemoryPartial@image_height+1,w
 14905  0C47  3D2D               	addwfc	SetFrameMemoryPartial@y+1,w
 14906  0C48  00C1               	movwf	SetFrameMemoryPartial@y_end+1
 14907  0C49  30FF               	movlw	255
 14908  0C4A  07C0               	addwf	SetFrameMemoryPartial@y_end,f
 14909  0C4B  3DC1               	addwfc	SetFrameMemoryPartial@y_end+1,f
 14910  0C4C                     l4259:
 14911                           
 14912                           ;waveshare29epaper.c: 126:     SetMemoryArea(x, y, x_end, y_end);
 14913  0C4C  082B               	movf	SetFrameMemoryPartial@x+1,w
 14914  0C4D  00A1               	movwf	SetMemoryArea@x_start+1
 14915  0C4E  082A               	movf	SetFrameMemoryPartial@x,w
 14916  0C4F  00A0               	movwf	SetMemoryArea@x_start
 14917  0C50  082D               	movf	SetFrameMemoryPartial@y+1,w
 14918  0C51  00A3               	movwf	SetMemoryArea@y_start+1
 14919  0C52  082C               	movf	SetFrameMemoryPartial@y,w
 14920  0C53  00A2               	movwf	SetMemoryArea@y_start
 14921  0C54  083F               	movf	SetFrameMemoryPartial@x_end+1,w
 14922  0C55  00A5               	movwf	SetMemoryArea@x_end+1
 14923  0C56  083E               	movf	SetFrameMemoryPartial@x_end,w
 14924  0C57  00A4               	movwf	SetMemoryArea@x_end
 14925  0C58  0841               	movf	SetFrameMemoryPartial@y_end+1,w
 14926  0C59  00A7               	movwf	SetMemoryArea@y_end+1
 14927  0C5A  0840               	movf	SetFrameMemoryPartial@y_end,w
 14928  0C5B  00A6               	movwf	SetMemoryArea@y_end
 14929  0C5C  3180  208B  318B   	fcall	_SetMemoryArea
 14930                           
 14931                           ;waveshare29epaper.c: 127:     SetMemoryPointer(x, y);
 14932  0C5F  0020               	movlb	0	; select bank0
 14933  0C60  082B               	movf	SetFrameMemoryPartial@x+1,w
 14934  0C61  00F5               	movwf	SetMemoryPointer@x+1
 14935  0C62  082A               	movf	SetFrameMemoryPartial@x,w
 14936  0C63  00F4               	movwf	SetMemoryPointer@x
 14937  0C64  082D               	movf	SetFrameMemoryPartial@y+1,w
 14938  0C65  00F7               	movwf	SetMemoryPointer@y+1
 14939  0C66  082C               	movf	SetFrameMemoryPartial@y,w
 14940  0C67  00F6               	movwf	SetMemoryPointer@y
 14941  0C68  24DE               	fcall	_SetMemoryPointer
 14942                           
 14943                           ;waveshare29epaper.c: 128:     SendCommand(0x24);
 14944  0C69  3024               	movlw	36
 14945  0C6A  3185  25B8  318B   	fcall	_SendCommand
 14946                           
 14947                           ;waveshare29epaper.c: 130:     uint8_t data;;waveshare29epaper.c: 131:     uint16_t i, j
      +                          ;;waveshare29epaper.c: 132:     for (j = 0; j < y_end - y + 1; j++) {
 14948  0C6D  0020               	movlb	0	; select bank0
 14949  0C6E  01BC               	clrf	SetFrameMemoryPartial@j
 14950  0C6F  01BD               	clrf	SetFrameMemoryPartial@j+1
 14951  0C70                     l4285:
 14952  0C70  082C               	movf	SetFrameMemoryPartial@y,w
 14953  0C71  0240               	subwf	SetFrameMemoryPartial@y_end,w
 14954  0C72  00B3               	movwf	??_SetFrameMemoryPartial
 14955  0C73  082D               	movf	SetFrameMemoryPartial@y+1,w
 14956  0C74  3B41               	subwfb	SetFrameMemoryPartial@y_end+1,w
 14957  0C75  00B4               	movwf	??_SetFrameMemoryPartial+1
 14958  0C76  0833               	movf	??_SetFrameMemoryPartial,w
 14959  0C77  3E01               	addlw	1
 14960  0C78  00B5               	movwf	??_SetFrameMemoryPartial+2
 14961  0C79  3000               	movlw	0
 14962  0C7A  3D34               	addwfc	??_SetFrameMemoryPartial+1,w
 14963  0C7B  00B6               	movwf	??_SetFrameMemoryPartial+3
 14964  0C7C  023D               	subwf	SetFrameMemoryPartial@j+1,w
 14965  0C7D  1D03               	skipz
 14966  0C7E  2C81               	goto	u2935
 14967  0C7F  0835               	movf	??_SetFrameMemoryPartial+2,w
 14968  0C80  023C               	subwf	SetFrameMemoryPartial@j,w
 14969  0C81                     u2935:
 14970  0C81  1803               	btfsc	3,0
 14971  0C82  0008               	return
 14972                           
 14973                           ;waveshare29epaper.c: 133:         for (i = 0; i < (x_end - x + 1) / 8; i++) {
 14974  0C83  01BA               	clrf	SetFrameMemoryPartial@i
 14975  0C84  01BB               	clrf	SetFrameMemoryPartial@i+1
 14976  0C85                     l4281:
 14977  0C85  082A               	movf	SetFrameMemoryPartial@x,w
 14978  0C86  023E               	subwf	SetFrameMemoryPartial@x_end,w
 14979  0C87  00B3               	movwf	??_SetFrameMemoryPartial
 14980  0C88  082B               	movf	SetFrameMemoryPartial@x+1,w
 14981  0C89  3B3F               	subwfb	SetFrameMemoryPartial@x_end+1,w
 14982  0C8A  00B4               	movwf	??_SetFrameMemoryPartial+1
 14983  0C8B  0833               	movf	??_SetFrameMemoryPartial,w
 14984  0C8C  3E01               	addlw	1
 14985  0C8D  00B5               	movwf	??_SetFrameMemoryPartial+2
 14986  0C8E  3000               	movlw	0
 14987  0C8F  3D34               	addwfc	??_SetFrameMemoryPartial+1,w
 14988  0C90  00B6               	movwf	??_SetFrameMemoryPartial+3
 14989  0C91  36B6               	lsrf	??_SetFrameMemoryPartial+3,f
 14990  0C92  0CB5               	rrf	??_SetFrameMemoryPartial+2,f
 14991  0C93  36B6               	lsrf	??_SetFrameMemoryPartial+3,f
 14992  0C94  0CB5               	rrf	??_SetFrameMemoryPartial+2,f
 14993  0C95  36B6               	lsrf	??_SetFrameMemoryPartial+3,f
 14994  0C96  0CB5               	rrf	??_SetFrameMemoryPartial+2,f
 14995  0C97  0836               	movf	??_SetFrameMemoryPartial+3,w
 14996  0C98  023B               	subwf	SetFrameMemoryPartial@i+1,w
 14997  0C99  1D03               	skipz
 14998  0C9A  2C9D               	goto	u2925
 14999  0C9B  0835               	movf	??_SetFrameMemoryPartial+2,w
 15000  0C9C  023A               	subwf	SetFrameMemoryPartial@i,w
 15001  0C9D                     u2925:
 15002  0C9D  1803               	btfsc	3,0
 15003  0C9E  2CDA               	goto	l4283
 15004                           
 15005                           ;waveshare29epaper.c: 134:             data = image_buffer[i + j * (image_width / 8)];
 15006  0C9F  082F               	movf	SetFrameMemoryPartial@image_width+1,w
 15007  0CA0  00B4               	movwf	??_SetFrameMemoryPartial+1
 15008  0CA1  082E               	movf	SetFrameMemoryPartial@image_width,w
 15009  0CA2  00B3               	movwf	??_SetFrameMemoryPartial
 15010  0CA3  36B4               	lsrf	??_SetFrameMemoryPartial+1,f
 15011  0CA4  0CB3               	rrf	??_SetFrameMemoryPartial,f
 15012  0CA5  36B4               	lsrf	??_SetFrameMemoryPartial+1,f
 15013  0CA6  0CB3               	rrf	??_SetFrameMemoryPartial,f
 15014  0CA7  36B4               	lsrf	??_SetFrameMemoryPartial+1,f
 15015  0CA8  0CB3               	rrf	??_SetFrameMemoryPartial,f
 15016  0CA9  0833               	movf	??_SetFrameMemoryPartial,w
 15017  0CAA  00F2               	movwf	___wmul@multiplier
 15018  0CAB  0834               	movf	??_SetFrameMemoryPartial+1,w
 15019  0CAC  00F3               	movwf	___wmul@multiplier+1
 15020  0CAD  083D               	movf	SetFrameMemoryPartial@j+1,w
 15021  0CAE  00F5               	movwf	___wmul@multiplicand+1
 15022  0CAF  083C               	movf	SetFrameMemoryPartial@j,w
 15023  0CB0  00F4               	movwf	___wmul@multiplicand
 15024  0CB1  3185  25A3  318B   	fcall	___wmul
 15025  0CB4  0872               	movf	?___wmul,w
 15026  0CB5  0020               	movlb	0	; select bank0
 15027  0CB6  0728               	addwf	SetFrameMemoryPartial@image_buffer,w
 15028  0CB7  00B5               	movwf	??_SetFrameMemoryPartial+2
 15029  0CB8  0873               	movf	?___wmul+1,w
 15030  0CB9  3D29               	addwfc	SetFrameMemoryPartial@image_buffer+1,w
 15031  0CBA  00B6               	movwf	??_SetFrameMemoryPartial+3
 15032  0CBB  0835               	movf	??_SetFrameMemoryPartial+2,w
 15033  0CBC  073A               	addwf	SetFrameMemoryPartial@i,w
 15034  0CBD  0084               	movwf	4
 15035  0CBE  0836               	movf	??_SetFrameMemoryPartial+3,w
 15036  0CBF  3D3B               	addwfc	SetFrameMemoryPartial@i+1,w
 15037  0CC0  0085               	movwf	5
 15038  0CC1  0800               	movf	0,w	;code access
 15039  0CC2  00B9               	movwf	SetFrameMemoryPartial@data
 15040                           
 15041                           ;waveshare29epaper.c: 135:             SendData(invert_color ? ~data : data);
 15042  0CC3  0832               	movf	SetFrameMemoryPartial@invert_color,w
 15043  0CC4  1D03               	btfss	3,2
 15044  0CC5  2CCA               	goto	l4275
 15045  0CC6  0839               	movf	SetFrameMemoryPartial@data,w
 15046  0CC7  00B7               	movwf	_SetFrameMemoryPartial$1322
 15047  0CC8  01B8               	clrf	_SetFrameMemoryPartial$1322+1
 15048  0CC9  2CD1               	goto	l4277
 15049  0CCA                     l4275:
 15050  0CCA  0839               	movf	SetFrameMemoryPartial@data,w
 15051  0CCB  00B3               	movwf	??_SetFrameMemoryPartial
 15052  0CCC  01B4               	clrf	??_SetFrameMemoryPartial+1
 15053  0CCD  0933               	comf	??_SetFrameMemoryPartial,w
 15054  0CCE  00B7               	movwf	_SetFrameMemoryPartial$1322
 15055  0CCF  0934               	comf	??_SetFrameMemoryPartial+1,w
 15056  0CD0  00B8               	movwf	_SetFrameMemoryPartial$1322+1
 15057  0CD1                     l4277:
 15058  0CD1  0837               	movf	_SetFrameMemoryPartial$1322,w
 15059  0CD2  3180  20F4  318B   	fcall	_SendData
 15060                           
 15061                           ;waveshare29epaper.c: 136:         }
 15062  0CD5  0020               	movlb	0	; select bank0
 15063  0CD6  0ABA               	incf	SetFrameMemoryPartial@i,f
 15064  0CD7  1903               	skipnz
 15065  0CD8  0ABB               	incf	SetFrameMemoryPartial@i+1,f
 15066  0CD9  2C85               	goto	l4281
 15067  0CDA                     l4283:
 15068                           
 15069                           ;waveshare29epaper.c: 137:     }
 15070  0CDA  0ABC               	incf	SetFrameMemoryPartial@j,f
 15071  0CDB  1903               	skipnz
 15072  0CDC  0ABD               	incf	SetFrameMemoryPartial@j+1,f
 15073  0CDD  2C70               	goto	l4285
 15074  0CDE                     __end_of_SetFrameMemoryPartial:
 15075  0CDE                     __ptext44:	
 15076 ;; *************** function _SetMemoryPointer *****************
 15077 ;; Defined at:
 15078 ;;		line 234 in file "waveshare29epaper.c"
 15079 ;; Parameters:    Size  Location     Type
 15080 ;;  x               2    4[COMMON] unsigned short 
 15081 ;;  y               2    6[COMMON] unsigned short 
 15082 ;; Auto vars:     Size  Location     Type
 15083 ;;		None
 15084 ;; Return value:  Size  Location     Type
 15085 ;;                  1    wreg      void 
 15086 ;; Registers used:
 15087 ;;		wreg, status,2, status,0, pclath, cstack
 15088 ;; Tracked objects:
 15089 ;;		On entry : 1D/0
 15090 ;;		On exit  : 1F/0
 15091 ;;		Unchanged: 0/0
 15092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15095 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15096 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15097 ;;Total ram usage:        6 bytes
 15098 ;; Hardware stack levels used: 1
 15099 ;; Hardware stack levels required when called: 6
 15100 ;; This function calls:
 15101 ;;		_SendCommand
 15102 ;;		_SendData
 15103 ;;		_WaitUntilIdle
 15104 ;; This function is called by:
 15105 ;;		_SetFrameMemoryPartial
 15106 ;;		_ClearFrameMemory
 15107 ;;		_ClearFrameMemoryPartial
 15108 ;; This function uses a non-reentrant model
 15109 ;;
 15110                           
 15111                           
 15112                           ;psect for function _SetMemoryPointer
 15113  0CDE                     _SetMemoryPointer:
 15114                           
 15115                           ;waveshare29epaper.c: 235:     SendCommand(0x4E);
 15116                           
 15117                           ;incstack = 0
 15118                           ; Regs used in _SetMemoryPointer: [wreg+status,2+status,0+pclath+cstack]
 15119  0CDE  304E               	movlw	78
 15120  0CDF  3185  25B8  318B   	fcall	_SendCommand
 15121                           
 15122                           ;waveshare29epaper.c: 237:     SendData((x >> 3) & 0xFF);
 15123  0CE2  0875               	movf	SetMemoryPointer@x+1,w
 15124  0CE3  00F9               	movwf	??_SetMemoryPointer+1
 15125  0CE4  0874               	movf	SetMemoryPointer@x,w
 15126  0CE5  00F8               	movwf	??_SetMemoryPointer
 15127  0CE6  36F9               	lsrf	??_SetMemoryPointer+1,f
 15128  0CE7  0CF8               	rrf	??_SetMemoryPointer,f
 15129  0CE8  36F9               	lsrf	??_SetMemoryPointer+1,f
 15130  0CE9  0CF8               	rrf	??_SetMemoryPointer,f
 15131  0CEA  36F9               	lsrf	??_SetMemoryPointer+1,f
 15132  0CEB  0CF8               	rrf	??_SetMemoryPointer,f
 15133  0CEC  0878               	movf	??_SetMemoryPointer,w
 15134  0CED  3180  20F4  318B   	fcall	_SendData
 15135                           
 15136                           ;waveshare29epaper.c: 238:     SendCommand(0x4F);
 15137  0CF0  304F               	movlw	79
 15138  0CF1  3185  25B8  318B   	fcall	_SendCommand
 15139                           
 15140                           ;waveshare29epaper.c: 239:     SendData(y & 0xFF);
 15141  0CF4  0876               	movf	SetMemoryPointer@y,w
 15142  0CF5  3180  20F4  318B   	fcall	_SendData
 15143                           
 15144                           ;waveshare29epaper.c: 240:     SendData((y >> 8) & 0xFF);
 15145  0CF8  0877               	movf	SetMemoryPointer@y+1,w
 15146  0CF9  3180  20F4         	fcall	_SendData
 15147                           
 15148                           ;waveshare29epaper.c: 241:     WaitUntilIdle();
 15149  0CFB  3186  2E01         	ljmp	l4059
 15150  0CFD                     __end_of_SetMemoryPointer:
 15151                           
 15152                           	psect	text37
 15153  0927                     __ptext37:	
 15154 ;; *************** function _GotoSleep *****************
 15155 ;; Defined at:
 15156 ;;		line 89 in file "main.c"
 15157 ;; Parameters:    Size  Location     Type
 15158 ;;		None
 15159 ;; Auto vars:     Size  Location     Type
 15160 ;;		None
 15161 ;; Return value:  Size  Location     Type
 15162 ;;                  1    wreg      void 
 15163 ;; Registers used:
 15164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15165 ;; Tracked objects:
 15166 ;;		On entry : 0/0
 15167 ;;		On exit  : 0/0
 15168 ;;		Unchanged: 0/0
 15169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15174 ;;Total ram usage:        0 bytes
 15175 ;; Hardware stack levels used: 1
 15176 ;; Hardware stack levels required when called: 9
 15177 ;; This function calls:
 15178 ;;		_ButtonEventReset
 15179 ;;		_ClearFrameMemory
 15180 ;;		_DELAY_milliseconds
 15181 ;;		_DisplayFrame
 15182 ;;		_InitDisplay
 15183 ;;		_SleepDisplay
 15184 ;; This function is called by:
 15185 ;;		_ButtonEventHandler
 15186 ;; This function uses a non-reentrant model
 15187 ;;
 15188                           
 15189                           
 15190                           ;psect for function _GotoSleep
 15191  0927                     _GotoSleep:
 15192                           
 15193                           ;main.c: 90:     InitDisplay(lut_full_update);
 15194                           
 15195                           ;incstack = 0
 15196                           ; Regs used in _GotoSleep: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15197  0927  30C8               	movlw	low (_lut_full_update| (0+32768))
 15198  0928  0020               	movlb	0	; select bank0
 15199  0929  00A0               	movwf	InitDisplay@lut
 15200  092A  3097               	movlw	high (_lut_full_update| (0+32768))
 15201  092B  00A1               	movwf	InitDisplay@lut+1
 15202  092C  3180  20BC  3189   	fcall	_InitDisplay
 15203                           
 15204                           ;main.c: 91:     ClearFrameMemory(0xA5);
 15205  092F  30A5               	movlw	165
 15206  0930  3186  2622  3189   	fcall	_ClearFrameMemory
 15207                           
 15208                           ;main.c: 92:     DisplayFrame();
 15209  0933  3181  219E  3189   	fcall	_DisplayFrame
 15210                           
 15211                           ;main.c: 93:     SleepDisplay();
 15212  0936  214D               	fcall	_SleepDisplay
 15213  0937  0022               	movlb	2	; select bank2
 15214  0938  108C               	bcf	12,1	;volatile
 15215  0939  110C               	bcf	12,2	;volatile
 15216  093A  120C               	bcf	12,4	;volatile
 15217  093B  128C               	bcf	12,5	;volatile
 15218  093C  120E               	bcf	14,4	;volatile
 15219  093D  128E               	bcf	14,5	;volatile
 15220  093E  130E               	bcf	14,6	;volatile
 15221  093F  138E               	bcf	14,7	;volatile
 15222                           
 15223                           ;main.c: 102:     DELAY_milliseconds(2000);
 15224  0940  30D0               	movlw	208
 15225  0941  00F2               	movwf	DELAY_milliseconds@milliseconds
 15226  0942  3007               	movlw	7
 15227  0943  00F3               	movwf	DELAY_milliseconds@milliseconds+1
 15228  0944  3186  2614  3189   	fcall	_DELAY_milliseconds
 15229                           
 15230                           ;main.c: 103:     ButtonEventReset();
 15231  0947  3186  264C         	fcall	_ButtonEventReset
 15232                           
 15233                           ;main.c: 104:     sleeping = 1;
 15234  0949  01D8               	clrf	_sleeping^(0+128)
 15235  094A  0AD8               	incf	_sleeping^(0+128),f
 15236  094B  0063               	sleep	;# 
 15237  094C  0008               	return
 15238  094D                     __end_of_GotoSleep:
 15239  094D                     __ptext38:	
 15240 ;; *************** function _SleepDisplay *****************
 15241 ;; Defined at:
 15242 ;;		line 250 in file "waveshare29epaper.c"
 15243 ;; Parameters:    Size  Location     Type
 15244 ;;		None
 15245 ;; Auto vars:     Size  Location     Type
 15246 ;;		None
 15247 ;; Return value:  Size  Location     Type
 15248 ;;                  1    wreg      void 
 15249 ;; Registers used:
 15250 ;;		wreg, status,2, status,0, pclath, cstack
 15251 ;; Tracked objects:
 15252 ;;		On entry : 0/0
 15253 ;;		On exit  : 1F/0
 15254 ;;		Unchanged: 0/0
 15255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15260 ;;Total ram usage:        0 bytes
 15261 ;; Hardware stack levels used: 1
 15262 ;; Hardware stack levels required when called: 6
 15263 ;; This function calls:
 15264 ;;		_SendCommand
 15265 ;;		_WaitUntilIdle
 15266 ;; This function is called by:
 15267 ;;		_GotoSleep
 15268 ;; This function uses a non-reentrant model
 15269 ;;
 15270                           
 15271                           
 15272                           ;psect for function _SleepDisplay
 15273  094D                     _SleepDisplay:
 15274                           
 15275                           ;waveshare29epaper.c: 251:     SendCommand(0x10);
 15276                           
 15277                           ;incstack = 0
 15278                           ; Regs used in _SleepDisplay: [wreg+status,2+status,0+pclath+cstack]
 15279  094D  3010               	movlw	16
 15280  094E  3185  25B8         	fcall	_SendCommand
 15281                           
 15282                           ;waveshare29epaper.c: 252:     WaitUntilIdle();
 15283  0950  3186  2E01         	ljmp	l4059
 15284  0952                     __end_of_SleepDisplay:
 15285                           
 15286                           	psect	text41
 15287  08E2                     __ptext41:	
 15288 ;; *************** function _SetLut *****************
 15289 ;; Defined at:
 15290 ;;		line 99 in file "waveshare29epaper.c"
 15291 ;; Parameters:    Size  Location     Type
 15292 ;;  lut             2    4[COMMON] PTR const unsigned char 
 15293 ;;		 -> lut_partial_update(30), lut_full_update(30), 
 15294 ;; Auto vars:     Size  Location     Type
 15295 ;;  i               2    7[COMMON] int 
 15296 ;; Return value:  Size  Location     Type
 15297 ;;                  1    wreg      void 
 15298 ;; Registers used:
 15299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15300 ;; Tracked objects:
 15301 ;;		On entry : 1F/0
 15302 ;;		On exit  : 0/0
 15303 ;;		Unchanged: 0/0
 15304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15307 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15308 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15309 ;;Total ram usage:        5 bytes
 15310 ;; Hardware stack levels used: 1
 15311 ;; Hardware stack levels required when called: 6
 15312 ;; This function calls:
 15313 ;;		_SendCommand
 15314 ;;		_SendData
 15315 ;; This function is called by:
 15316 ;;		_InitDisplay
 15317 ;; This function uses a non-reentrant model
 15318 ;;
 15319                           
 15320                           
 15321                           ;psect for function _SetLut
 15322  08E2                     _SetLut:
 15323  08E2                     l4069:	
 15324                           ;incstack = 0
 15325                           ; Regs used in _SetLut: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15326                           
 15327                           
 15328                           ;waveshare29epaper.c: 100:     SendCommand(0x32);
 15329  08E2  3032               	movlw	50
 15330  08E3  3185  25B8  3188   	fcall	_SendCommand
 15331                           
 15332                           ;waveshare29epaper.c: 101:     int i;;waveshare29epaper.c: 102:     for (i = 0; i < 30; 
      +                          i++)
 15333  08E6  01F7               	clrf	SetLut@i
 15334  08E7  01F8               	clrf	SetLut@i+1
 15335  08E8                     l4077:
 15336                           
 15337                           ;waveshare29epaper.c: 103:         SendData(lut[i]);
 15338  08E8  0874               	movf	SetLut@lut,w
 15339  08E9  0777               	addwf	SetLut@i,w
 15340  08EA  0084               	movwf	4
 15341  08EB  0875               	movf	SetLut@lut+1,w
 15342  08EC  3D78               	addwfc	SetLut@i+1,w
 15343  08ED  0085               	movwf	5
 15344  08EE  0800               	movf	0,w	;code access
 15345  08EF  3180  20F4  3188   	fcall	_SendData
 15346  08F2  0AF7               	incf	SetLut@i,f
 15347  08F3  1903               	skipnz
 15348  08F4  0AF8               	incf	SetLut@i+1,f
 15349  08F5  0878               	movf	SetLut@i+1,w
 15350  08F6  3A80               	xorlw	128
 15351  08F7  00F6               	movwf	??_SetLut
 15352  08F8  3080               	movlw	128
 15353  08F9  0276               	subwf	??_SetLut,w
 15354  08FA  1D03               	skipz
 15355  08FB  28FE               	goto	u2705
 15356  08FC  301E               	movlw	30
 15357  08FD  0277               	subwf	SetLut@i,w
 15358  08FE                     u2705:
 15359  08FE  1803               	btfsc	3,0
 15360  08FF  0008               	return
 15361  0900  28E8               	goto	l4077
 15362  0901                     __end_of_SetLut:
 15363                           
 15364                           	psect	intentry
 15365  0004                     __pintentry:	
 15366 ;; *************** function _INTERRUPT_InterruptManager *****************
 15367 ;; Defined at:
 15368 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15369 ;; Parameters:    Size  Location     Type
 15370 ;;		None
 15371 ;; Auto vars:     Size  Location     Type
 15372 ;;		None
 15373 ;; Return value:  Size  Location     Type
 15374 ;;                  1    wreg      void 
 15375 ;; Registers used:
 15376 ;;		wreg, status,2, status,0, pclath, cstack
 15377 ;; Tracked objects:
 15378 ;;		On entry : 0/0
 15379 ;;		On exit  : 0/0
 15380 ;;		Unchanged: 0/0
 15381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15386 ;;Total ram usage:        0 bytes
 15387 ;; Hardware stack levels used: 1
 15388 ;; Hardware stack levels required when called: 3
 15389 ;; This function calls:
 15390 ;;		_PIN_MANAGER_IOC
 15391 ;;		_TMR1_ISR
 15392 ;; This function is called by:
 15393 ;;		Interrupt level 1
 15394 ;; This function uses a non-reentrant model
 15395 ;;
 15396                           
 15397  0004                     _INTERRUPT_InterruptManager:
 15398                           
 15399                           ;incstack = 0
 15400  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 15401                           
 15402                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 15403  0005  3180               	pagesel	$
 15404                           
 15405                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
 15406  0006  198B               	btfsc	11,3	;volatile
 15407  0007  1C0B               	btfss	11,0	;volatile
 15408  0008  280D               	goto	i1l336
 15409                           
 15410                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 15411  0009  3188  209C  3180   	fcall	_PIN_MANAGER_IOC
 15412                           
 15413                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 15414  000C  2817               	goto	i1l342
 15415  000D                     i1l336:	
 15416                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 15417                           
 15418  000D  1F0B               	btfss	11,6	;volatile
 15419  000E  2817               	goto	i1l342
 15420                           
 15421                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 15422  000F  0021               	movlb	1	; select bank1
 15423  0010  1C11               	btfss	17,0	;volatile
 15424  0011  2817               	goto	i1l342
 15425  0012  0020               	movlb	0	; select bank0
 15426  0013  1C11               	btfss	17,0	;volatile
 15427  0014  2817               	goto	i1l342
 15428                           
 15429                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
 15430  0015  3187  27DD         	fcall	_TMR1_ISR
 15431  0017                     i1l342:	
 15432                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
 15433                           
 15434                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 15435                           
 15436  0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 15437  0018  0009               	retfie
 15438  0019                     __end_of_INTERRUPT_InterruptManager:
 15439                           
 15440                           	psect	text54
 15441  07DD                     __ptext54:	
 15442 ;; *************** function _TMR1_ISR *****************
 15443 ;; Defined at:
 15444 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 15445 ;; Parameters:    Size  Location     Type
 15446 ;;		None
 15447 ;; Auto vars:     Size  Location     Type
 15448 ;;		None
 15449 ;; Return value:  Size  Location     Type
 15450 ;;                  1    wreg      void 
 15451 ;; Registers used:
 15452 ;;		wreg, status,2, status,0, pclath, cstack
 15453 ;; Tracked objects:
 15454 ;;		On entry : 1F/0
 15455 ;;		On exit  : 0/0
 15456 ;;		Unchanged: 0/0
 15457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15462 ;;Total ram usage:        0 bytes
 15463 ;; Hardware stack levels used: 1
 15464 ;; Hardware stack levels required when called: 1
 15465 ;; This function calls:
 15466 ;;		Absolute function
 15467 ;;		_TMR1_CallBack
 15468 ;;		_TMR1_DefaultInterruptHandler
 15469 ;;		_TMR1_WriteTimer
 15470 ;; This function is called by:
 15471 ;;		_INTERRUPT_InterruptManager
 15472 ;; This function uses a non-reentrant model
 15473 ;;
 15474                           
 15475                           
 15476                           ;psect for function _TMR1_ISR
 15477  07DD                     _TMR1_ISR:
 15478                           
 15479                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
 15480                           
 15481                           ;incstack = 0
 15482                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 15483  07DD  1011               	bcf	17,0	;volatile
 15484                           
 15485                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
 15486  07DE  0021               	movlb	1	; select bank1
 15487  07DF  085E               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 15488  07E0  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 15489  07E1  085D               	movf	_timer1ReloadVal^(0+128),w	;volatile
 15490  07E2  00F0               	movwf	TMR1_WriteTimer@timerVal
 15491  07E3  27F0  3187         	fcall	_TMR1_WriteTimer
 15492                           
 15493                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
 15494  07E5  0021               	movlb	1	; select bank1
 15495  07E6  085B               	movf	_TMR1_InterruptHandler^(0+128),w
 15496  07E7  045C               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 15497  07E8  1903               	btfsc	3,2
 15498  07E9  0008               	return
 15499                           
 15500                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
 15501  07EA  085C               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 15502  07EB  008A               	movwf	10
 15503  07EC  085B               	movf	_TMR1_InterruptHandler^(0+128),w
 15504  07ED  000A               	callw
 15505  07EE  3187               	pagesel	$
 15506  07EF  0008               	return
 15507  07F0                     __end_of_TMR1_ISR:
 15508  07F0                     __ptext55:	
 15509 ;; *************** function _TMR1_WriteTimer *****************
 15510 ;; Defined at:
 15511 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 15512 ;; Parameters:    Size  Location     Type
 15513 ;;  timerVal        2    0[COMMON] unsigned short 
 15514 ;; Auto vars:     Size  Location     Type
 15515 ;;		None
 15516 ;; Return value:  Size  Location     Type
 15517 ;;                  1    wreg      void 
 15518 ;; Registers used:
 15519 ;;		wreg
 15520 ;; Tracked objects:
 15521 ;;		On entry : 1F/1
 15522 ;;		On exit  : 1F/0
 15523 ;;		Unchanged: 0/0
 15524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15529 ;;Total ram usage:        2 bytes
 15530 ;; Hardware stack levels used: 1
 15531 ;; This function calls:
 15532 ;;		Nothing
 15533 ;; This function is called by:
 15534 ;;		_TMR1_ISR
 15535 ;; This function uses a non-reentrant model
 15536 ;;
 15537                           
 15538                           
 15539                           ;psect for function _TMR1_WriteTimer
 15540  07F0                     _TMR1_WriteTimer:
 15541                           
 15542                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 15543                           
 15544                           ;incstack = 0
 15545                           ; Regs used in _TMR1_WriteTimer: [wreg]
 15546  07F0  0020               	movlb	0	; select bank0
 15547  07F1  1D18               	btfss	24,2	;volatile
 15548  07F2  2FFA               	goto	i1l3411
 15549                           
 15550                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 15551  07F3  1018               	bcf	24,0	;volatile
 15552                           
 15553                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 15554  07F4  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15555  07F5  0097               	movwf	23	;volatile
 15556                           
 15557                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 15558  07F6  0870               	movf	TMR1_WriteTimer@timerVal,w
 15559  07F7  0096               	movwf	22	;volatile
 15560                           
 15561                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 15562  07F8  1418               	bsf	24,0	;volatile
 15563                           
 15564                           ;mcc_generated_files/tmr1.c: 133:     }
 15565  07F9  0008               	return
 15566  07FA                     i1l3411:
 15567                           
 15568                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 15569  07FA  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15570  07FB  0097               	movwf	23	;volatile
 15571                           
 15572                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 15573  07FC  0870               	movf	TMR1_WriteTimer@timerVal,w
 15574  07FD  0096               	movwf	22	;volatile
 15575  07FE  0008               	return
 15576  07FF                     __end_of_TMR1_WriteTimer:
 15577                           
 15578                           	psect	text56
 15579  08C7                     __ptext56:	
 15580 ;; *************** function _TMR1_CallBack *****************
 15581 ;; Defined at:
 15582 ;;		line 140 in file "main.c"
 15583 ;; Parameters:    Size  Location     Type
 15584 ;;		None
 15585 ;; Auto vars:     Size  Location     Type
 15586 ;;		None
 15587 ;; Return value:  Size  Location     Type
 15588 ;;                  1    wreg      void 
 15589 ;; Registers used:
 15590 ;;		wreg, status,2, status,0
 15591 ;; Tracked objects:
 15592 ;;		On entry : 1F/1
 15593 ;;		On exit  : 1F/1
 15594 ;;		Unchanged: 0/0
 15595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15598 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15599 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15600 ;;Total ram usage:        2 bytes
 15601 ;; Hardware stack levels used: 1
 15602 ;; This function calls:
 15603 ;;		Nothing
 15604 ;; This function is called by:
 15605 ;;		_main
 15606 ;;		_TMR1_ISR
 15607 ;; This function uses a non-reentrant model
 15608 ;;
 15609                           
 15610                           
 15611                           ;psect for function _TMR1_CallBack
 15612  08C7                     _TMR1_CallBack:
 15613                           
 15614                           ;main.c: 142:     if(button_clicked) ++click_timer;
 15615                           
 15616                           ;incstack = 0
 15617                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0]
 15618  08C7  087A               	movf	_button_clicked,w	;volatile
 15619  08C8  1903               	btfsc	3,2
 15620  08C9  28CD               	goto	i1l3457
 15621  08CA  0AD2               	incf	_click_timer^(0+128),f	;volatile
 15622  08CB  1903               	skipnz
 15623  08CC  0AD3               	incf	(_click_timer+1)^(0+128),f	;volatile
 15624  08CD                     i1l3457:
 15625                           
 15626                           ;main.c: 143:     if(switch_pos != prev_switch_pos){
 15627  08CD  087B               	movf	_switch_pos,w
 15628  08CE  065A               	xorwf	_prev_switch_pos^(0+128),w
 15629  08CF  1903               	skipnz
 15630  08D0  0008               	return
 15631                           
 15632                           ;main.c: 144:         if(refresh_timer++ >= 1000) time_to_refresh = 1;
 15633  08D1  0851               	movf	(_refresh_timer+1)^(0+128),w	;volatile
 15634  08D2  00F1               	movwf	??_TMR1_CallBack+1
 15635  08D3  0850               	movf	_refresh_timer^(0+128),w	;volatile
 15636  08D4  00F0               	movwf	??_TMR1_CallBack
 15637  08D5  0AD0               	incf	_refresh_timer^(0+128),f	;volatile
 15638  08D6  1903               	skipnz
 15639  08D7  0AD1               	incf	(_refresh_timer+1)^(0+128),f	;volatile
 15640  08D8  3003               	movlw	3
 15641  08D9  0271               	subwf	??_TMR1_CallBack+1,w
 15642  08DA  30E8               	movlw	232
 15643  08DB  1903               	skipnz
 15644  08DC  0270               	subwf	??_TMR1_CallBack,w
 15645  08DD  1C03               	skipc
 15646  08DE  0008               	return
 15647  08DF  3001               	movlw	1
 15648  08E0  00B0               	movwf	_time_to_refresh^(0+128)	;volatile
 15649  08E1  0008               	return
 15650  08E2                     __end_of_TMR1_CallBack:
 15651                           
 15652                           	psect	text57
 15653  07FF                     __ptext57:	
 15654 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 15655 ;; Defined at:
 15656 ;;		line 175 in file "mcc_generated_files/tmr1.c"
 15657 ;; Parameters:    Size  Location     Type
 15658 ;;		None
 15659 ;; Auto vars:     Size  Location     Type
 15660 ;;		None
 15661 ;; Return value:  Size  Location     Type
 15662 ;;                  1    wreg      void 
 15663 ;; Registers used:
 15664 ;;		None
 15665 ;; Tracked objects:
 15666 ;;		On entry : 1F/1
 15667 ;;		On exit  : 1F/1
 15668 ;;		Unchanged: 1F/0
 15669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15674 ;;Total ram usage:        0 bytes
 15675 ;; Hardware stack levels used: 1
 15676 ;; This function calls:
 15677 ;;		Nothing
 15678 ;; This function is called by:
 15679 ;;		_TMR1_Initialize
 15680 ;;		_TMR1_ISR
 15681 ;; This function uses a non-reentrant model
 15682 ;;
 15683                           
 15684                           
 15685                           ;psect for function _TMR1_DefaultInterruptHandler
 15686  07FF                     _TMR1_DefaultInterruptHandler:
 15687                           
 15688                           ;incstack = 0
 15689                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 15690  07FF  0008               	return
 15691  0800                     __end_of_TMR1_DefaultInterruptHandler:
 15692                           
 15693                           	psect	text58
 15694  089C                     __ptext58:	
 15695 ;; *************** function _PIN_MANAGER_IOC *****************
 15696 ;; Defined at:
 15697 ;;		line 137 in file "mcc_generated_files/pin_manager.c"
 15698 ;; Parameters:    Size  Location     Type
 15699 ;;		None
 15700 ;; Auto vars:     Size  Location     Type
 15701 ;;		None
 15702 ;; Return value:  Size  Location     Type
 15703 ;;                  1    wreg      void 
 15704 ;; Registers used:
 15705 ;;		wreg, status,2, status,0, pclath, cstack
 15706 ;; Tracked objects:
 15707 ;;		On entry : 0/0
 15708 ;;		On exit  : 1F/7
 15709 ;;		Unchanged: 0/0
 15710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15715 ;;Total ram usage:        0 bytes
 15716 ;; Hardware stack levels used: 1
 15717 ;; Hardware stack levels required when called: 2
 15718 ;; This function calls:
 15719 ;;		_IOCAF0_ISR
 15720 ;; This function is called by:
 15721 ;;		_INTERRUPT_InterruptManager
 15722 ;; This function uses a non-reentrant model
 15723 ;;
 15724                           
 15725                           
 15726                           ;psect for function _PIN_MANAGER_IOC
 15727  089C                     _PIN_MANAGER_IOC:
 15728                           
 15729                           ;mcc_generated_files/pin_manager.c: 140:     if(IOCAFbits.IOCAF0 == 1)
 15730                           
 15731                           ;incstack = 0
 15732                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 15733  089C  0027               	movlb	7	; select bank7
 15734  089D  1C13               	btfss	19,0	;volatile
 15735  089E  0008               	return
 15736                           
 15737                           ;mcc_generated_files/pin_manager.c: 141:     {;mcc_generated_files/pin_manager.c: 142:  
      +                                 IOCAF0_ISR();
 15738  089F  28A0               	ljmp	i1l3395
 15739  08A0                     __end_of_PIN_MANAGER_IOC:
 15740  08A0                     __ptext59:	
 15741 ;; *************** function _IOCAF0_ISR *****************
 15742 ;; Defined at:
 15743 ;;		line 149 in file "mcc_generated_files/pin_manager.c"
 15744 ;; Parameters:    Size  Location     Type
 15745 ;;		None
 15746 ;; Auto vars:     Size  Location     Type
 15747 ;;		None
 15748 ;; Return value:  Size  Location     Type
 15749 ;;                  1    wreg      void 
 15750 ;; Registers used:
 15751 ;;		wreg, status,2, status,0, pclath, cstack
 15752 ;; Tracked objects:
 15753 ;;		On entry : 1F/7
 15754 ;;		On exit  : 1F/7
 15755 ;;		Unchanged: 0/0
 15756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15761 ;;Total ram usage:        0 bytes
 15762 ;; Hardware stack levels used: 1
 15763 ;; Hardware stack levels required when called: 1
 15764 ;; This function calls:
 15765 ;;		Absolute function
 15766 ;;		_Button_Callback
 15767 ;;		_IOCAF0_DefaultInterruptHandler
 15768 ;; This function is called by:
 15769 ;;		_PIN_MANAGER_IOC
 15770 ;; This function uses a non-reentrant model
 15771 ;;
 15772                           
 15773                           
 15774                           ;psect for function _IOCAF0_ISR
 15775  08A0                     _IOCAF0_ISR:
 15776  08A0                     i1l3395:	
 15777                           ;incstack = 0
 15778                           ; Regs used in _IOCAF0_ISR: [wreg+status,2+status,0+pclath+cstack]
 15779                           
 15780                           
 15781                           ;mcc_generated_files/pin_manager.c: 154:     if(IOCAF0_InterruptHandler)
 15782  08A0  0021               	movlb	1	; select bank1
 15783  08A1  085F               	movf	_IOCAF0_InterruptHandler^(0+128),w
 15784  08A2  0460               	iorwf	(_IOCAF0_InterruptHandler+1)^(0+128),w
 15785  08A3  1903               	btfsc	3,2
 15786  08A4  28AA               	goto	i1l3399
 15787                           
 15788                           ;mcc_generated_files/pin_manager.c: 155:     {;mcc_generated_files/pin_manager.c: 156:  
      +                                 IOCAF0_InterruptHandler();
 15789  08A5  0860               	movf	(_IOCAF0_InterruptHandler+1)^(0+128),w
 15790  08A6  008A               	movwf	10
 15791  08A7  085F               	movf	_IOCAF0_InterruptHandler^(0+128),w
 15792  08A8  000A               	callw
 15793  08A9  3188               	pagesel	$
 15794  08AA                     i1l3399:
 15795                           
 15796                           ;mcc_generated_files/pin_manager.c: 158:     IOCAFbits.IOCAF0 = 0;
 15797  08AA  0027               	movlb	7	; select bank7
 15798  08AB  1013               	bcf	19,0	;volatile
 15799  08AC  0008               	return
 15800  08AD                     __end_of_IOCAF0_ISR:
 15801                           
 15802                           	psect	text60
 15803  087E                     __ptext60:	
 15804 ;; *************** function _Button_Callback *****************
 15805 ;; Defined at:
 15806 ;;		line 149 in file "main.c"
 15807 ;; Parameters:    Size  Location     Type
 15808 ;;		None
 15809 ;; Auto vars:     Size  Location     Type
 15810 ;;		None
 15811 ;; Return value:  Size  Location     Type
 15812 ;;                  1    wreg      void 
 15813 ;; Registers used:
 15814 ;;		wreg, status,2, status,0
 15815 ;; Tracked objects:
 15816 ;;		On entry : 1F/1
 15817 ;;		On exit  : 1E/0
 15818 ;;		Unchanged: 0/0
 15819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15824 ;;Total ram usage:        0 bytes
 15825 ;; Hardware stack levels used: 1
 15826 ;; This function calls:
 15827 ;;		Nothing
 15828 ;; This function is called by:
 15829 ;;		_main
 15830 ;;		_IOCAF0_ISR
 15831 ;; This function uses a non-reentrant model
 15832 ;;
 15833                           
 15834                           
 15835                           ;psect for function _Button_Callback
 15836  087E                     _Button_Callback:
 15837                           
 15838                           ;main.c: 150:     if (PORTAbits.RA0 == 0){
 15839                           
 15840                           ;incstack = 0
 15841                           ; Regs used in _Button_Callback: [wreg+status,2+status,0]
 15842  087E  0020               	movlb	0	; select bank0
 15843  087F  180C               	btfsc	12,0	;volatile
 15844  0880  0008               	return
 15845                           
 15846                           ;main.c: 151:         if(sleeping){
 15847  0881  0021               	movlb	1	; select bank1
 15848  0882  0858               	movf	_sleeping^(0+128),w
 15849  0883  1903               	btfsc	3,2
 15850  0884  2889               	goto	i1l3167
 15851                           
 15852                           ;main.c: 152:             sleeping = 0;
 15853  0885  01D8               	clrf	_sleeping^(0+128)
 15854                           
 15855                           ;main.c: 153:             wake_up = 1;
 15856  0886  01D7               	clrf	_wake_up^(0+128)
 15857  0887  0AD7               	incf	_wake_up^(0+128),f
 15858                           
 15859                           ;main.c: 154:         } else {
 15860  0888  0008               	return
 15861  0889                     i1l3167:
 15862                           
 15863                           ;main.c: 155:             button_clicked = 1;
 15864  0889  3001               	movlw	1
 15865  088A  00FA               	movwf	_button_clicked	;volatile
 15866  088B  0008               	return
 15867  088C                     __end_of_Button_Callback:
 15868                           
 15869                           	psect	text61
 15870  0003                     __ptext61:	
 15871 ;; *************** function _IOCAF0_DefaultInterruptHandler *****************
 15872 ;; Defined at:
 15873 ;;		line 171 in file "mcc_generated_files/pin_manager.c"
 15874 ;; Parameters:    Size  Location     Type
 15875 ;;		None
 15876 ;; Auto vars:     Size  Location     Type
 15877 ;;		None
 15878 ;; Return value:  Size  Location     Type
 15879 ;;                  1    wreg      void 
 15880 ;; Registers used:
 15881 ;;		None
 15882 ;; Tracked objects:
 15883 ;;		On entry : 1F/1
 15884 ;;		On exit  : 1F/1
 15885 ;;		Unchanged: 1F/0
 15886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15891 ;;Total ram usage:        0 bytes
 15892 ;; Hardware stack levels used: 1
 15893 ;; This function calls:
 15894 ;;		Nothing
 15895 ;; This function is called by:
 15896 ;;		_PIN_MANAGER_Initialize
 15897 ;;		_IOCAF0_ISR
 15898 ;; This function uses a non-reentrant model
 15899 ;;
 15900                           
 15901                           
 15902                           ;psect for function _IOCAF0_DefaultInterruptHandler
 15903  0003                     _IOCAF0_DefaultInterruptHandler:
 15904                           
 15905                           ;incstack = 0
 15906                           ; Regs used in _IOCAF0_DefaultInterruptHandler: []
 15907  0003  0008               	return
 15908  0004                     __end_of_IOCAF0_DefaultInterruptHandler:
 15909  007E                     btemp	set	126	;btemp
 15910  007E                     int$flags	set	126
 15911  007E                     wtemp0	set	126
 15912  227C                     
 15913                           	psect	config
 15914                           
 15915                           ;Config register CONFIG1 @ 0x8007
 15916                           ;	Oscillator Selection Bits
 15917                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 15918                           ;	Watchdog Timer Enable
 15919                           ;	WDTE = OFF, WDT disabled
 15920                           ;	Power-up Timer Enable
 15921                           ;	PWRTE = OFF, PWRT disabled
 15922                           ;	MCLR Pin Function Select
 15923                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 15924                           ;	Flash Program Memory Code Protection
 15925                           ;	CP = OFF, Program memory code protection is disabled
 15926                           ;	Brown-out Reset Enable
 15927                           ;	BOREN = ON, Brown-out Reset enabled
 15928                           ;	Clock Out Enable
 15929                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 15930                           ;	Internal/External Switchover Mode
 15931                           ;	IESO = ON, Internal/External Switchover Mode is enabled
 15932                           ;	Fail-Safe Clock Monitor Enable
 15933                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 15934  8007                     	org	32775
 15935  8007  3FE4               	dw	16356
 15936                           
 15937                           ;Config register CONFIG2 @ 0x8008
 15938                           ;	Flash Memory Self-Write Protection
 15939                           ;	WRT = OFF, Write protection off
 15940                           ;	Peripheral Pin Select one-way control
 15941                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 15942                           ;	Zero-cross detect disable
 15943                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
 15944                           ;	Phase Lock Loop enable
 15945                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 15946                           ;	Stack Overflow/Underflow Reset Enable
 15947                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 15948                           ;	Brown-out Reset Voltage Selection
 15949                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 15950                           ;	Low-Power Brown Out Reset
 15951                           ;	LPBOR = OFF, Low-Power BOR is disabled
 15952                           ;	Low-Voltage Programming Enable
 15953                           ;	LVP = ON, Low-voltage programming enabled
 15954  8008                     	org	32776
 15955  8008  3EFF               	dw	16127

Data Sizes:
    Strings     66
    Constant    2036
    Data        426
    BSS         23
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     51      51
    BANK1            80      0      65
    BANK2            80     43      59
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            76      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    S33$3$0	PTR void  size(1) Largest target is 16
		 -> buffer(BANK2[16]), 

    S33$4$0	PTR void  size(1) Largest target is 0

    S33$5$0	PTR void  size(1) Largest target is 0

    Absolute function$0	PTR FTN()void  size(2) Largest target is 0

    ImageFromPickupConf$2080	PTR const unsigned char  size(2) Largest target is 75
		 -> b_rot(CODE[75]), m_rot(CODE[75]), parallel_rot(CODE[75]), serie_rot(CODE[75]), 
		 -> s_prime_rot(CODE[75]), n_prime_rot(CODE[75]), s_rot(CODE[75]), n_rot(CODE[75]), 

    ImageFromPickupConf$2078	PTR const unsigned char  size(2) Largest target is 183
		 -> g_arrow_rot(CODE[183]), b_arrow_rot(CODE[183]), m_arrow_rot(CODE[183]), n_arrow_rot(CODE[183]), 
		 -> b_rot(CODE[75]), m_rot(CODE[75]), parallel_rot(CODE[75]), serie_rot(CODE[75]), 
		 -> s_prime_rot(CODE[75]), n_prime_rot(CODE[75]), s_rot(CODE[75]), n_rot(CODE[75]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMMON[1]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_7(CODE[21]), STR_5(CODE[25]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    HEFLASH_readBlock@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> saved_pc(BANK1[20]), 

    HEFLASH_writeBlock@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> saved_pc(BANK1[20]), 

    SetFrameMemoryPartial@image_buffer	PTR const unsigned char  size(2) Largest target is 183
		 -> bracket_right_rot(CODE[75]), bracket_left_rot(CODE[75]), g_arrow_rot(CODE[183]), b_arrow_rot(CODE[183]), 
		 -> m_arrow_rot(CODE[183]), n_arrow_rot(CODE[183]), b_rot(CODE[75]), m_rot(CODE[75]), 
		 -> parallel_rot(CODE[75]), serie_rot(CODE[75]), s_prime_rot(CODE[75]), n_prime_rot(CODE[75]), 
		 -> s_rot(CODE[75]), n_rot(CODE[75]), 

    SetLut@lut	PTR const unsigned char  size(2) Largest target is 30
		 -> lut_partial_update(CODE[30]), lut_full_update(CODE[30]), 

    InitDisplay@lut	PTR const unsigned char  size(2) Largest target is 30
		 -> lut_partial_update(CODE[30]), lut_full_update(CODE[30]), 

    ImageFromPickupConf@arrow_type	PTR unsigned char [4] size(2) Largest target is 183
		 -> g_arrow_rot(CODE[183]), b_arrow_rot(CODE[183]), m_arrow_rot(CODE[183]), n_arrow_rot(CODE[183]), 

    ImageFromPickupConf@pc	PTR struct PickupConfiguration size(1) Largest target is 20
		 -> saved_pc(BANK1[20]), 

    S1140GeneralPickupConfigurationImage$image_pointers	PTR const unsigned char [5] size(2) Largest target is 75
		 -> b_rot(CODE[75]), m_rot(CODE[75]), parallel_rot(CODE[75]), serie_rot(CODE[75]), 
		 -> n_rot(CODE[75]), 

    gpci.image_pointers	PTR const unsigned char [5] size(2) Largest target is 75
		 -> b_rot(CODE[75]), m_rot(CODE[75]), parallel_rot(CODE[75]), serie_rot(CODE[75]), 
		 -> n_rot(CODE[75]), 

    S1137PickupConfigurationImage$image_pointers	PTR const unsigned char [3] size(2) Largest target is 75
		 -> parallel_rot(CODE[75]), serie_rot(CODE[75]), s_prime_rot(CODE[75]), n_prime_rot(CODE[75]), 
		 -> s_rot(CODE[75]), n_rot(CODE[75]), 

    pci.image_pointers	PTR const unsigned char [3] size(2) Largest target is 75
		 -> parallel_rot(CODE[75]), serie_rot(CODE[75]), s_prime_rot(CODE[75]), n_prime_rot(CODE[75]), 
		 -> s_rot(CODE[75]), n_rot(CODE[75]), 

    sendCoilsConfiguration@pc	PTR struct PickupConfiguration size(1) Largest target is 20
		 -> saved_pc(BANK1[20]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_CallBack(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_CallBack(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    IOCAF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Button_Callback(), IOCAF0_DefaultInterruptHandler(), 

    IOCAF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Button_Callback(), IOCAF0_DefaultInterruptHandler(), Absolute function(), 

    S33$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    spiMaster.spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S33$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S33$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI_ReadByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI_ReadByte(), 

    S33$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI_WriteByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI_WriteByte(), 

    S33$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI_ReadBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI_ReadBlock(), 

    S33$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI_WriteBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI_WriteBlock(), 

    S33$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI_ExchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI_ExchangeBlock(), 

    S33$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI_ExchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI_ExchangeByte(), 

    S33$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EINK_open(), 

    spiMaster.spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EINK_open(), 

    S33$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI_Close(), 

    spiMaster.spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI_Close(), 


Critical Paths under _main in COMMON

    _EINK_open->_SPI_Open
    _ReadConfigurationsFromMemory->_HEFLASH_readBlock
    _HEFLASH_readBlock->_FLASH_read
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF0_SetInterruptHandler
    _sendCoilsConfiguration->_shiftOut
    _modulo->___awmod
    ___awmod->___abmod
    _WriteConfigurationToMemory->_HEFLASH_writeBlock
    _HEFLASH_writeBlock->_FLASH_write
    _SetFrameMemoryPartial->_SetMemoryPointer
    _ClearFrameMemoryPartial->_SetMemoryPointer
    _SleepDisplay->_SendCommand
    _InitDisplay->_SetLut
    _SetLut->_SendCommand
    _SetLut->_SendData
    _ResetDisplay->_DELAY_milliseconds
    _ClearFrameMemory->_SetMemoryPointer
    _SetMemoryPointer->_SendCommand
    _SetMemoryPointer->_SendData
    _WaitUntilIdle->_DELAY_milliseconds
    _SetMemoryArea->_SendCommand
    _SetMemoryArea->_SendData
    _SendData->_SPI_ExchangeByte
    _SendCommand->_SPI_ExchangeByte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_CallBack
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_SwitchEventHandler
    _WakeUp->_sendCoilsConfiguration
    _SwitchEventHandler->_sendCoilsConfiguration
    _RotaryEncoderEventHandler->_ImageFromPickupConf
    _sendCoilsConfiguration->_shiftOut
    _modulo->___awmod
    _DisplayRefreshHandler->_ImageFromPickupConf
    _ButtonEventHandler->_ImageFromPickupConf
    _WriteConfigurationToMemory->_HEFLASH_writeBlock
    _ImageFromPickupConf->_SetFrameMemoryPartial
    _SetFrameMemoryPartial->_SetMemoryArea
    _ClearLine->_ClearFrameMemoryPartial
    _ClearFrameMemoryPartial->_SetMemoryArea
    _GotoSleep->_ClearFrameMemory
    _DisplayFrame->_InitDisplay
    _ClearFrameMemory->_SetMemoryArea

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _RotaryEncoderEventHandler->_ImageFromPickupConf
    _DisplayRefreshHandler->_ImageFromPickupConf
    _ButtonEventHandler->_ImageFromPickupConf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  191336
                  _ButtonCaseHandler
                 _ButtonEventHandler
              _DisplayRefreshHandler
         _IOCAF0_SetInterruptHandler
          _RotaryEncoderEventHandler
                  _SYSTEM_Initialize
                 _SwitchEventHandler
           _TMR1_SetInterruptHandler
                             _WakeUp
                    _spi_master_open
 ---------------------------------------------------------------------------------
 (1) _spi_master_open                                      3     3      0     110
                                              6 COMMON     3     3      0
                          _EINK_open
 ---------------------------------------------------------------------------------
 (2) _EINK_open                                            0     0      0      88
                           _SPI_Open
 ---------------------------------------------------------------------------------
 (3) _SPI_Open                                             4     4      0      88
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _WakeUp                                               0     0      0   14428
                   _ButtonEventReset
                   _ClearFrameMemory
                 _DELAY_milliseconds
                       _DisplayFrame
                        _InitDisplay
       _ReadConfigurationsFromMemory
                    _TMR1_StartTimer
             _sendCoilsConfiguration
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadConfigurationsFromMemory                         0     0      0     547
                  _HEFLASH_readBlock
 ---------------------------------------------------------------------------------
 (3) _HEFLASH_readBlock                                    5     3      2     547
                                              4 COMMON     5     3      2
                         _FLASH_read
 ---------------------------------------------------------------------------------
 (4) _FLASH_read                                           2     0      2     224
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SwitchEventHandler                                  14    14      0     712
                                             37 BANK0     14    14      0
             _sendCoilsConfiguration
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     174
         _IOCAF0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF0_SetInterruptHandler                           2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RotaryEncoderEventHandler                            2     2      0   54591
                                             43 BANK0      2     2      0
                       _DisplayFrame
                _ImageFromPickupConf
                             _modulo
                        _read_rotary
             _sendCoilsConfiguration
 ---------------------------------------------------------------------------------
 (2) _sendCoilsConfiguration                              11    11      0     545
                                             26 BANK0     11    11      0
                           _shiftOut
 ---------------------------------------------------------------------------------
 (3) _shiftOut                                            34    26      8     313
                                              2 COMMON     8     0      8
                                              0 BANK0     26    26      0
 ---------------------------------------------------------------------------------
 (2) _read_rotary                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _modulo                                               6     5      1    1469
                                              2 BANK0      6     5      1
                            ___abmod
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     613
                                              6 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___abmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___abmod                                              4     3      1     372
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _DisplayRefreshHandler                                0     0      0   52577
                       _DisplayFrame
                _ImageFromPickupConf
 ---------------------------------------------------------------------------------
 (1) _ButtonEventHandler                                   4     4      0   68222
                                             43 BANK0      4     4      0
                   _ButtonEventReset
                       _DisplayFrame
                          _GotoSleep
                _ImageFromPickupConf
         _WriteConfigurationToMemory
 ---------------------------------------------------------------------------------
 (2) _WriteConfigurationToMemory                           0     0      0    1299
                 _HEFLASH_writeBlock
 ---------------------------------------------------------------------------------
 (3) _HEFLASH_writeBlock                                   5     3      2    1299
                                              8 COMMON     2     0      2
                                              0 BANK0      3     3      0
                        _FLASH_erase
                        _FLASH_write
 ---------------------------------------------------------------------------------
 (4) _FLASH_write                                          6     1      5     667
                                              2 COMMON     6     1      5
                            __unlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_erase                                          3     1      2     155
                                              2 COMMON     3     1      2
                            __unlock
 ---------------------------------------------------------------------------------
 (5) __unlock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ImageFromPickupConf                                 52    49      3   48242
                                             34 BANK0      9     6      3
                                              0 BANK2     43    43      0
                   _ClearFrameMemory
                          _ClearLine
              _SetFrameMemoryPartial
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _SetFrameMemoryPartial                               26    15     11   15274
                                              8 BANK0     26    15     11
                        _SendCommand
                           _SendData
                      _SetMemoryArea
                   _SetMemoryPointer
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _ClearLine                                            7     4      3   16113
                                             19 BANK0      7     4      3
            _ClearFrameMemoryPartial
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _ClearFrameMemoryPartial                             11     2      9   10931
                                              8 BANK0     11     2      9
                        _SendCommand
                           _SendData
                      _SetMemoryArea
                   _SetMemoryPointer
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    4630
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _GotoSleep                                            0     0      0   14309
                   _ButtonEventReset
                   _ClearFrameMemory
                 _DELAY_milliseconds
                       _DisplayFrame
                        _InitDisplay
                       _SleepDisplay
 ---------------------------------------------------------------------------------
 (3) _SleepDisplay                                         0     0      0     973
                        _SendCommand
                      _WaitUntilIdle
 ---------------------------------------------------------------------------------
 (2) _DisplayFrame                                         0     0      0    4335
                        _InitDisplay
                        _SendCommand
                           _SendData
                      _WaitUntilIdle
 ---------------------------------------------------------------------------------
 (2) _InitDisplay                                          2     0      2    2940
                                              0 BANK0      2     0      2
                       _ResetDisplay
                        _SendCommand
                           _SendData
                             _SetLut
 ---------------------------------------------------------------------------------
 (3) _SetLut                                               5     3      2    1064
                                              4 COMMON     5     3      2
                        _SendCommand
                           _SendData
 ---------------------------------------------------------------------------------
 (3) _ResetDisplay                                         0     0      0     551
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (2) _ClearFrameMemory                                     3     3      0    5510
                                              8 BANK0      3     3      0
                        _SendCommand
                           _SendData
                      _SetMemoryArea
                   _SetMemoryPointer
 ---------------------------------------------------------------------------------
 (3) _SetMemoryPointer                                     6     2      4    2171
                                              4 COMMON     6     2      4
                        _SendCommand
                           _SendData
                      _WaitUntilIdle
 ---------------------------------------------------------------------------------
 (3) _WaitUntilIdle                                        0     0      0     551
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (4) _DELAY_milliseconds                                   2     0      2     551
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _SetMemoryArea                                       10     2      8    2396
                                              4 COMMON     2     2      0
                                              0 BANK0      8     0      8
                        _SendCommand
                           _SendData
 ---------------------------------------------------------------------------------
 (4) _SendData                                             1     1      0     422
                                              3 COMMON     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _SendCommand                                          1     1      0     422
                                              3 COMMON     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _SPI_ExchangeByte                                     1     0      1     391
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _ButtonCaseHandler                                    1     1      0       0
                                              2 COMMON     1     1      0
                   _ButtonEventReset
 ---------------------------------------------------------------------------------
 (2) _ButtonEventReset                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0     229
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0     229
                   Absolute function *
                      _TMR1_CallBack *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR1_CallBack                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF0_ISR
 ---------------------------------------------------------------------------------
 (10) _IOCAF0_ISR                                          0     0      0       0
                   Absolute function *
                    _Button_Callback *
     _IOCAF0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _IOCAF0_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _Button_Callback                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ButtonCaseHandler
     _ButtonEventReset
   _ButtonEventHandler
     _ButtonEventReset
     _DisplayFrame
       _InitDisplay
         _ResetDisplay
           _DELAY_milliseconds
         _SendCommand
           _SPI_ExchangeByte
         _SendData
           _SPI_ExchangeByte
         _SetLut
           _SendCommand
           _SendData
       _SendCommand
       _SendData
       _WaitUntilIdle
         _DELAY_milliseconds
     _GotoSleep
       _ButtonEventReset
       _ClearFrameMemory
         _SendCommand
         _SendData
         _SetMemoryArea
           _SendCommand
           _SendData
         _SetMemoryPointer
           _SendCommand
           _SendData
           _WaitUntilIdle
       _DELAY_milliseconds
       _DisplayFrame
       _InitDisplay
       _SleepDisplay
         _SendCommand
         _WaitUntilIdle
     _ImageFromPickupConf
       _ClearFrameMemory
       _ClearLine
         _ClearFrameMemoryPartial
           _SendCommand
           _SendData
           _SetMemoryArea
           _SetMemoryPointer
           ___wmul
         ___wmul
       _SetFrameMemoryPartial
         _SendCommand
         _SendData
         _SetMemoryArea
         _SetMemoryPointer
         ___wmul
       ___wmul
     _WriteConfigurationToMemory
       _HEFLASH_writeBlock
         _FLASH_erase
           __unlock
         _FLASH_write
           __unlock
   _DisplayRefreshHandler
     _DisplayFrame
     _ImageFromPickupConf
   _IOCAF0_SetInterruptHandler
   _RotaryEncoderEventHandler
     _DisplayFrame
     _ImageFromPickupConf
     _modulo
       ___abmod
       ___awmod
         ___abmod (ARG)
     _read_rotary
     _sendCoilsConfiguration
       _shiftOut
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF0_SetInterruptHandler
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _SwitchEventHandler
     _sendCoilsConfiguration
   _TMR1_SetInterruptHandler
   _WakeUp
     _ButtonEventReset
     _ClearFrameMemory
     _DELAY_milliseconds
     _DisplayFrame
     _InitDisplay
     _ReadConfigurationsFromMemory
       _HEFLASH_readBlock
         _FLASH_read
     _TMR1_StartTimer
     _sendCoilsConfiguration
   _spi_master_open
     _EINK_open
       _SPI_Open

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF0_ISR
       Absolute function(Fake) *
       _Button_Callback *
       _IOCAF0_DefaultInterruptHandler *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_CallBack *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     33      33       5       63.7%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      41       7       81.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     2B      3B       9       73.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               4C      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      BB      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      BB      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri May 28 08:44:41 2021

                 ImageFromPickupConf@arrow_type 012A                                  _SPI_Initialize 0FD2  
                              ___abmod@dividend 0075                                               pc 0002  
                  ImageFromPickupConf@max_index 0142                             ___wmul@multiplicand 0074  
                    __end_of_lut_partial_update 17C8                 __size_of_sendCoilsConfiguration 0125  
           ImageFromPickupConf@need_to_skip_row 0138                                             l214 060D  
                                           l522 00FF                                             l535 019D  
                                           l609 0D2A                                             l554 0E6D  
                                           l592 0B9E                                             l594 0BA0  
                                           l598 0BC6                      __end_of_DELAY_milliseconds 0622  
                               _timer1ReloadVal 00DD                                             _pci 2379  
                                  ___awmod@sign 0021                                             wreg 0009  
                                          S4869 0800                        sendCoilsConfiguration@pc 0044  
                             FLASH_read@address 0072                                            l4041 061D  
                                          l4105 00BC                                            l3241 0E49  
                                          l3305 0FFD                                            l4043 0614  
                                          l4221 064C                                            l4117 0BED  
                                          l4109 0BC9                                            l3253 0E56  
                                          l3261 0E5F                                            l3245 0E4D  
                                          l4039 0614                                            l4063 0601  
                                          l4311 097A                                            l3095 09A5  
                                          l4217 01C0                                            l4241 0C12  
                                          l3265 0E64                                            l3257 0E5C  
                                          l3249 0E51                                            l4059 0601  
                                          l4091 05A5                                            l4251 0C31  
                                          l4307 096E                                            l4315 097E  
                                          l4227 0B22                         _ButtonEventHandler$1083 004D  
                                          l4077 08E8                                            l4069 08E2  
                                          l4501 042C                                            l4421 02BF  
                                          l4405 0295                                            l3701 0FE9  
                                          l4191 063D                                            l4095 05AB  
                                          l4255 0C43                                            l4247 0C28  
                                          l4511 043F                                            l4415 0308  
                                          l4175 0AB1                                            l4319 0986  
                                          l3711 0FEB                                            l4601 0D44  
                                          l4281 0C85                                            l4521 0452  
                                          l4177 0ACB                                            l3377 08AD  
                                          l3705 0FEA                                            l4283 0CDA  
                                          l4275 0CCA                                            l4259 0C4C  
                                          l4613 0D7C                                            l4197 019E  
                                          l4277 0CD1                                            l4285 0C70  
                                          l4541 04B9                                            l4525 045B  
                                          l4429 037C                                            l4607 0D60  
                                          l4535 0491                                            l4455 03B3  
                                          l4447 03A2                                            l4439 0391  
                                          l4391 022D                                            l4295 095C  
                                          l4711 0DD7                                            l4617 0D8C  
                                          l4641 0139                                            l4713 0DE4  
                                          l4563 04FF                                            l4467 03E6  
                                          l4643 013C                                            l4299 0963  
                                          l4707 0DBD                                            l4557 054F  
                                          l4565 059E                                            l4477 03FC  
                                          l4653 015D                                            l4637 0130  
                                          l3677 0E72                                            l4709 0DCA  
                                          l4717 0DF9                                            l4487 0413  
                                          l4663 017B                                            l4671 019C  
                                          l4719 0E0E                                            l4665 017E  
                                          l4747 0CFD                                            l4669 0182  
                                          l4765 0D1E                                            l4871 018E  
                                          l4759 0D16                                            l4865 0FF3  
                                          l4867 0E04                                            STR_1 1831  
                                          STR_5 17E6                                            STR_6 1814  
                                          STR_7 17FF                                            u3010 0E99  
                                          _LATA 010C                                            _LATB 010D  
                                          _LATC 010E                                            u3025 0EEE  
                                          u3035 0F77                                            u3300 0432  
                                          u3220 0402                                            u1445 0995  
                                          u3310 0433                                            u3230 0403  
                                          u3340 0444                                            u3260 0419  
                                          u3180 03EC                                            u3405 0466  
                                          u3085 02D1                                            u3350 0445  
                                          u3270 041A                                            u3190 03ED  
                                          u3505 0D4E                                            u2705 08FE  
                                          u3425 047C                                            u3515 0D5A  
                                          u3380 0457                                            u2820 0B1F  
                                          u3525 0D6A                                            u3445 0522  
                                          u3390 0458                                            u3535 0D76  
                                          u2735 0C07                                            u3455 0510  
                                          u2840 0B51                                            u3545 0D86  
                                          u3555 0D96                                            u2860 0B7E  
                                          u2925 0C9D                                            u2765 0A9B  
                                          u2845 0B47                                            u3495 0D40  
                                          u2935 0C81                                            u2865 0B74  
                            __size_of_EINK_open 0003                                            u3677 061E  
                                          u2985 0974                      __end_of_HEFLASH_writeBlock 0ADB  
                                          _WPUA 020C                                            _WPUB 020D  
                                          _WPUC 020E                                            _gpci 227C  
                                          _main 0CFD                                read_rotary@store 00CE  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          btemp 007E                                   ??_InitDisplay 0079  
                                          start 0019                          __end_of_SPI_Initialize 0FE7  
                    ??_TMR1_SetInterruptHandler 0074                                   _SPI_WriteByte 0000  
                             ?_ClearFrameMemory 0070                                _ButtonEventReset 064C  
                        SetFrameMemoryPartial@i 003A                          SetFrameMemoryPartial@j 003C  
                        SetFrameMemoryPartial@x 002A                          SetFrameMemoryPartial@y 002C  
                            ??_ClearFrameMemory 007A                             __size_of_FLASH_read 000F  
                      ClearFrameMemoryPartial@i 0031                             __size_of_IOCAF0_ISR 000D  
                __size_of_OSCILLATOR_Initialize 0008                                           PMCON1 0195  
                                         PMCON2 0196                   __end_of_OSCILLATOR_Initialize 0FD2  
                               __end_of___abmod 0E66                                           ?_main 0070  
                               __end_of___awmod 098B                                 _TMR1_StartTimer 0666  
                                         _T1CON 0018                                           i1l342 0017  
                                         i1l336 000D                                           _PMADR 0191  
                                         _PMDAT 0193                                           _TMR1H 0017  
                                         _TMR1L 0016                                           _TRISA 008C  
                                         _TRISB 008D                                           _TRISC 008E  
                      ImageFromPickupConf@index 0143                       __size_of_SetMemoryPointer 001F  
                               __end_of__unlock 0B13                                __end_of_TMR1_ISR 07F0  
                __size_of_SetFrameMemoryPartial 00CC                                           _b_rot 1502  
                 __end_of_SetFrameMemoryPartial 0CDE                         __end_of_PIN_MANAGER_IOC 08A0  
                                _WDT_Initialize 0FF9                                           _m_rot 154D  
                                         _n_rot 170F                                    ?_read_rotary 0070  
                                         _s_rot 1679                                __end_of_SPI_Open 0A96  
                       __end_of_TMR1_Initialize 08C7                       ??_ClearFrameMemoryPartial 007A  
                                         pclath 000A                          _sendCoilsConfiguration 0E90  
                    __size_of_ButtonCaseHandler 0070                        __end_of_bracket_left_rot 1502  
                        HEFLASH_writeBlock@radd 0020                                           status 0003  
                                         wtemp0 007E                     ?_WriteConfigurationToMemory 0070  
                               _TMR1_WriteTimer 07F0               __end_of_possible_general_conf_str 10E6  
                         ClearFrameMemory@color 0028                           spi_master_open@config 0078  
                                _SPI_WriteBlock 0000                                 ?_SPI_Initialize 0070  
                               __initialization 001B                       SetFrameMemoryPartial@data 0039  
                      __size_of_Button_Callback 000E                                   ??_SendCommand 0073  
                                  __end_of_main 0D2C                             __end_of_InitDisplay 00F4  
                   ?_INTERRUPT_InterruptManager 0070                              __size_of_ClearLine 003F  
                             __end_of_EINK_open 1000                           __end_of_WaitUntilIdle 060A  
                              __end_of_SendData 00FE                            __size_of_FLASH_erase 0014  
                                        ??_main 007A                            __size_of_FLASH_write 001B  
                        __end_of_WDT_Initialize 0FFD                            HEFLASH_readBlock@add 0077  
                          __end_of_DisplayFrame 01CD                    ??_IOCAF0_SetInterruptHandler 0074  
                      __end_of_SPI_ExchangeByte 0614                                          _ANSELA 018C  
                                        _ANSELB 018D                                          _ANSELC 018E  
                                        _BORCON 021D                                          _T1GCON 0019  
                       TMR1_WriteTimer@timerVal 0070                                          _RB6PPS 0E9E  
                                        _RB7PPS 0E9F                                          _ODCONA 028C  
                                        _ODCONB 028D                                          _ODCONC 028E  
                                        i1l3411 07FA                                          i1l3167 0889  
                                        i1l3457 08CD                                          i1l3395 08A0  
                                        i1l3399 08AA                                          _INLVLA 038C  
                                        _INLVLB 038D                                          _INLVLC 038E  
                                        _OSCCON 0099                                          _WDTCON 0097  
                            __size_of_GotoSleep 0026                    ClearFrameMemoryPartial@color 0030  
                                        _SetLut 08E2                                          _WakeUp 005E  
                      _possible_pickup_conf_str 13C2            __end_of_TMR1_DefaultInterruptHandler 0800  
         __size_of_TMR1_DefaultInterruptHandler 0001                    _TMR1_DefaultInterruptHandler 07FF  
                  ClearFrameMemoryPartial@x_end 002C                    ClearFrameMemoryPartial@y_end 002E  
                                     ??___abmod 0073                         __end_of_TMR1_StartTimer 0669  
                                        ___wmul 05A3                                       ??___awmod 007A  
                            FLASH_write@address 0072                                          _buffer 014B  
                                        _modulo 0E23                                 ___awmod@divisor 0076  
           __size_of_IOCAF0_SetInterruptHandler 0006                                 ___awmod@counter 0020  
                                     ??__unlock 0072                             __end_of_SendCommand 05C2  
                                  __pdataBIGRAM 227C                  __size_of_DisplayRefreshHandler 0017  
                              __end_of_shiftOut 0BC9                   __end_of_DisplayRefreshHandler 0DB3  
                               ?_WDT_Initialize 0070                    __size_of_ImageFromPickupConf 03D6  
                       HEFLASH_writeBlock@count 0079                                    ??_FLASH_read 0074  
      TMR1_SetInterruptHandler@InterruptHandler 0072      IOCAF0_SetInterruptHandler@InterruptHandler 0072  
                              ?_PIN_MANAGER_IOC 0070                         __end_of_TMR1_WriteTimer 07FF  
                                  ??_IOCAF0_ISR 0070                           __end_of_TMR1_CallBack 08E2  
                               _lut_full_update 17C8                                ?_TMR1_Initialize 0070  
                             _SYSTEM_Initialize 0FC1                               __end_of_ClearLine 0601  
                       __end_of__initialization 005A                              _ButtonEventHandler 00FE  
                            ?_SYSTEM_Initialize 0070                                     _InitDisplay 00BC  
                    ?_RotaryEncoderEventHandler 0070                              _SwitchEventHandler 0A06  
                           ?_ButtonEventHandler 0070                                  __pcstackCOMMON 0070  
                                  __pidataBANK1 0901                                    __pidataBANK2 088C  
                           ??_SYSTEM_Initialize 0074                      SetFrameMemoryPartial@x_end 003E  
                    SetFrameMemoryPartial@y_end 0040                                   __end_of_b_rot 154D  
                                     ?_TMR1_ISR 0070                   ?_TMR1_DefaultInterruptHandler 0070  
                                 __end_of_m_rot 1598                                   __end_of_n_rot 175A  
                                 __end_of_s_rot 16C4                             ?_SwitchEventHandler 0070  
                            __end_of_FLASH_read 09C8                                   ?_ResetDisplay 0070  
                                     ?_SPI_Open 0070                              __end_of_IOCAF0_ISR 08AD  
                             ??_Button_Callback 0070                               __end_of_GotoSleep 094D  
                                _OPTION_REGbits 0095             __size_of_WriteConfigurationToMemory 0007  
                              _SetMemoryPointer 0CDE                            ??_ButtonEventHandler 004B  
                      __end_of_ButtonEventReset 0652                       __end_of_SYSTEM_Initialize 0FCA  
                                 ?_SleepDisplay 0070                              _lut_partial_update 17AA  
                        __size_of_SetMemoryArea 0031                            ??_SwitchEventHandler 0045  
             SetFrameMemoryPartial@image_height 0030                                      __pbssBANK1 00C6  
             SetFrameMemoryPartial@image_buffer 0028                              _DELAY_milliseconds 0614  
                          __size_of_read_rotary 002A                        __size_of_spi_master_open 0012  
                                     ?_SendData 0070                         HEFLASH_readBlock@buffer 0076  
                                       ?_SetLut 0074                                         ?_WakeUp 0070  
             __end_of_RotaryEncoderEventHandler 0E23                             ?_DELAY_milliseconds 0072  
                         HEFLASH_readBlock@radd 0074                                      __pmaintext 0CFD  
                            _HEFLASH_writeBlock 0A96                                     _SendCommand 05B8  
                                       ?___wmul 0072                                ?_TMR1_StartTimer 0070  
                                    ??_TMR1_ISR 0072                                      _click_type 00D9  
                                    __pintentry 0004                                  ??_ResetDisplay 0074  
                                       ?_modulo 0022                                      ??_SPI_Open 0072  
                         __size_of_DisplayFrame 002F                             ?_HEFLASH_writeBlock 0078  
                     __size_of_ClearFrameMemory 002A              __end_of_IOCAF0_SetInterruptHandler 0FBB  
                    _IOCAF0_SetInterruptHandler 0FB5                         __end_of_lut_full_update 17E6  
                              shiftOut@bitOrder 0031                            ??_DELAY_milliseconds 0074  
              SetFrameMemoryPartial@image_width 002E                                         _OSCSTAT 009A  
                                       _OSCTUNE 0098                                         _SSP1ADD 0212  
                       ?_sendCoilsConfiguration 0070                                         _SLRCONA 030C  
                                       _SLRCONB 030D                                         _SLRCONC 030E  
                                       _SSP1BUF 0211                                  ??_SleepDisplay 0074  
                              ?_TMR1_WriteTimer 0070                                ClearLine@start_x 0033  
                              ClearLine@start_y 0038            __end_ofSwitchEventHandler@conv_table 1831  
                  SwitchEventHandler@conv_table 182B                                ??_SPI_Initialize 0072  
                          ??_HEFLASH_writeBlock 007A                                 _time_to_refresh 00B0  
                        ClearLine@max_character 0035                                      ??_SendData 0073  
                                       SetLut@i 0077                                       ?_shiftOut 0072  
                               __size_of_SetLut 001F                                    _DisplayFrame 019E  
                               __size_of_WakeUp 002D                                         ___abmod 0E41  
                                       ___awmod 0952                                 __size_of___wmul 0015  
                                 _SetMemoryArea 008B                                 __size_of_modulo 001E  
                                   shiftOut@val 0072                                         __ptext1 0FE7  
                                       __ptext2 0FFD                                         __ptext3 0A49  
                                       __ptext4 005E                                         __ptext5 0666  
                                       __ptext6 098B                                         __ptext7 0990  
                                       __ptext8 09B9                                         __ptext9 0A06  
                                       __unlock 0B0A                  ??_TMR1_DefaultInterruptHandler 0070  
                                     _T1CONbits 0018                           _OSCILLATOR_Initialize 0FCA  
                                     _EINK_open 0FFD                                ___awmod@dividend 0078  
             __size_of_TMR1_SetInterruptHandler 0006                  __end_of_sendCoilsConfiguration 0FB5  
                      ??_PIN_MANAGER_Initialize 0074                       ?_TMR1_SetInterruptHandler 0072  
                                     _IOCAFbits 0393                                       _IOCANbits 0392  
                                       _wake_up 00D7                                       _IOCAPbits 0391  
            ImageFromPickupConf@selection_index 0042                      __size_of_SYSTEM_Initialize 0009  
                             ?_SPI_ExchangeByte 0072                            ImageFromPickupConf@i 0146  
                          end_of_initialization 005A              __end_of_WriteConfigurationToMemory 0666  
                    _WriteConfigurationToMemory 065F                           _SetFrameMemoryPartial 0C12  
                            ??_SPI_ExchangeByte 0073                             __end_of_b_arrow_rot 1254  
                                       init_ram 0872                      _SetFrameMemoryPartial$1322 0037  
                                       initloop 0873                               __end_of_serie_rot 162E  
                            SendCommand@command 0073                        read_rotary@rot_enc_table 00A0  
                          __end_of_parallel_rot 15E3                                    SendData@data 0073  
                                       modulo@N 0022                                         modulo@x 0027  
                                    ??_shiftOut 0020                        HEFLASH_writeBlock@buffer 0078  
                           _ImageFromPickupConf 01CD          __end_of_pickup_configuration_selectors 17AA  
                _pickup_configuration_selectors 1788  __end_of_general_pickup_configuration_selectors 1788  
        _general_pickup_configuration_selectors 175A                                  ?_SetMemoryArea 0020  
                                 ??_FLASH_erase 0074                               ??_spi_master_open 0076  
                                 ??_FLASH_write 0077                                ??_WDT_Initialize 0072  
                                     _PORTAbits 000C                                       _PORTBbits 000D  
                                     _PORTCbits 000E                               _spi_configuration 1823  
             ImageFromPickupConf@pickup_indexes 013C                                       _SSPDATPPS 0E21  
                                     _SSPCLKPPS 0E20                                      ?_EINK_open 0070  
                       _IOCAF0_InterruptHandler 00DF                                       _SPI_Close 0000  
                                     _TRISBbits 008D                        ?_ClearFrameMemoryPartial 0028  
                          ?_ImageFromPickupConf 0042                                 ___abmod@divisor 0072  
                               ___abmod@counter 0073                            SetMemoryArea@x_start 0020  
                          SetMemoryArea@y_start 0022                            __end_of_ResetDisplay 065F  
                             SetMemoryPointer@x 0074                               SetMemoryPointer@y 0076  
                        __size_of_WaitUntilIdle 0009                                    ?_InitDisplay 0020  
                                     _ClearLine 05C2                                 _Button_Callback 087E  
                   ??_RotaryEncoderEventHandler 004B                        __end_of_SetMemoryPointer 0CFD  
                           __end_of_g_arrow_rot 119D                                      _switch_pos 007B  
                                __end_of_SetLut 0901                                  __end_of_WakeUp 008B  
                          SPI_ExchangeByte@data 0072                            __end_of_SleepDisplay 0952  
             SetFrameMemoryPartial@invert_color 0032                       __end_of_spi_configuration 182B  
                                 __pidataBIGRAM 0669                                  __end_of___wmul 05B8  
                             __size_of_TMR1_ISR 0013                      ImageFromPickupConf@bracket 0043  
                        ?_OSCILLATOR_Initialize 0070                                  __end_of_modulo 0E41  
                         HEFLASH_writeBlock@add 0021                             __end_of_FLASH_erase 0B0A  
                             __size_of_SPI_Open 004D                                _ClearFrameMemory 0622  
                           start_initialization 001B                           ??_ImageFromPickupConf 0045  
                           __end_of_FLASH_write 0AF6                 __size_of_PIN_MANAGER_Initialize 003E  
                                   _b_arrow_rot 119D                           _DisplayRefreshHandler 0D9C  
                             ClearFrameMemory@i 0029                                       _GotoSleep 0927  
                             ?_ButtonEventReset 0070                                       SetLut@lut 0074  
                    ImageFromPickupConf@start_x 0148                      ImageFromPickupConf@start_y 0144  
                        ?_SetFrameMemoryPartial 0028                                 _selection_index 00B1  
                            ??_ButtonEventReset 0072                                   _refresh_timer 00D0  
                      __size_of_PIN_MANAGER_IOC 0004                                      ?_ClearLine 0033  
                SPI_Open@spiUniqueConfiguration 0075                                        ??_SetLut 0076  
                               ??_SetMemoryArea 0074                                        ??_WakeUp 007A  
                             _HEFLASH_readBlock 0990                        __size_of_TMR1_Initialize 001A  
                             __size_of_SendData 000A                                 _prev_switch_pos 00DA  
                                  ?_SendCommand 0070                                        ??___wmul 0076  
                            ?_HEFLASH_readBlock 0074                                     __pdataBANK1 00A0  
                                   __pdataBANK2 014B                                        ??_modulo 0023  
              ??_IOCAF0_DefaultInterruptHandler 0070                 ?_IOCAF0_DefaultInterruptHandler 0070  
                        __size_of_TMR1_CallBack 001B                 __end_of_ClearFrameMemoryPartial 0C12  
                                 _WaitUntilIdle 0601                             ??_HEFLASH_readBlock 0076  
                                   ??_EINK_open 0076                       _RotaryEncoderEventHandler 0DB3  
                                   __pbssCOMMON 007A                                       ___latbits 0002  
                   ?_IOCAF0_SetInterruptHandler 0072                                   __pcstackBANK0 0020  
                                 __pcstackBANK2 0120                         read_rotary@prevNextCode 00D6  
                   __size_of_ButtonEventHandler 00A0                                  _button_clicked 007A  
                                    ?_GotoSleep 0070                             __end_of_m_arrow_rot 130B  
                                 ??_read_rotary 0072                __end_of_possible_pickup_conf_str 146C  
                       __end_of_Button_Callback 088C                     __size_of_SwitchEventHandler 0043  
                                   _g_arrow_rot 10E6                             __end_of_n_arrow_rot 13C2  
                                     __pnvBANK1 00DB                       __end_of_HEFLASH_readBlock 09B9  
                  ??_WriteConfigurationToMemory 007A                          _PIN_MANAGER_Initialize 09C8  
                        HEFLASH_readBlock@count 0075                                        ?___abmod 0072  
              __end_of_TMR1_SetInterruptHandler 0FC1                                        ?___awmod 0076  
                             __size_of_shiftOut 00B6                            SwitchEventHandler@a1 004F  
                          SwitchEventHandler@a2 0050                            SwitchEventHandler@a3 0051  
                                   _FLASH_erase 0AF6                                       _coil_conf 00C6  
                        __p_configurations_text 1F80                                     _click_timer 00D2  
                                   _FLASH_write 0ADB                    ??_INTERRUPT_InterruptManager 0072  
                                ?_WaitUntilIdle 0070                                       __pswtext1 0800  
                                      ?__unlock 0070                                  InitDisplay@lut 0020  
                  RotaryEncoderEventHandler@val 00D5                        __size_of_TMR1_StartTimer 0003  
                                  _parallel_rot 1598                          ?_DisplayRefreshHandler 0070  
                   __size_of_DELAY_milliseconds 000E                           __size_of_ResetDisplay 000D  
                           __end_of_n_prime_rot 170F                                   _TMR1_CallBack 08C7  
                               _spi_master_open 0FE7                                  ___wmul@product 0076  
                                      _LATAbits 010C                                        _LATCbits 010E  
                   __size_of_HEFLASH_writeBlock 0045                             __end_of_read_rotary 0E90  
                                      _PIE1bits 0091                           __size_of_SleepDisplay 0005  
                                   ??_ClearLine 0036                        __size_of_TMR1_WriteTimer 000F  
           __size_of_INTERRUPT_InterruptManager 0015                                        _PIR1bits 0011  
                               FLASH_erase@temp 0074                                       _serie_rot 15E3  
                          __size_of_InitDisplay 0038            __end_of_ReadConfigurationsFromMemory 0990  
         __size_of_ReadConfigurationsFromMemory 0005                    _ReadConfigurationsFromMemory 098B  
                DELAY_milliseconds@milliseconds 0072                       __size_of_SPI_ExchangeByte 000A  
                                      _SSP1CON1 0215                                        _SSP1CON2 0216  
                                      _TMR1_ISR 07DD                                        _SSP1STAT 0214  
                             ??_PIN_MANAGER_IOC 0070                                        _SPI_Open 0A49  
                             ??_TMR1_Initialize 0074                                    _ResetDisplay 0652  
                             ___wmul@multiplier 0072                                     _m_arrow_rot 1254  
                                   ??_GotoSleep 007A                                     _n_arrow_rot 130B  
                                  _SleepDisplay 094D                                  ?_TMR1_CallBack 0070  
                              ?_Button_Callback 0070                             __end_of_s_prime_rot 1679  
                    __size_of_HEFLASH_readBlock 0029                                        _SendData 00F4  
              __size_of_ClearFrameMemoryPartial 0049                        __end_of_ClearFrameMemory 064C  
                             _bracket_right_rot 146C                               ?_SetMemoryPointer 0074  
                              FLASH_write@latch 0076                         __size_of_SPI_Initialize 0015  
                       ??_OSCILLATOR_Initialize 0072                                __size_of___abmod 0025  
                 ?_ReadConfigurationsFromMemory 0070                                 ??_WaitUntilIdle 0074  
                            ??_SetMemoryPointer 0078                                __size_of___awmod 0039  
                          __size_of_SendCommand 000A                        _TMR1_SetInterruptHandler 0FBB  
                                   _n_prime_rot 16C4                           _TMR1_InterruptHandler 00DB  
                              __size_of__unlock 0009                SwitchEventHandler@new_switch_pos 0052  
                       ??_SetFrameMemoryPartial 0033                       _possible_general_conf_str 1000  
                       __end_of_spi_master_open 0FF9                                        __ptext10 0FC1  
                                      __ptext11 0FF9                                        __ptext20 0B13  
                                      __ptext12 08AD                                        __ptext21 0E66  
                                      __ptext13 0FBB                                        __ptext30 0AF6  
                                      __ptext22 0E23                                        __ptext14 0FD2  
                                      __ptext31 0B0A                                        __ptext23 0952  
                                      __ptext15 09C8                                        __ptext40 00BC  
                                      __ptext32 01CD                                        __ptext24 0E41  
                                      __ptext16 0FB5                                        __ptext41 08E2  
                                      __ptext33 0C12                                        __ptext25 0D9C  
                                      __ptext17 0FCA                                        __ptext50 060A  
                                      __ptext42 0652                                        __ptext34 05C2  
                                      __ptext26 00FE                                        __ptext18 0DB3  
                                      __ptext51 0D2C                                        __ptext43 0622  
                                      __ptext35 0BC9                                        __ptext27 065F  
                                      __ptext19 0E90                                        __ptext60 087E  
                                      __ptext52 064C                                        __ptext44 0CDE  
                                      __ptext36 05A3                                        __ptext28 0A96  
                                      __ptext61 0003                                        __ptext45 0601  
                                      __ptext37 0927                                        __ptext29 0ADB  
                                      __ptext54 07DD                                        __ptext46 0614  
                                      __ptext38 094D                                        __ptext55 07F0  
                                      __ptext47 008B                                        __ptext39 019E  
                                      __ptext56 08C7                                        __ptext48 00F4  
                                      __ptext57 07FF                                        __ptext49 05B8  
                                      __ptext58 089C                                        __ptext59 08A0  
                                  _SSP1CON1bits 0215                                      _FLASH_read 09B9  
                                   _read_rotary 0E66                                      _IOCAF0_ISR 08A0  
                             ??_TMR1_StartTimer 0072                              FLASH_erase@address 0072  
            __size_of_RotaryEncoderEventHandler 0070                                   __size_of_main 002F  
                                     shiftOut@i 0032                       __end_of_bracket_right_rot 14B7  
                                      _saved_pc 00B2                                        _shiftOut 0B13  
                     __size_of_ButtonEventReset 0006                                        _sleeping 00D8  
                             _SPI_ExchangeBlock 0000                                        int$flags 007E  
                            SetMemoryArea@x_end 0024                              SetMemoryArea@y_end 0026  
            __end_of_INTERRUPT_InterruptManager 0019                      _INTERRUPT_InterruptManager 0004  
                             ??_TMR1_WriteTimer 0072                        ??_sendCoilsConfiguration 003A  
                   __end_of_ImageFromPickupConf 05A3                                _bracket_left_rot 14B7  
                         ImageFromPickupConf@pc 014A                                      _INTCONbits 000B  
                               FLASH_write@data 0074                                  __pstringtext10 13C2  
                                __pstringtext11 146C                                  __pstringtext20 170F  
                                __pstringtext12 14B7                                  __pstringtext21 17AA  
                                __pstringtext13 1502                                  __pstringtext22 17C8  
                                __pstringtext14 154D                                  __pstringtext23 17E6  
                                __pstringtext15 1598                                  __pstringtext24 17FF  
                                __pstringtext16 15E3                                  __pstringtext25 1814  
                                __pstringtext17 162E                                  __pstringtext26 1831  
                                __pstringtext18 1679                                  __pstringtext27 0000  
                                __pstringtext19 16C4                                 FLASH_write@temp 0077  
                                   _s_prime_rot 162E                                 ??_TMR1_CallBack 0070  
                                _configurations 1F80                         __size_of_WDT_Initialize 0004  
                                      intlevel1 0000          __end_of_IOCAF0_DefaultInterruptHandler 0004  
       __size_of_IOCAF0_DefaultInterruptHandler 0001                  _IOCAF0_DefaultInterruptHandler 0003  
                                    _PMCON1bits 0195                         ?_PIN_MANAGER_Initialize 0070  
                             _ButtonCaseHandler 0D2C                              ?_ButtonCaseHandler 0070  
                                 ?_DisplayFrame 0070                                _SPI_ExchangeByte 060A  
                         __end_of_SetMemoryArea 00BC                                    ___abmod@sign 0074  
                                  ?_FLASH_erase 0072                             ??_ButtonCaseHandler 0072  
                                  ?_FLASH_write 0072                                   __pstringtext1 175A  
                                 __pstringtext2 1788                                   __pstringtext3 1823  
                                 __pstringtext4 182B                                   __pstringtext5 1000  
                                 __pstringtext6 10E6                                   __pstringtext7 119D  
                                 __pstringtext8 1254                                   __pstringtext9 130B  
                       ??_DisplayRefreshHandler 007A                  ??_ReadConfigurationsFromMemory 0079  
                    __end_of_ButtonEventHandler 019E                        _ImageFromPickupConf$1220 0133  
                      _ImageFromPickupConf$1221 0134                        _ImageFromPickupConf$1223 0135  
                      _ImageFromPickupConf$1215 0124                        _ImageFromPickupConf$1224 0136  
                      _ImageFromPickupConf$1216 0126                        _ImageFromPickupConf$1225 0137  
                      _ImageFromPickupConf$1217 0128                        _ImageFromPickupConf$1219 0132  
                      _ImageFromPickupConf$2078 0140                          __end_of_configurations 1F94  
                    __end_of_SwitchEventHandler 0A49                                ?_spi_master_open 0070  
                                   ?_FLASH_read 0072                                     ?_IOCAF0_ISR 0070  
                __end_of_PIN_MANAGER_Initialize 0A06                       __end_of_ButtonCaseHandler 0D9C  
                               _PIN_MANAGER_IOC 089C                  ClearFrameMemoryPartial@x_start 0028  
                       _ClearFrameMemoryPartial 0BC9                   ImageFromPickupConf@draw_empty 0044  
                ClearFrameMemoryPartial@y_start 002A                          _configurations_absaddr 1F80  
           ImageFromPickupConf@need_to_draw_row 0120                                   _SPI_ReadBlock 0000  
                         _partial_refresh_count 00D4                                 _TMR1_Initialize 08AD  
                                ??_DisplayFrame 0079                                    _SPI_ReadByte 0000  
