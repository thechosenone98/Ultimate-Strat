

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun May 30 12:42:50 2021

Microchip MPLAB XC8 C Compiler v2.32 (Pro license) build 20210201212658 Og9f 
     1                           	processor	16LF1769
     2                           	pagewidth 120
     3                           	opt	plic
     4                           	psect	idataBIGRAM,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    29                           	psect	_configurations_text,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    31                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    32                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    33                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    34                           	psect	stringtext27,global,class=STRCODE,delta=2,noexec
    35                           	psect	cinit,global,class=CODE,merge=1,delta=2
    36                           	psect	dataBIGRAM,global,delta=1
    37                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    38                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    39                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    40                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    41                           	psect	inittext,global,class=CODE,delta=2
    42                           	psect	clrtext,global,class=CODE,delta=2
    43                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    44                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    45                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    46                           	psect	text4,local,class=CODE,merge=1,delta=2
    47                           	psect	text5,local,class=CODE,merge=1,delta=2
    48                           	psect	text7,local,class=CODE,merge=1,delta=2
    49                           	psect	swtext1,local,class=CONST,delta=2
    50                           	psect	text28,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text54,local,class=CODE,merge=1,delta=2
    55                           	psect	text56,local,class=CODE,merge=1,delta=2
    56                           	psect	text57,local,class=CODE,merge=1,delta=2
    57                           	psect	text58,local,class=CODE,merge=1,delta=2
    58                           	psect	text60,local,class=CODE,merge=1,delta=2
    59                           	psect	text61,local,class=CODE,merge=1,delta=2
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    61                           	dabs	1,0x620,48
    62                           	dabs	1,0x5A9,71
    63                           	dabs	1,0x5A0,9
    64                           	dabs	1,0x520,80
    65                           	dabs	1,0x4A0,80
    66                           	dabs	1,0x420,80
    67                           	dabs	1,0x3EC,4
    68                           	dabs	1,0x227C,0,_gpci
    69                           	dabs	1,0x2379,0,_pci
    70                           	dabs	1,0x7E,2
    71  0000                     
    72                           ; Version 2.20
    73                           ; Generated 12/02/2020 GMT
    74                           ; 
    75                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16LF1769 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  0091                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009B                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0110                     	;# 
   163  0111                     	;# 
   164  0112                     	;# 
   165  0113                     	;# 
   166  0114                     	;# 
   167  0115                     	;# 
   168  0116                     	;# 
   169  0117                     	;# 
   170  0118                     	;# 
   171  0119                     	;# 
   172  011A                     	;# 
   173  011B                     	;# 
   174  011C                     	;# 
   175  011D                     	;# 
   176  011E                     	;# 
   177  011F                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180  018E                     	;# 
   181  0191                     	;# 
   182  0191                     	;# 
   183  0192                     	;# 
   184  0193                     	;# 
   185  0193                     	;# 
   186  0194                     	;# 
   187  0195                     	;# 
   188  0196                     	;# 
   189  0199                     	;# 
   190  0199                     	;# 
   191  0199                     	;# 
   192  019A                     	;# 
   193  019A                     	;# 
   194  019A                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019B                     	;# 
   200  019C                     	;# 
   201  019C                     	;# 
   202  019C                     	;# 
   203  019D                     	;# 
   204  019D                     	;# 
   205  019D                     	;# 
   206  019E                     	;# 
   207  019E                     	;# 
   208  019E                     	;# 
   209  019F                     	;# 
   210  019F                     	;# 
   211  019F                     	;# 
   212  019F                     	;# 
   213  019F                     	;# 
   214  020C                     	;# 
   215  020D                     	;# 
   216  020E                     	;# 
   217  0211                     	;# 
   218  0211                     	;# 
   219  0212                     	;# 
   220  0212                     	;# 
   221  0213                     	;# 
   222  0213                     	;# 
   223  0214                     	;# 
   224  0214                     	;# 
   225  0215                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0215                     	;# 
   229  0216                     	;# 
   230  0216                     	;# 
   231  0217                     	;# 
   232  0217                     	;# 
   233  021D                     	;# 
   234  021E                     	;# 
   235  021F                     	;# 
   236  028C                     	;# 
   237  028D                     	;# 
   238  028E                     	;# 
   239  0291                     	;# 
   240  0291                     	;# 
   241  0292                     	;# 
   242  0293                     	;# 
   243  0294                     	;# 
   244  0298                     	;# 
   245  0298                     	;# 
   246  0299                     	;# 
   247  029A                     	;# 
   248  029B                     	;# 
   249  029E                     	;# 
   250  030C                     	;# 
   251  030D                     	;# 
   252  030E                     	;# 
   253  031B                     	;# 
   254  031C                     	;# 
   255  031D                     	;# 
   256  031E                     	;# 
   257  031F                     	;# 
   258  038C                     	;# 
   259  038D                     	;# 
   260  038E                     	;# 
   261  0391                     	;# 
   262  0392                     	;# 
   263  0393                     	;# 
   264  0394                     	;# 
   265  0395                     	;# 
   266  0396                     	;# 
   267  0397                     	;# 
   268  0398                     	;# 
   269  0399                     	;# 
   270  039B                     	;# 
   271  039C                     	;# 
   272  039D                     	;# 
   273  039E                     	;# 
   274  039F                     	;# 
   275  040E                     	;# 
   276  0413                     	;# 
   277  0413                     	;# 
   278  0414                     	;# 
   279  0414                     	;# 
   280  0415                     	;# 
   281  0416                     	;# 
   282  0417                     	;# 
   283  0418                     	;# 
   284  041A                     	;# 
   285  041A                     	;# 
   286  041B                     	;# 
   287  041B                     	;# 
   288  041C                     	;# 
   289  041D                     	;# 
   290  041E                     	;# 
   291  041F                     	;# 
   292  0493                     	;# 
   293  0493                     	;# 
   294  0494                     	;# 
   295  0495                     	;# 
   296  0496                     	;# 
   297  049A                     	;# 
   298  049A                     	;# 
   299  049B                     	;# 
   300  049C                     	;# 
   301  049D                     	;# 
   302  050F                     	;# 
   303  0510                     	;# 
   304  0511                     	;# 
   305  0512                     	;# 
   306  0513                     	;# 
   307  0514                     	;# 
   308  0515                     	;# 
   309  0516                     	;# 
   310  0590                     	;# 
   311  0591                     	;# 
   312  0592                     	;# 
   313  0592                     	;# 
   314  0592                     	;# 
   315  0593                     	;# 
   316  0593                     	;# 
   317  0594                     	;# 
   318  0595                     	;# 
   319  0595                     	;# 
   320  0595                     	;# 
   321  0596                     	;# 
   322  0596                     	;# 
   323  0597                     	;# 
   324  0598                     	;# 
   325  0598                     	;# 
   326  0599                     	;# 
   327  059A                     	;# 
   328  059A                     	;# 
   329  0617                     	;# 
   330  0617                     	;# 
   331  0618                     	;# 
   332  0619                     	;# 
   333  061A                     	;# 
   334  061A                     	;# 
   335  061B                     	;# 
   336  061C                     	;# 
   337  068D                     	;# 
   338  068E                     	;# 
   339  068F                     	;# 
   340  0690                     	;# 
   341  0691                     	;# 
   342  0692                     	;# 
   343  0693                     	;# 
   344  0694                     	;# 
   345  0695                     	;# 
   346  0696                     	;# 
   347  0697                     	;# 
   348  0698                     	;# 
   349  0699                     	;# 
   350  069A                     	;# 
   351  069B                     	;# 
   352  069C                     	;# 
   353  069D                     	;# 
   354  069E                     	;# 
   355  069F                     	;# 
   356  070D                     	;# 
   357  070E                     	;# 
   358  070F                     	;# 
   359  0710                     	;# 
   360  0711                     	;# 
   361  0712                     	;# 
   362  0713                     	;# 
   363  0714                     	;# 
   364  0715                     	;# 
   365  0716                     	;# 
   366  0717                     	;# 
   367  0718                     	;# 
   368  0719                     	;# 
   369  071A                     	;# 
   370  071B                     	;# 
   371  071C                     	;# 
   372  071D                     	;# 
   373  071E                     	;# 
   374  071F                     	;# 
   375  0794                     	;# 
   376  0795                     	;# 
   377  0796                     	;# 
   378  0797                     	;# 
   379  0798                     	;# 
   380  0799                     	;# 
   381  079A                     	;# 
   382  079B                     	;# 
   383  079C                     	;# 
   384  079D                     	;# 
   385  079E                     	;# 
   386  079F                     	;# 
   387  0D8E                     	;# 
   388  0D8F                     	;# 
   389  0D90                     	;# 
   390  0D91                     	;# 
   391  0D91                     	;# 
   392  0D92                     	;# 
   393  0D93                     	;# 
   394  0D93                     	;# 
   395  0D94                     	;# 
   396  0D95                     	;# 
   397  0D95                     	;# 
   398  0D96                     	;# 
   399  0D97                     	;# 
   400  0D97                     	;# 
   401  0D98                     	;# 
   402  0D99                     	;# 
   403  0D99                     	;# 
   404  0D9A                     	;# 
   405  0D9B                     	;# 
   406  0D9C                     	;# 
   407  0D9C                     	;# 
   408  0D9D                     	;# 
   409  0D9D                     	;# 
   410  0D9E                     	;# 
   411  0D9F                     	;# 
   412  0DA0                     	;# 
   413  0DA1                     	;# 
   414  0DA1                     	;# 
   415  0DA2                     	;# 
   416  0DA3                     	;# 
   417  0DA3                     	;# 
   418  0DA4                     	;# 
   419  0DA5                     	;# 
   420  0DA5                     	;# 
   421  0DA6                     	;# 
   422  0DA7                     	;# 
   423  0DA7                     	;# 
   424  0DA8                     	;# 
   425  0DA9                     	;# 
   426  0DA9                     	;# 
   427  0DAA                     	;# 
   428  0DAB                     	;# 
   429  0DAC                     	;# 
   430  0DAC                     	;# 
   431  0DAD                     	;# 
   432  0DAD                     	;# 
   433  0DAE                     	;# 
   434  0DAF                     	;# 
   435  0DB0                     	;# 
   436  0E0F                     	;# 
   437  0E10                     	;# 
   438  0E11                     	;# 
   439  0E12                     	;# 
   440  0E13                     	;# 
   441  0E14                     	;# 
   442  0E15                     	;# 
   443  0E16                     	;# 
   444  0E17                     	;# 
   445  0E19                     	;# 
   446  0E19                     	;# 
   447  0E19                     	;# 
   448  0E1A                     	;# 
   449  0E1B                     	;# 
   450  0E1C                     	;# 
   451  0E1C                     	;# 
   452  0E1C                     	;# 
   453  0E1D                     	;# 
   454  0E1E                     	;# 
   455  0E1F                     	;# 
   456  0E1F                     	;# 
   457  0E1F                     	;# 
   458  0E20                     	;# 
   459  0E21                     	;# 
   460  0E22                     	;# 
   461  0E24                     	;# 
   462  0E25                     	;# 
   463  0E28                     	;# 
   464  0E29                     	;# 
   465  0E2A                     	;# 
   466  0E2B                     	;# 
   467  0E2C                     	;# 
   468  0E2D                     	;# 
   469  0E2E                     	;# 
   470  0E2F                     	;# 
   471  0E30                     	;# 
   472  0E31                     	;# 
   473  0E32                     	;# 
   474  0E33                     	;# 
   475  0E34                     	;# 
   476  0E35                     	;# 
   477  0E90                     	;# 
   478  0E91                     	;# 
   479  0E92                     	;# 
   480  0E94                     	;# 
   481  0E95                     	;# 
   482  0E9C                     	;# 
   483  0E9D                     	;# 
   484  0E9E                     	;# 
   485  0E9F                     	;# 
   486  0EA0                     	;# 
   487  0EA1                     	;# 
   488  0EA2                     	;# 
   489  0EA3                     	;# 
   490  0EA4                     	;# 
   491  0EA5                     	;# 
   492  0EA6                     	;# 
   493  0EA7                     	;# 
   494  0F0F                     	;# 
   495  0F10                     	;# 
   496  0F11                     	;# 
   497  0F12                     	;# 
   498  0F13                     	;# 
   499  0F14                     	;# 
   500  0F15                     	;# 
   501  0F16                     	;# 
   502  0F17                     	;# 
   503  0F18                     	;# 
   504  0F19                     	;# 
   505  0F1A                     	;# 
   506  0F1B                     	;# 
   507  0F1C                     	;# 
   508  0F1D                     	;# 
   509  0F1E                     	;# 
   510  0F1F                     	;# 
   511  0F20                     	;# 
   512  0F21                     	;# 
   513  0F22                     	;# 
   514  0F23                     	;# 
   515  0F24                     	;# 
   516  0F25                     	;# 
   517  0F26                     	;# 
   518  0F27                     	;# 
   519  0F28                     	;# 
   520  0F29                     	;# 
   521  0F2A                     	;# 
   522  0F2B                     	;# 
   523  0F2C                     	;# 
   524  0F2D                     	;# 
   525  0FE4                     	;# 
   526  0FE5                     	;# 
   527  0FE6                     	;# 
   528  0FE7                     	;# 
   529  0FE8                     	;# 
   530  0FE9                     	;# 
   531  0FEA                     	;# 
   532  0FEB                     	;# 
   533  0FED                     	;# 
   534  0FEE                     	;# 
   535  0FEF                     	;# 
   536  0000                     	;# 
   537  0001                     	;# 
   538  0002                     	;# 
   539  0003                     	;# 
   540  0004                     	;# 
   541  0005                     	;# 
   542  0006                     	;# 
   543  0007                     	;# 
   544  0008                     	;# 
   545  0009                     	;# 
   546  000A                     	;# 
   547  000B                     	;# 
   548  000C                     	;# 
   549  000D                     	;# 
   550  000E                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0013                     	;# 
   554  0014                     	;# 
   555  0015                     	;# 
   556  0016                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001A                     	;# 
   563  001B                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  001D                     	;# 
   567  001E                     	;# 
   568  001F                     	;# 
   569  008C                     	;# 
   570  008D                     	;# 
   571  008E                     	;# 
   572  0091                     	;# 
   573  0092                     	;# 
   574  0093                     	;# 
   575  0094                     	;# 
   576  0095                     	;# 
   577  0096                     	;# 
   578  0097                     	;# 
   579  0098                     	;# 
   580  0099                     	;# 
   581  009A                     	;# 
   582  009B                     	;# 
   583  009B                     	;# 
   584  009C                     	;# 
   585  009D                     	;# 
   586  009E                     	;# 
   587  009F                     	;# 
   588  010C                     	;# 
   589  010D                     	;# 
   590  010E                     	;# 
   591  010F                     	;# 
   592  0110                     	;# 
   593  0111                     	;# 
   594  0112                     	;# 
   595  0113                     	;# 
   596  0114                     	;# 
   597  0115                     	;# 
   598  0116                     	;# 
   599  0117                     	;# 
   600  0118                     	;# 
   601  0119                     	;# 
   602  011A                     	;# 
   603  011B                     	;# 
   604  011C                     	;# 
   605  011D                     	;# 
   606  011E                     	;# 
   607  011F                     	;# 
   608  018C                     	;# 
   609  018D                     	;# 
   610  018E                     	;# 
   611  0191                     	;# 
   612  0191                     	;# 
   613  0192                     	;# 
   614  0193                     	;# 
   615  0193                     	;# 
   616  0194                     	;# 
   617  0195                     	;# 
   618  0196                     	;# 
   619  0199                     	;# 
   620  0199                     	;# 
   621  0199                     	;# 
   622  019A                     	;# 
   623  019A                     	;# 
   624  019A                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019C                     	;# 
   631  019C                     	;# 
   632  019C                     	;# 
   633  019D                     	;# 
   634  019D                     	;# 
   635  019D                     	;# 
   636  019E                     	;# 
   637  019E                     	;# 
   638  019E                     	;# 
   639  019F                     	;# 
   640  019F                     	;# 
   641  019F                     	;# 
   642  019F                     	;# 
   643  019F                     	;# 
   644  020C                     	;# 
   645  020D                     	;# 
   646  020E                     	;# 
   647  0211                     	;# 
   648  0211                     	;# 
   649  0212                     	;# 
   650  0212                     	;# 
   651  0213                     	;# 
   652  0213                     	;# 
   653  0214                     	;# 
   654  0214                     	;# 
   655  0215                     	;# 
   656  0215                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0216                     	;# 
   660  0216                     	;# 
   661  0217                     	;# 
   662  0217                     	;# 
   663  021D                     	;# 
   664  021E                     	;# 
   665  021F                     	;# 
   666  028C                     	;# 
   667  028D                     	;# 
   668  028E                     	;# 
   669  0291                     	;# 
   670  0291                     	;# 
   671  0292                     	;# 
   672  0293                     	;# 
   673  0294                     	;# 
   674  0298                     	;# 
   675  0298                     	;# 
   676  0299                     	;# 
   677  029A                     	;# 
   678  029B                     	;# 
   679  029E                     	;# 
   680  030C                     	;# 
   681  030D                     	;# 
   682  030E                     	;# 
   683  031B                     	;# 
   684  031C                     	;# 
   685  031D                     	;# 
   686  031E                     	;# 
   687  031F                     	;# 
   688  038C                     	;# 
   689  038D                     	;# 
   690  038E                     	;# 
   691  0391                     	;# 
   692  0392                     	;# 
   693  0393                     	;# 
   694  0394                     	;# 
   695  0395                     	;# 
   696  0396                     	;# 
   697  0397                     	;# 
   698  0398                     	;# 
   699  0399                     	;# 
   700  039B                     	;# 
   701  039C                     	;# 
   702  039D                     	;# 
   703  039E                     	;# 
   704  039F                     	;# 
   705  040E                     	;# 
   706  0413                     	;# 
   707  0413                     	;# 
   708  0414                     	;# 
   709  0414                     	;# 
   710  0415                     	;# 
   711  0416                     	;# 
   712  0417                     	;# 
   713  0418                     	;# 
   714  041A                     	;# 
   715  041A                     	;# 
   716  041B                     	;# 
   717  041B                     	;# 
   718  041C                     	;# 
   719  041D                     	;# 
   720  041E                     	;# 
   721  041F                     	;# 
   722  0493                     	;# 
   723  0493                     	;# 
   724  0494                     	;# 
   725  0495                     	;# 
   726  0496                     	;# 
   727  049A                     	;# 
   728  049A                     	;# 
   729  049B                     	;# 
   730  049C                     	;# 
   731  049D                     	;# 
   732  050F                     	;# 
   733  0510                     	;# 
   734  0511                     	;# 
   735  0512                     	;# 
   736  0513                     	;# 
   737  0514                     	;# 
   738  0515                     	;# 
   739  0516                     	;# 
   740  0590                     	;# 
   741  0591                     	;# 
   742  0592                     	;# 
   743  0592                     	;# 
   744  0592                     	;# 
   745  0593                     	;# 
   746  0593                     	;# 
   747  0594                     	;# 
   748  0595                     	;# 
   749  0595                     	;# 
   750  0595                     	;# 
   751  0596                     	;# 
   752  0596                     	;# 
   753  0597                     	;# 
   754  0598                     	;# 
   755  0598                     	;# 
   756  0599                     	;# 
   757  059A                     	;# 
   758  059A                     	;# 
   759  0617                     	;# 
   760  0617                     	;# 
   761  0618                     	;# 
   762  0619                     	;# 
   763  061A                     	;# 
   764  061A                     	;# 
   765  061B                     	;# 
   766  061C                     	;# 
   767  068D                     	;# 
   768  068E                     	;# 
   769  068F                     	;# 
   770  0690                     	;# 
   771  0691                     	;# 
   772  0692                     	;# 
   773  0693                     	;# 
   774  0694                     	;# 
   775  0695                     	;# 
   776  0696                     	;# 
   777  0697                     	;# 
   778  0698                     	;# 
   779  0699                     	;# 
   780  069A                     	;# 
   781  069B                     	;# 
   782  069C                     	;# 
   783  069D                     	;# 
   784  069E                     	;# 
   785  069F                     	;# 
   786  070D                     	;# 
   787  070E                     	;# 
   788  070F                     	;# 
   789  0710                     	;# 
   790  0711                     	;# 
   791  0712                     	;# 
   792  0713                     	;# 
   793  0714                     	;# 
   794  0715                     	;# 
   795  0716                     	;# 
   796  0717                     	;# 
   797  0718                     	;# 
   798  0719                     	;# 
   799  071A                     	;# 
   800  071B                     	;# 
   801  071C                     	;# 
   802  071D                     	;# 
   803  071E                     	;# 
   804  071F                     	;# 
   805  0794                     	;# 
   806  0795                     	;# 
   807  0796                     	;# 
   808  0797                     	;# 
   809  0798                     	;# 
   810  0799                     	;# 
   811  079A                     	;# 
   812  079B                     	;# 
   813  079C                     	;# 
   814  079D                     	;# 
   815  079E                     	;# 
   816  079F                     	;# 
   817  0D8E                     	;# 
   818  0D8F                     	;# 
   819  0D90                     	;# 
   820  0D91                     	;# 
   821  0D91                     	;# 
   822  0D92                     	;# 
   823  0D93                     	;# 
   824  0D93                     	;# 
   825  0D94                     	;# 
   826  0D95                     	;# 
   827  0D95                     	;# 
   828  0D96                     	;# 
   829  0D97                     	;# 
   830  0D97                     	;# 
   831  0D98                     	;# 
   832  0D99                     	;# 
   833  0D99                     	;# 
   834  0D9A                     	;# 
   835  0D9B                     	;# 
   836  0D9C                     	;# 
   837  0D9C                     	;# 
   838  0D9D                     	;# 
   839  0D9D                     	;# 
   840  0D9E                     	;# 
   841  0D9F                     	;# 
   842  0DA0                     	;# 
   843  0DA1                     	;# 
   844  0DA1                     	;# 
   845  0DA2                     	;# 
   846  0DA3                     	;# 
   847  0DA3                     	;# 
   848  0DA4                     	;# 
   849  0DA5                     	;# 
   850  0DA5                     	;# 
   851  0DA6                     	;# 
   852  0DA7                     	;# 
   853  0DA7                     	;# 
   854  0DA8                     	;# 
   855  0DA9                     	;# 
   856  0DA9                     	;# 
   857  0DAA                     	;# 
   858  0DAB                     	;# 
   859  0DAC                     	;# 
   860  0DAC                     	;# 
   861  0DAD                     	;# 
   862  0DAD                     	;# 
   863  0DAE                     	;# 
   864  0DAF                     	;# 
   865  0DB0                     	;# 
   866  0E0F                     	;# 
   867  0E10                     	;# 
   868  0E11                     	;# 
   869  0E12                     	;# 
   870  0E13                     	;# 
   871  0E14                     	;# 
   872  0E15                     	;# 
   873  0E16                     	;# 
   874  0E17                     	;# 
   875  0E19                     	;# 
   876  0E19                     	;# 
   877  0E19                     	;# 
   878  0E1A                     	;# 
   879  0E1B                     	;# 
   880  0E1C                     	;# 
   881  0E1C                     	;# 
   882  0E1C                     	;# 
   883  0E1D                     	;# 
   884  0E1E                     	;# 
   885  0E1F                     	;# 
   886  0E1F                     	;# 
   887  0E1F                     	;# 
   888  0E20                     	;# 
   889  0E21                     	;# 
   890  0E22                     	;# 
   891  0E24                     	;# 
   892  0E25                     	;# 
   893  0E28                     	;# 
   894  0E29                     	;# 
   895  0E2A                     	;# 
   896  0E2B                     	;# 
   897  0E2C                     	;# 
   898  0E2D                     	;# 
   899  0E2E                     	;# 
   900  0E2F                     	;# 
   901  0E30                     	;# 
   902  0E31                     	;# 
   903  0E32                     	;# 
   904  0E33                     	;# 
   905  0E34                     	;# 
   906  0E35                     	;# 
   907  0E90                     	;# 
   908  0E91                     	;# 
   909  0E92                     	;# 
   910  0E94                     	;# 
   911  0E95                     	;# 
   912  0E9C                     	;# 
   913  0E9D                     	;# 
   914  0E9E                     	;# 
   915  0E9F                     	;# 
   916  0EA0                     	;# 
   917  0EA1                     	;# 
   918  0EA2                     	;# 
   919  0EA3                     	;# 
   920  0EA4                     	;# 
   921  0EA5                     	;# 
   922  0EA6                     	;# 
   923  0EA7                     	;# 
   924  0F0F                     	;# 
   925  0F10                     	;# 
   926  0F11                     	;# 
   927  0F12                     	;# 
   928  0F13                     	;# 
   929  0F14                     	;# 
   930  0F15                     	;# 
   931  0F16                     	;# 
   932  0F17                     	;# 
   933  0F18                     	;# 
   934  0F19                     	;# 
   935  0F1A                     	;# 
   936  0F1B                     	;# 
   937  0F1C                     	;# 
   938  0F1D                     	;# 
   939  0F1E                     	;# 
   940  0F1F                     	;# 
   941  0F20                     	;# 
   942  0F21                     	;# 
   943  0F22                     	;# 
   944  0F23                     	;# 
   945  0F24                     	;# 
   946  0F25                     	;# 
   947  0F26                     	;# 
   948  0F27                     	;# 
   949  0F28                     	;# 
   950  0F29                     	;# 
   951  0F2A                     	;# 
   952  0F2B                     	;# 
   953  0F2C                     	;# 
   954  0F2D                     	;# 
   955  0FE4                     	;# 
   956  0FE5                     	;# 
   957  0FE6                     	;# 
   958  0FE7                     	;# 
   959  0FE8                     	;# 
   960  0FE9                     	;# 
   961  0FEA                     	;# 
   962  0FEB                     	;# 
   963  0FED                     	;# 
   964  0FEE                     	;# 
   965  0FEF                     	;# 
   966  0000                     	;# 
   967  0001                     	;# 
   968  0002                     	;# 
   969  0003                     	;# 
   970  0004                     	;# 
   971  0005                     	;# 
   972  0006                     	;# 
   973  0007                     	;# 
   974  0008                     	;# 
   975  0009                     	;# 
   976  000A                     	;# 
   977  000B                     	;# 
   978  000C                     	;# 
   979  000D                     	;# 
   980  000E                     	;# 
   981  0011                     	;# 
   982  0012                     	;# 
   983  0013                     	;# 
   984  0014                     	;# 
   985  0015                     	;# 
   986  0016                     	;# 
   987  0016                     	;# 
   988  0017                     	;# 
   989  0018                     	;# 
   990  0019                     	;# 
   991  001A                     	;# 
   992  001A                     	;# 
   993  001B                     	;# 
   994  001B                     	;# 
   995  001C                     	;# 
   996  001D                     	;# 
   997  001E                     	;# 
   998  001F                     	;# 
   999  008C                     	;# 
  1000  008D                     	;# 
  1001  008E                     	;# 
  1002  0091                     	;# 
  1003  0092                     	;# 
  1004  0093                     	;# 
  1005  0094                     	;# 
  1006  0095                     	;# 
  1007  0096                     	;# 
  1008  0097                     	;# 
  1009  0098                     	;# 
  1010  0099                     	;# 
  1011  009A                     	;# 
  1012  009B                     	;# 
  1013  009B                     	;# 
  1014  009C                     	;# 
  1015  009D                     	;# 
  1016  009E                     	;# 
  1017  009F                     	;# 
  1018  010C                     	;# 
  1019  010D                     	;# 
  1020  010E                     	;# 
  1021  010F                     	;# 
  1022  0110                     	;# 
  1023  0111                     	;# 
  1024  0112                     	;# 
  1025  0113                     	;# 
  1026  0114                     	;# 
  1027  0115                     	;# 
  1028  0116                     	;# 
  1029  0117                     	;# 
  1030  0118                     	;# 
  1031  0119                     	;# 
  1032  011A                     	;# 
  1033  011B                     	;# 
  1034  011C                     	;# 
  1035  011D                     	;# 
  1036  011E                     	;# 
  1037  011F                     	;# 
  1038  018C                     	;# 
  1039  018D                     	;# 
  1040  018E                     	;# 
  1041  0191                     	;# 
  1042  0191                     	;# 
  1043  0192                     	;# 
  1044  0193                     	;# 
  1045  0193                     	;# 
  1046  0194                     	;# 
  1047  0195                     	;# 
  1048  0196                     	;# 
  1049  0199                     	;# 
  1050  0199                     	;# 
  1051  0199                     	;# 
  1052  019A                     	;# 
  1053  019A                     	;# 
  1054  019A                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019B                     	;# 
  1058  019B                     	;# 
  1059  019B                     	;# 
  1060  019C                     	;# 
  1061  019C                     	;# 
  1062  019C                     	;# 
  1063  019D                     	;# 
  1064  019D                     	;# 
  1065  019D                     	;# 
  1066  019E                     	;# 
  1067  019E                     	;# 
  1068  019E                     	;# 
  1069  019F                     	;# 
  1070  019F                     	;# 
  1071  019F                     	;# 
  1072  019F                     	;# 
  1073  019F                     	;# 
  1074  020C                     	;# 
  1075  020D                     	;# 
  1076  020E                     	;# 
  1077  0211                     	;# 
  1078  0211                     	;# 
  1079  0212                     	;# 
  1080  0212                     	;# 
  1081  0213                     	;# 
  1082  0213                     	;# 
  1083  0214                     	;# 
  1084  0214                     	;# 
  1085  0215                     	;# 
  1086  0215                     	;# 
  1087  0215                     	;# 
  1088  0215                     	;# 
  1089  0216                     	;# 
  1090  0216                     	;# 
  1091  0217                     	;# 
  1092  0217                     	;# 
  1093  021D                     	;# 
  1094  021E                     	;# 
  1095  021F                     	;# 
  1096  028C                     	;# 
  1097  028D                     	;# 
  1098  028E                     	;# 
  1099  0291                     	;# 
  1100  0291                     	;# 
  1101  0292                     	;# 
  1102  0293                     	;# 
  1103  0294                     	;# 
  1104  0298                     	;# 
  1105  0298                     	;# 
  1106  0299                     	;# 
  1107  029A                     	;# 
  1108  029B                     	;# 
  1109  029E                     	;# 
  1110  030C                     	;# 
  1111  030D                     	;# 
  1112  030E                     	;# 
  1113  031B                     	;# 
  1114  031C                     	;# 
  1115  031D                     	;# 
  1116  031E                     	;# 
  1117  031F                     	;# 
  1118  038C                     	;# 
  1119  038D                     	;# 
  1120  038E                     	;# 
  1121  0391                     	;# 
  1122  0392                     	;# 
  1123  0393                     	;# 
  1124  0394                     	;# 
  1125  0395                     	;# 
  1126  0396                     	;# 
  1127  0397                     	;# 
  1128  0398                     	;# 
  1129  0399                     	;# 
  1130  039B                     	;# 
  1131  039C                     	;# 
  1132  039D                     	;# 
  1133  039E                     	;# 
  1134  039F                     	;# 
  1135  040E                     	;# 
  1136  0413                     	;# 
  1137  0413                     	;# 
  1138  0414                     	;# 
  1139  0414                     	;# 
  1140  0415                     	;# 
  1141  0416                     	;# 
  1142  0417                     	;# 
  1143  0418                     	;# 
  1144  041A                     	;# 
  1145  041A                     	;# 
  1146  041B                     	;# 
  1147  041B                     	;# 
  1148  041C                     	;# 
  1149  041D                     	;# 
  1150  041E                     	;# 
  1151  041F                     	;# 
  1152  0493                     	;# 
  1153  0493                     	;# 
  1154  0494                     	;# 
  1155  0495                     	;# 
  1156  0496                     	;# 
  1157  049A                     	;# 
  1158  049A                     	;# 
  1159  049B                     	;# 
  1160  049C                     	;# 
  1161  049D                     	;# 
  1162  050F                     	;# 
  1163  0510                     	;# 
  1164  0511                     	;# 
  1165  0512                     	;# 
  1166  0513                     	;# 
  1167  0514                     	;# 
  1168  0515                     	;# 
  1169  0516                     	;# 
  1170  0590                     	;# 
  1171  0591                     	;# 
  1172  0592                     	;# 
  1173  0592                     	;# 
  1174  0592                     	;# 
  1175  0593                     	;# 
  1176  0593                     	;# 
  1177  0594                     	;# 
  1178  0595                     	;# 
  1179  0595                     	;# 
  1180  0595                     	;# 
  1181  0596                     	;# 
  1182  0596                     	;# 
  1183  0597                     	;# 
  1184  0598                     	;# 
  1185  0598                     	;# 
  1186  0599                     	;# 
  1187  059A                     	;# 
  1188  059A                     	;# 
  1189  0617                     	;# 
  1190  0617                     	;# 
  1191  0618                     	;# 
  1192  0619                     	;# 
  1193  061A                     	;# 
  1194  061A                     	;# 
  1195  061B                     	;# 
  1196  061C                     	;# 
  1197  068D                     	;# 
  1198  068E                     	;# 
  1199  068F                     	;# 
  1200  0690                     	;# 
  1201  0691                     	;# 
  1202  0692                     	;# 
  1203  0693                     	;# 
  1204  0694                     	;# 
  1205  0695                     	;# 
  1206  0696                     	;# 
  1207  0697                     	;# 
  1208  0698                     	;# 
  1209  0699                     	;# 
  1210  069A                     	;# 
  1211  069B                     	;# 
  1212  069C                     	;# 
  1213  069D                     	;# 
  1214  069E                     	;# 
  1215  069F                     	;# 
  1216  070D                     	;# 
  1217  070E                     	;# 
  1218  070F                     	;# 
  1219  0710                     	;# 
  1220  0711                     	;# 
  1221  0712                     	;# 
  1222  0713                     	;# 
  1223  0714                     	;# 
  1224  0715                     	;# 
  1225  0716                     	;# 
  1226  0717                     	;# 
  1227  0718                     	;# 
  1228  0719                     	;# 
  1229  071A                     	;# 
  1230  071B                     	;# 
  1231  071C                     	;# 
  1232  071D                     	;# 
  1233  071E                     	;# 
  1234  071F                     	;# 
  1235  0794                     	;# 
  1236  0795                     	;# 
  1237  0796                     	;# 
  1238  0797                     	;# 
  1239  0798                     	;# 
  1240  0799                     	;# 
  1241  079A                     	;# 
  1242  079B                     	;# 
  1243  079C                     	;# 
  1244  079D                     	;# 
  1245  079E                     	;# 
  1246  079F                     	;# 
  1247  0D8E                     	;# 
  1248  0D8F                     	;# 
  1249  0D90                     	;# 
  1250  0D91                     	;# 
  1251  0D91                     	;# 
  1252  0D92                     	;# 
  1253  0D93                     	;# 
  1254  0D93                     	;# 
  1255  0D94                     	;# 
  1256  0D95                     	;# 
  1257  0D95                     	;# 
  1258  0D96                     	;# 
  1259  0D97                     	;# 
  1260  0D97                     	;# 
  1261  0D98                     	;# 
  1262  0D99                     	;# 
  1263  0D99                     	;# 
  1264  0D9A                     	;# 
  1265  0D9B                     	;# 
  1266  0D9C                     	;# 
  1267  0D9C                     	;# 
  1268  0D9D                     	;# 
  1269  0D9D                     	;# 
  1270  0D9E                     	;# 
  1271  0D9F                     	;# 
  1272  0DA0                     	;# 
  1273  0DA1                     	;# 
  1274  0DA1                     	;# 
  1275  0DA2                     	;# 
  1276  0DA3                     	;# 
  1277  0DA3                     	;# 
  1278  0DA4                     	;# 
  1279  0DA5                     	;# 
  1280  0DA5                     	;# 
  1281  0DA6                     	;# 
  1282  0DA7                     	;# 
  1283  0DA7                     	;# 
  1284  0DA8                     	;# 
  1285  0DA9                     	;# 
  1286  0DA9                     	;# 
  1287  0DAA                     	;# 
  1288  0DAB                     	;# 
  1289  0DAC                     	;# 
  1290  0DAC                     	;# 
  1291  0DAD                     	;# 
  1292  0DAD                     	;# 
  1293  0DAE                     	;# 
  1294  0DAF                     	;# 
  1295  0DB0                     	;# 
  1296  0E0F                     	;# 
  1297  0E10                     	;# 
  1298  0E11                     	;# 
  1299  0E12                     	;# 
  1300  0E13                     	;# 
  1301  0E14                     	;# 
  1302  0E15                     	;# 
  1303  0E16                     	;# 
  1304  0E17                     	;# 
  1305  0E19                     	;# 
  1306  0E19                     	;# 
  1307  0E19                     	;# 
  1308  0E1A                     	;# 
  1309  0E1B                     	;# 
  1310  0E1C                     	;# 
  1311  0E1C                     	;# 
  1312  0E1C                     	;# 
  1313  0E1D                     	;# 
  1314  0E1E                     	;# 
  1315  0E1F                     	;# 
  1316  0E1F                     	;# 
  1317  0E1F                     	;# 
  1318  0E20                     	;# 
  1319  0E21                     	;# 
  1320  0E22                     	;# 
  1321  0E24                     	;# 
  1322  0E25                     	;# 
  1323  0E28                     	;# 
  1324  0E29                     	;# 
  1325  0E2A                     	;# 
  1326  0E2B                     	;# 
  1327  0E2C                     	;# 
  1328  0E2D                     	;# 
  1329  0E2E                     	;# 
  1330  0E2F                     	;# 
  1331  0E30                     	;# 
  1332  0E31                     	;# 
  1333  0E32                     	;# 
  1334  0E33                     	;# 
  1335  0E34                     	;# 
  1336  0E35                     	;# 
  1337  0E90                     	;# 
  1338  0E91                     	;# 
  1339  0E92                     	;# 
  1340  0E94                     	;# 
  1341  0E95                     	;# 
  1342  0E9C                     	;# 
  1343  0E9D                     	;# 
  1344  0E9E                     	;# 
  1345  0E9F                     	;# 
  1346  0EA0                     	;# 
  1347  0EA1                     	;# 
  1348  0EA2                     	;# 
  1349  0EA3                     	;# 
  1350  0EA4                     	;# 
  1351  0EA5                     	;# 
  1352  0EA6                     	;# 
  1353  0EA7                     	;# 
  1354  0F0F                     	;# 
  1355  0F10                     	;# 
  1356  0F11                     	;# 
  1357  0F12                     	;# 
  1358  0F13                     	;# 
  1359  0F14                     	;# 
  1360  0F15                     	;# 
  1361  0F16                     	;# 
  1362  0F17                     	;# 
  1363  0F18                     	;# 
  1364  0F19                     	;# 
  1365  0F1A                     	;# 
  1366  0F1B                     	;# 
  1367  0F1C                     	;# 
  1368  0F1D                     	;# 
  1369  0F1E                     	;# 
  1370  0F1F                     	;# 
  1371  0F20                     	;# 
  1372  0F21                     	;# 
  1373  0F22                     	;# 
  1374  0F23                     	;# 
  1375  0F24                     	;# 
  1376  0F25                     	;# 
  1377  0F26                     	;# 
  1378  0F27                     	;# 
  1379  0F28                     	;# 
  1380  0F29                     	;# 
  1381  0F2A                     	;# 
  1382  0F2B                     	;# 
  1383  0F2C                     	;# 
  1384  0F2D                     	;# 
  1385  0FE4                     	;# 
  1386  0FE5                     	;# 
  1387  0FE6                     	;# 
  1388  0FE7                     	;# 
  1389  0FE8                     	;# 
  1390  0FE9                     	;# 
  1391  0FEA                     	;# 
  1392  0FEB                     	;# 
  1393  0FED                     	;# 
  1394  0FEE                     	;# 
  1395  0FEF                     	;# 
  1396  0000                     	;# 
  1397  0001                     	;# 
  1398  0002                     	;# 
  1399  0003                     	;# 
  1400  0004                     	;# 
  1401  0005                     	;# 
  1402  0006                     	;# 
  1403  0007                     	;# 
  1404  0008                     	;# 
  1405  0009                     	;# 
  1406  000A                     	;# 
  1407  000B                     	;# 
  1408  000C                     	;# 
  1409  000D                     	;# 
  1410  000E                     	;# 
  1411  0011                     	;# 
  1412  0012                     	;# 
  1413  0013                     	;# 
  1414  0014                     	;# 
  1415  0015                     	;# 
  1416  0016                     	;# 
  1417  0016                     	;# 
  1418  0017                     	;# 
  1419  0018                     	;# 
  1420  0019                     	;# 
  1421  001A                     	;# 
  1422  001A                     	;# 
  1423  001B                     	;# 
  1424  001B                     	;# 
  1425  001C                     	;# 
  1426  001D                     	;# 
  1427  001E                     	;# 
  1428  001F                     	;# 
  1429  008C                     	;# 
  1430  008D                     	;# 
  1431  008E                     	;# 
  1432  0091                     	;# 
  1433  0092                     	;# 
  1434  0093                     	;# 
  1435  0094                     	;# 
  1436  0095                     	;# 
  1437  0096                     	;# 
  1438  0097                     	;# 
  1439  0098                     	;# 
  1440  0099                     	;# 
  1441  009A                     	;# 
  1442  009B                     	;# 
  1443  009B                     	;# 
  1444  009C                     	;# 
  1445  009D                     	;# 
  1446  009E                     	;# 
  1447  009F                     	;# 
  1448  010C                     	;# 
  1449  010D                     	;# 
  1450  010E                     	;# 
  1451  010F                     	;# 
  1452  0110                     	;# 
  1453  0111                     	;# 
  1454  0112                     	;# 
  1455  0113                     	;# 
  1456  0114                     	;# 
  1457  0115                     	;# 
  1458  0116                     	;# 
  1459  0117                     	;# 
  1460  0118                     	;# 
  1461  0119                     	;# 
  1462  011A                     	;# 
  1463  011B                     	;# 
  1464  011C                     	;# 
  1465  011D                     	;# 
  1466  011E                     	;# 
  1467  011F                     	;# 
  1468  018C                     	;# 
  1469  018D                     	;# 
  1470  018E                     	;# 
  1471  0191                     	;# 
  1472  0191                     	;# 
  1473  0192                     	;# 
  1474  0193                     	;# 
  1475  0193                     	;# 
  1476  0194                     	;# 
  1477  0195                     	;# 
  1478  0196                     	;# 
  1479  0199                     	;# 
  1480  0199                     	;# 
  1481  0199                     	;# 
  1482  019A                     	;# 
  1483  019A                     	;# 
  1484  019A                     	;# 
  1485  019B                     	;# 
  1486  019B                     	;# 
  1487  019B                     	;# 
  1488  019B                     	;# 
  1489  019B                     	;# 
  1490  019C                     	;# 
  1491  019C                     	;# 
  1492  019C                     	;# 
  1493  019D                     	;# 
  1494  019D                     	;# 
  1495  019D                     	;# 
  1496  019E                     	;# 
  1497  019E                     	;# 
  1498  019E                     	;# 
  1499  019F                     	;# 
  1500  019F                     	;# 
  1501  019F                     	;# 
  1502  019F                     	;# 
  1503  019F                     	;# 
  1504  020C                     	;# 
  1505  020D                     	;# 
  1506  020E                     	;# 
  1507  0211                     	;# 
  1508  0211                     	;# 
  1509  0212                     	;# 
  1510  0212                     	;# 
  1511  0213                     	;# 
  1512  0213                     	;# 
  1513  0214                     	;# 
  1514  0214                     	;# 
  1515  0215                     	;# 
  1516  0215                     	;# 
  1517  0215                     	;# 
  1518  0215                     	;# 
  1519  0216                     	;# 
  1520  0216                     	;# 
  1521  0217                     	;# 
  1522  0217                     	;# 
  1523  021D                     	;# 
  1524  021E                     	;# 
  1525  021F                     	;# 
  1526  028C                     	;# 
  1527  028D                     	;# 
  1528  028E                     	;# 
  1529  0291                     	;# 
  1530  0291                     	;# 
  1531  0292                     	;# 
  1532  0293                     	;# 
  1533  0294                     	;# 
  1534  0298                     	;# 
  1535  0298                     	;# 
  1536  0299                     	;# 
  1537  029A                     	;# 
  1538  029B                     	;# 
  1539  029E                     	;# 
  1540  030C                     	;# 
  1541  030D                     	;# 
  1542  030E                     	;# 
  1543  031B                     	;# 
  1544  031C                     	;# 
  1545  031D                     	;# 
  1546  031E                     	;# 
  1547  031F                     	;# 
  1548  038C                     	;# 
  1549  038D                     	;# 
  1550  038E                     	;# 
  1551  0391                     	;# 
  1552  0392                     	;# 
  1553  0393                     	;# 
  1554  0394                     	;# 
  1555  0395                     	;# 
  1556  0396                     	;# 
  1557  0397                     	;# 
  1558  0398                     	;# 
  1559  0399                     	;# 
  1560  039B                     	;# 
  1561  039C                     	;# 
  1562  039D                     	;# 
  1563  039E                     	;# 
  1564  039F                     	;# 
  1565  040E                     	;# 
  1566  0413                     	;# 
  1567  0413                     	;# 
  1568  0414                     	;# 
  1569  0414                     	;# 
  1570  0415                     	;# 
  1571  0416                     	;# 
  1572  0417                     	;# 
  1573  0418                     	;# 
  1574  041A                     	;# 
  1575  041A                     	;# 
  1576  041B                     	;# 
  1577  041B                     	;# 
  1578  041C                     	;# 
  1579  041D                     	;# 
  1580  041E                     	;# 
  1581  041F                     	;# 
  1582  0493                     	;# 
  1583  0493                     	;# 
  1584  0494                     	;# 
  1585  0495                     	;# 
  1586  0496                     	;# 
  1587  049A                     	;# 
  1588  049A                     	;# 
  1589  049B                     	;# 
  1590  049C                     	;# 
  1591  049D                     	;# 
  1592  050F                     	;# 
  1593  0510                     	;# 
  1594  0511                     	;# 
  1595  0512                     	;# 
  1596  0513                     	;# 
  1597  0514                     	;# 
  1598  0515                     	;# 
  1599  0516                     	;# 
  1600  0590                     	;# 
  1601  0591                     	;# 
  1602  0592                     	;# 
  1603  0592                     	;# 
  1604  0592                     	;# 
  1605  0593                     	;# 
  1606  0593                     	;# 
  1607  0594                     	;# 
  1608  0595                     	;# 
  1609  0595                     	;# 
  1610  0595                     	;# 
  1611  0596                     	;# 
  1612  0596                     	;# 
  1613  0597                     	;# 
  1614  0598                     	;# 
  1615  0598                     	;# 
  1616  0599                     	;# 
  1617  059A                     	;# 
  1618  059A                     	;# 
  1619  0617                     	;# 
  1620  0617                     	;# 
  1621  0618                     	;# 
  1622  0619                     	;# 
  1623  061A                     	;# 
  1624  061A                     	;# 
  1625  061B                     	;# 
  1626  061C                     	;# 
  1627  068D                     	;# 
  1628  068E                     	;# 
  1629  068F                     	;# 
  1630  0690                     	;# 
  1631  0691                     	;# 
  1632  0692                     	;# 
  1633  0693                     	;# 
  1634  0694                     	;# 
  1635  0695                     	;# 
  1636  0696                     	;# 
  1637  0697                     	;# 
  1638  0698                     	;# 
  1639  0699                     	;# 
  1640  069A                     	;# 
  1641  069B                     	;# 
  1642  069C                     	;# 
  1643  069D                     	;# 
  1644  069E                     	;# 
  1645  069F                     	;# 
  1646  070D                     	;# 
  1647  070E                     	;# 
  1648  070F                     	;# 
  1649  0710                     	;# 
  1650  0711                     	;# 
  1651  0712                     	;# 
  1652  0713                     	;# 
  1653  0714                     	;# 
  1654  0715                     	;# 
  1655  0716                     	;# 
  1656  0717                     	;# 
  1657  0718                     	;# 
  1658  0719                     	;# 
  1659  071A                     	;# 
  1660  071B                     	;# 
  1661  071C                     	;# 
  1662  071D                     	;# 
  1663  071E                     	;# 
  1664  071F                     	;# 
  1665  0794                     	;# 
  1666  0795                     	;# 
  1667  0796                     	;# 
  1668  0797                     	;# 
  1669  0798                     	;# 
  1670  0799                     	;# 
  1671  079A                     	;# 
  1672  079B                     	;# 
  1673  079C                     	;# 
  1674  079D                     	;# 
  1675  079E                     	;# 
  1676  079F                     	;# 
  1677  0D8E                     	;# 
  1678  0D8F                     	;# 
  1679  0D90                     	;# 
  1680  0D91                     	;# 
  1681  0D91                     	;# 
  1682  0D92                     	;# 
  1683  0D93                     	;# 
  1684  0D93                     	;# 
  1685  0D94                     	;# 
  1686  0D95                     	;# 
  1687  0D95                     	;# 
  1688  0D96                     	;# 
  1689  0D97                     	;# 
  1690  0D97                     	;# 
  1691  0D98                     	;# 
  1692  0D99                     	;# 
  1693  0D99                     	;# 
  1694  0D9A                     	;# 
  1695  0D9B                     	;# 
  1696  0D9C                     	;# 
  1697  0D9C                     	;# 
  1698  0D9D                     	;# 
  1699  0D9D                     	;# 
  1700  0D9E                     	;# 
  1701  0D9F                     	;# 
  1702  0DA0                     	;# 
  1703  0DA1                     	;# 
  1704  0DA1                     	;# 
  1705  0DA2                     	;# 
  1706  0DA3                     	;# 
  1707  0DA3                     	;# 
  1708  0DA4                     	;# 
  1709  0DA5                     	;# 
  1710  0DA5                     	;# 
  1711  0DA6                     	;# 
  1712  0DA7                     	;# 
  1713  0DA7                     	;# 
  1714  0DA8                     	;# 
  1715  0DA9                     	;# 
  1716  0DA9                     	;# 
  1717  0DAA                     	;# 
  1718  0DAB                     	;# 
  1719  0DAC                     	;# 
  1720  0DAC                     	;# 
  1721  0DAD                     	;# 
  1722  0DAD                     	;# 
  1723  0DAE                     	;# 
  1724  0DAF                     	;# 
  1725  0DB0                     	;# 
  1726  0E0F                     	;# 
  1727  0E10                     	;# 
  1728  0E11                     	;# 
  1729  0E12                     	;# 
  1730  0E13                     	;# 
  1731  0E14                     	;# 
  1732  0E15                     	;# 
  1733  0E16                     	;# 
  1734  0E17                     	;# 
  1735  0E19                     	;# 
  1736  0E19                     	;# 
  1737  0E19                     	;# 
  1738  0E1A                     	;# 
  1739  0E1B                     	;# 
  1740  0E1C                     	;# 
  1741  0E1C                     	;# 
  1742  0E1C                     	;# 
  1743  0E1D                     	;# 
  1744  0E1E                     	;# 
  1745  0E1F                     	;# 
  1746  0E1F                     	;# 
  1747  0E1F                     	;# 
  1748  0E20                     	;# 
  1749  0E21                     	;# 
  1750  0E22                     	;# 
  1751  0E24                     	;# 
  1752  0E25                     	;# 
  1753  0E28                     	;# 
  1754  0E29                     	;# 
  1755  0E2A                     	;# 
  1756  0E2B                     	;# 
  1757  0E2C                     	;# 
  1758  0E2D                     	;# 
  1759  0E2E                     	;# 
  1760  0E2F                     	;# 
  1761  0E30                     	;# 
  1762  0E31                     	;# 
  1763  0E32                     	;# 
  1764  0E33                     	;# 
  1765  0E34                     	;# 
  1766  0E35                     	;# 
  1767  0E90                     	;# 
  1768  0E91                     	;# 
  1769  0E92                     	;# 
  1770  0E94                     	;# 
  1771  0E95                     	;# 
  1772  0E9C                     	;# 
  1773  0E9D                     	;# 
  1774  0E9E                     	;# 
  1775  0E9F                     	;# 
  1776  0EA0                     	;# 
  1777  0EA1                     	;# 
  1778  0EA2                     	;# 
  1779  0EA3                     	;# 
  1780  0EA4                     	;# 
  1781  0EA5                     	;# 
  1782  0EA6                     	;# 
  1783  0EA7                     	;# 
  1784  0F0F                     	;# 
  1785  0F10                     	;# 
  1786  0F11                     	;# 
  1787  0F12                     	;# 
  1788  0F13                     	;# 
  1789  0F14                     	;# 
  1790  0F15                     	;# 
  1791  0F16                     	;# 
  1792  0F17                     	;# 
  1793  0F18                     	;# 
  1794  0F19                     	;# 
  1795  0F1A                     	;# 
  1796  0F1B                     	;# 
  1797  0F1C                     	;# 
  1798  0F1D                     	;# 
  1799  0F1E                     	;# 
  1800  0F1F                     	;# 
  1801  0F20                     	;# 
  1802  0F21                     	;# 
  1803  0F22                     	;# 
  1804  0F23                     	;# 
  1805  0F24                     	;# 
  1806  0F25                     	;# 
  1807  0F26                     	;# 
  1808  0F27                     	;# 
  1809  0F28                     	;# 
  1810  0F29                     	;# 
  1811  0F2A                     	;# 
  1812  0F2B                     	;# 
  1813  0F2C                     	;# 
  1814  0F2D                     	;# 
  1815  0FE4                     	;# 
  1816  0FE5                     	;# 
  1817  0FE6                     	;# 
  1818  0FE7                     	;# 
  1819  0FE8                     	;# 
  1820  0FE9                     	;# 
  1821  0FEA                     	;# 
  1822  0FEB                     	;# 
  1823  0FED                     	;# 
  1824  0FEE                     	;# 
  1825  0FEF                     	;# 
  1826  0000                     	;# 
  1827  0001                     	;# 
  1828  0002                     	;# 
  1829  0003                     	;# 
  1830  0004                     	;# 
  1831  0005                     	;# 
  1832  0006                     	;# 
  1833  0007                     	;# 
  1834  0008                     	;# 
  1835  0009                     	;# 
  1836  000A                     	;# 
  1837  000B                     	;# 
  1838  000C                     	;# 
  1839  000D                     	;# 
  1840  000E                     	;# 
  1841  0011                     	;# 
  1842  0012                     	;# 
  1843  0013                     	;# 
  1844  0014                     	;# 
  1845  0015                     	;# 
  1846  0016                     	;# 
  1847  0016                     	;# 
  1848  0017                     	;# 
  1849  0018                     	;# 
  1850  0019                     	;# 
  1851  001A                     	;# 
  1852  001A                     	;# 
  1853  001B                     	;# 
  1854  001B                     	;# 
  1855  001C                     	;# 
  1856  001D                     	;# 
  1857  001E                     	;# 
  1858  001F                     	;# 
  1859  008C                     	;# 
  1860  008D                     	;# 
  1861  008E                     	;# 
  1862  0091                     	;# 
  1863  0092                     	;# 
  1864  0093                     	;# 
  1865  0094                     	;# 
  1866  0095                     	;# 
  1867  0096                     	;# 
  1868  0097                     	;# 
  1869  0098                     	;# 
  1870  0099                     	;# 
  1871  009A                     	;# 
  1872  009B                     	;# 
  1873  009B                     	;# 
  1874  009C                     	;# 
  1875  009D                     	;# 
  1876  009E                     	;# 
  1877  009F                     	;# 
  1878  010C                     	;# 
  1879  010D                     	;# 
  1880  010E                     	;# 
  1881  010F                     	;# 
  1882  0110                     	;# 
  1883  0111                     	;# 
  1884  0112                     	;# 
  1885  0113                     	;# 
  1886  0114                     	;# 
  1887  0115                     	;# 
  1888  0116                     	;# 
  1889  0117                     	;# 
  1890  0118                     	;# 
  1891  0119                     	;# 
  1892  011A                     	;# 
  1893  011B                     	;# 
  1894  011C                     	;# 
  1895  011D                     	;# 
  1896  011E                     	;# 
  1897  011F                     	;# 
  1898  018C                     	;# 
  1899  018D                     	;# 
  1900  018E                     	;# 
  1901  0191                     	;# 
  1902  0191                     	;# 
  1903  0192                     	;# 
  1904  0193                     	;# 
  1905  0193                     	;# 
  1906  0194                     	;# 
  1907  0195                     	;# 
  1908  0196                     	;# 
  1909  0199                     	;# 
  1910  0199                     	;# 
  1911  0199                     	;# 
  1912  019A                     	;# 
  1913  019A                     	;# 
  1914  019A                     	;# 
  1915  019B                     	;# 
  1916  019B                     	;# 
  1917  019B                     	;# 
  1918  019B                     	;# 
  1919  019B                     	;# 
  1920  019C                     	;# 
  1921  019C                     	;# 
  1922  019C                     	;# 
  1923  019D                     	;# 
  1924  019D                     	;# 
  1925  019D                     	;# 
  1926  019E                     	;# 
  1927  019E                     	;# 
  1928  019E                     	;# 
  1929  019F                     	;# 
  1930  019F                     	;# 
  1931  019F                     	;# 
  1932  019F                     	;# 
  1933  019F                     	;# 
  1934  020C                     	;# 
  1935  020D                     	;# 
  1936  020E                     	;# 
  1937  0211                     	;# 
  1938  0211                     	;# 
  1939  0212                     	;# 
  1940  0212                     	;# 
  1941  0213                     	;# 
  1942  0213                     	;# 
  1943  0214                     	;# 
  1944  0214                     	;# 
  1945  0215                     	;# 
  1946  0215                     	;# 
  1947  0215                     	;# 
  1948  0215                     	;# 
  1949  0216                     	;# 
  1950  0216                     	;# 
  1951  0217                     	;# 
  1952  0217                     	;# 
  1953  021D                     	;# 
  1954  021E                     	;# 
  1955  021F                     	;# 
  1956  028C                     	;# 
  1957  028D                     	;# 
  1958  028E                     	;# 
  1959  0291                     	;# 
  1960  0291                     	;# 
  1961  0292                     	;# 
  1962  0293                     	;# 
  1963  0294                     	;# 
  1964  0298                     	;# 
  1965  0298                     	;# 
  1966  0299                     	;# 
  1967  029A                     	;# 
  1968  029B                     	;# 
  1969  029E                     	;# 
  1970  030C                     	;# 
  1971  030D                     	;# 
  1972  030E                     	;# 
  1973  031B                     	;# 
  1974  031C                     	;# 
  1975  031D                     	;# 
  1976  031E                     	;# 
  1977  031F                     	;# 
  1978  038C                     	;# 
  1979  038D                     	;# 
  1980  038E                     	;# 
  1981  0391                     	;# 
  1982  0392                     	;# 
  1983  0393                     	;# 
  1984  0394                     	;# 
  1985  0395                     	;# 
  1986  0396                     	;# 
  1987  0397                     	;# 
  1988  0398                     	;# 
  1989  0399                     	;# 
  1990  039B                     	;# 
  1991  039C                     	;# 
  1992  039D                     	;# 
  1993  039E                     	;# 
  1994  039F                     	;# 
  1995  040E                     	;# 
  1996  0413                     	;# 
  1997  0413                     	;# 
  1998  0414                     	;# 
  1999  0414                     	;# 
  2000  0415                     	;# 
  2001  0416                     	;# 
  2002  0417                     	;# 
  2003  0418                     	;# 
  2004  041A                     	;# 
  2005  041A                     	;# 
  2006  041B                     	;# 
  2007  041B                     	;# 
  2008  041C                     	;# 
  2009  041D                     	;# 
  2010  041E                     	;# 
  2011  041F                     	;# 
  2012  0493                     	;# 
  2013  0493                     	;# 
  2014  0494                     	;# 
  2015  0495                     	;# 
  2016  0496                     	;# 
  2017  049A                     	;# 
  2018  049A                     	;# 
  2019  049B                     	;# 
  2020  049C                     	;# 
  2021  049D                     	;# 
  2022  050F                     	;# 
  2023  0510                     	;# 
  2024  0511                     	;# 
  2025  0512                     	;# 
  2026  0513                     	;# 
  2027  0514                     	;# 
  2028  0515                     	;# 
  2029  0516                     	;# 
  2030  0590                     	;# 
  2031  0591                     	;# 
  2032  0592                     	;# 
  2033  0592                     	;# 
  2034  0592                     	;# 
  2035  0593                     	;# 
  2036  0593                     	;# 
  2037  0594                     	;# 
  2038  0595                     	;# 
  2039  0595                     	;# 
  2040  0595                     	;# 
  2041  0596                     	;# 
  2042  0596                     	;# 
  2043  0597                     	;# 
  2044  0598                     	;# 
  2045  0598                     	;# 
  2046  0599                     	;# 
  2047  059A                     	;# 
  2048  059A                     	;# 
  2049  0617                     	;# 
  2050  0617                     	;# 
  2051  0618                     	;# 
  2052  0619                     	;# 
  2053  061A                     	;# 
  2054  061A                     	;# 
  2055  061B                     	;# 
  2056  061C                     	;# 
  2057  068D                     	;# 
  2058  068E                     	;# 
  2059  068F                     	;# 
  2060  0690                     	;# 
  2061  0691                     	;# 
  2062  0692                     	;# 
  2063  0693                     	;# 
  2064  0694                     	;# 
  2065  0695                     	;# 
  2066  0696                     	;# 
  2067  0697                     	;# 
  2068  0698                     	;# 
  2069  0699                     	;# 
  2070  069A                     	;# 
  2071  069B                     	;# 
  2072  069C                     	;# 
  2073  069D                     	;# 
  2074  069E                     	;# 
  2075  069F                     	;# 
  2076  070D                     	;# 
  2077  070E                     	;# 
  2078  070F                     	;# 
  2079  0710                     	;# 
  2080  0711                     	;# 
  2081  0712                     	;# 
  2082  0713                     	;# 
  2083  0714                     	;# 
  2084  0715                     	;# 
  2085  0716                     	;# 
  2086  0717                     	;# 
  2087  0718                     	;# 
  2088  0719                     	;# 
  2089  071A                     	;# 
  2090  071B                     	;# 
  2091  071C                     	;# 
  2092  071D                     	;# 
  2093  071E                     	;# 
  2094  071F                     	;# 
  2095  0794                     	;# 
  2096  0795                     	;# 
  2097  0796                     	;# 
  2098  0797                     	;# 
  2099  0798                     	;# 
  2100  0799                     	;# 
  2101  079A                     	;# 
  2102  079B                     	;# 
  2103  079C                     	;# 
  2104  079D                     	;# 
  2105  079E                     	;# 
  2106  079F                     	;# 
  2107  0D8E                     	;# 
  2108  0D8F                     	;# 
  2109  0D90                     	;# 
  2110  0D91                     	;# 
  2111  0D91                     	;# 
  2112  0D92                     	;# 
  2113  0D93                     	;# 
  2114  0D93                     	;# 
  2115  0D94                     	;# 
  2116  0D95                     	;# 
  2117  0D95                     	;# 
  2118  0D96                     	;# 
  2119  0D97                     	;# 
  2120  0D97                     	;# 
  2121  0D98                     	;# 
  2122  0D99                     	;# 
  2123  0D99                     	;# 
  2124  0D9A                     	;# 
  2125  0D9B                     	;# 
  2126  0D9C                     	;# 
  2127  0D9C                     	;# 
  2128  0D9D                     	;# 
  2129  0D9D                     	;# 
  2130  0D9E                     	;# 
  2131  0D9F                     	;# 
  2132  0DA0                     	;# 
  2133  0DA1                     	;# 
  2134  0DA1                     	;# 
  2135  0DA2                     	;# 
  2136  0DA3                     	;# 
  2137  0DA3                     	;# 
  2138  0DA4                     	;# 
  2139  0DA5                     	;# 
  2140  0DA5                     	;# 
  2141  0DA6                     	;# 
  2142  0DA7                     	;# 
  2143  0DA7                     	;# 
  2144  0DA8                     	;# 
  2145  0DA9                     	;# 
  2146  0DA9                     	;# 
  2147  0DAA                     	;# 
  2148  0DAB                     	;# 
  2149  0DAC                     	;# 
  2150  0DAC                     	;# 
  2151  0DAD                     	;# 
  2152  0DAD                     	;# 
  2153  0DAE                     	;# 
  2154  0DAF                     	;# 
  2155  0DB0                     	;# 
  2156  0E0F                     	;# 
  2157  0E10                     	;# 
  2158  0E11                     	;# 
  2159  0E12                     	;# 
  2160  0E13                     	;# 
  2161  0E14                     	;# 
  2162  0E15                     	;# 
  2163  0E16                     	;# 
  2164  0E17                     	;# 
  2165  0E19                     	;# 
  2166  0E19                     	;# 
  2167  0E19                     	;# 
  2168  0E1A                     	;# 
  2169  0E1B                     	;# 
  2170  0E1C                     	;# 
  2171  0E1C                     	;# 
  2172  0E1C                     	;# 
  2173  0E1D                     	;# 
  2174  0E1E                     	;# 
  2175  0E1F                     	;# 
  2176  0E1F                     	;# 
  2177  0E1F                     	;# 
  2178  0E20                     	;# 
  2179  0E21                     	;# 
  2180  0E22                     	;# 
  2181  0E24                     	;# 
  2182  0E25                     	;# 
  2183  0E28                     	;# 
  2184  0E29                     	;# 
  2185  0E2A                     	;# 
  2186  0E2B                     	;# 
  2187  0E2C                     	;# 
  2188  0E2D                     	;# 
  2189  0E2E                     	;# 
  2190  0E2F                     	;# 
  2191  0E30                     	;# 
  2192  0E31                     	;# 
  2193  0E32                     	;# 
  2194  0E33                     	;# 
  2195  0E34                     	;# 
  2196  0E35                     	;# 
  2197  0E90                     	;# 
  2198  0E91                     	;# 
  2199  0E92                     	;# 
  2200  0E94                     	;# 
  2201  0E95                     	;# 
  2202  0E9C                     	;# 
  2203  0E9D                     	;# 
  2204  0E9E                     	;# 
  2205  0E9F                     	;# 
  2206  0EA0                     	;# 
  2207  0EA1                     	;# 
  2208  0EA2                     	;# 
  2209  0EA3                     	;# 
  2210  0EA4                     	;# 
  2211  0EA5                     	;# 
  2212  0EA6                     	;# 
  2213  0EA7                     	;# 
  2214  0F0F                     	;# 
  2215  0F10                     	;# 
  2216  0F11                     	;# 
  2217  0F12                     	;# 
  2218  0F13                     	;# 
  2219  0F14                     	;# 
  2220  0F15                     	;# 
  2221  0F16                     	;# 
  2222  0F17                     	;# 
  2223  0F18                     	;# 
  2224  0F19                     	;# 
  2225  0F1A                     	;# 
  2226  0F1B                     	;# 
  2227  0F1C                     	;# 
  2228  0F1D                     	;# 
  2229  0F1E                     	;# 
  2230  0F1F                     	;# 
  2231  0F20                     	;# 
  2232  0F21                     	;# 
  2233  0F22                     	;# 
  2234  0F23                     	;# 
  2235  0F24                     	;# 
  2236  0F25                     	;# 
  2237  0F26                     	;# 
  2238  0F27                     	;# 
  2239  0F28                     	;# 
  2240  0F29                     	;# 
  2241  0F2A                     	;# 
  2242  0F2B                     	;# 
  2243  0F2C                     	;# 
  2244  0F2D                     	;# 
  2245  0FE4                     	;# 
  2246  0FE5                     	;# 
  2247  0FE6                     	;# 
  2248  0FE7                     	;# 
  2249  0FE8                     	;# 
  2250  0FE9                     	;# 
  2251  0FEA                     	;# 
  2252  0FEB                     	;# 
  2253  0FED                     	;# 
  2254  0FEE                     	;# 
  2255  0FEF                     	;# 
  2256  0000                     	;# 
  2257  0001                     	;# 
  2258  0002                     	;# 
  2259  0003                     	;# 
  2260  0004                     	;# 
  2261  0005                     	;# 
  2262  0006                     	;# 
  2263  0007                     	;# 
  2264  0008                     	;# 
  2265  0009                     	;# 
  2266  000A                     	;# 
  2267  000B                     	;# 
  2268  000C                     	;# 
  2269  000D                     	;# 
  2270  000E                     	;# 
  2271  0011                     	;# 
  2272  0012                     	;# 
  2273  0013                     	;# 
  2274  0014                     	;# 
  2275  0015                     	;# 
  2276  0016                     	;# 
  2277  0016                     	;# 
  2278  0017                     	;# 
  2279  0018                     	;# 
  2280  0019                     	;# 
  2281  001A                     	;# 
  2282  001A                     	;# 
  2283  001B                     	;# 
  2284  001B                     	;# 
  2285  001C                     	;# 
  2286  001D                     	;# 
  2287  001E                     	;# 
  2288  001F                     	;# 
  2289  008C                     	;# 
  2290  008D                     	;# 
  2291  008E                     	;# 
  2292  0091                     	;# 
  2293  0092                     	;# 
  2294  0093                     	;# 
  2295  0094                     	;# 
  2296  0095                     	;# 
  2297  0096                     	;# 
  2298  0097                     	;# 
  2299  0098                     	;# 
  2300  0099                     	;# 
  2301  009A                     	;# 
  2302  009B                     	;# 
  2303  009B                     	;# 
  2304  009C                     	;# 
  2305  009D                     	;# 
  2306  009E                     	;# 
  2307  009F                     	;# 
  2308  010C                     	;# 
  2309  010D                     	;# 
  2310  010E                     	;# 
  2311  010F                     	;# 
  2312  0110                     	;# 
  2313  0111                     	;# 
  2314  0112                     	;# 
  2315  0113                     	;# 
  2316  0114                     	;# 
  2317  0115                     	;# 
  2318  0116                     	;# 
  2319  0117                     	;# 
  2320  0118                     	;# 
  2321  0119                     	;# 
  2322  011A                     	;# 
  2323  011B                     	;# 
  2324  011C                     	;# 
  2325  011D                     	;# 
  2326  011E                     	;# 
  2327  011F                     	;# 
  2328  018C                     	;# 
  2329  018D                     	;# 
  2330  018E                     	;# 
  2331  0191                     	;# 
  2332  0191                     	;# 
  2333  0192                     	;# 
  2334  0193                     	;# 
  2335  0193                     	;# 
  2336  0194                     	;# 
  2337  0195                     	;# 
  2338  0196                     	;# 
  2339  0199                     	;# 
  2340  0199                     	;# 
  2341  0199                     	;# 
  2342  019A                     	;# 
  2343  019A                     	;# 
  2344  019A                     	;# 
  2345  019B                     	;# 
  2346  019B                     	;# 
  2347  019B                     	;# 
  2348  019B                     	;# 
  2349  019B                     	;# 
  2350  019C                     	;# 
  2351  019C                     	;# 
  2352  019C                     	;# 
  2353  019D                     	;# 
  2354  019D                     	;# 
  2355  019D                     	;# 
  2356  019E                     	;# 
  2357  019E                     	;# 
  2358  019E                     	;# 
  2359  019F                     	;# 
  2360  019F                     	;# 
  2361  019F                     	;# 
  2362  019F                     	;# 
  2363  019F                     	;# 
  2364  020C                     	;# 
  2365  020D                     	;# 
  2366  020E                     	;# 
  2367  0211                     	;# 
  2368  0211                     	;# 
  2369  0212                     	;# 
  2370  0212                     	;# 
  2371  0213                     	;# 
  2372  0213                     	;# 
  2373  0214                     	;# 
  2374  0214                     	;# 
  2375  0215                     	;# 
  2376  0215                     	;# 
  2377  0215                     	;# 
  2378  0215                     	;# 
  2379  0216                     	;# 
  2380  0216                     	;# 
  2381  0217                     	;# 
  2382  0217                     	;# 
  2383  021D                     	;# 
  2384  021E                     	;# 
  2385  021F                     	;# 
  2386  028C                     	;# 
  2387  028D                     	;# 
  2388  028E                     	;# 
  2389  0291                     	;# 
  2390  0291                     	;# 
  2391  0292                     	;# 
  2392  0293                     	;# 
  2393  0294                     	;# 
  2394  0298                     	;# 
  2395  0298                     	;# 
  2396  0299                     	;# 
  2397  029A                     	;# 
  2398  029B                     	;# 
  2399  029E                     	;# 
  2400  030C                     	;# 
  2401  030D                     	;# 
  2402  030E                     	;# 
  2403  031B                     	;# 
  2404  031C                     	;# 
  2405  031D                     	;# 
  2406  031E                     	;# 
  2407  031F                     	;# 
  2408  038C                     	;# 
  2409  038D                     	;# 
  2410  038E                     	;# 
  2411  0391                     	;# 
  2412  0392                     	;# 
  2413  0393                     	;# 
  2414  0394                     	;# 
  2415  0395                     	;# 
  2416  0396                     	;# 
  2417  0397                     	;# 
  2418  0398                     	;# 
  2419  0399                     	;# 
  2420  039B                     	;# 
  2421  039C                     	;# 
  2422  039D                     	;# 
  2423  039E                     	;# 
  2424  039F                     	;# 
  2425  040E                     	;# 
  2426  0413                     	;# 
  2427  0413                     	;# 
  2428  0414                     	;# 
  2429  0414                     	;# 
  2430  0415                     	;# 
  2431  0416                     	;# 
  2432  0417                     	;# 
  2433  0418                     	;# 
  2434  041A                     	;# 
  2435  041A                     	;# 
  2436  041B                     	;# 
  2437  041B                     	;# 
  2438  041C                     	;# 
  2439  041D                     	;# 
  2440  041E                     	;# 
  2441  041F                     	;# 
  2442  0493                     	;# 
  2443  0493                     	;# 
  2444  0494                     	;# 
  2445  0495                     	;# 
  2446  0496                     	;# 
  2447  049A                     	;# 
  2448  049A                     	;# 
  2449  049B                     	;# 
  2450  049C                     	;# 
  2451  049D                     	;# 
  2452  050F                     	;# 
  2453  0510                     	;# 
  2454  0511                     	;# 
  2455  0512                     	;# 
  2456  0513                     	;# 
  2457  0514                     	;# 
  2458  0515                     	;# 
  2459  0516                     	;# 
  2460  0590                     	;# 
  2461  0591                     	;# 
  2462  0592                     	;# 
  2463  0592                     	;# 
  2464  0592                     	;# 
  2465  0593                     	;# 
  2466  0593                     	;# 
  2467  0594                     	;# 
  2468  0595                     	;# 
  2469  0595                     	;# 
  2470  0595                     	;# 
  2471  0596                     	;# 
  2472  0596                     	;# 
  2473  0597                     	;# 
  2474  0598                     	;# 
  2475  0598                     	;# 
  2476  0599                     	;# 
  2477  059A                     	;# 
  2478  059A                     	;# 
  2479  0617                     	;# 
  2480  0617                     	;# 
  2481  0618                     	;# 
  2482  0619                     	;# 
  2483  061A                     	;# 
  2484  061A                     	;# 
  2485  061B                     	;# 
  2486  061C                     	;# 
  2487  068D                     	;# 
  2488  068E                     	;# 
  2489  068F                     	;# 
  2490  0690                     	;# 
  2491  0691                     	;# 
  2492  0692                     	;# 
  2493  0693                     	;# 
  2494  0694                     	;# 
  2495  0695                     	;# 
  2496  0696                     	;# 
  2497  0697                     	;# 
  2498  0698                     	;# 
  2499  0699                     	;# 
  2500  069A                     	;# 
  2501  069B                     	;# 
  2502  069C                     	;# 
  2503  069D                     	;# 
  2504  069E                     	;# 
  2505  069F                     	;# 
  2506  070D                     	;# 
  2507  070E                     	;# 
  2508  070F                     	;# 
  2509  0710                     	;# 
  2510  0711                     	;# 
  2511  0712                     	;# 
  2512  0713                     	;# 
  2513  0714                     	;# 
  2514  0715                     	;# 
  2515  0716                     	;# 
  2516  0717                     	;# 
  2517  0718                     	;# 
  2518  0719                     	;# 
  2519  071A                     	;# 
  2520  071B                     	;# 
  2521  071C                     	;# 
  2522  071D                     	;# 
  2523  071E                     	;# 
  2524  071F                     	;# 
  2525  0794                     	;# 
  2526  0795                     	;# 
  2527  0796                     	;# 
  2528  0797                     	;# 
  2529  0798                     	;# 
  2530  0799                     	;# 
  2531  079A                     	;# 
  2532  079B                     	;# 
  2533  079C                     	;# 
  2534  079D                     	;# 
  2535  079E                     	;# 
  2536  079F                     	;# 
  2537  0D8E                     	;# 
  2538  0D8F                     	;# 
  2539  0D90                     	;# 
  2540  0D91                     	;# 
  2541  0D91                     	;# 
  2542  0D92                     	;# 
  2543  0D93                     	;# 
  2544  0D93                     	;# 
  2545  0D94                     	;# 
  2546  0D95                     	;# 
  2547  0D95                     	;# 
  2548  0D96                     	;# 
  2549  0D97                     	;# 
  2550  0D97                     	;# 
  2551  0D98                     	;# 
  2552  0D99                     	;# 
  2553  0D99                     	;# 
  2554  0D9A                     	;# 
  2555  0D9B                     	;# 
  2556  0D9C                     	;# 
  2557  0D9C                     	;# 
  2558  0D9D                     	;# 
  2559  0D9D                     	;# 
  2560  0D9E                     	;# 
  2561  0D9F                     	;# 
  2562  0DA0                     	;# 
  2563  0DA1                     	;# 
  2564  0DA1                     	;# 
  2565  0DA2                     	;# 
  2566  0DA3                     	;# 
  2567  0DA3                     	;# 
  2568  0DA4                     	;# 
  2569  0DA5                     	;# 
  2570  0DA5                     	;# 
  2571  0DA6                     	;# 
  2572  0DA7                     	;# 
  2573  0DA7                     	;# 
  2574  0DA8                     	;# 
  2575  0DA9                     	;# 
  2576  0DA9                     	;# 
  2577  0DAA                     	;# 
  2578  0DAB                     	;# 
  2579  0DAC                     	;# 
  2580  0DAC                     	;# 
  2581  0DAD                     	;# 
  2582  0DAD                     	;# 
  2583  0DAE                     	;# 
  2584  0DAF                     	;# 
  2585  0DB0                     	;# 
  2586  0E0F                     	;# 
  2587  0E10                     	;# 
  2588  0E11                     	;# 
  2589  0E12                     	;# 
  2590  0E13                     	;# 
  2591  0E14                     	;# 
  2592  0E15                     	;# 
  2593  0E16                     	;# 
  2594  0E17                     	;# 
  2595  0E19                     	;# 
  2596  0E19                     	;# 
  2597  0E19                     	;# 
  2598  0E1A                     	;# 
  2599  0E1B                     	;# 
  2600  0E1C                     	;# 
  2601  0E1C                     	;# 
  2602  0E1C                     	;# 
  2603  0E1D                     	;# 
  2604  0E1E                     	;# 
  2605  0E1F                     	;# 
  2606  0E1F                     	;# 
  2607  0E1F                     	;# 
  2608  0E20                     	;# 
  2609  0E21                     	;# 
  2610  0E22                     	;# 
  2611  0E24                     	;# 
  2612  0E25                     	;# 
  2613  0E28                     	;# 
  2614  0E29                     	;# 
  2615  0E2A                     	;# 
  2616  0E2B                     	;# 
  2617  0E2C                     	;# 
  2618  0E2D                     	;# 
  2619  0E2E                     	;# 
  2620  0E2F                     	;# 
  2621  0E30                     	;# 
  2622  0E31                     	;# 
  2623  0E32                     	;# 
  2624  0E33                     	;# 
  2625  0E34                     	;# 
  2626  0E35                     	;# 
  2627  0E90                     	;# 
  2628  0E91                     	;# 
  2629  0E92                     	;# 
  2630  0E94                     	;# 
  2631  0E95                     	;# 
  2632  0E9C                     	;# 
  2633  0E9D                     	;# 
  2634  0E9E                     	;# 
  2635  0E9F                     	;# 
  2636  0EA0                     	;# 
  2637  0EA1                     	;# 
  2638  0EA2                     	;# 
  2639  0EA3                     	;# 
  2640  0EA4                     	;# 
  2641  0EA5                     	;# 
  2642  0EA6                     	;# 
  2643  0EA7                     	;# 
  2644  0F0F                     	;# 
  2645  0F10                     	;# 
  2646  0F11                     	;# 
  2647  0F12                     	;# 
  2648  0F13                     	;# 
  2649  0F14                     	;# 
  2650  0F15                     	;# 
  2651  0F16                     	;# 
  2652  0F17                     	;# 
  2653  0F18                     	;# 
  2654  0F19                     	;# 
  2655  0F1A                     	;# 
  2656  0F1B                     	;# 
  2657  0F1C                     	;# 
  2658  0F1D                     	;# 
  2659  0F1E                     	;# 
  2660  0F1F                     	;# 
  2661  0F20                     	;# 
  2662  0F21                     	;# 
  2663  0F22                     	;# 
  2664  0F23                     	;# 
  2665  0F24                     	;# 
  2666  0F25                     	;# 
  2667  0F26                     	;# 
  2668  0F27                     	;# 
  2669  0F28                     	;# 
  2670  0F29                     	;# 
  2671  0F2A                     	;# 
  2672  0F2B                     	;# 
  2673  0F2C                     	;# 
  2674  0F2D                     	;# 
  2675  0FE4                     	;# 
  2676  0FE5                     	;# 
  2677  0FE6                     	;# 
  2678  0FE7                     	;# 
  2679  0FE8                     	;# 
  2680  0FE9                     	;# 
  2681  0FEA                     	;# 
  2682  0FEB                     	;# 
  2683  0FED                     	;# 
  2684  0FEE                     	;# 
  2685  0FEF                     	;# 
  2686  0000                     	;# 
  2687  0001                     	;# 
  2688  0002                     	;# 
  2689  0003                     	;# 
  2690  0004                     	;# 
  2691  0005                     	;# 
  2692  0006                     	;# 
  2693  0007                     	;# 
  2694  0008                     	;# 
  2695  0009                     	;# 
  2696  000A                     	;# 
  2697  000B                     	;# 
  2698  000C                     	;# 
  2699  000D                     	;# 
  2700  000E                     	;# 
  2701  0011                     	;# 
  2702  0012                     	;# 
  2703  0013                     	;# 
  2704  0014                     	;# 
  2705  0015                     	;# 
  2706  0016                     	;# 
  2707  0016                     	;# 
  2708  0017                     	;# 
  2709  0018                     	;# 
  2710  0019                     	;# 
  2711  001A                     	;# 
  2712  001A                     	;# 
  2713  001B                     	;# 
  2714  001B                     	;# 
  2715  001C                     	;# 
  2716  001D                     	;# 
  2717  001E                     	;# 
  2718  001F                     	;# 
  2719  008C                     	;# 
  2720  008D                     	;# 
  2721  008E                     	;# 
  2722  0091                     	;# 
  2723  0092                     	;# 
  2724  0093                     	;# 
  2725  0094                     	;# 
  2726  0095                     	;# 
  2727  0096                     	;# 
  2728  0097                     	;# 
  2729  0098                     	;# 
  2730  0099                     	;# 
  2731  009A                     	;# 
  2732  009B                     	;# 
  2733  009B                     	;# 
  2734  009C                     	;# 
  2735  009D                     	;# 
  2736  009E                     	;# 
  2737  009F                     	;# 
  2738  010C                     	;# 
  2739  010D                     	;# 
  2740  010E                     	;# 
  2741  010F                     	;# 
  2742  0110                     	;# 
  2743  0111                     	;# 
  2744  0112                     	;# 
  2745  0113                     	;# 
  2746  0114                     	;# 
  2747  0115                     	;# 
  2748  0116                     	;# 
  2749  0117                     	;# 
  2750  0118                     	;# 
  2751  0119                     	;# 
  2752  011A                     	;# 
  2753  011B                     	;# 
  2754  011C                     	;# 
  2755  011D                     	;# 
  2756  011E                     	;# 
  2757  011F                     	;# 
  2758  018C                     	;# 
  2759  018D                     	;# 
  2760  018E                     	;# 
  2761  0191                     	;# 
  2762  0191                     	;# 
  2763  0192                     	;# 
  2764  0193                     	;# 
  2765  0193                     	;# 
  2766  0194                     	;# 
  2767  0195                     	;# 
  2768  0196                     	;# 
  2769  0199                     	;# 
  2770  0199                     	;# 
  2771  0199                     	;# 
  2772  019A                     	;# 
  2773  019A                     	;# 
  2774  019A                     	;# 
  2775  019B                     	;# 
  2776  019B                     	;# 
  2777  019B                     	;# 
  2778  019B                     	;# 
  2779  019B                     	;# 
  2780  019C                     	;# 
  2781  019C                     	;# 
  2782  019C                     	;# 
  2783  019D                     	;# 
  2784  019D                     	;# 
  2785  019D                     	;# 
  2786  019E                     	;# 
  2787  019E                     	;# 
  2788  019E                     	;# 
  2789  019F                     	;# 
  2790  019F                     	;# 
  2791  019F                     	;# 
  2792  019F                     	;# 
  2793  019F                     	;# 
  2794  020C                     	;# 
  2795  020D                     	;# 
  2796  020E                     	;# 
  2797  0211                     	;# 
  2798  0211                     	;# 
  2799  0212                     	;# 
  2800  0212                     	;# 
  2801  0213                     	;# 
  2802  0213                     	;# 
  2803  0214                     	;# 
  2804  0214                     	;# 
  2805  0215                     	;# 
  2806  0215                     	;# 
  2807  0215                     	;# 
  2808  0215                     	;# 
  2809  0216                     	;# 
  2810  0216                     	;# 
  2811  0217                     	;# 
  2812  0217                     	;# 
  2813  021D                     	;# 
  2814  021E                     	;# 
  2815  021F                     	;# 
  2816  028C                     	;# 
  2817  028D                     	;# 
  2818  028E                     	;# 
  2819  0291                     	;# 
  2820  0291                     	;# 
  2821  0292                     	;# 
  2822  0293                     	;# 
  2823  0294                     	;# 
  2824  0298                     	;# 
  2825  0298                     	;# 
  2826  0299                     	;# 
  2827  029A                     	;# 
  2828  029B                     	;# 
  2829  029E                     	;# 
  2830  030C                     	;# 
  2831  030D                     	;# 
  2832  030E                     	;# 
  2833  031B                     	;# 
  2834  031C                     	;# 
  2835  031D                     	;# 
  2836  031E                     	;# 
  2837  031F                     	;# 
  2838  038C                     	;# 
  2839  038D                     	;# 
  2840  038E                     	;# 
  2841  0391                     	;# 
  2842  0392                     	;# 
  2843  0393                     	;# 
  2844  0394                     	;# 
  2845  0395                     	;# 
  2846  0396                     	;# 
  2847  0397                     	;# 
  2848  0398                     	;# 
  2849  0399                     	;# 
  2850  039B                     	;# 
  2851  039C                     	;# 
  2852  039D                     	;# 
  2853  039E                     	;# 
  2854  039F                     	;# 
  2855  040E                     	;# 
  2856  0413                     	;# 
  2857  0413                     	;# 
  2858  0414                     	;# 
  2859  0414                     	;# 
  2860  0415                     	;# 
  2861  0416                     	;# 
  2862  0417                     	;# 
  2863  0418                     	;# 
  2864  041A                     	;# 
  2865  041A                     	;# 
  2866  041B                     	;# 
  2867  041B                     	;# 
  2868  041C                     	;# 
  2869  041D                     	;# 
  2870  041E                     	;# 
  2871  041F                     	;# 
  2872  0493                     	;# 
  2873  0493                     	;# 
  2874  0494                     	;# 
  2875  0495                     	;# 
  2876  0496                     	;# 
  2877  049A                     	;# 
  2878  049A                     	;# 
  2879  049B                     	;# 
  2880  049C                     	;# 
  2881  049D                     	;# 
  2882  050F                     	;# 
  2883  0510                     	;# 
  2884  0511                     	;# 
  2885  0512                     	;# 
  2886  0513                     	;# 
  2887  0514                     	;# 
  2888  0515                     	;# 
  2889  0516                     	;# 
  2890  0590                     	;# 
  2891  0591                     	;# 
  2892  0592                     	;# 
  2893  0592                     	;# 
  2894  0592                     	;# 
  2895  0593                     	;# 
  2896  0593                     	;# 
  2897  0594                     	;# 
  2898  0595                     	;# 
  2899  0595                     	;# 
  2900  0595                     	;# 
  2901  0596                     	;# 
  2902  0596                     	;# 
  2903  0597                     	;# 
  2904  0598                     	;# 
  2905  0598                     	;# 
  2906  0599                     	;# 
  2907  059A                     	;# 
  2908  059A                     	;# 
  2909  0617                     	;# 
  2910  0617                     	;# 
  2911  0618                     	;# 
  2912  0619                     	;# 
  2913  061A                     	;# 
  2914  061A                     	;# 
  2915  061B                     	;# 
  2916  061C                     	;# 
  2917  068D                     	;# 
  2918  068E                     	;# 
  2919  068F                     	;# 
  2920  0690                     	;# 
  2921  0691                     	;# 
  2922  0692                     	;# 
  2923  0693                     	;# 
  2924  0694                     	;# 
  2925  0695                     	;# 
  2926  0696                     	;# 
  2927  0697                     	;# 
  2928  0698                     	;# 
  2929  0699                     	;# 
  2930  069A                     	;# 
  2931  069B                     	;# 
  2932  069C                     	;# 
  2933  069D                     	;# 
  2934  069E                     	;# 
  2935  069F                     	;# 
  2936  070D                     	;# 
  2937  070E                     	;# 
  2938  070F                     	;# 
  2939  0710                     	;# 
  2940  0711                     	;# 
  2941  0712                     	;# 
  2942  0713                     	;# 
  2943  0714                     	;# 
  2944  0715                     	;# 
  2945  0716                     	;# 
  2946  0717                     	;# 
  2947  0718                     	;# 
  2948  0719                     	;# 
  2949  071A                     	;# 
  2950  071B                     	;# 
  2951  071C                     	;# 
  2952  071D                     	;# 
  2953  071E                     	;# 
  2954  071F                     	;# 
  2955  0794                     	;# 
  2956  0795                     	;# 
  2957  0796                     	;# 
  2958  0797                     	;# 
  2959  0798                     	;# 
  2960  0799                     	;# 
  2961  079A                     	;# 
  2962  079B                     	;# 
  2963  079C                     	;# 
  2964  079D                     	;# 
  2965  079E                     	;# 
  2966  079F                     	;# 
  2967  0D8E                     	;# 
  2968  0D8F                     	;# 
  2969  0D90                     	;# 
  2970  0D91                     	;# 
  2971  0D91                     	;# 
  2972  0D92                     	;# 
  2973  0D93                     	;# 
  2974  0D93                     	;# 
  2975  0D94                     	;# 
  2976  0D95                     	;# 
  2977  0D95                     	;# 
  2978  0D96                     	;# 
  2979  0D97                     	;# 
  2980  0D97                     	;# 
  2981  0D98                     	;# 
  2982  0D99                     	;# 
  2983  0D99                     	;# 
  2984  0D9A                     	;# 
  2985  0D9B                     	;# 
  2986  0D9C                     	;# 
  2987  0D9C                     	;# 
  2988  0D9D                     	;# 
  2989  0D9D                     	;# 
  2990  0D9E                     	;# 
  2991  0D9F                     	;# 
  2992  0DA0                     	;# 
  2993  0DA1                     	;# 
  2994  0DA1                     	;# 
  2995  0DA2                     	;# 
  2996  0DA3                     	;# 
  2997  0DA3                     	;# 
  2998  0DA4                     	;# 
  2999  0DA5                     	;# 
  3000  0DA5                     	;# 
  3001  0DA6                     	;# 
  3002  0DA7                     	;# 
  3003  0DA7                     	;# 
  3004  0DA8                     	;# 
  3005  0DA9                     	;# 
  3006  0DA9                     	;# 
  3007  0DAA                     	;# 
  3008  0DAB                     	;# 
  3009  0DAC                     	;# 
  3010  0DAC                     	;# 
  3011  0DAD                     	;# 
  3012  0DAD                     	;# 
  3013  0DAE                     	;# 
  3014  0DAF                     	;# 
  3015  0DB0                     	;# 
  3016  0E0F                     	;# 
  3017  0E10                     	;# 
  3018  0E11                     	;# 
  3019  0E12                     	;# 
  3020  0E13                     	;# 
  3021  0E14                     	;# 
  3022  0E15                     	;# 
  3023  0E16                     	;# 
  3024  0E17                     	;# 
  3025  0E19                     	;# 
  3026  0E19                     	;# 
  3027  0E19                     	;# 
  3028  0E1A                     	;# 
  3029  0E1B                     	;# 
  3030  0E1C                     	;# 
  3031  0E1C                     	;# 
  3032  0E1C                     	;# 
  3033  0E1D                     	;# 
  3034  0E1E                     	;# 
  3035  0E1F                     	;# 
  3036  0E1F                     	;# 
  3037  0E1F                     	;# 
  3038  0E20                     	;# 
  3039  0E21                     	;# 
  3040  0E22                     	;# 
  3041  0E24                     	;# 
  3042  0E25                     	;# 
  3043  0E28                     	;# 
  3044  0E29                     	;# 
  3045  0E2A                     	;# 
  3046  0E2B                     	;# 
  3047  0E2C                     	;# 
  3048  0E2D                     	;# 
  3049  0E2E                     	;# 
  3050  0E2F                     	;# 
  3051  0E30                     	;# 
  3052  0E31                     	;# 
  3053  0E32                     	;# 
  3054  0E33                     	;# 
  3055  0E34                     	;# 
  3056  0E35                     	;# 
  3057  0E90                     	;# 
  3058  0E91                     	;# 
  3059  0E92                     	;# 
  3060  0E94                     	;# 
  3061  0E95                     	;# 
  3062  0E9C                     	;# 
  3063  0E9D                     	;# 
  3064  0E9E                     	;# 
  3065  0E9F                     	;# 
  3066  0EA0                     	;# 
  3067  0EA1                     	;# 
  3068  0EA2                     	;# 
  3069  0EA3                     	;# 
  3070  0EA4                     	;# 
  3071  0EA5                     	;# 
  3072  0EA6                     	;# 
  3073  0EA7                     	;# 
  3074  0F0F                     	;# 
  3075  0F10                     	;# 
  3076  0F11                     	;# 
  3077  0F12                     	;# 
  3078  0F13                     	;# 
  3079  0F14                     	;# 
  3080  0F15                     	;# 
  3081  0F16                     	;# 
  3082  0F17                     	;# 
  3083  0F18                     	;# 
  3084  0F19                     	;# 
  3085  0F1A                     	;# 
  3086  0F1B                     	;# 
  3087  0F1C                     	;# 
  3088  0F1D                     	;# 
  3089  0F1E                     	;# 
  3090  0F1F                     	;# 
  3091  0F20                     	;# 
  3092  0F21                     	;# 
  3093  0F22                     	;# 
  3094  0F23                     	;# 
  3095  0F24                     	;# 
  3096  0F25                     	;# 
  3097  0F26                     	;# 
  3098  0F27                     	;# 
  3099  0F28                     	;# 
  3100  0F29                     	;# 
  3101  0F2A                     	;# 
  3102  0F2B                     	;# 
  3103  0F2C                     	;# 
  3104  0F2D                     	;# 
  3105  0FE4                     	;# 
  3106  0FE5                     	;# 
  3107  0FE6                     	;# 
  3108  0FE7                     	;# 
  3109  0FE8                     	;# 
  3110  0FE9                     	;# 
  3111  0FEA                     	;# 
  3112  0FEB                     	;# 
  3113  0FED                     	;# 
  3114  0FEE                     	;# 
  3115  0FEF                     	;# 
  3116  0000                     	;# 
  3117  0001                     	;# 
  3118  0002                     	;# 
  3119  0003                     	;# 
  3120  0004                     	;# 
  3121  0005                     	;# 
  3122  0006                     	;# 
  3123  0007                     	;# 
  3124  0008                     	;# 
  3125  0009                     	;# 
  3126  000A                     	;# 
  3127  000B                     	;# 
  3128  000C                     	;# 
  3129  000D                     	;# 
  3130  000E                     	;# 
  3131  0011                     	;# 
  3132  0012                     	;# 
  3133  0013                     	;# 
  3134  0014                     	;# 
  3135  0015                     	;# 
  3136  0016                     	;# 
  3137  0016                     	;# 
  3138  0017                     	;# 
  3139  0018                     	;# 
  3140  0019                     	;# 
  3141  001A                     	;# 
  3142  001A                     	;# 
  3143  001B                     	;# 
  3144  001B                     	;# 
  3145  001C                     	;# 
  3146  001D                     	;# 
  3147  001E                     	;# 
  3148  001F                     	;# 
  3149  008C                     	;# 
  3150  008D                     	;# 
  3151  008E                     	;# 
  3152  0091                     	;# 
  3153  0092                     	;# 
  3154  0093                     	;# 
  3155  0094                     	;# 
  3156  0095                     	;# 
  3157  0096                     	;# 
  3158  0097                     	;# 
  3159  0098                     	;# 
  3160  0099                     	;# 
  3161  009A                     	;# 
  3162  009B                     	;# 
  3163  009B                     	;# 
  3164  009C                     	;# 
  3165  009D                     	;# 
  3166  009E                     	;# 
  3167  009F                     	;# 
  3168  010C                     	;# 
  3169  010D                     	;# 
  3170  010E                     	;# 
  3171  010F                     	;# 
  3172  0110                     	;# 
  3173  0111                     	;# 
  3174  0112                     	;# 
  3175  0113                     	;# 
  3176  0114                     	;# 
  3177  0115                     	;# 
  3178  0116                     	;# 
  3179  0117                     	;# 
  3180  0118                     	;# 
  3181  0119                     	;# 
  3182  011A                     	;# 
  3183  011B                     	;# 
  3184  011C                     	;# 
  3185  011D                     	;# 
  3186  011E                     	;# 
  3187  011F                     	;# 
  3188  018C                     	;# 
  3189  018D                     	;# 
  3190  018E                     	;# 
  3191  0191                     	;# 
  3192  0191                     	;# 
  3193  0192                     	;# 
  3194  0193                     	;# 
  3195  0193                     	;# 
  3196  0194                     	;# 
  3197  0195                     	;# 
  3198  0196                     	;# 
  3199  0199                     	;# 
  3200  0199                     	;# 
  3201  0199                     	;# 
  3202  019A                     	;# 
  3203  019A                     	;# 
  3204  019A                     	;# 
  3205  019B                     	;# 
  3206  019B                     	;# 
  3207  019B                     	;# 
  3208  019B                     	;# 
  3209  019B                     	;# 
  3210  019C                     	;# 
  3211  019C                     	;# 
  3212  019C                     	;# 
  3213  019D                     	;# 
  3214  019D                     	;# 
  3215  019D                     	;# 
  3216  019E                     	;# 
  3217  019E                     	;# 
  3218  019E                     	;# 
  3219  019F                     	;# 
  3220  019F                     	;# 
  3221  019F                     	;# 
  3222  019F                     	;# 
  3223  019F                     	;# 
  3224  020C                     	;# 
  3225  020D                     	;# 
  3226  020E                     	;# 
  3227  0211                     	;# 
  3228  0211                     	;# 
  3229  0212                     	;# 
  3230  0212                     	;# 
  3231  0213                     	;# 
  3232  0213                     	;# 
  3233  0214                     	;# 
  3234  0214                     	;# 
  3235  0215                     	;# 
  3236  0215                     	;# 
  3237  0215                     	;# 
  3238  0215                     	;# 
  3239  0216                     	;# 
  3240  0216                     	;# 
  3241  0217                     	;# 
  3242  0217                     	;# 
  3243  021D                     	;# 
  3244  021E                     	;# 
  3245  021F                     	;# 
  3246  028C                     	;# 
  3247  028D                     	;# 
  3248  028E                     	;# 
  3249  0291                     	;# 
  3250  0291                     	;# 
  3251  0292                     	;# 
  3252  0293                     	;# 
  3253  0294                     	;# 
  3254  0298                     	;# 
  3255  0298                     	;# 
  3256  0299                     	;# 
  3257  029A                     	;# 
  3258  029B                     	;# 
  3259  029E                     	;# 
  3260  030C                     	;# 
  3261  030D                     	;# 
  3262  030E                     	;# 
  3263  031B                     	;# 
  3264  031C                     	;# 
  3265  031D                     	;# 
  3266  031E                     	;# 
  3267  031F                     	;# 
  3268  038C                     	;# 
  3269  038D                     	;# 
  3270  038E                     	;# 
  3271  0391                     	;# 
  3272  0392                     	;# 
  3273  0393                     	;# 
  3274  0394                     	;# 
  3275  0395                     	;# 
  3276  0396                     	;# 
  3277  0397                     	;# 
  3278  0398                     	;# 
  3279  0399                     	;# 
  3280  039B                     	;# 
  3281  039C                     	;# 
  3282  039D                     	;# 
  3283  039E                     	;# 
  3284  039F                     	;# 
  3285  040E                     	;# 
  3286  0413                     	;# 
  3287  0413                     	;# 
  3288  0414                     	;# 
  3289  0414                     	;# 
  3290  0415                     	;# 
  3291  0416                     	;# 
  3292  0417                     	;# 
  3293  0418                     	;# 
  3294  041A                     	;# 
  3295  041A                     	;# 
  3296  041B                     	;# 
  3297  041B                     	;# 
  3298  041C                     	;# 
  3299  041D                     	;# 
  3300  041E                     	;# 
  3301  041F                     	;# 
  3302  0493                     	;# 
  3303  0493                     	;# 
  3304  0494                     	;# 
  3305  0495                     	;# 
  3306  0496                     	;# 
  3307  049A                     	;# 
  3308  049A                     	;# 
  3309  049B                     	;# 
  3310  049C                     	;# 
  3311  049D                     	;# 
  3312  050F                     	;# 
  3313  0510                     	;# 
  3314  0511                     	;# 
  3315  0512                     	;# 
  3316  0513                     	;# 
  3317  0514                     	;# 
  3318  0515                     	;# 
  3319  0516                     	;# 
  3320  0590                     	;# 
  3321  0591                     	;# 
  3322  0592                     	;# 
  3323  0592                     	;# 
  3324  0592                     	;# 
  3325  0593                     	;# 
  3326  0593                     	;# 
  3327  0594                     	;# 
  3328  0595                     	;# 
  3329  0595                     	;# 
  3330  0595                     	;# 
  3331  0596                     	;# 
  3332  0596                     	;# 
  3333  0597                     	;# 
  3334  0598                     	;# 
  3335  0598                     	;# 
  3336  0599                     	;# 
  3337  059A                     	;# 
  3338  059A                     	;# 
  3339  0617                     	;# 
  3340  0617                     	;# 
  3341  0618                     	;# 
  3342  0619                     	;# 
  3343  061A                     	;# 
  3344  061A                     	;# 
  3345  061B                     	;# 
  3346  061C                     	;# 
  3347  068D                     	;# 
  3348  068E                     	;# 
  3349  068F                     	;# 
  3350  0690                     	;# 
  3351  0691                     	;# 
  3352  0692                     	;# 
  3353  0693                     	;# 
  3354  0694                     	;# 
  3355  0695                     	;# 
  3356  0696                     	;# 
  3357  0697                     	;# 
  3358  0698                     	;# 
  3359  0699                     	;# 
  3360  069A                     	;# 
  3361  069B                     	;# 
  3362  069C                     	;# 
  3363  069D                     	;# 
  3364  069E                     	;# 
  3365  069F                     	;# 
  3366  070D                     	;# 
  3367  070E                     	;# 
  3368  070F                     	;# 
  3369  0710                     	;# 
  3370  0711                     	;# 
  3371  0712                     	;# 
  3372  0713                     	;# 
  3373  0714                     	;# 
  3374  0715                     	;# 
  3375  0716                     	;# 
  3376  0717                     	;# 
  3377  0718                     	;# 
  3378  0719                     	;# 
  3379  071A                     	;# 
  3380  071B                     	;# 
  3381  071C                     	;# 
  3382  071D                     	;# 
  3383  071E                     	;# 
  3384  071F                     	;# 
  3385  0794                     	;# 
  3386  0795                     	;# 
  3387  0796                     	;# 
  3388  0797                     	;# 
  3389  0798                     	;# 
  3390  0799                     	;# 
  3391  079A                     	;# 
  3392  079B                     	;# 
  3393  079C                     	;# 
  3394  079D                     	;# 
  3395  079E                     	;# 
  3396  079F                     	;# 
  3397  0D8E                     	;# 
  3398  0D8F                     	;# 
  3399  0D90                     	;# 
  3400  0D91                     	;# 
  3401  0D91                     	;# 
  3402  0D92                     	;# 
  3403  0D93                     	;# 
  3404  0D93                     	;# 
  3405  0D94                     	;# 
  3406  0D95                     	;# 
  3407  0D95                     	;# 
  3408  0D96                     	;# 
  3409  0D97                     	;# 
  3410  0D97                     	;# 
  3411  0D98                     	;# 
  3412  0D99                     	;# 
  3413  0D99                     	;# 
  3414  0D9A                     	;# 
  3415  0D9B                     	;# 
  3416  0D9C                     	;# 
  3417  0D9C                     	;# 
  3418  0D9D                     	;# 
  3419  0D9D                     	;# 
  3420  0D9E                     	;# 
  3421  0D9F                     	;# 
  3422  0DA0                     	;# 
  3423  0DA1                     	;# 
  3424  0DA1                     	;# 
  3425  0DA2                     	;# 
  3426  0DA3                     	;# 
  3427  0DA3                     	;# 
  3428  0DA4                     	;# 
  3429  0DA5                     	;# 
  3430  0DA5                     	;# 
  3431  0DA6                     	;# 
  3432  0DA7                     	;# 
  3433  0DA7                     	;# 
  3434  0DA8                     	;# 
  3435  0DA9                     	;# 
  3436  0DA9                     	;# 
  3437  0DAA                     	;# 
  3438  0DAB                     	;# 
  3439  0DAC                     	;# 
  3440  0DAC                     	;# 
  3441  0DAD                     	;# 
  3442  0DAD                     	;# 
  3443  0DAE                     	;# 
  3444  0DAF                     	;# 
  3445  0DB0                     	;# 
  3446  0E0F                     	;# 
  3447  0E10                     	;# 
  3448  0E11                     	;# 
  3449  0E12                     	;# 
  3450  0E13                     	;# 
  3451  0E14                     	;# 
  3452  0E15                     	;# 
  3453  0E16                     	;# 
  3454  0E17                     	;# 
  3455  0E19                     	;# 
  3456  0E19                     	;# 
  3457  0E19                     	;# 
  3458  0E1A                     	;# 
  3459  0E1B                     	;# 
  3460  0E1C                     	;# 
  3461  0E1C                     	;# 
  3462  0E1C                     	;# 
  3463  0E1D                     	;# 
  3464  0E1E                     	;# 
  3465  0E1F                     	;# 
  3466  0E1F                     	;# 
  3467  0E1F                     	;# 
  3468  0E20                     	;# 
  3469  0E21                     	;# 
  3470  0E22                     	;# 
  3471  0E24                     	;# 
  3472  0E25                     	;# 
  3473  0E28                     	;# 
  3474  0E29                     	;# 
  3475  0E2A                     	;# 
  3476  0E2B                     	;# 
  3477  0E2C                     	;# 
  3478  0E2D                     	;# 
  3479  0E2E                     	;# 
  3480  0E2F                     	;# 
  3481  0E30                     	;# 
  3482  0E31                     	;# 
  3483  0E32                     	;# 
  3484  0E33                     	;# 
  3485  0E34                     	;# 
  3486  0E35                     	;# 
  3487  0E90                     	;# 
  3488  0E91                     	;# 
  3489  0E92                     	;# 
  3490  0E94                     	;# 
  3491  0E95                     	;# 
  3492  0E9C                     	;# 
  3493  0E9D                     	;# 
  3494  0E9E                     	;# 
  3495  0E9F                     	;# 
  3496  0EA0                     	;# 
  3497  0EA1                     	;# 
  3498  0EA2                     	;# 
  3499  0EA3                     	;# 
  3500  0EA4                     	;# 
  3501  0EA5                     	;# 
  3502  0EA6                     	;# 
  3503  0EA7                     	;# 
  3504  0F0F                     	;# 
  3505  0F10                     	;# 
  3506  0F11                     	;# 
  3507  0F12                     	;# 
  3508  0F13                     	;# 
  3509  0F14                     	;# 
  3510  0F15                     	;# 
  3511  0F16                     	;# 
  3512  0F17                     	;# 
  3513  0F18                     	;# 
  3514  0F19                     	;# 
  3515  0F1A                     	;# 
  3516  0F1B                     	;# 
  3517  0F1C                     	;# 
  3518  0F1D                     	;# 
  3519  0F1E                     	;# 
  3520  0F1F                     	;# 
  3521  0F20                     	;# 
  3522  0F21                     	;# 
  3523  0F22                     	;# 
  3524  0F23                     	;# 
  3525  0F24                     	;# 
  3526  0F25                     	;# 
  3527  0F26                     	;# 
  3528  0F27                     	;# 
  3529  0F28                     	;# 
  3530  0F29                     	;# 
  3531  0F2A                     	;# 
  3532  0F2B                     	;# 
  3533  0F2C                     	;# 
  3534  0F2D                     	;# 
  3535  0FE4                     	;# 
  3536  0FE5                     	;# 
  3537  0FE6                     	;# 
  3538  0FE7                     	;# 
  3539  0FE8                     	;# 
  3540  0FE9                     	;# 
  3541  0FEA                     	;# 
  3542  0FEB                     	;# 
  3543  0FED                     	;# 
  3544  0FEE                     	;# 
  3545  0FEF                     	;# 
  3546  0000                     	;# 
  3547  0001                     	;# 
  3548  0002                     	;# 
  3549  0003                     	;# 
  3550  0004                     	;# 
  3551  0005                     	;# 
  3552  0006                     	;# 
  3553  0007                     	;# 
  3554  0008                     	;# 
  3555  0009                     	;# 
  3556  000A                     	;# 
  3557  000B                     	;# 
  3558  000C                     	;# 
  3559  000D                     	;# 
  3560  000E                     	;# 
  3561  0011                     	;# 
  3562  0012                     	;# 
  3563  0013                     	;# 
  3564  0014                     	;# 
  3565  0015                     	;# 
  3566  0016                     	;# 
  3567  0016                     	;# 
  3568  0017                     	;# 
  3569  0018                     	;# 
  3570  0019                     	;# 
  3571  001A                     	;# 
  3572  001A                     	;# 
  3573  001B                     	;# 
  3574  001B                     	;# 
  3575  001C                     	;# 
  3576  001D                     	;# 
  3577  001E                     	;# 
  3578  001F                     	;# 
  3579  008C                     	;# 
  3580  008D                     	;# 
  3581  008E                     	;# 
  3582  0091                     	;# 
  3583  0092                     	;# 
  3584  0093                     	;# 
  3585  0094                     	;# 
  3586  0095                     	;# 
  3587  0096                     	;# 
  3588  0097                     	;# 
  3589  0098                     	;# 
  3590  0099                     	;# 
  3591  009A                     	;# 
  3592  009B                     	;# 
  3593  009B                     	;# 
  3594  009C                     	;# 
  3595  009D                     	;# 
  3596  009E                     	;# 
  3597  009F                     	;# 
  3598  010C                     	;# 
  3599  010D                     	;# 
  3600  010E                     	;# 
  3601  010F                     	;# 
  3602  0110                     	;# 
  3603  0111                     	;# 
  3604  0112                     	;# 
  3605  0113                     	;# 
  3606  0114                     	;# 
  3607  0115                     	;# 
  3608  0116                     	;# 
  3609  0117                     	;# 
  3610  0118                     	;# 
  3611  0119                     	;# 
  3612  011A                     	;# 
  3613  011B                     	;# 
  3614  011C                     	;# 
  3615  011D                     	;# 
  3616  011E                     	;# 
  3617  011F                     	;# 
  3618  018C                     	;# 
  3619  018D                     	;# 
  3620  018E                     	;# 
  3621  0191                     	;# 
  3622  0191                     	;# 
  3623  0192                     	;# 
  3624  0193                     	;# 
  3625  0193                     	;# 
  3626  0194                     	;# 
  3627  0195                     	;# 
  3628  0196                     	;# 
  3629  0199                     	;# 
  3630  0199                     	;# 
  3631  0199                     	;# 
  3632  019A                     	;# 
  3633  019A                     	;# 
  3634  019A                     	;# 
  3635  019B                     	;# 
  3636  019B                     	;# 
  3637  019B                     	;# 
  3638  019B                     	;# 
  3639  019B                     	;# 
  3640  019C                     	;# 
  3641  019C                     	;# 
  3642  019C                     	;# 
  3643  019D                     	;# 
  3644  019D                     	;# 
  3645  019D                     	;# 
  3646  019E                     	;# 
  3647  019E                     	;# 
  3648  019E                     	;# 
  3649  019F                     	;# 
  3650  019F                     	;# 
  3651  019F                     	;# 
  3652  019F                     	;# 
  3653  019F                     	;# 
  3654  020C                     	;# 
  3655  020D                     	;# 
  3656  020E                     	;# 
  3657  0211                     	;# 
  3658  0211                     	;# 
  3659  0212                     	;# 
  3660  0212                     	;# 
  3661  0213                     	;# 
  3662  0213                     	;# 
  3663  0214                     	;# 
  3664  0214                     	;# 
  3665  0215                     	;# 
  3666  0215                     	;# 
  3667  0215                     	;# 
  3668  0215                     	;# 
  3669  0216                     	;# 
  3670  0216                     	;# 
  3671  0217                     	;# 
  3672  0217                     	;# 
  3673  021D                     	;# 
  3674  021E                     	;# 
  3675  021F                     	;# 
  3676  028C                     	;# 
  3677  028D                     	;# 
  3678  028E                     	;# 
  3679  0291                     	;# 
  3680  0291                     	;# 
  3681  0292                     	;# 
  3682  0293                     	;# 
  3683  0294                     	;# 
  3684  0298                     	;# 
  3685  0298                     	;# 
  3686  0299                     	;# 
  3687  029A                     	;# 
  3688  029B                     	;# 
  3689  029E                     	;# 
  3690  030C                     	;# 
  3691  030D                     	;# 
  3692  030E                     	;# 
  3693  031B                     	;# 
  3694  031C                     	;# 
  3695  031D                     	;# 
  3696  031E                     	;# 
  3697  031F                     	;# 
  3698  038C                     	;# 
  3699  038D                     	;# 
  3700  038E                     	;# 
  3701  0391                     	;# 
  3702  0392                     	;# 
  3703  0393                     	;# 
  3704  0394                     	;# 
  3705  0395                     	;# 
  3706  0396                     	;# 
  3707  0397                     	;# 
  3708  0398                     	;# 
  3709  0399                     	;# 
  3710  039B                     	;# 
  3711  039C                     	;# 
  3712  039D                     	;# 
  3713  039E                     	;# 
  3714  039F                     	;# 
  3715  040E                     	;# 
  3716  0413                     	;# 
  3717  0413                     	;# 
  3718  0414                     	;# 
  3719  0414                     	;# 
  3720  0415                     	;# 
  3721  0416                     	;# 
  3722  0417                     	;# 
  3723  0418                     	;# 
  3724  041A                     	;# 
  3725  041A                     	;# 
  3726  041B                     	;# 
  3727  041B                     	;# 
  3728  041C                     	;# 
  3729  041D                     	;# 
  3730  041E                     	;# 
  3731  041F                     	;# 
  3732  0493                     	;# 
  3733  0493                     	;# 
  3734  0494                     	;# 
  3735  0495                     	;# 
  3736  0496                     	;# 
  3737  049A                     	;# 
  3738  049A                     	;# 
  3739  049B                     	;# 
  3740  049C                     	;# 
  3741  049D                     	;# 
  3742  050F                     	;# 
  3743  0510                     	;# 
  3744  0511                     	;# 
  3745  0512                     	;# 
  3746  0513                     	;# 
  3747  0514                     	;# 
  3748  0515                     	;# 
  3749  0516                     	;# 
  3750  0590                     	;# 
  3751  0591                     	;# 
  3752  0592                     	;# 
  3753  0592                     	;# 
  3754  0592                     	;# 
  3755  0593                     	;# 
  3756  0593                     	;# 
  3757  0594                     	;# 
  3758  0595                     	;# 
  3759  0595                     	;# 
  3760  0595                     	;# 
  3761  0596                     	;# 
  3762  0596                     	;# 
  3763  0597                     	;# 
  3764  0598                     	;# 
  3765  0598                     	;# 
  3766  0599                     	;# 
  3767  059A                     	;# 
  3768  059A                     	;# 
  3769  0617                     	;# 
  3770  0617                     	;# 
  3771  0618                     	;# 
  3772  0619                     	;# 
  3773  061A                     	;# 
  3774  061A                     	;# 
  3775  061B                     	;# 
  3776  061C                     	;# 
  3777  068D                     	;# 
  3778  068E                     	;# 
  3779  068F                     	;# 
  3780  0690                     	;# 
  3781  0691                     	;# 
  3782  0692                     	;# 
  3783  0693                     	;# 
  3784  0694                     	;# 
  3785  0695                     	;# 
  3786  0696                     	;# 
  3787  0697                     	;# 
  3788  0698                     	;# 
  3789  0699                     	;# 
  3790  069A                     	;# 
  3791  069B                     	;# 
  3792  069C                     	;# 
  3793  069D                     	;# 
  3794  069E                     	;# 
  3795  069F                     	;# 
  3796  070D                     	;# 
  3797  070E                     	;# 
  3798  070F                     	;# 
  3799  0710                     	;# 
  3800  0711                     	;# 
  3801  0712                     	;# 
  3802  0713                     	;# 
  3803  0714                     	;# 
  3804  0715                     	;# 
  3805  0716                     	;# 
  3806  0717                     	;# 
  3807  0718                     	;# 
  3808  0719                     	;# 
  3809  071A                     	;# 
  3810  071B                     	;# 
  3811  071C                     	;# 
  3812  071D                     	;# 
  3813  071E                     	;# 
  3814  071F                     	;# 
  3815  0794                     	;# 
  3816  0795                     	;# 
  3817  0796                     	;# 
  3818  0797                     	;# 
  3819  0798                     	;# 
  3820  0799                     	;# 
  3821  079A                     	;# 
  3822  079B                     	;# 
  3823  079C                     	;# 
  3824  079D                     	;# 
  3825  079E                     	;# 
  3826  079F                     	;# 
  3827  0D8E                     	;# 
  3828  0D8F                     	;# 
  3829  0D90                     	;# 
  3830  0D91                     	;# 
  3831  0D91                     	;# 
  3832  0D92                     	;# 
  3833  0D93                     	;# 
  3834  0D93                     	;# 
  3835  0D94                     	;# 
  3836  0D95                     	;# 
  3837  0D95                     	;# 
  3838  0D96                     	;# 
  3839  0D97                     	;# 
  3840  0D97                     	;# 
  3841  0D98                     	;# 
  3842  0D99                     	;# 
  3843  0D99                     	;# 
  3844  0D9A                     	;# 
  3845  0D9B                     	;# 
  3846  0D9C                     	;# 
  3847  0D9C                     	;# 
  3848  0D9D                     	;# 
  3849  0D9D                     	;# 
  3850  0D9E                     	;# 
  3851  0D9F                     	;# 
  3852  0DA0                     	;# 
  3853  0DA1                     	;# 
  3854  0DA1                     	;# 
  3855  0DA2                     	;# 
  3856  0DA3                     	;# 
  3857  0DA3                     	;# 
  3858  0DA4                     	;# 
  3859  0DA5                     	;# 
  3860  0DA5                     	;# 
  3861  0DA6                     	;# 
  3862  0DA7                     	;# 
  3863  0DA7                     	;# 
  3864  0DA8                     	;# 
  3865  0DA9                     	;# 
  3866  0DA9                     	;# 
  3867  0DAA                     	;# 
  3868  0DAB                     	;# 
  3869  0DAC                     	;# 
  3870  0DAC                     	;# 
  3871  0DAD                     	;# 
  3872  0DAD                     	;# 
  3873  0DAE                     	;# 
  3874  0DAF                     	;# 
  3875  0DB0                     	;# 
  3876  0E0F                     	;# 
  3877  0E10                     	;# 
  3878  0E11                     	;# 
  3879  0E12                     	;# 
  3880  0E13                     	;# 
  3881  0E14                     	;# 
  3882  0E15                     	;# 
  3883  0E16                     	;# 
  3884  0E17                     	;# 
  3885  0E19                     	;# 
  3886  0E19                     	;# 
  3887  0E19                     	;# 
  3888  0E1A                     	;# 
  3889  0E1B                     	;# 
  3890  0E1C                     	;# 
  3891  0E1C                     	;# 
  3892  0E1C                     	;# 
  3893  0E1D                     	;# 
  3894  0E1E                     	;# 
  3895  0E1F                     	;# 
  3896  0E1F                     	;# 
  3897  0E1F                     	;# 
  3898  0E20                     	;# 
  3899  0E21                     	;# 
  3900  0E22                     	;# 
  3901  0E24                     	;# 
  3902  0E25                     	;# 
  3903  0E28                     	;# 
  3904  0E29                     	;# 
  3905  0E2A                     	;# 
  3906  0E2B                     	;# 
  3907  0E2C                     	;# 
  3908  0E2D                     	;# 
  3909  0E2E                     	;# 
  3910  0E2F                     	;# 
  3911  0E30                     	;# 
  3912  0E31                     	;# 
  3913  0E32                     	;# 
  3914  0E33                     	;# 
  3915  0E34                     	;# 
  3916  0E35                     	;# 
  3917  0E90                     	;# 
  3918  0E91                     	;# 
  3919  0E92                     	;# 
  3920  0E94                     	;# 
  3921  0E95                     	;# 
  3922  0E9C                     	;# 
  3923  0E9D                     	;# 
  3924  0E9E                     	;# 
  3925  0E9F                     	;# 
  3926  0EA0                     	;# 
  3927  0EA1                     	;# 
  3928  0EA2                     	;# 
  3929  0EA3                     	;# 
  3930  0EA4                     	;# 
  3931  0EA5                     	;# 
  3932  0EA6                     	;# 
  3933  0EA7                     	;# 
  3934  0F0F                     	;# 
  3935  0F10                     	;# 
  3936  0F11                     	;# 
  3937  0F12                     	;# 
  3938  0F13                     	;# 
  3939  0F14                     	;# 
  3940  0F15                     	;# 
  3941  0F16                     	;# 
  3942  0F17                     	;# 
  3943  0F18                     	;# 
  3944  0F19                     	;# 
  3945  0F1A                     	;# 
  3946  0F1B                     	;# 
  3947  0F1C                     	;# 
  3948  0F1D                     	;# 
  3949  0F1E                     	;# 
  3950  0F1F                     	;# 
  3951  0F20                     	;# 
  3952  0F21                     	;# 
  3953  0F22                     	;# 
  3954  0F23                     	;# 
  3955  0F24                     	;# 
  3956  0F25                     	;# 
  3957  0F26                     	;# 
  3958  0F27                     	;# 
  3959  0F28                     	;# 
  3960  0F29                     	;# 
  3961  0F2A                     	;# 
  3962  0F2B                     	;# 
  3963  0F2C                     	;# 
  3964  0F2D                     	;# 
  3965  0FE4                     	;# 
  3966  0FE5                     	;# 
  3967  0FE6                     	;# 
  3968  0FE7                     	;# 
  3969  0FE8                     	;# 
  3970  0FE9                     	;# 
  3971  0FEA                     	;# 
  3972  0FEB                     	;# 
  3973  0FED                     	;# 
  3974  0FEE                     	;# 
  3975  0FEF                     	;# 
  3976  0000                     	;# 
  3977  0001                     	;# 
  3978  0002                     	;# 
  3979  0003                     	;# 
  3980  0004                     	;# 
  3981  0005                     	;# 
  3982  0006                     	;# 
  3983  0007                     	;# 
  3984  0008                     	;# 
  3985  0009                     	;# 
  3986  000A                     	;# 
  3987  000B                     	;# 
  3988  000C                     	;# 
  3989  000D                     	;# 
  3990  000E                     	;# 
  3991  0011                     	;# 
  3992  0012                     	;# 
  3993  0013                     	;# 
  3994  0014                     	;# 
  3995  0015                     	;# 
  3996  0016                     	;# 
  3997  0016                     	;# 
  3998  0017                     	;# 
  3999  0018                     	;# 
  4000  0019                     	;# 
  4001  001A                     	;# 
  4002  001A                     	;# 
  4003  001B                     	;# 
  4004  001B                     	;# 
  4005  001C                     	;# 
  4006  001D                     	;# 
  4007  001E                     	;# 
  4008  001F                     	;# 
  4009  008C                     	;# 
  4010  008D                     	;# 
  4011  008E                     	;# 
  4012  0091                     	;# 
  4013  0092                     	;# 
  4014  0093                     	;# 
  4015  0094                     	;# 
  4016  0095                     	;# 
  4017  0096                     	;# 
  4018  0097                     	;# 
  4019  0098                     	;# 
  4020  0099                     	;# 
  4021  009A                     	;# 
  4022  009B                     	;# 
  4023  009B                     	;# 
  4024  009C                     	;# 
  4025  009D                     	;# 
  4026  009E                     	;# 
  4027  009F                     	;# 
  4028  010C                     	;# 
  4029  010D                     	;# 
  4030  010E                     	;# 
  4031  010F                     	;# 
  4032  0110                     	;# 
  4033  0111                     	;# 
  4034  0112                     	;# 
  4035  0113                     	;# 
  4036  0114                     	;# 
  4037  0115                     	;# 
  4038  0116                     	;# 
  4039  0117                     	;# 
  4040  0118                     	;# 
  4041  0119                     	;# 
  4042  011A                     	;# 
  4043  011B                     	;# 
  4044  011C                     	;# 
  4045  011D                     	;# 
  4046  011E                     	;# 
  4047  011F                     	;# 
  4048  018C                     	;# 
  4049  018D                     	;# 
  4050  018E                     	;# 
  4051  0191                     	;# 
  4052  0191                     	;# 
  4053  0192                     	;# 
  4054  0193                     	;# 
  4055  0193                     	;# 
  4056  0194                     	;# 
  4057  0195                     	;# 
  4058  0196                     	;# 
  4059  0199                     	;# 
  4060  0199                     	;# 
  4061  0199                     	;# 
  4062  019A                     	;# 
  4063  019A                     	;# 
  4064  019A                     	;# 
  4065  019B                     	;# 
  4066  019B                     	;# 
  4067  019B                     	;# 
  4068  019B                     	;# 
  4069  019B                     	;# 
  4070  019C                     	;# 
  4071  019C                     	;# 
  4072  019C                     	;# 
  4073  019D                     	;# 
  4074  019D                     	;# 
  4075  019D                     	;# 
  4076  019E                     	;# 
  4077  019E                     	;# 
  4078  019E                     	;# 
  4079  019F                     	;# 
  4080  019F                     	;# 
  4081  019F                     	;# 
  4082  019F                     	;# 
  4083  019F                     	;# 
  4084  020C                     	;# 
  4085  020D                     	;# 
  4086  020E                     	;# 
  4087  0211                     	;# 
  4088  0211                     	;# 
  4089  0212                     	;# 
  4090  0212                     	;# 
  4091  0213                     	;# 
  4092  0213                     	;# 
  4093  0214                     	;# 
  4094  0214                     	;# 
  4095  0215                     	;# 
  4096  0215                     	;# 
  4097  0215                     	;# 
  4098  0215                     	;# 
  4099  0216                     	;# 
  4100  0216                     	;# 
  4101  0217                     	;# 
  4102  0217                     	;# 
  4103  021D                     	;# 
  4104  021E                     	;# 
  4105  021F                     	;# 
  4106  028C                     	;# 
  4107  028D                     	;# 
  4108  028E                     	;# 
  4109  0291                     	;# 
  4110  0291                     	;# 
  4111  0292                     	;# 
  4112  0293                     	;# 
  4113  0294                     	;# 
  4114  0298                     	;# 
  4115  0298                     	;# 
  4116  0299                     	;# 
  4117  029A                     	;# 
  4118  029B                     	;# 
  4119  029E                     	;# 
  4120  030C                     	;# 
  4121  030D                     	;# 
  4122  030E                     	;# 
  4123  031B                     	;# 
  4124  031C                     	;# 
  4125  031D                     	;# 
  4126  031E                     	;# 
  4127  031F                     	;# 
  4128  038C                     	;# 
  4129  038D                     	;# 
  4130  038E                     	;# 
  4131  0391                     	;# 
  4132  0392                     	;# 
  4133  0393                     	;# 
  4134  0394                     	;# 
  4135  0395                     	;# 
  4136  0396                     	;# 
  4137  0397                     	;# 
  4138  0398                     	;# 
  4139  0399                     	;# 
  4140  039B                     	;# 
  4141  039C                     	;# 
  4142  039D                     	;# 
  4143  039E                     	;# 
  4144  039F                     	;# 
  4145  040E                     	;# 
  4146  0413                     	;# 
  4147  0413                     	;# 
  4148  0414                     	;# 
  4149  0414                     	;# 
  4150  0415                     	;# 
  4151  0416                     	;# 
  4152  0417                     	;# 
  4153  0418                     	;# 
  4154  041A                     	;# 
  4155  041A                     	;# 
  4156  041B                     	;# 
  4157  041B                     	;# 
  4158  041C                     	;# 
  4159  041D                     	;# 
  4160  041E                     	;# 
  4161  041F                     	;# 
  4162  0493                     	;# 
  4163  0493                     	;# 
  4164  0494                     	;# 
  4165  0495                     	;# 
  4166  0496                     	;# 
  4167  049A                     	;# 
  4168  049A                     	;# 
  4169  049B                     	;# 
  4170  049C                     	;# 
  4171  049D                     	;# 
  4172  050F                     	;# 
  4173  0510                     	;# 
  4174  0511                     	;# 
  4175  0512                     	;# 
  4176  0513                     	;# 
  4177  0514                     	;# 
  4178  0515                     	;# 
  4179  0516                     	;# 
  4180  0590                     	;# 
  4181  0591                     	;# 
  4182  0592                     	;# 
  4183  0592                     	;# 
  4184  0592                     	;# 
  4185  0593                     	;# 
  4186  0593                     	;# 
  4187  0594                     	;# 
  4188  0595                     	;# 
  4189  0595                     	;# 
  4190  0595                     	;# 
  4191  0596                     	;# 
  4192  0596                     	;# 
  4193  0597                     	;# 
  4194  0598                     	;# 
  4195  0598                     	;# 
  4196  0599                     	;# 
  4197  059A                     	;# 
  4198  059A                     	;# 
  4199  0617                     	;# 
  4200  0617                     	;# 
  4201  0618                     	;# 
  4202  0619                     	;# 
  4203  061A                     	;# 
  4204  061A                     	;# 
  4205  061B                     	;# 
  4206  061C                     	;# 
  4207  068D                     	;# 
  4208  068E                     	;# 
  4209  068F                     	;# 
  4210  0690                     	;# 
  4211  0691                     	;# 
  4212  0692                     	;# 
  4213  0693                     	;# 
  4214  0694                     	;# 
  4215  0695                     	;# 
  4216  0696                     	;# 
  4217  0697                     	;# 
  4218  0698                     	;# 
  4219  0699                     	;# 
  4220  069A                     	;# 
  4221  069B                     	;# 
  4222  069C                     	;# 
  4223  069D                     	;# 
  4224  069E                     	;# 
  4225  069F                     	;# 
  4226  070D                     	;# 
  4227  070E                     	;# 
  4228  070F                     	;# 
  4229  0710                     	;# 
  4230  0711                     	;# 
  4231  0712                     	;# 
  4232  0713                     	;# 
  4233  0714                     	;# 
  4234  0715                     	;# 
  4235  0716                     	;# 
  4236  0717                     	;# 
  4237  0718                     	;# 
  4238  0719                     	;# 
  4239  071A                     	;# 
  4240  071B                     	;# 
  4241  071C                     	;# 
  4242  071D                     	;# 
  4243  071E                     	;# 
  4244  071F                     	;# 
  4245  0794                     	;# 
  4246  0795                     	;# 
  4247  0796                     	;# 
  4248  0797                     	;# 
  4249  0798                     	;# 
  4250  0799                     	;# 
  4251  079A                     	;# 
  4252  079B                     	;# 
  4253  079C                     	;# 
  4254  079D                     	;# 
  4255  079E                     	;# 
  4256  079F                     	;# 
  4257  0D8E                     	;# 
  4258  0D8F                     	;# 
  4259  0D90                     	;# 
  4260  0D91                     	;# 
  4261  0D91                     	;# 
  4262  0D92                     	;# 
  4263  0D93                     	;# 
  4264  0D93                     	;# 
  4265  0D94                     	;# 
  4266  0D95                     	;# 
  4267  0D95                     	;# 
  4268  0D96                     	;# 
  4269  0D97                     	;# 
  4270  0D97                     	;# 
  4271  0D98                     	;# 
  4272  0D99                     	;# 
  4273  0D99                     	;# 
  4274  0D9A                     	;# 
  4275  0D9B                     	;# 
  4276  0D9C                     	;# 
  4277  0D9C                     	;# 
  4278  0D9D                     	;# 
  4279  0D9D                     	;# 
  4280  0D9E                     	;# 
  4281  0D9F                     	;# 
  4282  0DA0                     	;# 
  4283  0DA1                     	;# 
  4284  0DA1                     	;# 
  4285  0DA2                     	;# 
  4286  0DA3                     	;# 
  4287  0DA3                     	;# 
  4288  0DA4                     	;# 
  4289  0DA5                     	;# 
  4290  0DA5                     	;# 
  4291  0DA6                     	;# 
  4292  0DA7                     	;# 
  4293  0DA7                     	;# 
  4294  0DA8                     	;# 
  4295  0DA9                     	;# 
  4296  0DA9                     	;# 
  4297  0DAA                     	;# 
  4298  0DAB                     	;# 
  4299  0DAC                     	;# 
  4300  0DAC                     	;# 
  4301  0DAD                     	;# 
  4302  0DAD                     	;# 
  4303  0DAE                     	;# 
  4304  0DAF                     	;# 
  4305  0DB0                     	;# 
  4306  0E0F                     	;# 
  4307  0E10                     	;# 
  4308  0E11                     	;# 
  4309  0E12                     	;# 
  4310  0E13                     	;# 
  4311  0E14                     	;# 
  4312  0E15                     	;# 
  4313  0E16                     	;# 
  4314  0E17                     	;# 
  4315  0E19                     	;# 
  4316  0E19                     	;# 
  4317  0E19                     	;# 
  4318  0E1A                     	;# 
  4319  0E1B                     	;# 
  4320  0E1C                     	;# 
  4321  0E1C                     	;# 
  4322  0E1C                     	;# 
  4323  0E1D                     	;# 
  4324  0E1E                     	;# 
  4325  0E1F                     	;# 
  4326  0E1F                     	;# 
  4327  0E1F                     	;# 
  4328  0E20                     	;# 
  4329  0E21                     	;# 
  4330  0E22                     	;# 
  4331  0E24                     	;# 
  4332  0E25                     	;# 
  4333  0E28                     	;# 
  4334  0E29                     	;# 
  4335  0E2A                     	;# 
  4336  0E2B                     	;# 
  4337  0E2C                     	;# 
  4338  0E2D                     	;# 
  4339  0E2E                     	;# 
  4340  0E2F                     	;# 
  4341  0E30                     	;# 
  4342  0E31                     	;# 
  4343  0E32                     	;# 
  4344  0E33                     	;# 
  4345  0E34                     	;# 
  4346  0E35                     	;# 
  4347  0E90                     	;# 
  4348  0E91                     	;# 
  4349  0E92                     	;# 
  4350  0E94                     	;# 
  4351  0E95                     	;# 
  4352  0E9C                     	;# 
  4353  0E9D                     	;# 
  4354  0E9E                     	;# 
  4355  0E9F                     	;# 
  4356  0EA0                     	;# 
  4357  0EA1                     	;# 
  4358  0EA2                     	;# 
  4359  0EA3                     	;# 
  4360  0EA4                     	;# 
  4361  0EA5                     	;# 
  4362  0EA6                     	;# 
  4363  0EA7                     	;# 
  4364  0F0F                     	;# 
  4365  0F10                     	;# 
  4366  0F11                     	;# 
  4367  0F12                     	;# 
  4368  0F13                     	;# 
  4369  0F14                     	;# 
  4370  0F15                     	;# 
  4371  0F16                     	;# 
  4372  0F17                     	;# 
  4373  0F18                     	;# 
  4374  0F19                     	;# 
  4375  0F1A                     	;# 
  4376  0F1B                     	;# 
  4377  0F1C                     	;# 
  4378  0F1D                     	;# 
  4379  0F1E                     	;# 
  4380  0F1F                     	;# 
  4381  0F20                     	;# 
  4382  0F21                     	;# 
  4383  0F22                     	;# 
  4384  0F23                     	;# 
  4385  0F24                     	;# 
  4386  0F25                     	;# 
  4387  0F26                     	;# 
  4388  0F27                     	;# 
  4389  0F28                     	;# 
  4390  0F29                     	;# 
  4391  0F2A                     	;# 
  4392  0F2B                     	;# 
  4393  0F2C                     	;# 
  4394  0F2D                     	;# 
  4395  0FE4                     	;# 
  4396  0FE5                     	;# 
  4397  0FE6                     	;# 
  4398  0FE7                     	;# 
  4399  0FE8                     	;# 
  4400  0FE9                     	;# 
  4401  0FEA                     	;# 
  4402  0FEB                     	;# 
  4403  0FED                     	;# 
  4404  0FEE                     	;# 
  4405  0FEF                     	;# 
  4406  0000                     	;# 
  4407  0001                     	;# 
  4408  0002                     	;# 
  4409  0003                     	;# 
  4410  0004                     	;# 
  4411  0005                     	;# 
  4412  0006                     	;# 
  4413  0007                     	;# 
  4414  0008                     	;# 
  4415  0009                     	;# 
  4416  000A                     	;# 
  4417  000B                     	;# 
  4418  000C                     	;# 
  4419  000D                     	;# 
  4420  000E                     	;# 
  4421  0011                     	;# 
  4422  0012                     	;# 
  4423  0013                     	;# 
  4424  0014                     	;# 
  4425  0015                     	;# 
  4426  0016                     	;# 
  4427  0016                     	;# 
  4428  0017                     	;# 
  4429  0018                     	;# 
  4430  0019                     	;# 
  4431  001A                     	;# 
  4432  001A                     	;# 
  4433  001B                     	;# 
  4434  001B                     	;# 
  4435  001C                     	;# 
  4436  001D                     	;# 
  4437  001E                     	;# 
  4438  001F                     	;# 
  4439  008C                     	;# 
  4440  008D                     	;# 
  4441  008E                     	;# 
  4442  0091                     	;# 
  4443  0092                     	;# 
  4444  0093                     	;# 
  4445  0094                     	;# 
  4446  0095                     	;# 
  4447  0096                     	;# 
  4448  0097                     	;# 
  4449  0098                     	;# 
  4450  0099                     	;# 
  4451  009A                     	;# 
  4452  009B                     	;# 
  4453  009B                     	;# 
  4454  009C                     	;# 
  4455  009D                     	;# 
  4456  009E                     	;# 
  4457  009F                     	;# 
  4458  010C                     	;# 
  4459  010D                     	;# 
  4460  010E                     	;# 
  4461  010F                     	;# 
  4462  0110                     	;# 
  4463  0111                     	;# 
  4464  0112                     	;# 
  4465  0113                     	;# 
  4466  0114                     	;# 
  4467  0115                     	;# 
  4468  0116                     	;# 
  4469  0117                     	;# 
  4470  0118                     	;# 
  4471  0119                     	;# 
  4472  011A                     	;# 
  4473  011B                     	;# 
  4474  011C                     	;# 
  4475  011D                     	;# 
  4476  011E                     	;# 
  4477  011F                     	;# 
  4478  018C                     	;# 
  4479  018D                     	;# 
  4480  018E                     	;# 
  4481  0191                     	;# 
  4482  0191                     	;# 
  4483  0192                     	;# 
  4484  0193                     	;# 
  4485  0193                     	;# 
  4486  0194                     	;# 
  4487  0195                     	;# 
  4488  0196                     	;# 
  4489  0199                     	;# 
  4490  0199                     	;# 
  4491  0199                     	;# 
  4492  019A                     	;# 
  4493  019A                     	;# 
  4494  019A                     	;# 
  4495  019B                     	;# 
  4496  019B                     	;# 
  4497  019B                     	;# 
  4498  019B                     	;# 
  4499  019B                     	;# 
  4500  019C                     	;# 
  4501  019C                     	;# 
  4502  019C                     	;# 
  4503  019D                     	;# 
  4504  019D                     	;# 
  4505  019D                     	;# 
  4506  019E                     	;# 
  4507  019E                     	;# 
  4508  019E                     	;# 
  4509  019F                     	;# 
  4510  019F                     	;# 
  4511  019F                     	;# 
  4512  019F                     	;# 
  4513  019F                     	;# 
  4514  020C                     	;# 
  4515  020D                     	;# 
  4516  020E                     	;# 
  4517  0211                     	;# 
  4518  0211                     	;# 
  4519  0212                     	;# 
  4520  0212                     	;# 
  4521  0213                     	;# 
  4522  0213                     	;# 
  4523  0214                     	;# 
  4524  0214                     	;# 
  4525  0215                     	;# 
  4526  0215                     	;# 
  4527  0215                     	;# 
  4528  0215                     	;# 
  4529  0216                     	;# 
  4530  0216                     	;# 
  4531  0217                     	;# 
  4532  0217                     	;# 
  4533  021D                     	;# 
  4534  021E                     	;# 
  4535  021F                     	;# 
  4536  028C                     	;# 
  4537  028D                     	;# 
  4538  028E                     	;# 
  4539  0291                     	;# 
  4540  0291                     	;# 
  4541  0292                     	;# 
  4542  0293                     	;# 
  4543  0294                     	;# 
  4544  0298                     	;# 
  4545  0298                     	;# 
  4546  0299                     	;# 
  4547  029A                     	;# 
  4548  029B                     	;# 
  4549  029E                     	;# 
  4550  030C                     	;# 
  4551  030D                     	;# 
  4552  030E                     	;# 
  4553  031B                     	;# 
  4554  031C                     	;# 
  4555  031D                     	;# 
  4556  031E                     	;# 
  4557  031F                     	;# 
  4558  038C                     	;# 
  4559  038D                     	;# 
  4560  038E                     	;# 
  4561  0391                     	;# 
  4562  0392                     	;# 
  4563  0393                     	;# 
  4564  0394                     	;# 
  4565  0395                     	;# 
  4566  0396                     	;# 
  4567  0397                     	;# 
  4568  0398                     	;# 
  4569  0399                     	;# 
  4570  039B                     	;# 
  4571  039C                     	;# 
  4572  039D                     	;# 
  4573  039E                     	;# 
  4574  039F                     	;# 
  4575  040E                     	;# 
  4576  0413                     	;# 
  4577  0413                     	;# 
  4578  0414                     	;# 
  4579  0414                     	;# 
  4580  0415                     	;# 
  4581  0416                     	;# 
  4582  0417                     	;# 
  4583  0418                     	;# 
  4584  041A                     	;# 
  4585  041A                     	;# 
  4586  041B                     	;# 
  4587  041B                     	;# 
  4588  041C                     	;# 
  4589  041D                     	;# 
  4590  041E                     	;# 
  4591  041F                     	;# 
  4592  0493                     	;# 
  4593  0493                     	;# 
  4594  0494                     	;# 
  4595  0495                     	;# 
  4596  0496                     	;# 
  4597  049A                     	;# 
  4598  049A                     	;# 
  4599  049B                     	;# 
  4600  049C                     	;# 
  4601  049D                     	;# 
  4602  050F                     	;# 
  4603  0510                     	;# 
  4604  0511                     	;# 
  4605  0512                     	;# 
  4606  0513                     	;# 
  4607  0514                     	;# 
  4608  0515                     	;# 
  4609  0516                     	;# 
  4610  0590                     	;# 
  4611  0591                     	;# 
  4612  0592                     	;# 
  4613  0592                     	;# 
  4614  0592                     	;# 
  4615  0593                     	;# 
  4616  0593                     	;# 
  4617  0594                     	;# 
  4618  0595                     	;# 
  4619  0595                     	;# 
  4620  0595                     	;# 
  4621  0596                     	;# 
  4622  0596                     	;# 
  4623  0597                     	;# 
  4624  0598                     	;# 
  4625  0598                     	;# 
  4626  0599                     	;# 
  4627  059A                     	;# 
  4628  059A                     	;# 
  4629  0617                     	;# 
  4630  0617                     	;# 
  4631  0618                     	;# 
  4632  0619                     	;# 
  4633  061A                     	;# 
  4634  061A                     	;# 
  4635  061B                     	;# 
  4636  061C                     	;# 
  4637  068D                     	;# 
  4638  068E                     	;# 
  4639  068F                     	;# 
  4640  0690                     	;# 
  4641  0691                     	;# 
  4642  0692                     	;# 
  4643  0693                     	;# 
  4644  0694                     	;# 
  4645  0695                     	;# 
  4646  0696                     	;# 
  4647  0697                     	;# 
  4648  0698                     	;# 
  4649  0699                     	;# 
  4650  069A                     	;# 
  4651  069B                     	;# 
  4652  069C                     	;# 
  4653  069D                     	;# 
  4654  069E                     	;# 
  4655  069F                     	;# 
  4656  070D                     	;# 
  4657  070E                     	;# 
  4658  070F                     	;# 
  4659  0710                     	;# 
  4660  0711                     	;# 
  4661  0712                     	;# 
  4662  0713                     	;# 
  4663  0714                     	;# 
  4664  0715                     	;# 
  4665  0716                     	;# 
  4666  0717                     	;# 
  4667  0718                     	;# 
  4668  0719                     	;# 
  4669  071A                     	;# 
  4670  071B                     	;# 
  4671  071C                     	;# 
  4672  071D                     	;# 
  4673  071E                     	;# 
  4674  071F                     	;# 
  4675  0794                     	;# 
  4676  0795                     	;# 
  4677  0796                     	;# 
  4678  0797                     	;# 
  4679  0798                     	;# 
  4680  0799                     	;# 
  4681  079A                     	;# 
  4682  079B                     	;# 
  4683  079C                     	;# 
  4684  079D                     	;# 
  4685  079E                     	;# 
  4686  079F                     	;# 
  4687  0D8E                     	;# 
  4688  0D8F                     	;# 
  4689  0D90                     	;# 
  4690  0D91                     	;# 
  4691  0D91                     	;# 
  4692  0D92                     	;# 
  4693  0D93                     	;# 
  4694  0D93                     	;# 
  4695  0D94                     	;# 
  4696  0D95                     	;# 
  4697  0D95                     	;# 
  4698  0D96                     	;# 
  4699  0D97                     	;# 
  4700  0D97                     	;# 
  4701  0D98                     	;# 
  4702  0D99                     	;# 
  4703  0D99                     	;# 
  4704  0D9A                     	;# 
  4705  0D9B                     	;# 
  4706  0D9C                     	;# 
  4707  0D9C                     	;# 
  4708  0D9D                     	;# 
  4709  0D9D                     	;# 
  4710  0D9E                     	;# 
  4711  0D9F                     	;# 
  4712  0DA0                     	;# 
  4713  0DA1                     	;# 
  4714  0DA1                     	;# 
  4715  0DA2                     	;# 
  4716  0DA3                     	;# 
  4717  0DA3                     	;# 
  4718  0DA4                     	;# 
  4719  0DA5                     	;# 
  4720  0DA5                     	;# 
  4721  0DA6                     	;# 
  4722  0DA7                     	;# 
  4723  0DA7                     	;# 
  4724  0DA8                     	;# 
  4725  0DA9                     	;# 
  4726  0DA9                     	;# 
  4727  0DAA                     	;# 
  4728  0DAB                     	;# 
  4729  0DAC                     	;# 
  4730  0DAC                     	;# 
  4731  0DAD                     	;# 
  4732  0DAD                     	;# 
  4733  0DAE                     	;# 
  4734  0DAF                     	;# 
  4735  0DB0                     	;# 
  4736  0E0F                     	;# 
  4737  0E10                     	;# 
  4738  0E11                     	;# 
  4739  0E12                     	;# 
  4740  0E13                     	;# 
  4741  0E14                     	;# 
  4742  0E15                     	;# 
  4743  0E16                     	;# 
  4744  0E17                     	;# 
  4745  0E19                     	;# 
  4746  0E19                     	;# 
  4747  0E19                     	;# 
  4748  0E1A                     	;# 
  4749  0E1B                     	;# 
  4750  0E1C                     	;# 
  4751  0E1C                     	;# 
  4752  0E1C                     	;# 
  4753  0E1D                     	;# 
  4754  0E1E                     	;# 
  4755  0E1F                     	;# 
  4756  0E1F                     	;# 
  4757  0E1F                     	;# 
  4758  0E20                     	;# 
  4759  0E21                     	;# 
  4760  0E22                     	;# 
  4761  0E24                     	;# 
  4762  0E25                     	;# 
  4763  0E28                     	;# 
  4764  0E29                     	;# 
  4765  0E2A                     	;# 
  4766  0E2B                     	;# 
  4767  0E2C                     	;# 
  4768  0E2D                     	;# 
  4769  0E2E                     	;# 
  4770  0E2F                     	;# 
  4771  0E30                     	;# 
  4772  0E31                     	;# 
  4773  0E32                     	;# 
  4774  0E33                     	;# 
  4775  0E34                     	;# 
  4776  0E35                     	;# 
  4777  0E90                     	;# 
  4778  0E91                     	;# 
  4779  0E92                     	;# 
  4780  0E94                     	;# 
  4781  0E95                     	;# 
  4782  0E9C                     	;# 
  4783  0E9D                     	;# 
  4784  0E9E                     	;# 
  4785  0E9F                     	;# 
  4786  0EA0                     	;# 
  4787  0EA1                     	;# 
  4788  0EA2                     	;# 
  4789  0EA3                     	;# 
  4790  0EA4                     	;# 
  4791  0EA5                     	;# 
  4792  0EA6                     	;# 
  4793  0EA7                     	;# 
  4794  0F0F                     	;# 
  4795  0F10                     	;# 
  4796  0F11                     	;# 
  4797  0F12                     	;# 
  4798  0F13                     	;# 
  4799  0F14                     	;# 
  4800  0F15                     	;# 
  4801  0F16                     	;# 
  4802  0F17                     	;# 
  4803  0F18                     	;# 
  4804  0F19                     	;# 
  4805  0F1A                     	;# 
  4806  0F1B                     	;# 
  4807  0F1C                     	;# 
  4808  0F1D                     	;# 
  4809  0F1E                     	;# 
  4810  0F1F                     	;# 
  4811  0F20                     	;# 
  4812  0F21                     	;# 
  4813  0F22                     	;# 
  4814  0F23                     	;# 
  4815  0F24                     	;# 
  4816  0F25                     	;# 
  4817  0F26                     	;# 
  4818  0F27                     	;# 
  4819  0F28                     	;# 
  4820  0F29                     	;# 
  4821  0F2A                     	;# 
  4822  0F2B                     	;# 
  4823  0F2C                     	;# 
  4824  0F2D                     	;# 
  4825  0FE4                     	;# 
  4826  0FE5                     	;# 
  4827  0FE6                     	;# 
  4828  0FE7                     	;# 
  4829  0FE8                     	;# 
  4830  0FE9                     	;# 
  4831  0FEA                     	;# 
  4832  0FEB                     	;# 
  4833  0FED                     	;# 
  4834  0FEE                     	;# 
  4835  0FEF                     	;# 
  4836  0000                     	;# 
  4837  0001                     	;# 
  4838  0002                     	;# 
  4839  0003                     	;# 
  4840  0004                     	;# 
  4841  0005                     	;# 
  4842  0006                     	;# 
  4843  0007                     	;# 
  4844  0008                     	;# 
  4845  0009                     	;# 
  4846  000A                     	;# 
  4847  000B                     	;# 
  4848  000C                     	;# 
  4849  000D                     	;# 
  4850  000E                     	;# 
  4851  0011                     	;# 
  4852  0012                     	;# 
  4853  0013                     	;# 
  4854  0014                     	;# 
  4855  0015                     	;# 
  4856  0016                     	;# 
  4857  0016                     	;# 
  4858  0017                     	;# 
  4859  0018                     	;# 
  4860  0019                     	;# 
  4861  001A                     	;# 
  4862  001A                     	;# 
  4863  001B                     	;# 
  4864  001B                     	;# 
  4865  001C                     	;# 
  4866  001D                     	;# 
  4867  001E                     	;# 
  4868  001F                     	;# 
  4869  008C                     	;# 
  4870  008D                     	;# 
  4871  008E                     	;# 
  4872  0091                     	;# 
  4873  0092                     	;# 
  4874  0093                     	;# 
  4875  0094                     	;# 
  4876  0095                     	;# 
  4877  0096                     	;# 
  4878  0097                     	;# 
  4879  0098                     	;# 
  4880  0099                     	;# 
  4881  009A                     	;# 
  4882  009B                     	;# 
  4883  009B                     	;# 
  4884  009C                     	;# 
  4885  009D                     	;# 
  4886  009E                     	;# 
  4887  009F                     	;# 
  4888  010C                     	;# 
  4889  010D                     	;# 
  4890  010E                     	;# 
  4891  010F                     	;# 
  4892  0110                     	;# 
  4893  0111                     	;# 
  4894  0112                     	;# 
  4895  0113                     	;# 
  4896  0114                     	;# 
  4897  0115                     	;# 
  4898  0116                     	;# 
  4899  0117                     	;# 
  4900  0118                     	;# 
  4901  0119                     	;# 
  4902  011A                     	;# 
  4903  011B                     	;# 
  4904  011C                     	;# 
  4905  011D                     	;# 
  4906  011E                     	;# 
  4907  011F                     	;# 
  4908  018C                     	;# 
  4909  018D                     	;# 
  4910  018E                     	;# 
  4911  0191                     	;# 
  4912  0191                     	;# 
  4913  0192                     	;# 
  4914  0193                     	;# 
  4915  0193                     	;# 
  4916  0194                     	;# 
  4917  0195                     	;# 
  4918  0196                     	;# 
  4919  0199                     	;# 
  4920  0199                     	;# 
  4921  0199                     	;# 
  4922  019A                     	;# 
  4923  019A                     	;# 
  4924  019A                     	;# 
  4925  019B                     	;# 
  4926  019B                     	;# 
  4927  019B                     	;# 
  4928  019B                     	;# 
  4929  019B                     	;# 
  4930  019C                     	;# 
  4931  019C                     	;# 
  4932  019C                     	;# 
  4933  019D                     	;# 
  4934  019D                     	;# 
  4935  019D                     	;# 
  4936  019E                     	;# 
  4937  019E                     	;# 
  4938  019E                     	;# 
  4939  019F                     	;# 
  4940  019F                     	;# 
  4941  019F                     	;# 
  4942  019F                     	;# 
  4943  019F                     	;# 
  4944  020C                     	;# 
  4945  020D                     	;# 
  4946  020E                     	;# 
  4947  0211                     	;# 
  4948  0211                     	;# 
  4949  0212                     	;# 
  4950  0212                     	;# 
  4951  0213                     	;# 
  4952  0213                     	;# 
  4953  0214                     	;# 
  4954  0214                     	;# 
  4955  0215                     	;# 
  4956  0215                     	;# 
  4957  0215                     	;# 
  4958  0215                     	;# 
  4959  0216                     	;# 
  4960  0216                     	;# 
  4961  0217                     	;# 
  4962  0217                     	;# 
  4963  021D                     	;# 
  4964  021E                     	;# 
  4965  021F                     	;# 
  4966  028C                     	;# 
  4967  028D                     	;# 
  4968  028E                     	;# 
  4969  0291                     	;# 
  4970  0291                     	;# 
  4971  0292                     	;# 
  4972  0293                     	;# 
  4973  0294                     	;# 
  4974  0298                     	;# 
  4975  0298                     	;# 
  4976  0299                     	;# 
  4977  029A                     	;# 
  4978  029B                     	;# 
  4979  029E                     	;# 
  4980  030C                     	;# 
  4981  030D                     	;# 
  4982  030E                     	;# 
  4983  031B                     	;# 
  4984  031C                     	;# 
  4985  031D                     	;# 
  4986  031E                     	;# 
  4987  031F                     	;# 
  4988  038C                     	;# 
  4989  038D                     	;# 
  4990  038E                     	;# 
  4991  0391                     	;# 
  4992  0392                     	;# 
  4993  0393                     	;# 
  4994  0394                     	;# 
  4995  0395                     	;# 
  4996  0396                     	;# 
  4997  0397                     	;# 
  4998  0398                     	;# 
  4999  0399                     	;# 
  5000  039B                     	;# 
  5001  039C                     	;# 
  5002  039D                     	;# 
  5003  039E                     	;# 
  5004  039F                     	;# 
  5005  040E                     	;# 
  5006  0413                     	;# 
  5007  0413                     	;# 
  5008  0414                     	;# 
  5009  0414                     	;# 
  5010  0415                     	;# 
  5011  0416                     	;# 
  5012  0417                     	;# 
  5013  0418                     	;# 
  5014  041A                     	;# 
  5015  041A                     	;# 
  5016  041B                     	;# 
  5017  041B                     	;# 
  5018  041C                     	;# 
  5019  041D                     	;# 
  5020  041E                     	;# 
  5021  041F                     	;# 
  5022  0493                     	;# 
  5023  0493                     	;# 
  5024  0494                     	;# 
  5025  0495                     	;# 
  5026  0496                     	;# 
  5027  049A                     	;# 
  5028  049A                     	;# 
  5029  049B                     	;# 
  5030  049C                     	;# 
  5031  049D                     	;# 
  5032  050F                     	;# 
  5033  0510                     	;# 
  5034  0511                     	;# 
  5035  0512                     	;# 
  5036  0513                     	;# 
  5037  0514                     	;# 
  5038  0515                     	;# 
  5039  0516                     	;# 
  5040  0590                     	;# 
  5041  0591                     	;# 
  5042  0592                     	;# 
  5043  0592                     	;# 
  5044  0592                     	;# 
  5045  0593                     	;# 
  5046  0593                     	;# 
  5047  0594                     	;# 
  5048  0595                     	;# 
  5049  0595                     	;# 
  5050  0595                     	;# 
  5051  0596                     	;# 
  5052  0596                     	;# 
  5053  0597                     	;# 
  5054  0598                     	;# 
  5055  0598                     	;# 
  5056  0599                     	;# 
  5057  059A                     	;# 
  5058  059A                     	;# 
  5059  0617                     	;# 
  5060  0617                     	;# 
  5061  0618                     	;# 
  5062  0619                     	;# 
  5063  061A                     	;# 
  5064  061A                     	;# 
  5065  061B                     	;# 
  5066  061C                     	;# 
  5067  068D                     	;# 
  5068  068E                     	;# 
  5069  068F                     	;# 
  5070  0690                     	;# 
  5071  0691                     	;# 
  5072  0692                     	;# 
  5073  0693                     	;# 
  5074  0694                     	;# 
  5075  0695                     	;# 
  5076  0696                     	;# 
  5077  0697                     	;# 
  5078  0698                     	;# 
  5079  0699                     	;# 
  5080  069A                     	;# 
  5081  069B                     	;# 
  5082  069C                     	;# 
  5083  069D                     	;# 
  5084  069E                     	;# 
  5085  069F                     	;# 
  5086  070D                     	;# 
  5087  070E                     	;# 
  5088  070F                     	;# 
  5089  0710                     	;# 
  5090  0711                     	;# 
  5091  0712                     	;# 
  5092  0713                     	;# 
  5093  0714                     	;# 
  5094  0715                     	;# 
  5095  0716                     	;# 
  5096  0717                     	;# 
  5097  0718                     	;# 
  5098  0719                     	;# 
  5099  071A                     	;# 
  5100  071B                     	;# 
  5101  071C                     	;# 
  5102  071D                     	;# 
  5103  071E                     	;# 
  5104  071F                     	;# 
  5105  0794                     	;# 
  5106  0795                     	;# 
  5107  0796                     	;# 
  5108  0797                     	;# 
  5109  0798                     	;# 
  5110  0799                     	;# 
  5111  079A                     	;# 
  5112  079B                     	;# 
  5113  079C                     	;# 
  5114  079D                     	;# 
  5115  079E                     	;# 
  5116  079F                     	;# 
  5117  0D8E                     	;# 
  5118  0D8F                     	;# 
  5119  0D90                     	;# 
  5120  0D91                     	;# 
  5121  0D91                     	;# 
  5122  0D92                     	;# 
  5123  0D93                     	;# 
  5124  0D93                     	;# 
  5125  0D94                     	;# 
  5126  0D95                     	;# 
  5127  0D95                     	;# 
  5128  0D96                     	;# 
  5129  0D97                     	;# 
  5130  0D97                     	;# 
  5131  0D98                     	;# 
  5132  0D99                     	;# 
  5133  0D99                     	;# 
  5134  0D9A                     	;# 
  5135  0D9B                     	;# 
  5136  0D9C                     	;# 
  5137  0D9C                     	;# 
  5138  0D9D                     	;# 
  5139  0D9D                     	;# 
  5140  0D9E                     	;# 
  5141  0D9F                     	;# 
  5142  0DA0                     	;# 
  5143  0DA1                     	;# 
  5144  0DA1                     	;# 
  5145  0DA2                     	;# 
  5146  0DA3                     	;# 
  5147  0DA3                     	;# 
  5148  0DA4                     	;# 
  5149  0DA5                     	;# 
  5150  0DA5                     	;# 
  5151  0DA6                     	;# 
  5152  0DA7                     	;# 
  5153  0DA7                     	;# 
  5154  0DA8                     	;# 
  5155  0DA9                     	;# 
  5156  0DA9                     	;# 
  5157  0DAA                     	;# 
  5158  0DAB                     	;# 
  5159  0DAC                     	;# 
  5160  0DAC                     	;# 
  5161  0DAD                     	;# 
  5162  0DAD                     	;# 
  5163  0DAE                     	;# 
  5164  0DAF                     	;# 
  5165  0DB0                     	;# 
  5166  0E0F                     	;# 
  5167  0E10                     	;# 
  5168  0E11                     	;# 
  5169  0E12                     	;# 
  5170  0E13                     	;# 
  5171  0E14                     	;# 
  5172  0E15                     	;# 
  5173  0E16                     	;# 
  5174  0E17                     	;# 
  5175  0E19                     	;# 
  5176  0E19                     	;# 
  5177  0E19                     	;# 
  5178  0E1A                     	;# 
  5179  0E1B                     	;# 
  5180  0E1C                     	;# 
  5181  0E1C                     	;# 
  5182  0E1C                     	;# 
  5183  0E1D                     	;# 
  5184  0E1E                     	;# 
  5185  0E1F                     	;# 
  5186  0E1F                     	;# 
  5187  0E1F                     	;# 
  5188  0E20                     	;# 
  5189  0E21                     	;# 
  5190  0E22                     	;# 
  5191  0E24                     	;# 
  5192  0E25                     	;# 
  5193  0E28                     	;# 
  5194  0E29                     	;# 
  5195  0E2A                     	;# 
  5196  0E2B                     	;# 
  5197  0E2C                     	;# 
  5198  0E2D                     	;# 
  5199  0E2E                     	;# 
  5200  0E2F                     	;# 
  5201  0E30                     	;# 
  5202  0E31                     	;# 
  5203  0E32                     	;# 
  5204  0E33                     	;# 
  5205  0E34                     	;# 
  5206  0E35                     	;# 
  5207  0E90                     	;# 
  5208  0E91                     	;# 
  5209  0E92                     	;# 
  5210  0E94                     	;# 
  5211  0E95                     	;# 
  5212  0E9C                     	;# 
  5213  0E9D                     	;# 
  5214  0E9E                     	;# 
  5215  0E9F                     	;# 
  5216  0EA0                     	;# 
  5217  0EA1                     	;# 
  5218  0EA2                     	;# 
  5219  0EA3                     	;# 
  5220  0EA4                     	;# 
  5221  0EA5                     	;# 
  5222  0EA6                     	;# 
  5223  0EA7                     	;# 
  5224  0F0F                     	;# 
  5225  0F10                     	;# 
  5226  0F11                     	;# 
  5227  0F12                     	;# 
  5228  0F13                     	;# 
  5229  0F14                     	;# 
  5230  0F15                     	;# 
  5231  0F16                     	;# 
  5232  0F17                     	;# 
  5233  0F18                     	;# 
  5234  0F19                     	;# 
  5235  0F1A                     	;# 
  5236  0F1B                     	;# 
  5237  0F1C                     	;# 
  5238  0F1D                     	;# 
  5239  0F1E                     	;# 
  5240  0F1F                     	;# 
  5241  0F20                     	;# 
  5242  0F21                     	;# 
  5243  0F22                     	;# 
  5244  0F23                     	;# 
  5245  0F24                     	;# 
  5246  0F25                     	;# 
  5247  0F26                     	;# 
  5248  0F27                     	;# 
  5249  0F28                     	;# 
  5250  0F29                     	;# 
  5251  0F2A                     	;# 
  5252  0F2B                     	;# 
  5253  0F2C                     	;# 
  5254  0F2D                     	;# 
  5255  0FE4                     	;# 
  5256  0FE5                     	;# 
  5257  0FE6                     	;# 
  5258  0FE7                     	;# 
  5259  0FE8                     	;# 
  5260  0FE9                     	;# 
  5261  0FEA                     	;# 
  5262  0FEB                     	;# 
  5263  0FED                     	;# 
  5264  0FEE                     	;# 
  5265  0FEF                     	;_gpci
  5266                           
  5267 ;; Function _SPI_Close is unused but had its address taken
  5268  0000                     
  5269 ;; Function _SPI_ExchangeBlock is unused but had its address taken
  5270  0000                     
  5271 ;; Function _SPI_WriteBlock is unused but had its address taken
  5272  0000                     
  5273 ;; Function _SPI_ReadBlock is unused but had its address taken
  5274  0000                     
  5275 ;; Function _SPI_WriteByte is unused but had its address taken
  5276  0000                     
  5277 ;; Function _SPI_ReadByte is unused but had its address taken
  5278  0000                     
  5279                           	psect	idataBIGRAM
  5280  05E2                     __pidataBIGRAM:
  5281                           
  5282                           ;initializer for _gpci
  5283  05E2  3401               	retlw	1
  5284  05E3  340F               	retlw	low (_n_rot| (0+32768))
  5285  05E4  3497               	retlw	high (_n_rot| (0+32768))
  5286  05E5  3400               	retlw	0
  5287  05E6  3400               	retlw	0
  5288  05E7  3400               	retlw	0
  5289  05E8  3400               	retlw	0
  5290  05E9  3400               	retlw	0
  5291  05EA  3400               	retlw	0
  5292  05EB  3400               	retlw	0
  5293  05EC  3400               	retlw	0
  5294  05ED  3401               	retlw	1
  5295  05EE  344D               	retlw	low (_m_rot| (0+32768))
  5296  05EF  3495               	retlw	high (_m_rot| (0+32768))
  5297  05F0  3400               	retlw	0
  5298  05F1  3400               	retlw	0
  5299  05F2  3400               	retlw	0
  5300  05F3  3400               	retlw	0
  5301  05F4  3400               	retlw	0
  5302  05F5  3400               	retlw	0
  5303  05F6  3400               	retlw	0
  5304  05F7  3400               	retlw	0
  5305  05F8  3401               	retlw	1
  5306  05F9  3402               	retlw	low (_b_rot| (0+32768))
  5307  05FA  3495               	retlw	high (_b_rot| (0+32768))
  5308  05FB  3400               	retlw	0
  5309  05FC  3400               	retlw	0
  5310  05FD  3400               	retlw	0
  5311  05FE  3400               	retlw	0
  5312  05FF  3400               	retlw	0
  5313  0600  3400               	retlw	0
  5314  0601  3400               	retlw	0
  5315  0602  3400               	retlw	0
  5316  0603  3403               	retlw	3
  5317  0604  340F               	retlw	low (_n_rot| (0+32768))
  5318  0605  3497               	retlw	high (_n_rot| (0+32768))
  5319  0606  34E3               	retlw	low (_serie_rot| (0+32768))
  5320  0607  3495               	retlw	high (_serie_rot| (0+32768))
  5321  0608  344D               	retlw	low (_m_rot| (0+32768))
  5322  0609  3495               	retlw	high (_m_rot| (0+32768))
  5323  060A  3400               	retlw	0
  5324  060B  3400               	retlw	0
  5325  060C  3400               	retlw	0
  5326  060D  3400               	retlw	0
  5327  060E  3403               	retlw	3
  5328  060F  344D               	retlw	low (_m_rot| (0+32768))
  5329  0610  3495               	retlw	high (_m_rot| (0+32768))
  5330  0611  34E3               	retlw	low (_serie_rot| (0+32768))
  5331  0612  3495               	retlw	high (_serie_rot| (0+32768))
  5332  0613  340F               	retlw	low (_n_rot| (0+32768))
  5333  0614  3497               	retlw	high (_n_rot| (0+32768))
  5334  0615  3400               	retlw	0
  5335  0616  3400               	retlw	0
  5336  0617  3400               	retlw	0
  5337  0618  3400               	retlw	0
  5338  0619  3403               	retlw	3
  5339  061A  340F               	retlw	low (_n_rot| (0+32768))
  5340  061B  3497               	retlw	high (_n_rot| (0+32768))
  5341  061C  34E3               	retlw	low (_serie_rot| (0+32768))
  5342  061D  3495               	retlw	high (_serie_rot| (0+32768))
  5343  061E  3402               	retlw	low (_b_rot| (0+32768))
  5344  061F  3495               	retlw	high (_b_rot| (0+32768))
  5345  0620  3400               	retlw	0
  5346  0621  3400               	retlw	0
  5347  0622  3400               	retlw	0
  5348  0623  3400               	retlw	0
  5349  0624  3403               	retlw	3
  5350  0625  3402               	retlw	low (_b_rot| (0+32768))
  5351  0626  3495               	retlw	high (_b_rot| (0+32768))
  5352  0627  34E3               	retlw	low (_serie_rot| (0+32768))
  5353  0628  3495               	retlw	high (_serie_rot| (0+32768))
  5354  0629  340F               	retlw	low (_n_rot| (0+32768))
  5355  062A  3497               	retlw	high (_n_rot| (0+32768))
  5356  062B  3400               	retlw	0
  5357  062C  3400               	retlw	0
  5358  062D  3400               	retlw	0
  5359  062E  3400               	retlw	0
  5360  062F  3403               	retlw	3
  5361  0630  344D               	retlw	low (_m_rot| (0+32768))
  5362  0631  3495               	retlw	high (_m_rot| (0+32768))
  5363  0632  34E3               	retlw	low (_serie_rot| (0+32768))
  5364  0633  3495               	retlw	high (_serie_rot| (0+32768))
  5365  0634  3402               	retlw	low (_b_rot| (0+32768))
  5366  0635  3495               	retlw	high (_b_rot| (0+32768))
  5367  0636  3400               	retlw	0
  5368  0637  3400               	retlw	0
  5369  0638  3400               	retlw	0
  5370  0639  3400               	retlw	0
  5371  063A  3403               	retlw	3
  5372  063B  3402               	retlw	low (_b_rot| (0+32768))
  5373  063C  3495               	retlw	high (_b_rot| (0+32768))
  5374  063D  34E3               	retlw	low (_serie_rot| (0+32768))
  5375  063E  3495               	retlw	high (_serie_rot| (0+32768))
  5376  063F  344D               	retlw	low (_m_rot| (0+32768))
  5377  0640  3495               	retlw	high (_m_rot| (0+32768))
  5378  0641  3400               	retlw	0
  5379  0642  3400               	retlw	0
  5380  0643  3400               	retlw	0
  5381  0644  3400               	retlw	0
  5382  0645  3405               	retlw	5
  5383  0646  340F               	retlw	low (_n_rot| (0+32768))
  5384  0647  3497               	retlw	high (_n_rot| (0+32768))
  5385  0648  34E3               	retlw	low (_serie_rot| (0+32768))
  5386  0649  3495               	retlw	high (_serie_rot| (0+32768))
  5387  064A  344D               	retlw	low (_m_rot| (0+32768))
  5388  064B  3495               	retlw	high (_m_rot| (0+32768))
  5389  064C  34E3               	retlw	low (_serie_rot| (0+32768))
  5390  064D  3495               	retlw	high (_serie_rot| (0+32768))
  5391  064E  3402               	retlw	low (_b_rot| (0+32768))
  5392  064F  3495               	retlw	high (_b_rot| (0+32768))
  5393  0650  3405               	retlw	5
  5394  0651  340F               	retlw	low (_n_rot| (0+32768))
  5395  0652  3497               	retlw	high (_n_rot| (0+32768))
  5396  0653  34E3               	retlw	low (_serie_rot| (0+32768))
  5397  0654  3495               	retlw	high (_serie_rot| (0+32768))
  5398  0655  3402               	retlw	low (_b_rot| (0+32768))
  5399  0656  3495               	retlw	high (_b_rot| (0+32768))
  5400  0657  34E3               	retlw	low (_serie_rot| (0+32768))
  5401  0658  3495               	retlw	high (_serie_rot| (0+32768))
  5402  0659  344D               	retlw	low (_m_rot| (0+32768))
  5403  065A  3495               	retlw	high (_m_rot| (0+32768))
  5404  065B  3405               	retlw	5
  5405  065C  3402               	retlw	low (_b_rot| (0+32768))
  5406  065D  3495               	retlw	high (_b_rot| (0+32768))
  5407  065E  34E3               	retlw	low (_serie_rot| (0+32768))
  5408  065F  3495               	retlw	high (_serie_rot| (0+32768))
  5409  0660  340F               	retlw	low (_n_rot| (0+32768))
  5410  0661  3497               	retlw	high (_n_rot| (0+32768))
  5411  0662  34E3               	retlw	low (_serie_rot| (0+32768))
  5412  0663  3495               	retlw	high (_serie_rot| (0+32768))
  5413  0664  344D               	retlw	low (_m_rot| (0+32768))
  5414  0665  3495               	retlw	high (_m_rot| (0+32768))
  5415  0666  3405               	retlw	5
  5416  0667  3402               	retlw	low (_b_rot| (0+32768))
  5417  0668  3495               	retlw	high (_b_rot| (0+32768))
  5418  0669  34E3               	retlw	low (_serie_rot| (0+32768))
  5419  066A  3495               	retlw	high (_serie_rot| (0+32768))
  5420  066B  344D               	retlw	low (_m_rot| (0+32768))
  5421  066C  3495               	retlw	high (_m_rot| (0+32768))
  5422  066D  34E3               	retlw	low (_serie_rot| (0+32768))
  5423  066E  3495               	retlw	high (_serie_rot| (0+32768))
  5424  066F  340F               	retlw	low (_n_rot| (0+32768))
  5425  0670  3497               	retlw	high (_n_rot| (0+32768))
  5426  0671  3403               	retlw	3
  5427  0672  340F               	retlw	low (_n_rot| (0+32768))
  5428  0673  3497               	retlw	high (_n_rot| (0+32768))
  5429  0674  3498               	retlw	low (_parallel_rot| (0+32768))
  5430  0675  3495               	retlw	high (_parallel_rot| (0+32768))
  5431  0676  344D               	retlw	low (_m_rot| (0+32768))
  5432  0677  3495               	retlw	high (_m_rot| (0+32768))
  5433  0678  3400               	retlw	0
  5434  0679  3400               	retlw	0
  5435  067A  3400               	retlw	0
  5436  067B  3400               	retlw	0
  5437  067C  3403               	retlw	3
  5438  067D  340F               	retlw	low (_n_rot| (0+32768))
  5439  067E  3497               	retlw	high (_n_rot| (0+32768))
  5440  067F  3498               	retlw	low (_parallel_rot| (0+32768))
  5441  0680  3495               	retlw	high (_parallel_rot| (0+32768))
  5442  0681  3402               	retlw	low (_b_rot| (0+32768))
  5443  0682  3495               	retlw	high (_b_rot| (0+32768))
  5444  0683  3400               	retlw	0
  5445  0684  3400               	retlw	0
  5446  0685  3400               	retlw	0
  5447  0686  3400               	retlw	0
  5448  0687  3403               	retlw	3
  5449  0688  344D               	retlw	low (_m_rot| (0+32768))
  5450  0689  3495               	retlw	high (_m_rot| (0+32768))
  5451  068A  3498               	retlw	low (_parallel_rot| (0+32768))
  5452  068B  3495               	retlw	high (_parallel_rot| (0+32768))
  5453  068C  3402               	retlw	low (_b_rot| (0+32768))
  5454  068D  3495               	retlw	high (_b_rot| (0+32768))
  5455  068E  3400               	retlw	0
  5456  068F  3400               	retlw	0
  5457  0690  3400               	retlw	0
  5458  0691  3400               	retlw	0
  5459  0692  3405               	retlw	5
  5460  0693  340F               	retlw	low (_n_rot| (0+32768))
  5461  0694  3497               	retlw	high (_n_rot| (0+32768))
  5462  0695  3498               	retlw	low (_parallel_rot| (0+32768))
  5463  0696  3495               	retlw	high (_parallel_rot| (0+32768))
  5464  0697  344D               	retlw	low (_m_rot| (0+32768))
  5465  0698  3495               	retlw	high (_m_rot| (0+32768))
  5466  0699  3498               	retlw	low (_parallel_rot| (0+32768))
  5467  069A  3495               	retlw	high (_parallel_rot| (0+32768))
  5468  069B  3402               	retlw	low (_b_rot| (0+32768))
  5469  069C  3495               	retlw	high (_b_rot| (0+32768))
  5470  069D  3405               	retlw	5
  5471  069E  340F               	retlw	low (_n_rot| (0+32768))
  5472  069F  3497               	retlw	high (_n_rot| (0+32768))
  5473  06A0  3498               	retlw	low (_parallel_rot| (0+32768))
  5474  06A1  3495               	retlw	high (_parallel_rot| (0+32768))
  5475  06A2  344D               	retlw	low (_m_rot| (0+32768))
  5476  06A3  3495               	retlw	high (_m_rot| (0+32768))
  5477  06A4  34E3               	retlw	low (_serie_rot| (0+32768))
  5478  06A5  3495               	retlw	high (_serie_rot| (0+32768))
  5479  06A6  3402               	retlw	low (_b_rot| (0+32768))
  5480  06A7  3495               	retlw	high (_b_rot| (0+32768))
  5481  06A8  3405               	retlw	5
  5482  06A9  3402               	retlw	low (_b_rot| (0+32768))
  5483  06AA  3495               	retlw	high (_b_rot| (0+32768))
  5484  06AB  34E3               	retlw	low (_serie_rot| (0+32768))
  5485  06AC  3495               	retlw	high (_serie_rot| (0+32768))
  5486  06AD  340F               	retlw	low (_n_rot| (0+32768))
  5487  06AE  3497               	retlw	high (_n_rot| (0+32768))
  5488  06AF  3498               	retlw	low (_parallel_rot| (0+32768))
  5489  06B0  3495               	retlw	high (_parallel_rot| (0+32768))
  5490  06B1  344D               	retlw	low (_m_rot| (0+32768))
  5491  06B2  3495               	retlw	high (_m_rot| (0+32768))
  5492  06B3  3405               	retlw	5
  5493  06B4  340F               	retlw	low (_n_rot| (0+32768))
  5494  06B5  3497               	retlw	high (_n_rot| (0+32768))
  5495  06B6  34E3               	retlw	low (_serie_rot| (0+32768))
  5496  06B7  3495               	retlw	high (_serie_rot| (0+32768))
  5497  06B8  344D               	retlw	low (_m_rot| (0+32768))
  5498  06B9  3495               	retlw	high (_m_rot| (0+32768))
  5499  06BA  3498               	retlw	low (_parallel_rot| (0+32768))
  5500  06BB  3495               	retlw	high (_parallel_rot| (0+32768))
  5501  06BC  3402               	retlw	low (_b_rot| (0+32768))
  5502  06BD  3495               	retlw	high (_b_rot| (0+32768))
  5503  06BE  3405               	retlw	5
  5504  06BF  344D               	retlw	low (_m_rot| (0+32768))
  5505  06C0  3495               	retlw	high (_m_rot| (0+32768))
  5506  06C1  3498               	retlw	low (_parallel_rot| (0+32768))
  5507  06C2  3495               	retlw	high (_parallel_rot| (0+32768))
  5508  06C3  3402               	retlw	low (_b_rot| (0+32768))
  5509  06C4  3495               	retlw	high (_b_rot| (0+32768))
  5510  06C5  34E3               	retlw	low (_serie_rot| (0+32768))
  5511  06C6  3495               	retlw	high (_serie_rot| (0+32768))
  5512  06C7  340F               	retlw	low (_n_rot| (0+32768))
  5513  06C8  3497               	retlw	high (_n_rot| (0+32768))
  5514  06C9  3405               	retlw	5
  5515  06CA  340F               	retlw	low (_n_rot| (0+32768))
  5516  06CB  3497               	retlw	high (_n_rot| (0+32768))
  5517  06CC  3498               	retlw	low (_parallel_rot| (0+32768))
  5518  06CD  3495               	retlw	high (_parallel_rot| (0+32768))
  5519  06CE  3402               	retlw	low (_b_rot| (0+32768))
  5520  06CF  3495               	retlw	high (_b_rot| (0+32768))
  5521  06D0  34E3               	retlw	low (_serie_rot| (0+32768))
  5522  06D1  3495               	retlw	high (_serie_rot| (0+32768))
  5523  06D2  344D               	retlw	low (_m_rot| (0+32768))
  5524  06D3  3495               	retlw	high (_m_rot| (0+32768))
  5525  06D4  3405               	retlw	5
  5526  06D5  344D               	retlw	low (_m_rot| (0+32768))
  5527  06D6  3495               	retlw	high (_m_rot| (0+32768))
  5528  06D7  34E3               	retlw	low (_serie_rot| (0+32768))
  5529  06D8  3495               	retlw	high (_serie_rot| (0+32768))
  5530  06D9  340F               	retlw	low (_n_rot| (0+32768))
  5531  06DA  3497               	retlw	high (_n_rot| (0+32768))
  5532  06DB  3498               	retlw	low (_parallel_rot| (0+32768))
  5533  06DC  3495               	retlw	high (_parallel_rot| (0+32768))
  5534  06DD  3402               	retlw	low (_b_rot| (0+32768))
  5535  06DE  3495               	retlw	high (_b_rot| (0+32768))
  5536                           
  5537                           ;initializer for _pci
  5538  06DF  3400               	retlw	0
  5539  06E0  3400               	retlw	0
  5540  06E1  3400               	retlw	0
  5541  06E2  3400               	retlw	0
  5542  06E3  3400               	retlw	0
  5543  06E4  3400               	retlw	0
  5544  06E5  3400               	retlw	0
  5545  06E6  3401               	retlw	1
  5546  06E7  340F               	retlw	low (_n_rot| (0+32768))
  5547  06E8  3497               	retlw	high (_n_rot| (0+32768))
  5548  06E9  3400               	retlw	0
  5549  06EA  3400               	retlw	0
  5550  06EB  3400               	retlw	0
  5551  06EC  3400               	retlw	0
  5552  06ED  3401               	retlw	1
  5553  06EE  3479               	retlw	low (_s_rot| (0+32768))
  5554  06EF  3496               	retlw	high (_s_rot| (0+32768))
  5555  06F0  3400               	retlw	0
  5556  06F1  3400               	retlw	0
  5557  06F2  3400               	retlw	0
  5558  06F3  3400               	retlw	0
  5559  06F4  3401               	retlw	1
  5560  06F5  34C4               	retlw	low (_n_prime_rot| (0+32768))
  5561  06F6  3496               	retlw	high (_n_prime_rot| (0+32768))
  5562  06F7  3400               	retlw	0
  5563  06F8  3400               	retlw	0
  5564  06F9  3400               	retlw	0
  5565  06FA  3400               	retlw	0
  5566  06FB  3401               	retlw	1
  5567  06FC  342E               	retlw	low (_s_prime_rot| (0+32768))
  5568  06FD  3496               	retlw	high (_s_prime_rot| (0+32768))
  5569  06FE  3400               	retlw	0
  5570  06FF  3400               	retlw	0
  5571  0700  3400               	retlw	0
  5572  0701  3400               	retlw	0
  5573  0702  3403               	retlw	3
  5574  0703  340F               	retlw	low (_n_rot| (0+32768))
  5575  0704  3497               	retlw	high (_n_rot| (0+32768))
  5576  0705  34E3               	retlw	low (_serie_rot| (0+32768))
  5577  0706  3495               	retlw	high (_serie_rot| (0+32768))
  5578  0707  3479               	retlw	low (_s_rot| (0+32768))
  5579  0708  3496               	retlw	high (_s_rot| (0+32768))
  5580  0709  3403               	retlw	3
  5581  070A  3479               	retlw	low (_s_rot| (0+32768))
  5582  070B  3496               	retlw	high (_s_rot| (0+32768))
  5583  070C  34E3               	retlw	low (_serie_rot| (0+32768))
  5584  070D  3495               	retlw	high (_serie_rot| (0+32768))
  5585  070E  340F               	retlw	low (_n_rot| (0+32768))
  5586  070F  3497               	retlw	high (_n_rot| (0+32768))
  5587  0710  3403               	retlw	3
  5588  0711  340F               	retlw	low (_n_rot| (0+32768))
  5589  0712  3497               	retlw	high (_n_rot| (0+32768))
  5590  0713  34E3               	retlw	low (_serie_rot| (0+32768))
  5591  0714  3495               	retlw	high (_serie_rot| (0+32768))
  5592  0715  342E               	retlw	low (_s_prime_rot| (0+32768))
  5593  0716  3496               	retlw	high (_s_prime_rot| (0+32768))
  5594  0717  3403               	retlw	3
  5595  0718  342E               	retlw	low (_s_prime_rot| (0+32768))
  5596  0719  3496               	retlw	high (_s_prime_rot| (0+32768))
  5597  071A  34E3               	retlw	low (_serie_rot| (0+32768))
  5598  071B  3495               	retlw	high (_serie_rot| (0+32768))
  5599  071C  340F               	retlw	low (_n_rot| (0+32768))
  5600  071D  3497               	retlw	high (_n_rot| (0+32768))
  5601  071E  3403               	retlw	3
  5602  071F  34C4               	retlw	low (_n_prime_rot| (0+32768))
  5603  0720  3496               	retlw	high (_n_prime_rot| (0+32768))
  5604  0721  34E3               	retlw	low (_serie_rot| (0+32768))
  5605  0722  3495               	retlw	high (_serie_rot| (0+32768))
  5606  0723  3479               	retlw	low (_s_rot| (0+32768))
  5607  0724  3496               	retlw	high (_s_rot| (0+32768))
  5608  0725  3403               	retlw	3
  5609  0726  3479               	retlw	low (_s_rot| (0+32768))
  5610  0727  3496               	retlw	high (_s_rot| (0+32768))
  5611  0728  34E3               	retlw	low (_serie_rot| (0+32768))
  5612  0729  3495               	retlw	high (_serie_rot| (0+32768))
  5613  072A  34C4               	retlw	low (_n_prime_rot| (0+32768))
  5614  072B  3496               	retlw	high (_n_prime_rot| (0+32768))
  5615  072C  3403               	retlw	3
  5616  072D  34C4               	retlw	low (_n_prime_rot| (0+32768))
  5617  072E  3496               	retlw	high (_n_prime_rot| (0+32768))
  5618  072F  34E3               	retlw	low (_serie_rot| (0+32768))
  5619  0730  3495               	retlw	high (_serie_rot| (0+32768))
  5620  0731  342E               	retlw	low (_s_prime_rot| (0+32768))
  5621  0732  3496               	retlw	high (_s_prime_rot| (0+32768))
  5622  0733  3403               	retlw	3
  5623  0734  342E               	retlw	low (_s_prime_rot| (0+32768))
  5624  0735  3496               	retlw	high (_s_prime_rot| (0+32768))
  5625  0736  34E3               	retlw	low (_serie_rot| (0+32768))
  5626  0737  3495               	retlw	high (_serie_rot| (0+32768))
  5627  0738  34C4               	retlw	low (_n_prime_rot| (0+32768))
  5628  0739  3496               	retlw	high (_n_prime_rot| (0+32768))
  5629  073A  3403               	retlw	3
  5630  073B  340F               	retlw	low (_n_rot| (0+32768))
  5631  073C  3497               	retlw	high (_n_rot| (0+32768))
  5632  073D  3498               	retlw	low (_parallel_rot| (0+32768))
  5633  073E  3495               	retlw	high (_parallel_rot| (0+32768))
  5634  073F  3479               	retlw	low (_s_rot| (0+32768))
  5635  0740  3496               	retlw	high (_s_rot| (0+32768))
  5636  0741  3403               	retlw	3
  5637  0742  34C4               	retlw	low (_n_prime_rot| (0+32768))
  5638  0743  3496               	retlw	high (_n_prime_rot| (0+32768))
  5639  0744  3498               	retlw	low (_parallel_rot| (0+32768))
  5640  0745  3495               	retlw	high (_parallel_rot| (0+32768))
  5641  0746  3479               	retlw	low (_s_rot| (0+32768))
  5642  0747  3496               	retlw	high (_s_rot| (0+32768))
  5643  0748  3403               	retlw	3
  5644  0749  340F               	retlw	low (_n_rot| (0+32768))
  5645  074A  3497               	retlw	high (_n_rot| (0+32768))
  5646  074B  3498               	retlw	low (_parallel_rot| (0+32768))
  5647  074C  3495               	retlw	high (_parallel_rot| (0+32768))
  5648  074D  342E               	retlw	low (_s_prime_rot| (0+32768))
  5649  074E  3496               	retlw	high (_s_prime_rot| (0+32768))
  5650  074F  3403               	retlw	3
  5651  0750  34C4               	retlw	low (_n_prime_rot| (0+32768))
  5652  0751  3496               	retlw	high (_n_prime_rot| (0+32768))
  5653  0752  3498               	retlw	low (_parallel_rot| (0+32768))
  5654  0753  3495               	retlw	high (_parallel_rot| (0+32768))
  5655  0754  342E               	retlw	low (_s_prime_rot| (0+32768))
  5656  0755  3496               	retlw	high (_s_prime_rot| (0+32768))
  5657                           
  5658                           	psect	idataBANK1
  5659  07D3                     __pidataBANK1:
  5660                           
  5661                           ;initializer for main@F9492
  5662  07D3  3408               	retlw	8
  5663  07D4  3408               	retlw	8
  5664  07D5  3408               	retlw	8
  5665  07D6  3408               	retlw	8
  5666                           
  5667                           ;initializer for main@F9490
  5668  07D7  3410               	retlw	16
  5669  07D8  3410               	retlw	16
  5670  07D9  3410               	retlw	16
  5671  07DA  3410               	retlw	16
  5672                           
  5673                           ;initializer for main@F9488
  5674  07DB  340F               	retlw	15
  5675  07DC  340F               	retlw	15
  5676  07DD  340F               	retlw	15
  5677  07DE  340F               	retlw	15
  5678                           
  5679                           ;initializer for _time_to_refresh
  5680  07DF  3401               	retlw	1
  5681                           
  5682                           ;initializer for _selection_index
  5683  07E0  34FF               	retlw	-1
  5684                           
  5685                           ;initializer for _saved_pc
  5686  07E1  3401               	retlw	1
  5687  07E2  3402               	retlw	2
  5688  07E3  3403               	retlw	3
  5689  07E4  3404               	retlw	4
  5690  07E5  3405               	retlw	5
  5691  07E6  340A               	retlw	10
  5692  07E7  3404               	retlw	4
  5693  07E8  3402               	retlw	2
  5694  07E9  3402               	retlw	2
  5695  07EA  340C               	retlw	12
  5696  07EB  340D               	retlw	13
  5697  07EC  340C               	retlw	12
  5698  07ED  3401               	retlw	1
  5699  07EE  340F               	retlw	15
  5700  07EF  340C               	retlw	12
  5701  07F0  3415               	retlw	21
  5702  07F1  3404               	retlw	4
  5703  07F2  3401               	retlw	1
  5704  07F3  3405               	retlw	5
  5705  07F4  3411               	retlw	17
  5706                           
  5707                           	psect	idataBANK2
  5708  0847                     __pidataBANK2:
  5709                           
  5710                           ;initializer for read_rotary@rot_enc_table
  5711  0847  3400               	retlw	0
  5712  0848  3401               	retlw	1
  5713  0849  3401               	retlw	1
  5714  084A  3400               	retlw	0
  5715  084B  3401               	retlw	1
  5716  084C  3400               	retlw	0
  5717  084D  3400               	retlw	0
  5718  084E  3401               	retlw	1
  5719  084F  3401               	retlw	1
  5720  0850  3400               	retlw	0
  5721  0851  3400               	retlw	0
  5722  0852  3401               	retlw	1
  5723  0853  3400               	retlw	0
  5724  0854  3401               	retlw	1
  5725  0855  3401               	retlw	1
  5726  0856  3400               	retlw	0
  5727                           
  5728                           ;initializer for _buffer
  5729  0857  3464               	retlw	100
  5730  0858  3461               	retlw	97
  5731  0859  3474               	retlw	116
  5732  085A  3461               	retlw	97
  5733  085B  3400               	retlw	0
  5734  085C  3400               	retlw	0
  5735  085D  3400               	retlw	0
  5736  085E  3400               	retlw	0
  5737  085F  3400               	retlw	0
  5738  0860  3400               	retlw	0
  5739  0861  3400               	retlw	0
  5740  0862  3400               	retlw	0
  5741  0863  3400               	retlw	0
  5742  0864  3400               	retlw	0
  5743  0865  3400               	retlw	0
  5744  0866  3400               	retlw	0
  5745                           
  5746                           	psect	stringtext1
  5747  175A                     __pstringtext1:
  5748  175A                     _general_pickup_configuration_selectors:
  5749  175A  3400               	retlw	0
  5750  175B  3409               	retlw	9
  5751  175C  3480               	retlw	128
  5752  175D  3404               	retlw	4
  5753  175E  3440               	retlw	64
  5754  175F  3402               	retlw	2
  5755  1760  34A0               	retlw	160
  5756  1761  3408               	retlw	8
  5757  1762  3404               	retlw	4
  5758  1763  3405               	retlw	5
  5759  1764  3450               	retlw	80
  5760  1765  3408               	retlw	8
  5761  1766  3402               	retlw	2
  5762  1767  3403               	retlw	3
  5763  1768  3448               	retlw	72
  5764  1769  3404               	retlw	4
  5765  176A  3481               	retlw	129
  5766  176B  3402               	retlw	2
  5767  176C  3468               	retlw	104
  5768  176D  3408               	retlw	8
  5769  176E  3491               	retlw	145
  5770  176F  3408               	retlw	8
  5771  1770  34A2               	retlw	162
  5772  1771  3402               	retlw	2
  5773  1772  3405               	retlw	5
  5774  1773  3403               	retlw	3
  5775  1774  3480               	retlw	128
  5776  1775  340D               	retlw	13
  5777  1776  3440               	retlw	64
  5778  1777  340B               	retlw	11
  5779  1778  34C0               	retlw	192
  5780  1779  3406               	retlw	6
  5781  177A  34C0               	retlw	192
  5782  177B  340F               	retlw	15
  5783  177C  3458               	retlw	88
  5784  177D  340C               	retlw	12
  5785  177E  3483               	retlw	131
  5786  177F  3403               	retlw	3
  5787  1780  34F0               	retlw	240
  5788  1781  3408               	retlw	8
  5789  1782  3406               	retlw	6
  5790  1783  3407               	retlw	7
  5791  1784  34A1               	retlw	161
  5792  1785  340A               	retlw	10
  5793  1786  344C               	retlw	76
  5794  1787  3405               	retlw	5
  5795  1788                     __end_of_general_pickup_configuration_selectors:
  5796                           
  5797                           	psect	stringtext2
  5798  1788                     __pstringtext2:
  5799  1788                     _pickup_configuration_selectors:
  5800  1788  3400               	retlw	0
  5801  1789  3400               	retlw	0
  5802  178A  3400               	retlw	0
  5803  178B  340A               	retlw	10
  5804  178C  3400               	retlw	0
  5805  178D  3405               	retlw	5
  5806  178E  34C0               	retlw	192
  5807  178F  3400               	retlw	0
  5808  1790  3430               	retlw	48
  5809  1791  3400               	retlw	0
  5810  1792  3408               	retlw	8
  5811  1793  3409               	retlw	9
  5812  1794  3406               	retlw	6
  5813  1795  3408               	retlw	8
  5814  1796  3424               	retlw	36
  5815  1797  3408               	retlw	8
  5816  1798  3412               	retlw	18
  5817  1799  3402               	retlw	2
  5818  179A  3442               	retlw	66
  5819  179B  3401               	retlw	1
  5820  179C  3484               	retlw	132
  5821  179D  3404               	retlw	4
  5822  179E  3461               	retlw	97
  5823  179F  3400               	retlw	0
  5824  17A0  3498               	retlw	152
  5825  17A1  3400               	retlw	0
  5826  17A2  3400               	retlw	0
  5827  17A3  340F               	retlw	15
  5828  17A4  34C0               	retlw	192
  5829  17A5  3405               	retlw	5
  5830  17A6  3430               	retlw	48
  5831  17A7  340A               	retlw	10
  5832  17A8  34F0               	retlw	240
  5833  17A9  3400               	retlw	0
  5834  17AA                     __end_of_pickup_configuration_selectors:
  5835  1F80                     _configurations_absaddr	set	8064
  5836                           
  5837                           	psect	stringtext3
  5838  1823                     __pstringtext3:
  5839  1823                     _spi_configuration:
  5840  1823  340A               	retlw	10
  5841  1824  3440               	retlw	64
  5842  1825  3407               	retlw	7
  5843  1826  3400               	retlw	0
  5844  1827  3400               	retlw	0
  5845  1828  3440               	retlw	64
  5846  1829  3401               	retlw	1
  5847  182A  3400               	retlw	0
  5848  182B                     __end_of_spi_configuration:
  5849                           
  5850                           	psect	stringtext4
  5851  182B                     __pstringtext4:
  5852  182B                     SwitchEventHandler@conv_table:
  5853  182B  3400               	retlw	0
  5854  182C  3402               	retlw	2
  5855  182D  3401               	retlw	1
  5856  182E  3404               	retlw	4
  5857  182F  3400               	retlw	0
  5858  1830  3403               	retlw	3
  5859  1831                     __end_ofSwitchEventHandler@conv_table:
  5860                           
  5861                           	psect	stringtext5
  5862  1000                     __pstringtext5:
  5863  1000                     _possible_general_conf_str:
  5864  1000  344E               	retlw	78
  5865  1001  3400               	retlw	0
  5866  1002  3400               	retlw	0
  5867  1003  3400               	retlw	0
  5868  1004  3400               	retlw	0
  5869  1005  3400               	retlw	0
  5870  1006  3400               	retlw	0
  5871  1007  3400               	retlw	0
  5872  1008  3400               	retlw	0
  5873  1009  3400               	retlw	0
  5874  100A  344D               	retlw	77
  5875  100B  3400               	retlw	0
  5876  100C  3400               	retlw	0
  5877  100D  3400               	retlw	0
  5878  100E  3400               	retlw	0
  5879  100F  3400               	retlw	0
  5880  1010  3400               	retlw	0
  5881  1011  3400               	retlw	0
  5882  1012  3400               	retlw	0
  5883  1013  3400               	retlw	0
  5884  1014  3442               	retlw	66
  5885  1015  3400               	retlw	0
  5886  1016  3400               	retlw	0
  5887  1017  3400               	retlw	0
  5888  1018  3400               	retlw	0
  5889  1019  3400               	retlw	0
  5890  101A  3400               	retlw	0
  5891  101B  3400               	retlw	0
  5892  101C  3400               	retlw	0
  5893  101D  3400               	retlw	0
  5894  101E  344E               	retlw	78
  5895  101F  342B               	retlw	43
  5896  1020  344D               	retlw	77
  5897  1021  3400               	retlw	0
  5898  1022  3400               	retlw	0
  5899  1023  3400               	retlw	0
  5900  1024  3400               	retlw	0
  5901  1025  3400               	retlw	0
  5902  1026  3400               	retlw	0
  5903  1027  3400               	retlw	0
  5904  1028  344D               	retlw	77
  5905  1029  342B               	retlw	43
  5906  102A  344E               	retlw	78
  5907  102B  3400               	retlw	0
  5908  102C  3400               	retlw	0
  5909  102D  3400               	retlw	0
  5910  102E  3400               	retlw	0
  5911  102F  3400               	retlw	0
  5912  1030  3400               	retlw	0
  5913  1031  3400               	retlw	0
  5914  1032  344E               	retlw	78
  5915  1033  342B               	retlw	43
  5916  1034  3442               	retlw	66
  5917  1035  3400               	retlw	0
  5918  1036  3400               	retlw	0
  5919  1037  3400               	retlw	0
  5920  1038  3400               	retlw	0
  5921  1039  3400               	retlw	0
  5922  103A  3400               	retlw	0
  5923  103B  3400               	retlw	0
  5924  103C  3442               	retlw	66
  5925  103D  342B               	retlw	43
  5926  103E  344E               	retlw	78
  5927  103F  3400               	retlw	0
  5928  1040  3400               	retlw	0
  5929  1041  3400               	retlw	0
  5930  1042  3400               	retlw	0
  5931  1043  3400               	retlw	0
  5932  1044  3400               	retlw	0
  5933  1045  3400               	retlw	0
  5934  1046  344D               	retlw	77
  5935  1047  342B               	retlw	43
  5936  1048  3442               	retlw	66
  5937  1049  3400               	retlw	0
  5938  104A  3400               	retlw	0
  5939  104B  3400               	retlw	0
  5940  104C  3400               	retlw	0
  5941  104D  3400               	retlw	0
  5942  104E  3400               	retlw	0
  5943  104F  3400               	retlw	0
  5944  1050  3442               	retlw	66
  5945  1051  342B               	retlw	43
  5946  1052  344D               	retlw	77
  5947  1053  3400               	retlw	0
  5948  1054  3400               	retlw	0
  5949  1055  3400               	retlw	0
  5950  1056  3400               	retlw	0
  5951  1057  3400               	retlw	0
  5952  1058  3400               	retlw	0
  5953  1059  3400               	retlw	0
  5954  105A  344E               	retlw	78
  5955  105B  342B               	retlw	43
  5956  105C  344D               	retlw	77
  5957  105D  342B               	retlw	43
  5958  105E  3442               	retlw	66
  5959  105F  3400               	retlw	0
  5960  1060  3400               	retlw	0
  5961  1061  3400               	retlw	0
  5962  1062  3400               	retlw	0
  5963  1063  3400               	retlw	0
  5964  1064  344E               	retlw	78
  5965  1065  342B               	retlw	43
  5966  1066  3442               	retlw	66
  5967  1067  342B               	retlw	43
  5968  1068  344D               	retlw	77
  5969  1069  3400               	retlw	0
  5970  106A  3400               	retlw	0
  5971  106B  3400               	retlw	0
  5972  106C  3400               	retlw	0
  5973  106D  3400               	retlw	0
  5974  106E  3442               	retlw	66
  5975  106F  342B               	retlw	43
  5976  1070  344E               	retlw	78
  5977  1071  342B               	retlw	43
  5978  1072  344D               	retlw	77
  5979  1073  3400               	retlw	0
  5980  1074  3400               	retlw	0
  5981  1075  3400               	retlw	0
  5982  1076  3400               	retlw	0
  5983  1077  3400               	retlw	0
  5984  1078  3442               	retlw	66
  5985  1079  342B               	retlw	43
  5986  107A  344D               	retlw	77
  5987  107B  342B               	retlw	43
  5988  107C  344E               	retlw	78
  5989  107D  3400               	retlw	0
  5990  107E  3400               	retlw	0
  5991  107F  3400               	retlw	0
  5992  1080  3400               	retlw	0
  5993  1081  3400               	retlw	0
  5994  1082  344E               	retlw	78
  5995  1083  342F               	retlw	47
  5996  1084  342F               	retlw	47
  5997  1085  344D               	retlw	77
  5998  1086  3400               	retlw	0
  5999  1087  3400               	retlw	0
  6000  1088  3400               	retlw	0
  6001  1089  3400               	retlw	0
  6002  108A  3400               	retlw	0
  6003  108B  3400               	retlw	0
  6004  108C  344E               	retlw	78
  6005  108D  342F               	retlw	47
  6006  108E  342F               	retlw	47
  6007  108F  3442               	retlw	66
  6008  1090  3400               	retlw	0
  6009  1091  3400               	retlw	0
  6010  1092  3400               	retlw	0
  6011  1093  3400               	retlw	0
  6012  1094  3400               	retlw	0
  6013  1095  3400               	retlw	0
  6014  1096  344D               	retlw	77
  6015  1097  342F               	retlw	47
  6016  1098  342F               	retlw	47
  6017  1099  3442               	retlw	66
  6018  109A  3400               	retlw	0
  6019  109B  3400               	retlw	0
  6020  109C  3400               	retlw	0
  6021  109D  3400               	retlw	0
  6022  109E  3400               	retlw	0
  6023  109F  3400               	retlw	0
  6024  10A0  344E               	retlw	78
  6025  10A1  342F               	retlw	47
  6026  10A2  342F               	retlw	47
  6027  10A3  344D               	retlw	77
  6028  10A4  342F               	retlw	47
  6029  10A5  342F               	retlw	47
  6030  10A6  3442               	retlw	66
  6031  10A7  3400               	retlw	0
  6032  10A8  3400               	retlw	0
  6033  10A9  3400               	retlw	0
  6034  10AA  344E               	retlw	78
  6035  10AB  342F               	retlw	47
  6036  10AC  342F               	retlw	47
  6037  10AD  344D               	retlw	77
  6038  10AE  342B               	retlw	43
  6039  10AF  3442               	retlw	66
  6040  10B0  3400               	retlw	0
  6041  10B1  3400               	retlw	0
  6042  10B2  3400               	retlw	0
  6043  10B3  3400               	retlw	0
  6044  10B4  3442               	retlw	66
  6045  10B5  342B               	retlw	43
  6046  10B6  344E               	retlw	78
  6047  10B7  342F               	retlw	47
  6048  10B8  342F               	retlw	47
  6049  10B9  344D               	retlw	77
  6050  10BA  3400               	retlw	0
  6051  10BB  3400               	retlw	0
  6052  10BC  3400               	retlw	0
  6053  10BD  3400               	retlw	0
  6054  10BE  344E               	retlw	78
  6055  10BF  342B               	retlw	43
  6056  10C0  344D               	retlw	77
  6057  10C1  342F               	retlw	47
  6058  10C2  342F               	retlw	47
  6059  10C3  3442               	retlw	66
  6060  10C4  3400               	retlw	0
  6061  10C5  3400               	retlw	0
  6062  10C6  3400               	retlw	0
  6063  10C7  3400               	retlw	0
  6064  10C8  344D               	retlw	77
  6065  10C9  342F               	retlw	47
  6066  10CA  342F               	retlw	47
  6067  10CB  3442               	retlw	66
  6068  10CC  342B               	retlw	43
  6069  10CD  344E               	retlw	78
  6070  10CE  3400               	retlw	0
  6071  10CF  3400               	retlw	0
  6072  10D0  3400               	retlw	0
  6073  10D1  3400               	retlw	0
  6074  10D2  344E               	retlw	78
  6075  10D3  342F               	retlw	47
  6076  10D4  342F               	retlw	47
  6077  10D5  3442               	retlw	66
  6078  10D6  342B               	retlw	43
  6079  10D7  344D               	retlw	77
  6080  10D8  3400               	retlw	0
  6081  10D9  3400               	retlw	0
  6082  10DA  3400               	retlw	0
  6083  10DB  3400               	retlw	0
  6084  10DC  344D               	retlw	77
  6085  10DD  342B               	retlw	43
  6086  10DE  344E               	retlw	78
  6087  10DF  342F               	retlw	47
  6088  10E0  342F               	retlw	47
  6089  10E1  3442               	retlw	66
  6090  10E2  3400               	retlw	0
  6091  10E3  3400               	retlw	0
  6092  10E4  3400               	retlw	0
  6093  10E5  3400               	retlw	0
  6094  10E6                     __end_of_possible_general_conf_str:
  6095                           
  6096                           	psect	stringtext6
  6097  10E6                     __pstringtext6:
  6098  10E6                     _g_arrow_rot:
  6099  10E6  3400               	retlw	0
  6100  10E7  3400               	retlw	0
  6101  10E8  3400               	retlw	0
  6102  10E9  3400               	retlw	0
  6103  10EA  3400               	retlw	0
  6104  10EB  3400               	retlw	0
  6105  10EC  3400               	retlw	0
  6106  10ED  3418               	retlw	24
  6107  10EE  3400               	retlw	0
  6108  10EF  3400               	retlw	0
  6109  10F0  3438               	retlw	56
  6110  10F1  3400               	retlw	0
  6111  10F2  3400               	retlw	0
  6112  10F3  343C               	retlw	60
  6113  10F4  3400               	retlw	0
  6114  10F5  3400               	retlw	0
  6115  10F6  347C               	retlw	124
  6116  10F7  3400               	retlw	0
  6117  10F8  3400               	retlw	0
  6118  10F9  347C               	retlw	124
  6119  10FA  3400               	retlw	0
  6120  10FB  3400               	retlw	0
  6121  10FC  347E               	retlw	126
  6122  10FD  3400               	retlw	0
  6123  10FE  3400               	retlw	0
  6124  10FF  34FE               	retlw	254
  6125  1100  3400               	retlw	0
  6126  1101  3400               	retlw	0
  6127  1102  34FE               	retlw	254
  6128  1103  3400               	retlw	0
  6129  1104  3400               	retlw	0
  6130  1105  34EF               	retlw	239
  6131  1106  3400               	retlw	0
  6132  1107  3401               	retlw	1
  6133  1108  34EF               	retlw	239
  6134  1109  3400               	retlw	0
  6135  110A  3401               	retlw	1
  6136  110B  34C7               	retlw	199
  6137  110C  3480               	retlw	128
  6138  110D  3401               	retlw	1
  6139  110E  34C7               	retlw	199
  6140  110F  3480               	retlw	128
  6141  1110  3401               	retlw	1
  6142  1111  3483               	retlw	131
  6143  1112  3480               	retlw	128
  6144  1113  3400               	retlw	0
  6145  1114  3403               	retlw	3
  6146  1115  3480               	retlw	128
  6147  1116  3400               	retlw	0
  6148  1117  3401               	retlw	1
  6149  1118  3480               	retlw	128
  6150  1119  3400               	retlw	0
  6151  111A  3400               	retlw	0
  6152  111B  3400               	retlw	0
  6153  111C  3400               	retlw	0
  6154  111D  3410               	retlw	16
  6155  111E  3400               	retlw	0
  6156  111F  3400               	retlw	0
  6157  1120  3418               	retlw	24
  6158  1121  3400               	retlw	0
  6159  1122  3400               	retlw	0
  6160  1123  3418               	retlw	24
  6161  1124  3400               	retlw	0
  6162  1125  3400               	retlw	0
  6163  1126  3418               	retlw	24
  6164  1127  3400               	retlw	0
  6165  1128  3400               	retlw	0
  6166  1129  3418               	retlw	24
  6167  112A  3400               	retlw	0
  6168  112B  3400               	retlw	0
  6169  112C  3418               	retlw	24
  6170  112D  3400               	retlw	0
  6171  112E  3400               	retlw	0
  6172  112F  3418               	retlw	24
  6173  1130  3400               	retlw	0
  6174  1131  3400               	retlw	0
  6175  1132  3418               	retlw	24
  6176  1133  3400               	retlw	0
  6177  1134  3400               	retlw	0
  6178  1135  3418               	retlw	24
  6179  1136  3400               	retlw	0
  6180  1137  3400               	retlw	0
  6181  1138  3418               	retlw	24
  6182  1139  3400               	retlw	0
  6183  113A  3400               	retlw	0
  6184  113B  3418               	retlw	24
  6185  113C  3400               	retlw	0
  6186  113D  3400               	retlw	0
  6187  113E  3418               	retlw	24
  6188  113F  3400               	retlw	0
  6189  1140  3400               	retlw	0
  6190  1141  3410               	retlw	16
  6191  1142  3400               	retlw	0
  6192  1143  3400               	retlw	0
  6193  1144  3400               	retlw	0
  6194  1145  3400               	retlw	0
  6195  1146  3400               	retlw	0
  6196  1147  3400               	retlw	0
  6197  1148  3400               	retlw	0
  6198  1149  3400               	retlw	0
  6199  114A  3400               	retlw	0
  6200  114B  3400               	retlw	0
  6201  114C  3400               	retlw	0
  6202  114D  3400               	retlw	0
  6203  114E  3400               	retlw	0
  6204  114F  3400               	retlw	0
  6205  1150  3400               	retlw	0
  6206  1151  3400               	retlw	0
  6207  1152  3400               	retlw	0
  6208  1153  3400               	retlw	0
  6209  1154  3400               	retlw	0
  6210  1155  3400               	retlw	0
  6211  1156  3400               	retlw	0
  6212  1157  3400               	retlw	0
  6213  1158  3400               	retlw	0
  6214  1159  3418               	retlw	24
  6215  115A  3400               	retlw	0
  6216  115B  3400               	retlw	0
  6217  115C  343C               	retlw	60
  6218  115D  3400               	retlw	0
  6219  115E  3400               	retlw	0
  6220  115F  343E               	retlw	62
  6221  1160  3400               	retlw	0
  6222  1161  3400               	retlw	0
  6223  1162  347E               	retlw	126
  6224  1163  3400               	retlw	0
  6225  1164  3400               	retlw	0
  6226  1165  347F               	retlw	127
  6227  1166  3400               	retlw	0
  6228  1167  3438               	retlw	56
  6229  1168  34FF               	retlw	255
  6230  1169  3400               	retlw	0
  6231  116A  3478               	retlw	120
  6232  116B  34FF               	retlw	255
  6233  116C  3400               	retlw	0
  6234  116D  347C               	retlw	124
  6235  116E  34FF               	retlw	255
  6236  116F  3480               	retlw	128
  6237  1170  34FC               	retlw	252
  6238  1171  346F               	retlw	111
  6239  1172  3480               	retlw	128
  6240  1173  347E               	retlw	126
  6241  1174  340F               	retlw	15
  6242  1175  3480               	retlw	128
  6243  1176  343E               	retlw	62
  6244  1177  3407               	retlw	7
  6245  1178  3480               	retlw	128
  6246  1179  343F               	retlw	63
  6247  117A  3407               	retlw	7
  6248  117B  34C0               	retlw	192
  6249  117C  341F               	retlw	31
  6250  117D  3487               	retlw	135
  6251  117E  34C0               	retlw	192
  6252  117F  341F               	retlw	31
  6253  1180  34C7               	retlw	199
  6254  1181  34C0               	retlw	192
  6255  1182  340F               	retlw	15
  6256  1183  34C7               	retlw	199
  6257  1184  34C0               	retlw	192
  6258  1185  3407               	retlw	7
  6259  1186  34E7               	retlw	231
  6260  1187  34C0               	retlw	192
  6261  1188  3403               	retlw	3
  6262  1189  34F7               	retlw	247
  6263  118A  34C0               	retlw	192
  6264  118B  3401               	retlw	1
  6265  118C  34FF               	retlw	255
  6266  118D  34C0               	retlw	192
  6267  118E  3400               	retlw	0
  6268  118F  34FF               	retlw	255
  6269  1190  3480               	retlw	128
  6270  1191  3400               	retlw	0
  6271  1192  347F               	retlw	127
  6272  1193  3480               	retlw	128
  6273  1194  3400               	retlw	0
  6274  1195  343E               	retlw	62
  6275  1196  3400               	retlw	0
  6276  1197  3400               	retlw	0
  6277  1198  3400               	retlw	0
  6278  1199  3400               	retlw	0
  6279  119A  3400               	retlw	0
  6280  119B  3400               	retlw	0
  6281  119C  3400               	retlw	0
  6282  119D                     __end_of_g_arrow_rot:
  6283                           
  6284                           	psect	stringtext7
  6285  119D                     __pstringtext7:
  6286  119D                     _b_arrow_rot:
  6287  119D  3400               	retlw	0
  6288  119E  3400               	retlw	0
  6289  119F  3400               	retlw	0
  6290  11A0  3400               	retlw	0
  6291  11A1  3400               	retlw	0
  6292  11A2  3400               	retlw	0
  6293  11A3  3400               	retlw	0
  6294  11A4  3418               	retlw	24
  6295  11A5  3400               	retlw	0
  6296  11A6  3400               	retlw	0
  6297  11A7  3438               	retlw	56
  6298  11A8  3400               	retlw	0
  6299  11A9  3400               	retlw	0
  6300  11AA  343C               	retlw	60
  6301  11AB  3400               	retlw	0
  6302  11AC  3400               	retlw	0
  6303  11AD  347C               	retlw	124
  6304  11AE  3400               	retlw	0
  6305  11AF  3400               	retlw	0
  6306  11B0  347C               	retlw	124
  6307  11B1  3400               	retlw	0
  6308  11B2  3400               	retlw	0
  6309  11B3  347E               	retlw	126
  6310  11B4  3400               	retlw	0
  6311  11B5  3400               	retlw	0
  6312  11B6  34FE               	retlw	254
  6313  11B7  3400               	retlw	0
  6314  11B8  3400               	retlw	0
  6315  11B9  34FE               	retlw	254
  6316  11BA  3400               	retlw	0
  6317  11BB  3400               	retlw	0
  6318  11BC  34EF               	retlw	239
  6319  11BD  3400               	retlw	0
  6320  11BE  3401               	retlw	1
  6321  11BF  34EF               	retlw	239
  6322  11C0  3400               	retlw	0
  6323  11C1  3401               	retlw	1
  6324  11C2  34C7               	retlw	199
  6325  11C3  3480               	retlw	128
  6326  11C4  3401               	retlw	1
  6327  11C5  34C7               	retlw	199
  6328  11C6  3480               	retlw	128
  6329  11C7  3401               	retlw	1
  6330  11C8  3483               	retlw	131
  6331  11C9  3480               	retlw	128
  6332  11CA  3400               	retlw	0
  6333  11CB  3403               	retlw	3
  6334  11CC  3480               	retlw	128
  6335  11CD  3400               	retlw	0
  6336  11CE  3401               	retlw	1
  6337  11CF  3480               	retlw	128
  6338  11D0  3400               	retlw	0
  6339  11D1  3400               	retlw	0
  6340  11D2  3400               	retlw	0
  6341  11D3  3400               	retlw	0
  6342  11D4  3410               	retlw	16
  6343  11D5  3400               	retlw	0
  6344  11D6  3400               	retlw	0
  6345  11D7  3418               	retlw	24
  6346  11D8  3400               	retlw	0
  6347  11D9  3400               	retlw	0
  6348  11DA  3418               	retlw	24
  6349  11DB  3400               	retlw	0
  6350  11DC  3400               	retlw	0
  6351  11DD  3418               	retlw	24
  6352  11DE  3400               	retlw	0
  6353  11DF  3400               	retlw	0
  6354  11E0  3418               	retlw	24
  6355  11E1  3400               	retlw	0
  6356  11E2  3400               	retlw	0
  6357  11E3  3418               	retlw	24
  6358  11E4  3400               	retlw	0
  6359  11E5  3400               	retlw	0
  6360  11E6  3418               	retlw	24
  6361  11E7  3400               	retlw	0
  6362  11E8  3400               	retlw	0
  6363  11E9  3418               	retlw	24
  6364  11EA  3400               	retlw	0
  6365  11EB  3400               	retlw	0
  6366  11EC  3418               	retlw	24
  6367  11ED  3400               	retlw	0
  6368  11EE  3400               	retlw	0
  6369  11EF  3418               	retlw	24
  6370  11F0  3400               	retlw	0
  6371  11F1  3400               	retlw	0
  6372  11F2  3418               	retlw	24
  6373  11F3  3400               	retlw	0
  6374  11F4  3400               	retlw	0
  6375  11F5  3418               	retlw	24
  6376  11F6  3400               	retlw	0
  6377  11F7  3400               	retlw	0
  6378  11F8  3410               	retlw	16
  6379  11F9  3400               	retlw	0
  6380  11FA  3400               	retlw	0
  6381  11FB  3400               	retlw	0
  6382  11FC  3400               	retlw	0
  6383  11FD  3400               	retlw	0
  6384  11FE  3400               	retlw	0
  6385  11FF  3400               	retlw	0
  6386  1200  3400               	retlw	0
  6387  1201  3400               	retlw	0
  6388  1202  3400               	retlw	0
  6389  1203  3400               	retlw	0
  6390  1204  3400               	retlw	0
  6391  1205  3400               	retlw	0
  6392  1206  3400               	retlw	0
  6393  1207  3400               	retlw	0
  6394  1208  3400               	retlw	0
  6395  1209  3400               	retlw	0
  6396  120A  3400               	retlw	0
  6397  120B  3400               	retlw	0
  6398  120C  3400               	retlw	0
  6399  120D  3400               	retlw	0
  6400  120E  3400               	retlw	0
  6401  120F  3400               	retlw	0
  6402  1210  3400               	retlw	0
  6403  1211  3400               	retlw	0
  6404  1212  3400               	retlw	0
  6405  1213  3400               	retlw	0
  6406  1214  3400               	retlw	0
  6407  1215  3400               	retlw	0
  6408  1216  3400               	retlw	0
  6409  1217  3400               	retlw	0
  6410  1218  3400               	retlw	0
  6411  1219  3400               	retlw	0
  6412  121A  3400               	retlw	0
  6413  121B  3408               	retlw	8
  6414  121C  340E               	retlw	14
  6415  121D  3400               	retlw	0
  6416  121E  343E               	retlw	62
  6417  121F  341F               	retlw	31
  6418  1220  3400               	retlw	0
  6419  1221  343F               	retlw	63
  6420  1222  343F               	retlw	63
  6421  1223  3400               	retlw	0
  6422  1224  347F               	retlw	127
  6423  1225  34FF               	retlw	255
  6424  1226  3480               	retlw	128
  6425  1227  347F               	retlw	127
  6426  1228  34EF               	retlw	239
  6427  1229  3480               	retlw	128
  6428  122A  34FF               	retlw	255
  6429  122B  34E7               	retlw	231
  6430  122C  34C0               	retlw	192
  6431  122D  34F3               	retlw	243
  6432  122E  34E7               	retlw	231
  6433  122F  34C0               	retlw	192
  6434  1230  3473               	retlw	115
  6435  1231  34F3               	retlw	243
  6436  1232  34C0               	retlw	192
  6437  1233  3479               	retlw	121
  6438  1234  34F3               	retlw	243
  6439  1235  34C0               	retlw	192
  6440  1236  347B               	retlw	123
  6441  1237  34F1               	retlw	241
  6442  1238  34C0               	retlw	192
  6443  1239  347F               	retlw	127
  6444  123A  34FF               	retlw	255
  6445  123B  34C0               	retlw	192
  6446  123C  347F               	retlw	127
  6447  123D  34FF               	retlw	255
  6448  123E  34C0               	retlw	192
  6449  123F  347C               	retlw	124
  6450  1240  34FF               	retlw	255
  6451  1241  34C0               	retlw	192
  6452  1242  343E               	retlw	62
  6453  1243  340F               	retlw	15
  6454  1244  34C0               	retlw	192
  6455  1245  343E               	retlw	62
  6456  1246  3407               	retlw	7
  6457  1247  3480               	retlw	128
  6458  1248  343C               	retlw	60
  6459  1249  3400               	retlw	0
  6460  124A  3400               	retlw	0
  6461  124B  3418               	retlw	24
  6462  124C  3400               	retlw	0
  6463  124D  3400               	retlw	0
  6464  124E  3400               	retlw	0
  6465  124F  3400               	retlw	0
  6466  1250  3400               	retlw	0
  6467  1251  3400               	retlw	0
  6468  1252  3400               	retlw	0
  6469  1253  3400               	retlw	0
  6470  1254                     __end_of_b_arrow_rot:
  6471                           
  6472                           	psect	stringtext8
  6473  1254                     __pstringtext8:
  6474  1254                     _m_arrow_rot:
  6475  1254  3400               	retlw	0
  6476  1255  3400               	retlw	0
  6477  1256  3400               	retlw	0
  6478  1257  3400               	retlw	0
  6479  1258  3400               	retlw	0
  6480  1259  3400               	retlw	0
  6481  125A  3400               	retlw	0
  6482  125B  3418               	retlw	24
  6483  125C  3400               	retlw	0
  6484  125D  3400               	retlw	0
  6485  125E  3438               	retlw	56
  6486  125F  3400               	retlw	0
  6487  1260  3400               	retlw	0
  6488  1261  343C               	retlw	60
  6489  1262  3400               	retlw	0
  6490  1263  3400               	retlw	0
  6491  1264  347C               	retlw	124
  6492  1265  3400               	retlw	0
  6493  1266  3400               	retlw	0
  6494  1267  347C               	retlw	124
  6495  1268  3400               	retlw	0
  6496  1269  3400               	retlw	0
  6497  126A  347E               	retlw	126
  6498  126B  3400               	retlw	0
  6499  126C  3400               	retlw	0
  6500  126D  34FE               	retlw	254
  6501  126E  3400               	retlw	0
  6502  126F  3400               	retlw	0
  6503  1270  34FE               	retlw	254
  6504  1271  3400               	retlw	0
  6505  1272  3400               	retlw	0
  6506  1273  34EF               	retlw	239
  6507  1274  3400               	retlw	0
  6508  1275  3401               	retlw	1
  6509  1276  34EF               	retlw	239
  6510  1277  3400               	retlw	0
  6511  1278  3401               	retlw	1
  6512  1279  34C7               	retlw	199
  6513  127A  3480               	retlw	128
  6514  127B  3401               	retlw	1
  6515  127C  34C7               	retlw	199
  6516  127D  3480               	retlw	128
  6517  127E  3401               	retlw	1
  6518  127F  3483               	retlw	131
  6519  1280  3480               	retlw	128
  6520  1281  3400               	retlw	0
  6521  1282  3403               	retlw	3
  6522  1283  3480               	retlw	128
  6523  1284  3400               	retlw	0
  6524  1285  3401               	retlw	1
  6525  1286  3480               	retlw	128
  6526  1287  3400               	retlw	0
  6527  1288  3400               	retlw	0
  6528  1289  3400               	retlw	0
  6529  128A  3400               	retlw	0
  6530  128B  3410               	retlw	16
  6531  128C  3400               	retlw	0
  6532  128D  3400               	retlw	0
  6533  128E  3418               	retlw	24
  6534  128F  3400               	retlw	0
  6535  1290  3400               	retlw	0
  6536  1291  3418               	retlw	24
  6537  1292  3400               	retlw	0
  6538  1293  3400               	retlw	0
  6539  1294  3418               	retlw	24
  6540  1295  3400               	retlw	0
  6541  1296  3400               	retlw	0
  6542  1297  3418               	retlw	24
  6543  1298  3400               	retlw	0
  6544  1299  3400               	retlw	0
  6545  129A  3418               	retlw	24
  6546  129B  3400               	retlw	0
  6547  129C  3400               	retlw	0
  6548  129D  3418               	retlw	24
  6549  129E  3400               	retlw	0
  6550  129F  3400               	retlw	0
  6551  12A0  3418               	retlw	24
  6552  12A1  3400               	retlw	0
  6553  12A2  3400               	retlw	0
  6554  12A3  3418               	retlw	24
  6555  12A4  3400               	retlw	0
  6556  12A5  3400               	retlw	0
  6557  12A6  3418               	retlw	24
  6558  12A7  3400               	retlw	0
  6559  12A8  3400               	retlw	0
  6560  12A9  3418               	retlw	24
  6561  12AA  3400               	retlw	0
  6562  12AB  3400               	retlw	0
  6563  12AC  3418               	retlw	24
  6564  12AD  3400               	retlw	0
  6565  12AE  3400               	retlw	0
  6566  12AF  3410               	retlw	16
  6567  12B0  3400               	retlw	0
  6568  12B1  3400               	retlw	0
  6569  12B2  3400               	retlw	0
  6570  12B3  3400               	retlw	0
  6571  12B4  3400               	retlw	0
  6572  12B5  3400               	retlw	0
  6573  12B6  3400               	retlw	0
  6574  12B7  3400               	retlw	0
  6575  12B8  3400               	retlw	0
  6576  12B9  3400               	retlw	0
  6577  12BA  3400               	retlw	0
  6578  12BB  3400               	retlw	0
  6579  12BC  3400               	retlw	0
  6580  12BD  3400               	retlw	0
  6581  12BE  3400               	retlw	0
  6582  12BF  3400               	retlw	0
  6583  12C0  341F               	retlw	31
  6584  12C1  3400               	retlw	0
  6585  12C2  3400               	retlw	0
  6586  12C3  343F               	retlw	63
  6587  12C4  34FC               	retlw	252
  6588  12C5  3400               	retlw	0
  6589  12C6  347F               	retlw	127
  6590  12C7  34FF               	retlw	255
  6591  12C8  3400               	retlw	0
  6592  12C9  347F               	retlw	127
  6593  12CA  34FF               	retlw	255
  6594  12CB  3480               	retlw	128
  6595  12CC  343F               	retlw	63
  6596  12CD  34FF               	retlw	255
  6597  12CE  34C0               	retlw	192
  6598  12CF  341F               	retlw	31
  6599  12D0  34DF               	retlw	223
  6600  12D1  3480               	retlw	128
  6601  12D2  340F               	retlw	15
  6602  12D3  34C0               	retlw	192
  6603  12D4  3400               	retlw	0
  6604  12D5  3407               	retlw	7
  6605  12D6  34E0               	retlw	224
  6606  12D7  3400               	retlw	0
  6607  12D8  3403               	retlw	3
  6608  12D9  34F0               	retlw	240
  6609  12DA  3400               	retlw	0
  6610  12DB  3401               	retlw	1
  6611  12DC  34F0               	retlw	240
  6612  12DD  3400               	retlw	0
  6613  12DE  3401               	retlw	1
  6614  12DF  34F0               	retlw	240
  6615  12E0  3400               	retlw	0
  6616  12E1  3400               	retlw	0
  6617  12E2  34F0               	retlw	240
  6618  12E3  3400               	retlw	0
  6619  12E4  3401               	retlw	1
  6620  12E5  34F0               	retlw	240
  6621  12E6  3400               	retlw	0
  6622  12E7  341F               	retlw	31
  6623  12E8  34F0               	retlw	240
  6624  12E9  3400               	retlw	0
  6625  12EA  343F               	retlw	63
  6626  12EB  34F0               	retlw	240
  6627  12EC  3400               	retlw	0
  6628  12ED  347F               	retlw	127
  6629  12EE  34F0               	retlw	240
  6630  12EF  3400               	retlw	0
  6631  12F0  34FF               	retlw	255
  6632  12F1  34F0               	retlw	240
  6633  12F2  3400               	retlw	0
  6634  12F3  347F               	retlw	127
  6635  12F4  34E0               	retlw	224
  6636  12F5  3400               	retlw	0
  6637  12F6  343F               	retlw	63
  6638  12F7  34F0               	retlw	240
  6639  12F8  3400               	retlw	0
  6640  12F9  340F               	retlw	15
  6641  12FA  34FC               	retlw	252
  6642  12FB  3400               	retlw	0
  6643  12FC  3407               	retlw	7
  6644  12FD  34FF               	retlw	255
  6645  12FE  3400               	retlw	0
  6646  12FF  3400               	retlw	0
  6647  1300  34FF               	retlw	255
  6648  1301  34C0               	retlw	192
  6649  1302  3400               	retlw	0
  6650  1303  343F               	retlw	63
  6651  1304  34C0               	retlw	192
  6652  1305  3400               	retlw	0
  6653  1306  340F               	retlw	15
  6654  1307  34C0               	retlw	192
  6655  1308  3400               	retlw	0
  6656  1309  3400               	retlw	0
  6657  130A  3400               	retlw	0
  6658  130B                     __end_of_m_arrow_rot:
  6659                           
  6660                           	psect	stringtext9
  6661  130B                     __pstringtext9:
  6662  130B                     _n_arrow_rot:
  6663  130B  3400               	retlw	0
  6664  130C  3400               	retlw	0
  6665  130D  3400               	retlw	0
  6666  130E  3400               	retlw	0
  6667  130F  3400               	retlw	0
  6668  1310  3400               	retlw	0
  6669  1311  3400               	retlw	0
  6670  1312  3418               	retlw	24
  6671  1313  3400               	retlw	0
  6672  1314  3400               	retlw	0
  6673  1315  3438               	retlw	56
  6674  1316  3400               	retlw	0
  6675  1317  3400               	retlw	0
  6676  1318  343C               	retlw	60
  6677  1319  3400               	retlw	0
  6678  131A  3400               	retlw	0
  6679  131B  347C               	retlw	124
  6680  131C  3400               	retlw	0
  6681  131D  3400               	retlw	0
  6682  131E  347C               	retlw	124
  6683  131F  3400               	retlw	0
  6684  1320  3400               	retlw	0
  6685  1321  347E               	retlw	126
  6686  1322  3400               	retlw	0
  6687  1323  3400               	retlw	0
  6688  1324  34FE               	retlw	254
  6689  1325  3400               	retlw	0
  6690  1326  3400               	retlw	0
  6691  1327  34FE               	retlw	254
  6692  1328  3400               	retlw	0
  6693  1329  3400               	retlw	0
  6694  132A  34EF               	retlw	239
  6695  132B  3400               	retlw	0
  6696  132C  3401               	retlw	1
  6697  132D  34EF               	retlw	239
  6698  132E  3400               	retlw	0
  6699  132F  3401               	retlw	1
  6700  1330  34C7               	retlw	199
  6701  1331  3480               	retlw	128
  6702  1332  3401               	retlw	1
  6703  1333  34C7               	retlw	199
  6704  1334  3480               	retlw	128
  6705  1335  3401               	retlw	1
  6706  1336  3483               	retlw	131
  6707  1337  3480               	retlw	128
  6708  1338  3400               	retlw	0
  6709  1339  3403               	retlw	3
  6710  133A  3480               	retlw	128
  6711  133B  3400               	retlw	0
  6712  133C  3401               	retlw	1
  6713  133D  3480               	retlw	128
  6714  133E  3400               	retlw	0
  6715  133F  3400               	retlw	0
  6716  1340  3400               	retlw	0
  6717  1341  3400               	retlw	0
  6718  1342  3410               	retlw	16
  6719  1343  3400               	retlw	0
  6720  1344  3400               	retlw	0
  6721  1345  3418               	retlw	24
  6722  1346  3400               	retlw	0
  6723  1347  3400               	retlw	0
  6724  1348  3418               	retlw	24
  6725  1349  3400               	retlw	0
  6726  134A  3400               	retlw	0
  6727  134B  3418               	retlw	24
  6728  134C  3400               	retlw	0
  6729  134D  3400               	retlw	0
  6730  134E  3418               	retlw	24
  6731  134F  3400               	retlw	0
  6732  1350  3400               	retlw	0
  6733  1351  3418               	retlw	24
  6734  1352  3400               	retlw	0
  6735  1353  3400               	retlw	0
  6736  1354  3418               	retlw	24
  6737  1355  3400               	retlw	0
  6738  1356  3400               	retlw	0
  6739  1357  3418               	retlw	24
  6740  1358  3400               	retlw	0
  6741  1359  3400               	retlw	0
  6742  135A  3418               	retlw	24
  6743  135B  3400               	retlw	0
  6744  135C  3400               	retlw	0
  6745  135D  3418               	retlw	24
  6746  135E  3400               	retlw	0
  6747  135F  3400               	retlw	0
  6748  1360  3418               	retlw	24
  6749  1361  3400               	retlw	0
  6750  1362  3400               	retlw	0
  6751  1363  3418               	retlw	24
  6752  1364  3400               	retlw	0
  6753  1365  3400               	retlw	0
  6754  1366  3410               	retlw	16
  6755  1367  3400               	retlw	0
  6756  1368  3400               	retlw	0
  6757  1369  3400               	retlw	0
  6758  136A  3400               	retlw	0
  6759  136B  3400               	retlw	0
  6760  136C  3400               	retlw	0
  6761  136D  3400               	retlw	0
  6762  136E  3400               	retlw	0
  6763  136F  3400               	retlw	0
  6764  1370  3400               	retlw	0
  6765  1371  3400               	retlw	0
  6766  1372  3400               	retlw	0
  6767  1373  3400               	retlw	0
  6768  1374  3400               	retlw	0
  6769  1375  3400               	retlw	0
  6770  1376  3400               	retlw	0
  6771  1377  3400               	retlw	0
  6772  1378  3400               	retlw	0
  6773  1379  3400               	retlw	0
  6774  137A  3400               	retlw	0
  6775  137B  3400               	retlw	0
  6776  137C  3400               	retlw	0
  6777  137D  3400               	retlw	0
  6778  137E  3400               	retlw	0
  6779  137F  3400               	retlw	0
  6780  1380  3400               	retlw	0
  6781  1381  3400               	retlw	0
  6782  1382  3400               	retlw	0
  6783  1383  3418               	retlw	24
  6784  1384  3400               	retlw	0
  6785  1385  3400               	retlw	0
  6786  1386  343F               	retlw	63
  6787  1387  3400               	retlw	0
  6788  1388  3400               	retlw	0
  6789  1389  347F               	retlw	127
  6790  138A  34F0               	retlw	240
  6791  138B  3400               	retlw	0
  6792  138C  347F               	retlw	127
  6793  138D  34FC               	retlw	252
  6794  138E  3400               	retlw	0
  6795  138F  341F               	retlw	31
  6796  1390  34FF               	retlw	255
  6797  1391  3400               	retlw	0
  6798  1392  3403               	retlw	3
  6799  1393  34FF               	retlw	255
  6800  1394  3480               	retlw	128
  6801  1395  3400               	retlw	0
  6802  1396  343F               	retlw	63
  6803  1397  3480               	retlw	128
  6804  1398  3400               	retlw	0
  6805  1399  340F               	retlw	15
  6806  139A  34C0               	retlw	192
  6807  139B  341C               	retlw	28
  6808  139C  340F               	retlw	15
  6809  139D  3480               	retlw	128
  6810  139E  343F               	retlw	63
  6811  139F  34FF               	retlw	255
  6812  13A0  3400               	retlw	0
  6813  13A1  347F               	retlw	127
  6814  13A2  34FE               	retlw	254
  6815  13A3  3400               	retlw	0
  6816  13A4  347F               	retlw	127
  6817  13A5  34FC               	retlw	252
  6818  13A6  3400               	retlw	0
  6819  13A7  347F               	retlw	127
  6820  13A8  34F8               	retlw	248
  6821  13A9  3400               	retlw	0
  6822  13AA  340F               	retlw	15
  6823  13AB  34FE               	retlw	254
  6824  13AC  3400               	retlw	0
  6825  13AD  3403               	retlw	3
  6826  13AE  34FF               	retlw	255
  6827  13AF  3480               	retlw	128
  6828  13B0  3400               	retlw	0
  6829  13B1  34FF               	retlw	255
  6830  13B2  34C0               	retlw	192
  6831  13B3  3400               	retlw	0
  6832  13B4  343F               	retlw	63
  6833  13B5  34C0               	retlw	192
  6834  13B6  3400               	retlw	0
  6835  13B7  340F               	retlw	15
  6836  13B8  3400               	retlw	0
  6837  13B9  3400               	retlw	0
  6838  13BA  3400               	retlw	0
  6839  13BB  3400               	retlw	0
  6840  13BC  3400               	retlw	0
  6841  13BD  3400               	retlw	0
  6842  13BE  3400               	retlw	0
  6843  13BF  3400               	retlw	0
  6844  13C0  3400               	retlw	0
  6845  13C1  3400               	retlw	0
  6846  13C2                     __end_of_n_arrow_rot:
  6847                           
  6848                           	psect	stringtext10
  6849  13C2                     __pstringtext10:
  6850  13C2                     _possible_pickup_conf_str:
  6851  13C2  3458               	retlw	88
  6852  13C3  3400               	retlw	0
  6853  13C4  3400               	retlw	0
  6854  13C5  3400               	retlw	0
  6855  13C6  3400               	retlw	0
  6856  13C7  3400               	retlw	0
  6857  13C8  3400               	retlw	0
  6858  13C9  3400               	retlw	0
  6859  13CA  3400               	retlw	0
  6860  13CB  3400               	retlw	0
  6861  13CC  344E               	retlw	78
  6862  13CD  3400               	retlw	0
  6863  13CE  3400               	retlw	0
  6864  13CF  3400               	retlw	0
  6865  13D0  3400               	retlw	0
  6866  13D1  3400               	retlw	0
  6867  13D2  3400               	retlw	0
  6868  13D3  3400               	retlw	0
  6869  13D4  3400               	retlw	0
  6870  13D5  3400               	retlw	0
  6871  13D6  3453               	retlw	83
  6872  13D7  3400               	retlw	0
  6873  13D8  3400               	retlw	0
  6874  13D9  3400               	retlw	0
  6875  13DA  3400               	retlw	0
  6876  13DB  3400               	retlw	0
  6877  13DC  3400               	retlw	0
  6878  13DD  3400               	retlw	0
  6879  13DE  3400               	retlw	0
  6880  13DF  3400               	retlw	0
  6881  13E0  344E               	retlw	78
  6882  13E1  3427               	retlw	39
  6883  13E2  3400               	retlw	0
  6884  13E3  3400               	retlw	0
  6885  13E4  3400               	retlw	0
  6886  13E5  3400               	retlw	0
  6887  13E6  3400               	retlw	0
  6888  13E7  3400               	retlw	0
  6889  13E8  3400               	retlw	0
  6890  13E9  3400               	retlw	0
  6891  13EA  3453               	retlw	83
  6892  13EB  3427               	retlw	39
  6893  13EC  3400               	retlw	0
  6894  13ED  3400               	retlw	0
  6895  13EE  3400               	retlw	0
  6896  13EF  3400               	retlw	0
  6897  13F0  3400               	retlw	0
  6898  13F1  3400               	retlw	0
  6899  13F2  3400               	retlw	0
  6900  13F3  3400               	retlw	0
  6901  13F4  344E               	retlw	78
  6902  13F5  342B               	retlw	43
  6903  13F6  3453               	retlw	83
  6904  13F7  3400               	retlw	0
  6905  13F8  3400               	retlw	0
  6906  13F9  3400               	retlw	0
  6907  13FA  3400               	retlw	0
  6908  13FB  3400               	retlw	0
  6909  13FC  3400               	retlw	0
  6910  13FD  3400               	retlw	0
  6911  13FE  3453               	retlw	83
  6912  13FF  342B               	retlw	43
  6913  1400  344E               	retlw	78
  6914  1401  3400               	retlw	0
  6915  1402  3400               	retlw	0
  6916  1403  3400               	retlw	0
  6917  1404  3400               	retlw	0
  6918  1405  3400               	retlw	0
  6919  1406  3400               	retlw	0
  6920  1407  3400               	retlw	0
  6921  1408  344E               	retlw	78
  6922  1409  342B               	retlw	43
  6923  140A  3453               	retlw	83
  6924  140B  3427               	retlw	39
  6925  140C  3400               	retlw	0
  6926  140D  3400               	retlw	0
  6927  140E  3400               	retlw	0
  6928  140F  3400               	retlw	0
  6929  1410  3400               	retlw	0
  6930  1411  3400               	retlw	0
  6931  1412  3453               	retlw	83
  6932  1413  3427               	retlw	39
  6933  1414  342B               	retlw	43
  6934  1415  344E               	retlw	78
  6935  1416  3400               	retlw	0
  6936  1417  3400               	retlw	0
  6937  1418  3400               	retlw	0
  6938  1419  3400               	retlw	0
  6939  141A  3400               	retlw	0
  6940  141B  3400               	retlw	0
  6941  141C  344E               	retlw	78
  6942  141D  3427               	retlw	39
  6943  141E  342B               	retlw	43
  6944  141F  3453               	retlw	83
  6945  1420  3400               	retlw	0
  6946  1421  3400               	retlw	0
  6947  1422  3400               	retlw	0
  6948  1423  3400               	retlw	0
  6949  1424  3400               	retlw	0
  6950  1425  3400               	retlw	0
  6951  1426  3453               	retlw	83
  6952  1427  342B               	retlw	43
  6953  1428  344E               	retlw	78
  6954  1429  3427               	retlw	39
  6955  142A  3400               	retlw	0
  6956  142B  3400               	retlw	0
  6957  142C  3400               	retlw	0
  6958  142D  3400               	retlw	0
  6959  142E  3400               	retlw	0
  6960  142F  3400               	retlw	0
  6961  1430  344E               	retlw	78
  6962  1431  3427               	retlw	39
  6963  1432  342B               	retlw	43
  6964  1433  3453               	retlw	83
  6965  1434  3427               	retlw	39
  6966  1435  3400               	retlw	0
  6967  1436  3400               	retlw	0
  6968  1437  3400               	retlw	0
  6969  1438  3400               	retlw	0
  6970  1439  3400               	retlw	0
  6971  143A  3453               	retlw	83
  6972  143B  3427               	retlw	39
  6973  143C  342B               	retlw	43
  6974  143D  344E               	retlw	78
  6975  143E  3427               	retlw	39
  6976  143F  3400               	retlw	0
  6977  1440  3400               	retlw	0
  6978  1441  3400               	retlw	0
  6979  1442  3400               	retlw	0
  6980  1443  3400               	retlw	0
  6981  1444  344E               	retlw	78
  6982  1445  342F               	retlw	47
  6983  1446  342F               	retlw	47
  6984  1447  3453               	retlw	83
  6985  1448  3400               	retlw	0
  6986  1449  3400               	retlw	0
  6987  144A  3400               	retlw	0
  6988  144B  3400               	retlw	0
  6989  144C  3400               	retlw	0
  6990  144D  3400               	retlw	0
  6991  144E  344E               	retlw	78
  6992  144F  3427               	retlw	39
  6993  1450  342F               	retlw	47
  6994  1451  342F               	retlw	47
  6995  1452  3453               	retlw	83
  6996  1453  3400               	retlw	0
  6997  1454  3400               	retlw	0
  6998  1455  3400               	retlw	0
  6999  1456  3400               	retlw	0
  7000  1457  3400               	retlw	0
  7001  1458  344E               	retlw	78
  7002  1459  342F               	retlw	47
  7003  145A  342F               	retlw	47
  7004  145B  3453               	retlw	83
  7005  145C  3427               	retlw	39
  7006  145D  3400               	retlw	0
  7007  145E  3400               	retlw	0
  7008  145F  3400               	retlw	0
  7009  1460  3400               	retlw	0
  7010  1461  3400               	retlw	0
  7011  1462  344E               	retlw	78
  7012  1463  3427               	retlw	39
  7013  1464  342F               	retlw	47
  7014  1465  342F               	retlw	47
  7015  1466  3453               	retlw	83
  7016  1467  3427               	retlw	39
  7017  1468  3400               	retlw	0
  7018  1469  3400               	retlw	0
  7019  146A  3400               	retlw	0
  7020  146B  3400               	retlw	0
  7021  146C                     __end_of_possible_pickup_conf_str:
  7022                           
  7023                           	psect	stringtext11
  7024  146C                     __pstringtext11:
  7025  146C                     _bracket_right_rot:
  7026  146C  3400               	retlw	0
  7027  146D  3400               	retlw	0
  7028  146E  3400               	retlw	0
  7029  146F  3400               	retlw	0
  7030  1470  3400               	retlw	0
  7031  1471  3400               	retlw	0
  7032  1472  3400               	retlw	0
  7033  1473  3400               	retlw	0
  7034  1474  3400               	retlw	0
  7035  1475  3400               	retlw	0
  7036  1476  3400               	retlw	0
  7037  1477  3400               	retlw	0
  7038  1478  3400               	retlw	0
  7039  1479  3400               	retlw	0
  7040  147A  3400               	retlw	0
  7041  147B  3400               	retlw	0
  7042  147C  3400               	retlw	0
  7043  147D  3400               	retlw	0
  7044  147E  3400               	retlw	0
  7045  147F  3460               	retlw	96
  7046  1480  3400               	retlw	0
  7047  1481  3470               	retlw	112
  7048  1482  3460               	retlw	96
  7049  1483  3400               	retlw	0
  7050  1484  34FF               	retlw	255
  7051  1485  34F0               	retlw	240
  7052  1486  3400               	retlw	0
  7053  1487  34FF               	retlw	255
  7054  1488  34F0               	retlw	240
  7055  1489  3400               	retlw	0
  7056  148A  34E7               	retlw	231
  7057  148B  34BF               	retlw	191
  7058  148C  3400               	retlw	0
  7059  148D  34E0               	retlw	224
  7060  148E  343F               	retlw	63
  7061  148F  34C0               	retlw	192
  7062  1490  34E0               	retlw	224
  7063  1491  340F               	retlw	15
  7064  1492  34C0               	retlw	192
  7065  1493  34E0               	retlw	224
  7066  1494  3401               	retlw	1
  7067  1495  34C0               	retlw	192
  7068  1496  3460               	retlw	96
  7069  1497  3400               	retlw	0
  7070  1498  34C0               	retlw	192
  7071  1499  3400               	retlw	0
  7072  149A  3400               	retlw	0
  7073  149B  34C0               	retlw	192
  7074  149C  3400               	retlw	0
  7075  149D  3400               	retlw	0
  7076  149E  34C0               	retlw	192
  7077  149F  3400               	retlw	0
  7078  14A0  3400               	retlw	0
  7079  14A1  34C0               	retlw	192
  7080  14A2  3400               	retlw	0
  7081  14A3  3400               	retlw	0
  7082  14A4  34C0               	retlw	192
  7083  14A5  3400               	retlw	0
  7084  14A6  3400               	retlw	0
  7085  14A7  3400               	retlw	0
  7086  14A8  3400               	retlw	0
  7087  14A9  3400               	retlw	0
  7088  14AA  3400               	retlw	0
  7089  14AB  3400               	retlw	0
  7090  14AC  3400               	retlw	0
  7091  14AD  3400               	retlw	0
  7092  14AE  3400               	retlw	0
  7093  14AF  3400               	retlw	0
  7094  14B0  3400               	retlw	0
  7095  14B1  3400               	retlw	0
  7096  14B2  3400               	retlw	0
  7097  14B3  3400               	retlw	0
  7098  14B4  3400               	retlw	0
  7099  14B5  3400               	retlw	0
  7100  14B6  3400               	retlw	0
  7101  14B7                     __end_of_bracket_right_rot:
  7102                           
  7103                           	psect	stringtext12
  7104  14B7                     __pstringtext12:
  7105  14B7                     _bracket_left_rot:
  7106  14B7  3400               	retlw	0
  7107  14B8  3400               	retlw	0
  7108  14B9  3400               	retlw	0
  7109  14BA  3400               	retlw	0
  7110  14BB  3400               	retlw	0
  7111  14BC  3400               	retlw	0
  7112  14BD  3400               	retlw	0
  7113  14BE  3400               	retlw	0
  7114  14BF  3400               	retlw	0
  7115  14C0  3400               	retlw	0
  7116  14C1  3400               	retlw	0
  7117  14C2  3400               	retlw	0
  7118  14C3  3400               	retlw	0
  7119  14C4  3400               	retlw	0
  7120  14C5  3400               	retlw	0
  7121  14C6  3400               	retlw	0
  7122  14C7  3400               	retlw	0
  7123  14C8  3400               	retlw	0
  7124  14C9  3440               	retlw	64
  7125  14CA  3400               	retlw	0
  7126  14CB  3400               	retlw	0
  7127  14CC  34E0               	retlw	224
  7128  14CD  3400               	retlw	0
  7129  14CE  3400               	retlw	0
  7130  14CF  34E0               	retlw	224
  7131  14D0  3400               	retlw	0
  7132  14D1  3400               	retlw	0
  7133  14D2  34E0               	retlw	224
  7134  14D3  3400               	retlw	0
  7135  14D4  3400               	retlw	0
  7136  14D5  34E0               	retlw	224
  7137  14D6  3400               	retlw	0
  7138  14D7  3480               	retlw	128
  7139  14D8  34E0               	retlw	224
  7140  14D9  3400               	retlw	0
  7141  14DA  34C0               	retlw	192
  7142  14DB  34F8               	retlw	248
  7143  14DC  3400               	retlw	0
  7144  14DD  34C0               	retlw	192
  7145  14DE  347F               	retlw	127
  7146  14DF  3480               	retlw	128
  7147  14E0  34C0               	retlw	192
  7148  14E1  347F               	retlw	127
  7149  14E2  34B8               	retlw	184
  7150  14E3  34C0               	retlw	192
  7151  14E4  3401               	retlw	1
  7152  14E5  34FF               	retlw	255
  7153  14E6  34C0               	retlw	192
  7154  14E7  3401               	retlw	1
  7155  14E8  34FF               	retlw	255
  7156  14E9  34C0               	retlw	192
  7157  14EA  3401               	retlw	1
  7158  14EB  34E7               	retlw	231
  7159  14EC  34C0               	retlw	192
  7160  14ED  3400               	retlw	0
  7161  14EE  34C0               	retlw	192
  7162  14EF  3400               	retlw	0
  7163  14F0  3400               	retlw	0
  7164  14F1  3400               	retlw	0
  7165  14F2  3400               	retlw	0
  7166  14F3  3400               	retlw	0
  7167  14F4  3400               	retlw	0
  7168  14F5  3400               	retlw	0
  7169  14F6  3400               	retlw	0
  7170  14F7  3400               	retlw	0
  7171  14F8  3400               	retlw	0
  7172  14F9  3400               	retlw	0
  7173  14FA  3400               	retlw	0
  7174  14FB  3400               	retlw	0
  7175  14FC  3400               	retlw	0
  7176  14FD  3400               	retlw	0
  7177  14FE  3400               	retlw	0
  7178  14FF  3400               	retlw	0
  7179  1500  3400               	retlw	0
  7180  1501  3400               	retlw	0
  7181  1502                     __end_of_bracket_left_rot:
  7182                           
  7183                           	psect	stringtext13
  7184  1502                     __pstringtext13:
  7185  1502                     _b_rot:
  7186  1502  3400               	retlw	0
  7187  1503  3400               	retlw	0
  7188  1504  3400               	retlw	0
  7189  1505  3400               	retlw	0
  7190  1506  3400               	retlw	0
  7191  1507  3400               	retlw	0
  7192  1508  3400               	retlw	0
  7193  1509  3400               	retlw	0
  7194  150A  3400               	retlw	0
  7195  150B  3400               	retlw	0
  7196  150C  3400               	retlw	0
  7197  150D  3400               	retlw	0
  7198  150E  3400               	retlw	0
  7199  150F  3400               	retlw	0
  7200  1510  3400               	retlw	0
  7201  1511  3408               	retlw	8
  7202  1512  340E               	retlw	14
  7203  1513  3400               	retlw	0
  7204  1514  343E               	retlw	62
  7205  1515  341F               	retlw	31
  7206  1516  3400               	retlw	0
  7207  1517  343F               	retlw	63
  7208  1518  343F               	retlw	63
  7209  1519  3400               	retlw	0
  7210  151A  347F               	retlw	127
  7211  151B  34FF               	retlw	255
  7212  151C  3480               	retlw	128
  7213  151D  347F               	retlw	127
  7214  151E  34EF               	retlw	239
  7215  151F  3480               	retlw	128
  7216  1520  34FF               	retlw	255
  7217  1521  34E7               	retlw	231
  7218  1522  34C0               	retlw	192
  7219  1523  34F3               	retlw	243
  7220  1524  34E7               	retlw	231
  7221  1525  34C0               	retlw	192
  7222  1526  3473               	retlw	115
  7223  1527  34F3               	retlw	243
  7224  1528  34C0               	retlw	192
  7225  1529  3479               	retlw	121
  7226  152A  34F3               	retlw	243
  7227  152B  34C0               	retlw	192
  7228  152C  347B               	retlw	123
  7229  152D  34F1               	retlw	241
  7230  152E  34C0               	retlw	192
  7231  152F  347F               	retlw	127
  7232  1530  34FF               	retlw	255
  7233  1531  34C0               	retlw	192
  7234  1532  347F               	retlw	127
  7235  1533  34FF               	retlw	255
  7236  1534  34C0               	retlw	192
  7237  1535  347C               	retlw	124
  7238  1536  34FF               	retlw	255
  7239  1537  34C0               	retlw	192
  7240  1538  343E               	retlw	62
  7241  1539  340F               	retlw	15
  7242  153A  34C0               	retlw	192
  7243  153B  343E               	retlw	62
  7244  153C  3407               	retlw	7
  7245  153D  3480               	retlw	128
  7246  153E  343C               	retlw	60
  7247  153F  3400               	retlw	0
  7248  1540  3400               	retlw	0
  7249  1541  3418               	retlw	24
  7250  1542  3400               	retlw	0
  7251  1543  3400               	retlw	0
  7252  1544  3400               	retlw	0
  7253  1545  3400               	retlw	0
  7254  1546  3400               	retlw	0
  7255  1547  3400               	retlw	0
  7256  1548  3400               	retlw	0
  7257  1549  3400               	retlw	0
  7258  154A  3400               	retlw	0
  7259  154B  3400               	retlw	0
  7260  154C  3400               	retlw	0
  7261  154D                     __end_of_b_rot:
  7262                           
  7263                           	psect	stringtext14
  7264  154D                     __pstringtext14:
  7265  154D                     _m_rot:
  7266  154D  341F               	retlw	31
  7267  154E  3400               	retlw	0
  7268  154F  3400               	retlw	0
  7269  1550  343F               	retlw	63
  7270  1551  34FC               	retlw	252
  7271  1552  3400               	retlw	0
  7272  1553  347F               	retlw	127
  7273  1554  34FF               	retlw	255
  7274  1555  3400               	retlw	0
  7275  1556  347F               	retlw	127
  7276  1557  34FF               	retlw	255
  7277  1558  3480               	retlw	128
  7278  1559  343F               	retlw	63
  7279  155A  34FF               	retlw	255
  7280  155B  34C0               	retlw	192
  7281  155C  341F               	retlw	31
  7282  155D  34DF               	retlw	223
  7283  155E  3480               	retlw	128
  7284  155F  340F               	retlw	15
  7285  1560  34C0               	retlw	192
  7286  1561  3400               	retlw	0
  7287  1562  3407               	retlw	7
  7288  1563  34E0               	retlw	224
  7289  1564  3400               	retlw	0
  7290  1565  3403               	retlw	3
  7291  1566  34F0               	retlw	240
  7292  1567  3400               	retlw	0
  7293  1568  3401               	retlw	1
  7294  1569  34F0               	retlw	240
  7295  156A  3400               	retlw	0
  7296  156B  3401               	retlw	1
  7297  156C  34F0               	retlw	240
  7298  156D  3400               	retlw	0
  7299  156E  3400               	retlw	0
  7300  156F  34F0               	retlw	240
  7301  1570  3400               	retlw	0
  7302  1571  3401               	retlw	1
  7303  1572  34F0               	retlw	240
  7304  1573  3400               	retlw	0
  7305  1574  341F               	retlw	31
  7306  1575  34F0               	retlw	240
  7307  1576  3400               	retlw	0
  7308  1577  343F               	retlw	63
  7309  1578  34F0               	retlw	240
  7310  1579  3400               	retlw	0
  7311  157A  347F               	retlw	127
  7312  157B  34F0               	retlw	240
  7313  157C  3400               	retlw	0
  7314  157D  34FF               	retlw	255
  7315  157E  34F0               	retlw	240
  7316  157F  3400               	retlw	0
  7317  1580  347F               	retlw	127
  7318  1581  34E0               	retlw	224
  7319  1582  3400               	retlw	0
  7320  1583  343F               	retlw	63
  7321  1584  34F0               	retlw	240
  7322  1585  3400               	retlw	0
  7323  1586  340F               	retlw	15
  7324  1587  34FC               	retlw	252
  7325  1588  3400               	retlw	0
  7326  1589  3407               	retlw	7
  7327  158A  34FF               	retlw	255
  7328  158B  3400               	retlw	0
  7329  158C  3400               	retlw	0
  7330  158D  34FF               	retlw	255
  7331  158E  34C0               	retlw	192
  7332  158F  3400               	retlw	0
  7333  1590  343F               	retlw	63
  7334  1591  34C0               	retlw	192
  7335  1592  3400               	retlw	0
  7336  1593  340F               	retlw	15
  7337  1594  34C0               	retlw	192
  7338  1595  3400               	retlw	0
  7339  1596  3400               	retlw	0
  7340  1597  3400               	retlw	0
  7341  1598                     __end_of_m_rot:
  7342                           
  7343                           	psect	stringtext15
  7344  1598                     __pstringtext15:
  7345  1598                     _parallel_rot:
  7346  1598  3478               	retlw	120
  7347  1599  3400               	retlw	0
  7348  159A  3400               	retlw	0
  7349  159B  347C               	retlw	124
  7350  159C  3400               	retlw	0
  7351  159D  3400               	retlw	0
  7352  159E  343E               	retlw	62
  7353  159F  3400               	retlw	0
  7354  15A0  3400               	retlw	0
  7355  15A1  341F               	retlw	31
  7356  15A2  3400               	retlw	0
  7357  15A3  3400               	retlw	0
  7358  15A4  340F               	retlw	15
  7359  15A5  3480               	retlw	128
  7360  15A6  3400               	retlw	0
  7361  15A7  3403               	retlw	3
  7362  15A8  34E0               	retlw	224
  7363  15A9  3400               	retlw	0
  7364  15AA  3401               	retlw	1
  7365  15AB  34F0               	retlw	240
  7366  15AC  3400               	retlw	0
  7367  15AD  3400               	retlw	0
  7368  15AE  34F0               	retlw	240
  7369  15AF  3400               	retlw	0
  7370  15B0  3400               	retlw	0
  7371  15B1  3478               	retlw	120
  7372  15B2  3400               	retlw	0
  7373  15B3  3400               	retlw	0
  7374  15B4  341E               	retlw	30
  7375  15B5  3400               	retlw	0
  7376  15B6  3430               	retlw	48
  7377  15B7  340F               	retlw	15
  7378  15B8  34C0               	retlw	192
  7379  15B9  347C               	retlw	124
  7380  15BA  340F               	retlw	15
  7381  15BB  34C0               	retlw	192
  7382  15BC  343E               	retlw	62
  7383  15BD  3407               	retlw	7
  7384  15BE  34C0               	retlw	192
  7385  15BF  341F               	retlw	31
  7386  15C0  3400               	retlw	0
  7387  15C1  3400               	retlw	0
  7388  15C2  340F               	retlw	15
  7389  15C3  3480               	retlw	128
  7390  15C4  3400               	retlw	0
  7391  15C5  3407               	retlw	7
  7392  15C6  34C0               	retlw	192
  7393  15C7  3400               	retlw	0
  7394  15C8  3401               	retlw	1
  7395  15C9  34F0               	retlw	240
  7396  15CA  3400               	retlw	0
  7397  15CB  3400               	retlw	0
  7398  15CC  34F0               	retlw	240
  7399  15CD  3400               	retlw	0
  7400  15CE  3400               	retlw	0
  7401  15CF  3478               	retlw	120
  7402  15D0  3400               	retlw	0
  7403  15D1  3400               	retlw	0
  7404  15D2  343C               	retlw	60
  7405  15D3  3400               	retlw	0
  7406  15D4  3400               	retlw	0
  7407  15D5  340F               	retlw	15
  7408  15D6  34C0               	retlw	192
  7409  15D7  3400               	retlw	0
  7410  15D8  340F               	retlw	15
  7411  15D9  34C0               	retlw	192
  7412  15DA  3400               	retlw	0
  7413  15DB  3407               	retlw	7
  7414  15DC  34C0               	retlw	192
  7415  15DD  3400               	retlw	0
  7416  15DE  3400               	retlw	0
  7417  15DF  3480               	retlw	128
  7418  15E0  3400               	retlw	0
  7419  15E1  3400               	retlw	0
  7420  15E2  3400               	retlw	0
  7421  15E3                     __end_of_parallel_rot:
  7422                           
  7423                           	psect	stringtext16
  7424  15E3                     __pstringtext16:
  7425  15E3                     _serie_rot:
  7426  15E3  3400               	retlw	0
  7427  15E4  3400               	retlw	0
  7428  15E5  3400               	retlw	0
  7429  15E6  3400               	retlw	0
  7430  15E7  3400               	retlw	0
  7431  15E8  3400               	retlw	0
  7432  15E9  3400               	retlw	0
  7433  15EA  3400               	retlw	0
  7434  15EB  3400               	retlw	0
  7435  15EC  3400               	retlw	0
  7436  15ED  3400               	retlw	0
  7437  15EE  3400               	retlw	0
  7438  15EF  3400               	retlw	0
  7439  15F0  3400               	retlw	0
  7440  15F1  3400               	retlw	0
  7441  15F2  3400               	retlw	0
  7442  15F3  3400               	retlw	0
  7443  15F4  3400               	retlw	0
  7444  15F5  3400               	retlw	0
  7445  15F6  3480               	retlw	128
  7446  15F7  3400               	retlw	0
  7447  15F8  3400               	retlw	0
  7448  15F9  34C0               	retlw	192
  7449  15FA  3400               	retlw	0
  7450  15FB  3400               	retlw	0
  7451  15FC  34C0               	retlw	192
  7452  15FD  3400               	retlw	0
  7453  15FE  340D               	retlw	13
  7454  15FF  34C0               	retlw	192
  7455  1600  3400               	retlw	0
  7456  1601  341F               	retlw	31
  7457  1602  34C0               	retlw	192
  7458  1603  3400               	retlw	0
  7459  1604  341F               	retlw	31
  7460  1605  34FC               	retlw	252
  7461  1606  3400               	retlw	0
  7462  1607  340F               	retlw	15
  7463  1608  34FE               	retlw	254
  7464  1609  3400               	retlw	0
  7465  160A  3403               	retlw	3
  7466  160B  34FE               	retlw	254
  7467  160C  3400               	retlw	0
  7468  160D  3400               	retlw	0
  7469  160E  34FC               	retlw	252
  7470  160F  3400               	retlw	0
  7471  1610  3400               	retlw	0
  7472  1611  34C0               	retlw	192
  7473  1612  3400               	retlw	0
  7474  1613  3400               	retlw	0
  7475  1614  34C0               	retlw	192
  7476  1615  3400               	retlw	0
  7477  1616  3400               	retlw	0
  7478  1617  34C0               	retlw	192
  7479  1618  3400               	retlw	0
  7480  1619  3400               	retlw	0
  7481  161A  3400               	retlw	0
  7482  161B  3400               	retlw	0
  7483  161C  3400               	retlw	0
  7484  161D  3400               	retlw	0
  7485  161E  3400               	retlw	0
  7486  161F  3400               	retlw	0
  7487  1620  3400               	retlw	0
  7488  1621  3400               	retlw	0
  7489  1622  3400               	retlw	0
  7490  1623  3400               	retlw	0
  7491  1624  3400               	retlw	0
  7492  1625  3400               	retlw	0
  7493  1626  3400               	retlw	0
  7494  1627  3400               	retlw	0
  7495  1628  3400               	retlw	0
  7496  1629  3400               	retlw	0
  7497  162A  3400               	retlw	0
  7498  162B  3400               	retlw	0
  7499  162C  3400               	retlw	0
  7500  162D  3400               	retlw	0
  7501  162E                     __end_of_serie_rot:
  7502                           
  7503                           	psect	stringtext17
  7504  162E                     __pstringtext17:
  7505  162E                     _s_prime_rot:
  7506  162E  3400               	retlw	0
  7507  162F  3400               	retlw	0
  7508  1630  3400               	retlw	0
  7509  1631  3460               	retlw	96
  7510  1632  3400               	retlw	0
  7511  1633  3400               	retlw	0
  7512  1634  34F8               	retlw	248
  7513  1635  3400               	retlw	0
  7514  1636  3400               	retlw	0
  7515  1637  34FE               	retlw	254
  7516  1638  3400               	retlw	0
  7517  1639  3400               	retlw	0
  7518  163A  34FF               	retlw	255
  7519  163B  3400               	retlw	0
  7520  163C  3400               	retlw	0
  7521  163D  343F               	retlw	63
  7522  163E  3400               	retlw	0
  7523  163F  3400               	retlw	0
  7524  1640  341E               	retlw	30
  7525  1641  3400               	retlw	0
  7526  1642  3400               	retlw	0
  7527  1643  3438               	retlw	56
  7528  1644  3400               	retlw	0
  7529  1645  3400               	retlw	0
  7530  1646  3478               	retlw	120
  7531  1647  3400               	retlw	0
  7532  1648  3400               	retlw	0
  7533  1649  3478               	retlw	120
  7534  164A  3400               	retlw	0
  7535  164B  3400               	retlw	0
  7536  164C  34F8               	retlw	248
  7537  164D  3400               	retlw	0
  7538  164E  3400               	retlw	0
  7539  164F  34F8               	retlw	248
  7540  1650  3418               	retlw	24
  7541  1651  3400               	retlw	0
  7542  1652  3478               	retlw	120
  7543  1653  347E               	retlw	126
  7544  1654  3400               	retlw	0
  7545  1655  3478               	retlw	120
  7546  1656  34FF               	retlw	255
  7547  1657  3400               	retlw	0
  7548  1658  3479               	retlw	121
  7549  1659  34EF               	retlw	239
  7550  165A  3400               	retlw	0
  7551  165B  347D               	retlw	125
  7552  165C  34EF               	retlw	239
  7553  165D  3480               	retlw	128
  7554  165E  343F               	retlw	63
  7555  165F  34C7               	retlw	199
  7556  1660  3480               	retlw	128
  7557  1661  343F               	retlw	63
  7558  1662  34C7               	retlw	199
  7559  1663  34C0               	retlw	192
  7560  1664  343F               	retlw	63
  7561  1665  34C3               	retlw	195
  7562  1666  34C0               	retlw	192
  7563  1667  341F               	retlw	31
  7564  1668  34C3               	retlw	195
  7565  1669  34C0               	retlw	192
  7566  166A  341F               	retlw	31
  7567  166B  34C3               	retlw	195
  7568  166C  34C0               	retlw	192
  7569  166D  340F               	retlw	15
  7570  166E  3483               	retlw	131
  7571  166F  34C0               	retlw	192
  7572  1670  340F               	retlw	15
  7573  1671  3480               	retlw	128
  7574  1672  3400               	retlw	0
  7575  1673  3400               	retlw	0
  7576  1674  3400               	retlw	0
  7577  1675  3400               	retlw	0
  7578  1676  3400               	retlw	0
  7579  1677  3400               	retlw	0
  7580  1678  3400               	retlw	0
  7581  1679                     __end_of_s_prime_rot:
  7582                           
  7583                           	psect	stringtext18
  7584  1679                     __pstringtext18:
  7585  1679                     _s_rot:
  7586  1679  3400               	retlw	0
  7587  167A  3400               	retlw	0
  7588  167B  3400               	retlw	0
  7589  167C  3400               	retlw	0
  7590  167D  3400               	retlw	0
  7591  167E  3400               	retlw	0
  7592  167F  3400               	retlw	0
  7593  1680  3400               	retlw	0
  7594  1681  3400               	retlw	0
  7595  1682  3418               	retlw	24
  7596  1683  3400               	retlw	0
  7597  1684  3400               	retlw	0
  7598  1685  3438               	retlw	56
  7599  1686  3400               	retlw	0
  7600  1687  3400               	retlw	0
  7601  1688  3478               	retlw	120
  7602  1689  3400               	retlw	0
  7603  168A  3400               	retlw	0
  7604  168B  3478               	retlw	120
  7605  168C  3400               	retlw	0
  7606  168D  3400               	retlw	0
  7607  168E  34F8               	retlw	248
  7608  168F  3400               	retlw	0
  7609  1690  3400               	retlw	0
  7610  1691  3478               	retlw	120
  7611  1692  343C               	retlw	60
  7612  1693  3400               	retlw	0
  7613  1694  3478               	retlw	120
  7614  1695  347E               	retlw	126
  7615  1696  3400               	retlw	0
  7616  1697  3478               	retlw	120
  7617  1698  34FF               	retlw	255
  7618  1699  3400               	retlw	0
  7619  169A  3479               	retlw	121
  7620  169B  34EF               	retlw	239
  7621  169C  3480               	retlw	128
  7622  169D  347D               	retlw	125
  7623  169E  34EF               	retlw	239
  7624  169F  3480               	retlw	128
  7625  16A0  343F               	retlw	63
  7626  16A1  34C7               	retlw	199
  7627  16A2  34C0               	retlw	192
  7628  16A3  343F               	retlw	63
  7629  16A4  34C7               	retlw	199
  7630  16A5  34C0               	retlw	192
  7631  16A6  343F               	retlw	63
  7632  16A7  34C3               	retlw	195
  7633  16A8  34C0               	retlw	192
  7634  16A9  341F               	retlw	31
  7635  16AA  34C3               	retlw	195
  7636  16AB  34C0               	retlw	192
  7637  16AC  341F               	retlw	31
  7638  16AD  34C3               	retlw	195
  7639  16AE  34C0               	retlw	192
  7640  16AF  340F               	retlw	15
  7641  16B0  3483               	retlw	131
  7642  16B1  34C0               	retlw	192
  7643  16B2  340F               	retlw	15
  7644  16B3  3480               	retlw	128
  7645  16B4  3400               	retlw	0
  7646  16B5  3400               	retlw	0
  7647  16B6  3400               	retlw	0
  7648  16B7  3400               	retlw	0
  7649  16B8  3400               	retlw	0
  7650  16B9  3400               	retlw	0
  7651  16BA  3400               	retlw	0
  7652  16BB  3400               	retlw	0
  7653  16BC  3400               	retlw	0
  7654  16BD  3400               	retlw	0
  7655  16BE  3400               	retlw	0
  7656  16BF  3400               	retlw	0
  7657  16C0  3400               	retlw	0
  7658  16C1  3400               	retlw	0
  7659  16C2  3400               	retlw	0
  7660  16C3  3400               	retlw	0
  7661  16C4                     __end_of_s_rot:
  7662                           
  7663                           	psect	stringtext19
  7664  16C4                     __pstringtext19:
  7665  16C4                     _n_prime_rot:
  7666  16C4  3478               	retlw	120
  7667  16C5  3400               	retlw	0
  7668  16C6  3400               	retlw	0
  7669  16C7  34FE               	retlw	254
  7670  16C8  3400               	retlw	0
  7671  16C9  3400               	retlw	0
  7672  16CA  34FF               	retlw	255
  7673  16CB  3400               	retlw	0
  7674  16CC  3400               	retlw	0
  7675  16CD  343F               	retlw	63
  7676  16CE  3400               	retlw	0
  7677  16CF  3400               	retlw	0
  7678  16D0  340E               	retlw	14
  7679  16D1  3400               	retlw	0
  7680  16D2  3400               	retlw	0
  7681  16D3  3400               	retlw	0
  7682  16D4  3400               	retlw	0
  7683  16D5  3400               	retlw	0
  7684  16D6  3400               	retlw	0
  7685  16D7  3400               	retlw	0
  7686  16D8  3400               	retlw	0
  7687  16D9  343E               	retlw	62
  7688  16DA  3400               	retlw	0
  7689  16DB  3400               	retlw	0
  7690  16DC  347F               	retlw	127
  7691  16DD  34F0               	retlw	240
  7692  16DE  3400               	retlw	0
  7693  16DF  347F               	retlw	127
  7694  16E0  34FC               	retlw	252
  7695  16E1  3400               	retlw	0
  7696  16E2  347F               	retlw	127
  7697  16E3  34FE               	retlw	254
  7698  16E4  3400               	retlw	0
  7699  16E5  340F               	retlw	15
  7700  16E6  34FF               	retlw	255
  7701  16E7  3400               	retlw	0
  7702  16E8  3400               	retlw	0
  7703  16E9  347F               	retlw	127
  7704  16EA  3480               	retlw	128
  7705  16EB  3400               	retlw	0
  7706  16EC  341F               	retlw	31
  7707  16ED  34C0               	retlw	192
  7708  16EE  3408               	retlw	8
  7709  16EF  340F               	retlw	15
  7710  16F0  3480               	retlw	128
  7711  16F1  343F               	retlw	63
  7712  16F2  34FF               	retlw	255
  7713  16F3  3480               	retlw	128
  7714  16F4  343F               	retlw	63
  7715  16F5  34FF               	retlw	255
  7716  16F6  3400               	retlw	0
  7717  16F7  347F               	retlw	127
  7718  16F8  34FC               	retlw	252
  7719  16F9  3400               	retlw	0
  7720  16FA  347F               	retlw	127
  7721  16FB  34F8               	retlw	248
  7722  16FC  3400               	retlw	0
  7723  16FD  341F               	retlw	31
  7724  16FE  34FC               	retlw	252
  7725  16FF  3400               	retlw	0
  7726  1700  3407               	retlw	7
  7727  1701  34FF               	retlw	255
  7728  1702  3480               	retlw	128
  7729  1703  3401               	retlw	1
  7730  1704  34FF               	retlw	255
  7731  1705  34C0               	retlw	192
  7732  1706  3400               	retlw	0
  7733  1707  347F               	retlw	127
  7734  1708  34C0               	retlw	192
  7735  1709  3400               	retlw	0
  7736  170A  341F               	retlw	31
  7737  170B  3480               	retlw	128
  7738  170C  3400               	retlw	0
  7739  170D  340E               	retlw	14
  7740  170E  3400               	retlw	0
  7741  170F                     __end_of_n_prime_rot:
  7742                           
  7743                           	psect	stringtext20
  7744  170F                     __pstringtext20:
  7745  170F                     _n_rot:
  7746  170F  3400               	retlw	0
  7747  1710  3400               	retlw	0
  7748  1711  3400               	retlw	0
  7749  1712  3400               	retlw	0
  7750  1713  3400               	retlw	0
  7751  1714  3400               	retlw	0
  7752  1715  3400               	retlw	0
  7753  1716  3400               	retlw	0
  7754  1717  3400               	retlw	0
  7755  1718  3418               	retlw	24
  7756  1719  3400               	retlw	0
  7757  171A  3400               	retlw	0
  7758  171B  343E               	retlw	62
  7759  171C  3400               	retlw	0
  7760  171D  3400               	retlw	0
  7761  171E  347F               	retlw	127
  7762  171F  34F0               	retlw	240
  7763  1720  3400               	retlw	0
  7764  1721  347F               	retlw	127
  7765  1722  34FC               	retlw	252
  7766  1723  3400               	retlw	0
  7767  1724  343F               	retlw	63
  7768  1725  34FE               	retlw	254
  7769  1726  3400               	retlw	0
  7770  1727  3407               	retlw	7
  7771  1728  34FF               	retlw	255
  7772  1729  3480               	retlw	128
  7773  172A  3400               	retlw	0
  7774  172B  343F               	retlw	63
  7775  172C  3480               	retlw	128
  7776  172D  3400               	retlw	0
  7777  172E  341F               	retlw	31
  7778  172F  34C0               	retlw	192
  7779  1730  3408               	retlw	8
  7780  1731  340F               	retlw	15
  7781  1732  3480               	retlw	128
  7782  1733  343F               	retlw	63
  7783  1734  34FF               	retlw	255
  7784  1735  3480               	retlw	128
  7785  1736  343F               	retlw	63
  7786  1737  34FF               	retlw	255
  7787  1738  3400               	retlw	0
  7788  1739  347F               	retlw	127
  7789  173A  34FC               	retlw	252
  7790  173B  3400               	retlw	0
  7791  173C  347F               	retlw	127
  7792  173D  34F8               	retlw	248
  7793  173E  3400               	retlw	0
  7794  173F  341F               	retlw	31
  7795  1740  34FC               	retlw	252
  7796  1741  3400               	retlw	0
  7797  1742  3407               	retlw	7
  7798  1743  34FF               	retlw	255
  7799  1744  3480               	retlw	128
  7800  1745  3401               	retlw	1
  7801  1746  34FF               	retlw	255
  7802  1747  34C0               	retlw	192
  7803  1748  3400               	retlw	0
  7804  1749  347F               	retlw	127
  7805  174A  34C0               	retlw	192
  7806  174B  3400               	retlw	0
  7807  174C  341F               	retlw	31
  7808  174D  3480               	retlw	128
  7809  174E  3400               	retlw	0
  7810  174F  3406               	retlw	6
  7811  1750  3400               	retlw	0
  7812  1751  3400               	retlw	0
  7813  1752  3400               	retlw	0
  7814  1753  3400               	retlw	0
  7815  1754  3400               	retlw	0
  7816  1755  3400               	retlw	0
  7817  1756  3400               	retlw	0
  7818  1757  3400               	retlw	0
  7819  1758  3400               	retlw	0
  7820  1759  3400               	retlw	0
  7821  175A                     __end_of_n_rot:
  7822                           
  7823                           	psect	stringtext21
  7824  17AA                     __pstringtext21:
  7825  17AA                     _lut_partial_update:
  7826  17AA  3410               	retlw	16
  7827  17AB  3418               	retlw	24
  7828  17AC  3418               	retlw	24
  7829  17AD  3408               	retlw	8
  7830  17AE  3418               	retlw	24
  7831  17AF  3418               	retlw	24
  7832  17B0  3408               	retlw	8
  7833  17B1  3400               	retlw	0
  7834  17B2  3400               	retlw	0
  7835  17B3  3400               	retlw	0
  7836  17B4  3400               	retlw	0
  7837  17B5  3400               	retlw	0
  7838  17B6  3400               	retlw	0
  7839  17B7  3400               	retlw	0
  7840  17B8  3400               	retlw	0
  7841  17B9  3400               	retlw	0
  7842  17BA  3400               	retlw	0
  7843  17BB  3400               	retlw	0
  7844  17BC  3400               	retlw	0
  7845  17BD  3400               	retlw	0
  7846  17BE  3413               	retlw	19
  7847  17BF  3414               	retlw	20
  7848  17C0  3444               	retlw	68
  7849  17C1  3412               	retlw	18
  7850  17C2  3400               	retlw	0
  7851  17C3  3400               	retlw	0
  7852  17C4  3400               	retlw	0
  7853  17C5  3400               	retlw	0
  7854  17C6  3400               	retlw	0
  7855  17C7  3400               	retlw	0
  7856  17C8                     __end_of_lut_partial_update:
  7857                           
  7858                           	psect	stringtext22
  7859  17C8                     __pstringtext22:
  7860  17C8                     _lut_full_update:
  7861  17C8  3450               	retlw	80
  7862  17C9  34AA               	retlw	170
  7863  17CA  3455               	retlw	85
  7864  17CB  34AA               	retlw	170
  7865  17CC  3411               	retlw	17
  7866  17CD  3400               	retlw	0
  7867  17CE  3400               	retlw	0
  7868  17CF  3400               	retlw	0
  7869  17D0  3400               	retlw	0
  7870  17D1  3400               	retlw	0
  7871  17D2  3400               	retlw	0
  7872  17D3  3400               	retlw	0
  7873  17D4  3400               	retlw	0
  7874  17D5  3400               	retlw	0
  7875  17D6  3400               	retlw	0
  7876  17D7  3400               	retlw	0
  7877  17D8  3400               	retlw	0
  7878  17D9  3400               	retlw	0
  7879  17DA  3400               	retlw	0
  7880  17DB  3400               	retlw	0
  7881  17DC  34FF               	retlw	255
  7882  17DD  34FF               	retlw	255
  7883  17DE  341F               	retlw	31
  7884  17DF  3400               	retlw	0
  7885  17E0  3400               	retlw	0
  7886  17E1  3400               	retlw	0
  7887  17E2  3400               	retlw	0
  7888  17E3  3400               	retlw	0
  7889  17E4  3400               	retlw	0
  7890  17E5  3400               	retlw	0
  7891  17E6                     __end_of_lut_full_update:
  7892  1F80                     _configurations_absaddr	set	8064
  7893                           
  7894                           	psect	_configurations_text
  7895  1F80                     __p_configurations_text:
  7896  1F80                     _configurations:
  7897  1F80  3401               	retlw	1
  7898  1F81  3400               	retlw	0
  7899  1F82  3400               	retlw	0
  7900  1F83  3400               	retlw	0
  7901  1F84  3401               	retlw	1
  7902  1F85  3401               	retlw	1
  7903  1F86  3400               	retlw	0
  7904  1F87  340E               	retlw	14
  7905  1F88  3400               	retlw	0
  7906  1F89  3401               	retlw	1
  7907  1F8A  3400               	retlw	0
  7908  1F8B  3401               	retlw	1
  7909  1F8C  3400               	retlw	0
  7910  1F8D  3401               	retlw	1
  7911  1F8E  3401               	retlw	1
  7912  1F8F  340F               	retlw	15
  7913  1F90  3400               	retlw	0
  7914  1F91  3400               	retlw	0
  7915  1F92  3401               	retlw	1
  7916  1F93  3402               	retlw	2
  7917  1F94                     __end_of_configurations:
  7918  0003                     _STATUS	set	3
  7919  000D                     _PORTBbits	set	13
  7920  000E                     _PORTCbits	set	14
  7921  000C                     _PORTAbits	set	12
  7922  0018                     _T1CONbits	set	24
  7923  0018                     _T1CON	set	24
  7924  0016                     _TMR1L	set	22
  7925  0017                     _TMR1H	set	23
  7926  0019                     _T1GCON	set	25
  7927  0011                     _PIR1bits	set	17
  7928  000B                     _INTCONbits	set	11
  7929  0096                     _PCON	set	150
  7930  0096                     _PCONbits	set	150
  7931  0091                     _PIE1bits	set	145
  7932  008D                     _TRISBbits	set	141
  7933  0095                     _OPTION_REGbits	set	149
  7934  008E                     _TRISC	set	142
  7935  008D                     _TRISB	set	141
  7936  008C                     _TRISA	set	140
  7937  0097                     _WDTCON	set	151
  7938  0098                     _OSCTUNE	set	152
  7939  009A                     _OSCSTAT	set	154
  7940  0099                     _OSCCON	set	153
  7941  04B6                     _STKUNF	set	1206
  7942  04B7                     _STKOVF	set	1207
  7943  010E                     _LATCbits	set	270
  7944  010C                     _LATAbits	set	268
  7945  010E                     _LATC	set	270
  7946  010D                     _LATB	set	269
  7947  010C                     _LATA	set	268
  7948  0193                     _PMDAT	set	403
  7949  0191                     _PMADR	set	401
  7950  0195                     _PMCON1bits	set	405
  7951  018C                     _ANSELA	set	396
  7952  018D                     _ANSELB	set	397
  7953  018E                     _ANSELC	set	398
  7954  0211                     _SSP1BUF	set	529
  7955  0216                     _SSP1CON2	set	534
  7956  0215                     _SSP1CON1bits	set	533
  7957  0212                     _SSP1ADD	set	530
  7958  0215                     _SSP1CON1	set	533
  7959  0214                     _SSP1STAT	set	532
  7960  020E                     _WPUC	set	526
  7961  020C                     _WPUA	set	524
  7962  020D                     _WPUB	set	525
  7963  021D                     _BORCON	set	541
  7964  028E                     _ODCONC	set	654
  7965  028D                     _ODCONB	set	653
  7966  028C                     _ODCONA	set	652
  7967  030E                     _SLRCONC	set	782
  7968  030D                     _SLRCONB	set	781
  7969  030C                     _SLRCONA	set	780
  7970  0391                     _IOCAPbits	set	913
  7971  0392                     _IOCANbits	set	914
  7972  0393                     _IOCAFbits	set	915
  7973  038E                     _INLVLC	set	910
  7974  038D                     _INLVLB	set	909
  7975  038C                     _INLVLA	set	908
  7976  0E21                     _SSPDATPPS	set	3617
  7977  0E20                     _SSPCLKPPS	set	3616
  7978  0E9F                     _RB7PPS	set	3743
  7979  0E9E                     _RB6PPS	set	3742
  7980                           
  7981                           	psect	stringtext23
  7982  17E6                     __pstringtext23:
  7983  17E6                     STR_5:
  7984  17E6  344E               	retlw	78	;'N'
  7985  17E7  343A               	retlw	58	;':'
  7986  17E8  3420               	retlw	32	;' '
  7987  17E9  3425               	retlw	37	;'%'
  7988  17EA  3473               	retlw	115	;'s'
  7989  17EB  3420               	retlw	32	;' '
  7990  17EC  344D               	retlw	77	;'M'
  7991  17ED  343A               	retlw	58	;':'
  7992  17EE  3420               	retlw	32	;' '
  7993  17EF  3425               	retlw	37	;'%'
  7994  17F0  3473               	retlw	115	;'s'
  7995  17F1  3420               	retlw	32	;' '
  7996  17F2  3442               	retlw	66	;'B'
  7997  17F3  343A               	retlw	58	;':'
  7998  17F4  3420               	retlw	32	;' '
  7999  17F5  3425               	retlw	37	;'%'
  8000  17F6  3473               	retlw	115	;'s'
  8001  17F7  3420               	retlw	32	;' '
  8002  17F8  3447               	retlw	71	;'G'
  8003  17F9  343A               	retlw	58	;':'
  8004  17FA  3420               	retlw	32	;' '
  8005  17FB  3425               	retlw	37	;'%'
  8006  17FC  3473               	retlw	115	;'s'
  8007  17FD  340A               	retlw	10
  8008  17FE  3400               	retlw	0
  8009                           
  8010                           	psect	stringtext24
  8011  17FF                     __pstringtext24:
  8012  17FF                     STR_7:
  8013  17FF  344E               	retlw	78	;'N'
  8014  1800  343A               	retlw	58	;':'
  8015  1801  3425               	retlw	37	;'%'
  8016  1802  3464               	retlw	100	;'d'
  8017  1803  3409               	retlw	9
  8018  1804  344D               	retlw	77	;'M'
  8019  1805  343A               	retlw	58	;':'
  8020  1806  3425               	retlw	37	;'%'
  8021  1807  3464               	retlw	100	;'d'
  8022  1808  3409               	retlw	9
  8023  1809  3442               	retlw	66	;'B'
  8024  180A  343A               	retlw	58	;':'
  8025  180B  3425               	retlw	37	;'%'
  8026  180C  3464               	retlw	100	;'d'
  8027  180D  3409               	retlw	9
  8028  180E  3447               	retlw	71	;'G'
  8029  180F  343A               	retlw	58	;':'
  8030  1810  3425               	retlw	37	;'%'
  8031  1811  3464               	retlw	100	;'d'
  8032  1812  340A               	retlw	10
  8033  1813  3400               	retlw	0
  8034                           
  8035                           	psect	stringtext25
  8036  1814                     __pstringtext25:
  8037  1814                     STR_6:
  8038  1814  344E               	retlw	78	;'N'
  8039  1815  3427               	retlw	39	;'''
  8040  1816  342B               	retlw	43	;'+'
  8041  1817  3453               	retlw	83	;'S'
  8042  1818  3420               	retlw	32	;' '
  8043  1819  344E               	retlw	78	;'N'
  8044  181A  3420               	retlw	32	;' '
  8045  181B  344E               	retlw	78	;'N'
  8046  181C  3420               	retlw	32	;' '
  8047  181D  344E               	retlw	78	;'N'
  8048  181E  342B               	retlw	43	;'+'
  8049  181F  344D               	retlw	77	;'M'
  8050  1820  342B               	retlw	43	;'+'
  8051  1821  3442               	retlw	66	;'B'
  8052  1822  3400               	retlw	0
  8053                           
  8054                           	psect	stringtext26
  8055  1831                     __pstringtext26:
  8056  1831                     STR_1:
  8057  1831  3464               	retlw	100	;'d'
  8058  1832  3461               	retlw	97	;'a'
  8059  1833  3474               	retlw	116	;'t'
  8060  1834  3461               	retlw	97	;'a'
  8061  1835  3400               	retlw	0
  8062                           
  8063                           	psect	stringtext27
  8064  0000                     __pstringtext27:
  8065  1831                     
  8066                           	psect	cinit
  8067  001B                     start_initialization:	
  8068                           ; #config settings
  8069                           
  8070  001B                     __initialization:	;BIGRAM
  8071                           
  8072                           ; Initialize objects allocated to BIGRAM
  8073  001B  30E2               	movlw	low __pidataBIGRAM
  8074  001C  0084               	movwf	4
  8075  001D  3085               	movlw	(high __pidataBIGRAM)| (0+128)
  8076  001E  0085               	movwf	5
  8077  001F  307C               	movlw	124
  8078  0020  0086               	movwf	6
  8079  0021  3022               	movlw	34
  8080  0022  0087               	movwf	7
  8081  0023  3001               	movlw	1
  8082  0024  00FF               	movwf	127
  8083  0025  3074               	movlw	116
  8084  0026  3188  2001  3180   	fcall	init_ram
  8085                           
  8086                           ; Initialize objects allocated to BANK1
  8087  0029  30D3               	movlw	low __pidataBANK1
  8088  002A  0084               	movwf	4
  8089  002B  3087               	movlw	(high __pidataBANK1)| (0+128)
  8090  002C  0085               	movwf	5
  8091  002D  30A0               	movlw	low __pdataBANK1
  8092  002E  0086               	movwf	6
  8093  002F  3000               	movlw	high __pdataBANK1
  8094  0030  0087               	movwf	7
  8095  0031  3022               	movlw	34
  8096  0032  01FF               	clrf	127
  8097  0033  3188  2001  3180   	fcall	init_ram
  8098                           
  8099                           ; Initialize objects allocated to BANK2
  8100  0036  3047               	movlw	low __pidataBANK2
  8101  0037  0084               	movwf	4
  8102  0038  3088               	movlw	(high __pidataBANK2)| (0+128)
  8103  0039  0085               	movwf	5
  8104  003A  304B               	movlw	low __pdataBANK2
  8105  003B  0086               	movwf	6
  8106  003C  3001               	movlw	high __pdataBANK2
  8107  003D  0087               	movwf	7
  8108  003E  3020               	movlw	32
  8109  003F  01FF               	clrf	127
  8110  0040  3188  2001  3180   	fcall	init_ram
  8111  0043  30C2               	movlw	low __pbssBANK1
  8112                           
  8113                           ; Clear objects allocated to COMMON
  8114  0044  01FA               	clrf	__pbssCOMMON& (0+127)
  8115  0045  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  8116                           
  8117                           ; Clear objects allocated to BANK1
  8118  0046  0084               	movwf	4
  8119  0047  3000               	movlw	high __pbssBANK1
  8120  0048  0085               	movwf	5
  8121  0049  301B               	movlw	27
  8122  004A  00FE               	movwf	126
  8123  004B  01FF               	clrf	127
  8124  004C  319F  2755  3180   	fcall	clear_ram0
  8125  004F                     end_of_initialization:	
  8126                           ;End of C runtime variable initialization code
  8127                           
  8128  004F                     __end_of__initialization:
  8129  004F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8130  0050  0020               	movlb	0
  8131  0051  287D               	ljmp	l5099	;jump to C main() function
  8132  0052                     __ptext37:	
  8133 ;; *************** function _GotoSleep *****************
  8134 ;; Defined at:
  8135 ;;		line 89 in file "main.c"
  8136 ;; Parameters:    Size  Location     Type
  8137 ;;		None
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;Total ram usage:        0 bytes
  8154 ;; Hardware stack levels used: 1
  8155 ;; Hardware stack levels required when called: 9
  8156 ;; This function calls:
  8157 ;;		_ButtonEventReset
  8158 ;;		_ClearFrameMemory
  8159 ;;		_DELAY_milliseconds
  8160 ;;		_DisplayFrame
  8161 ;;		_InitDisplay
  8162 ;;		_SleepDisplay
  8163 ;; This function is called by:
  8164 ;;		_ButtonEventHandler
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           
  8169                           ;psect for function _GotoSleep
  8170  0052                     _GotoSleep:
  8171                           
  8172                           ;main.c: 90:     InitDisplay(lut_full_update);
  8173                           
  8174                           ;incstack = 0
  8175                           ; Regs used in _GotoSleep: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8176  0052  30C8               	movlw	low (_lut_full_update| (0+32768))
  8177  0053  0020               	movlb	0	; select bank0
  8178  0054  00A0               	movwf	InitDisplay@lut
  8179  0055  3097               	movlw	high (_lut_full_update| (0+32768))
  8180  0056  00A1               	movwf	InitDisplay@lut+1
  8181  0057  318A  2255  3180   	fcall	_InitDisplay
  8182                           
  8183                           ;main.c: 91:     ClearFrameMemory(0xA5);
  8184  005A  30A5               	movlw	165
  8185  005B  318F  27BC  3180   	fcall	_ClearFrameMemory
  8186                           
  8187                           ;main.c: 92:     DisplayFrame();
  8188  005E  318B  2338  3180   	fcall	_DisplayFrame
  8189                           
  8190                           ;main.c: 93:     SleepDisplay();
  8191  0061  2077               	fcall	_SleepDisplay
  8192  0062  0022               	movlb	2	; select bank2
  8193  0063  108C               	bcf	12,1	;volatile
  8194  0064  110C               	bcf	12,2	;volatile
  8195  0065  120C               	bcf	12,4	;volatile
  8196  0066  128C               	bcf	12,5	;volatile
  8197  0067  120E               	bcf	14,4	;volatile
  8198  0068  128E               	bcf	14,5	;volatile
  8199  0069  130E               	bcf	14,6	;volatile
  8200  006A  138E               	bcf	14,7	;volatile
  8201                           
  8202                           ;main.c: 102:     DELAY_milliseconds(2000);
  8203  006B  30D0               	movlw	208
  8204  006C  00F2               	movwf	DELAY_milliseconds@milliseconds
  8205  006D  3007               	movlw	7
  8206  006E  00F3               	movwf	DELAY_milliseconds@milliseconds+1
  8207  006F  318F  27AE  3180   	fcall	_DELAY_milliseconds
  8208                           
  8209                           ;main.c: 103:     ButtonEventReset();
  8210  0072  235D               	fcall	_ButtonEventReset
  8211                           
  8212                           ;main.c: 104:     sleeping = 1;
  8213  0073  01DA               	clrf	_sleeping^(0+128)
  8214  0074  0ADA               	incf	_sleeping^(0+128),f
  8215  0075  0063               	sleep	;# 
  8216  0076  0008               	return
  8217  0077                     __end_of_GotoSleep:
  8218  0077                     __ptext38:	
  8219 ;; *************** function _SleepDisplay *****************
  8220 ;; Defined at:
  8221 ;;		line 250 in file "waveshare29epaper.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;		None
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;		None
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      void 
  8228 ;; Registers used:
  8229 ;;		wreg, status,2, status,0, pclath, cstack
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 1F/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8239 ;;Total ram usage:        0 bytes
  8240 ;; Hardware stack levels used: 1
  8241 ;; Hardware stack levels required when called: 6
  8242 ;; This function calls:
  8243 ;;		_SendCommand
  8244 ;;		_WaitUntilIdle
  8245 ;; This function is called by:
  8246 ;;		_GotoSleep
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250                           
  8251                           ;psect for function _SleepDisplay
  8252  0077                     _SleepDisplay:
  8253                           
  8254                           ;waveshare29epaper.c: 251:     SendCommand(0x10);
  8255                           
  8256                           ;incstack = 0
  8257                           ; Regs used in _SleepDisplay: [wreg+status,2+status,0+pclath+cstack]
  8258  0077  3010               	movlw	16
  8259  0078  318F  2752  3180   	fcall	_SendCommand
  8260                           
  8261                           ;waveshare29epaper.c: 252:     WaitUntilIdle();
  8262  007B  318F  2F9B         	ljmp	l4183
  8263  007D                     __end_of_SleepDisplay:
  8264  007D                     __pmaintext:	
  8265 ;;
  8266 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8267 ;;
  8268 ;; *************** function _main *****************
  8269 ;; Defined at:
  8270 ;;		line 337 in file "main.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;		None
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;  reset_pc        4   61[BANK0 ] struct PickupConfigurati
  8275 ;;  reset_pc        4   57[BANK0 ] struct PickupConfigurati
  8276 ;;  stack_pc        4   53[BANK0 ] struct PickupConfigurati
  8277 ;;  reset_type      1   52[BANK0 ] unsigned char 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  2  617[None  ] int 
  8280 ;; Registers used:
  8281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : B1F/0
  8284 ;;		On exit  : 1A/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8289 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8291 ;;Total ram usage:       14 bytes
  8292 ;; Hardware stack levels required when called: 11
  8293 ;; This function calls:
  8294 ;;		_ButtonCaseHandler
  8295 ;;		_ButtonEventHandler
  8296 ;;		_DELAY_milliseconds
  8297 ;;		_DisplayFrame
  8298 ;;		_DisplayRefreshHandler
  8299 ;;		_IOCAF0_SetInterruptHandler
  8300 ;;		_ImageFromPickupConf
  8301 ;;		_RotaryEncoderEventHandler
  8302 ;;		_SYSTEM_Initialize
  8303 ;;		_SwitchEventHandler
  8304 ;;		_TMR1_SetInterruptHandler
  8305 ;;		_WakeUp
  8306 ;;		_spi_master_open
  8307 ;; This function is called by:
  8308 ;;		Startup code after reset
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312                           
  8313                           ;psect for function _main
  8314  007D                     _main:
  8315  007D                     l5099:	
  8316                           ;incstack = 0
  8317                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8318                           
  8319                           
  8320                           ;main.c: 340:     uint8_t reset_type = 0;
  8321  007D  01D4               	clrf	main@reset_type
  8322                           
  8323                           ;main.c: 341:     if(STKOVF | STKUNF)
  8324  007E  0021               	movlb	1	; select bank1
  8325  007F  1F16               	btfss	22,6	;volatile
  8326  0080  2883               	goto	u4000
  8327  0081  3001               	movlw	1
  8328  0082  2884               	goto	u4002
  8329  0083                     u4000:
  8330  0083  3000               	movlw	0
  8331  0084                     u4002:
  8332  0084  0020               	movlb	0	; select bank0
  8333  0085  00D3               	movwf	??_main
  8334  0086  0021               	movlb	1	; select bank1
  8335  0087  1F96               	btfss	22,7	;volatile
  8336  0088  288B               	goto	u4010
  8337  0089  3001               	movlw	1
  8338  008A  288C               	goto	u4012
  8339  008B                     u4010:
  8340  008B  3000               	movlw	0
  8341  008C                     u4012:
  8342  008C  0020               	movlb	0	; select bank0
  8343  008D  0453               	iorwf	??_main,w
  8344  008E  1903               	skipnz
  8345  008F  2893               	goto	l618
  8346                           
  8347                           ;main.c: 342:         reset_type = 1;
  8348  0090  01D4               	clrf	main@reset_type
  8349  0091  0AD4               	incf	main@reset_type,f
  8350  0092  28AA               	goto	l5113
  8351  0093                     l618:	
  8352                           ;main.c: 343:     else if(!PCONbits.nRI)
  8353                           
  8354  0093  0021               	movlb	1	; select bank1
  8355  0094  1916               	btfsc	22,2	;volatile
  8356  0095  2899               	goto	l5107
  8357                           
  8358                           ;main.c: 344:         reset_type = 2;
  8359  0096  3002               	movlw	2
  8360  0097  0020               	movlb	0	; select bank0
  8361  0098  28A9               	goto	L1
  8362  0099                     l5107:
  8363  0099  3018               	movlw	24
  8364  009A  0503               	andwf	3,w	;volatile
  8365  009B  0020               	movlb	0	; select bank0
  8366  009C  00D3               	movwf	??_main
  8367  009D  3A18               	xorlw	24
  8368  009E  1D03               	btfss	3,2
  8369  009F  28AA               	goto	l5113
  8370  00A0  300C               	movlw	12
  8371  00A1  0021               	movlb	1	; select bank1
  8372  00A2  0516               	andwf	22,w	;volatile
  8373  00A3  0020               	movlb	0	; select bank0
  8374  00A4  00D3               	movwf	??_main
  8375  00A5  3A0C               	xorlw	12
  8376  00A6  1D03               	btfss	3,2
  8377  00A7  28AA               	goto	l5113
  8378                           
  8379                           ;main.c: 346:         reset_type = 3;
  8380  00A8  3003               	movlw	3
  8381  00A9                     L1:
  8382  00A9  00D4               	movwf	main@reset_type
  8383  00AA                     l5113:
  8384                           
  8385                           ;main.c: 348:     SYSTEM_Initialize();
  8386  00AA  22A6  3180         	fcall	_SYSTEM_Initialize
  8387                           
  8388                           ;main.c: 350:     (INTCONbits.GIE = 1);
  8389  00AC  178B               	bsf	11,7	;volatile
  8390                           
  8391                           ;main.c: 351:     (INTCONbits.PEIE = 1);
  8392  00AD  170B               	bsf	11,6	;volatile
  8393                           
  8394                           ;main.c: 352:     TMR1_SetInterruptHandler(TMR1_CallBack);
  8395  00AE  300D               	movlw	low _TMR1_CallBack
  8396  00AF  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  8397  00B0  3008               	movlw	high _TMR1_CallBack
  8398  00B1  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  8399  00B2  22A0  3180         	fcall	_TMR1_SetInterruptHandler
  8400                           
  8401                           ;main.c: 353:     IOCAF0_SetInterruptHandler(Button_Callback);
  8402  00B4  3061               	movlw	low _Button_Callback
  8403  00B5  00F2               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler
  8404  00B6  301F               	movlw	high _Button_Callback
  8405  00B7  00F3               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler+1
  8406  00B8  229A  3180         	fcall	_IOCAF0_SetInterruptHandler
  8407                           
  8408                           ;main.c: 354:     if(!spi_master_open(EINK)){
  8409  00BA  3000               	movlw	0
  8410  00BB  234B  3180         	fcall	_spi_master_open
  8411  00BD  3A00               	xorlw	0
  8412  00BE  1903               	btfsc	3,2
  8413  00BF  2934               	goto	l624
  8414                           
  8415                           ;main.c: 360:     WakeUp();
  8416  00C0  3189  21F5  3180   	fcall	_WakeUp
  8417                           
  8418                           ;main.c: 362:     if(reset_type == 1){
  8419  00C3  0020               	movlb	0	; select bank0
  8420  00C4  0B54               	decfsz	main@reset_type,w
  8421  00C5  28DE               	goto	l5141
  8422                           
  8423                           ;main.c: 363:         STKOVF = 0;
  8424  00C6  0021               	movlb	1	; select bank1
  8425  00C7  1396               	bcf	22,7	;volatile
  8426                           
  8427                           ;main.c: 364:         STKUNF = 0;
  8428  00C8  1316               	bcf	22,6	;volatile
  8429                           
  8430                           ;main.c: 365:         PickupConfiguration stack_pc = {.neck=15, .middle=15, .bridge=15, 
      +                          .general=15};
  8431  00C9  082B               	movf	(main@F9488+3)^(0+128),w
  8432  00CA  0020               	movlb	0	; select bank0
  8433  00CB  00D8               	movwf	main@stack_pc+3
  8434  00CC  0021               	movlb	1	; select bank1
  8435  00CD  082A               	movf	(main@F9488+2)^(0+128),w
  8436  00CE  0020               	movlb	0	; select bank0
  8437  00CF  00D7               	movwf	main@stack_pc+2
  8438  00D0  0021               	movlb	1	; select bank1
  8439  00D1  0829               	movf	(main@F9488+1)^(0+128),w
  8440  00D2  0020               	movlb	0	; select bank0
  8441  00D3  00D6               	movwf	main@stack_pc+1
  8442  00D4  0021               	movlb	1	; select bank1
  8443  00D5  0828               	movf	main@F9488^(0+128),w
  8444  00D6  0020               	movlb	0	; select bank0
  8445  00D7  00D5               	movwf	main@stack_pc
  8446                           
  8447                           ;main.c: 366:         ImageFromPickupConf(&stack_pc, selection_index, 1, 0);
  8448  00D8  0021               	movlb	1	; select bank1
  8449  00D9  082D               	movf	_selection_index^(0+128),w
  8450  00DA  0020               	movlb	0	; select bank0
  8451  00DB  00C2               	movwf	ImageFromPickupConf@selection_index
  8452  00DC  3055               	movlw	(low (main@stack_pc| 0))& (0+255)
  8453  00DD  2911               	goto	L3
  8454  00DE                     l5141:	
  8455                           ;main.c: 369:     }
  8456                           
  8457  00DE  3002               	movlw	2
  8458  00DF  0654               	xorwf	main@reset_type,w
  8459  00E0  1D03               	btfss	3,2
  8460  00E1  28F8               	goto	l5151
  8461                           
  8462                           ;main.c: 371:         PickupConfiguration reset_pc = {.neck=16, .middle=16, .bridge=16, 
      +                          .general=16};
  8463  00E2  0021               	movlb	1	; select bank1
  8464  00E3  0827               	movf	(main@F9490+3)^(0+128),w
  8465  00E4  0020               	movlb	0	; select bank0
  8466  00E5  00DC               	movwf	main@reset_pc+3
  8467  00E6  0021               	movlb	1	; select bank1
  8468  00E7  0826               	movf	(main@F9490+2)^(0+128),w
  8469  00E8  0020               	movlb	0	; select bank0
  8470  00E9  00DB               	movwf	main@reset_pc+2
  8471  00EA  0021               	movlb	1	; select bank1
  8472  00EB  0825               	movf	(main@F9490+1)^(0+128),w
  8473  00EC  0020               	movlb	0	; select bank0
  8474  00ED  00DA               	movwf	main@reset_pc+1
  8475  00EE  0021               	movlb	1	; select bank1
  8476  00EF  0824               	movf	main@F9490^(0+128),w
  8477  00F0  0020               	movlb	0	; select bank0
  8478  00F1  00D9               	movwf	main@reset_pc
  8479                           
  8480                           ;main.c: 372:         ImageFromPickupConf(&reset_pc, selection_index, 1, 0);
  8481  00F2  0021               	movlb	1	; select bank1
  8482  00F3  082D               	movf	_selection_index^(0+128),w
  8483  00F4  0020               	movlb	0	; select bank0
  8484  00F5  00C2               	movwf	ImageFromPickupConf@selection_index
  8485  00F6  3059               	movlw	(low (main@reset_pc| 0))& (0+255)
  8486  00F7  2911               	goto	L3
  8487  00F8                     l5151:
  8488  00F8  3003               	movlw	3
  8489  00F9  0654               	xorwf	main@reset_type,w
  8490  00FA  1D03               	btfss	3,2
  8491  00FB  2921               	goto	l5161
  8492                           
  8493                           ;main.c: 377:         PickupConfiguration reset_pc = {.neck=8, .middle=8, .bridge=8, .ge
      +                          neral=8};
  8494  00FC  0021               	movlb	1	; select bank1
  8495  00FD  0823               	movf	(main@F9492+3)^(0+128),w
  8496  00FE  0020               	movlb	0	; select bank0
  8497  00FF  00E0               	movwf	main@reset_pc_1191+3
  8498  0100  0021               	movlb	1	; select bank1
  8499  0101  0822               	movf	(main@F9492+2)^(0+128),w
  8500  0102  0020               	movlb	0	; select bank0
  8501  0103  00DF               	movwf	main@reset_pc_1191+2
  8502  0104  0021               	movlb	1	; select bank1
  8503  0105  0821               	movf	(main@F9492+1)^(0+128),w
  8504  0106  0020               	movlb	0	; select bank0
  8505  0107  00DE               	movwf	main@reset_pc_1191+1
  8506  0108  0021               	movlb	1	; select bank1
  8507  0109  0820               	movf	main@F9492^(0+128),w
  8508  010A  0020               	movlb	0	; select bank0
  8509  010B  00DD               	movwf	main@reset_pc_1191
  8510                           
  8511                           ;main.c: 378:         ImageFromPickupConf(&reset_pc, selection_index, 1, 0);
  8512  010C  0021               	movlb	1	; select bank1
  8513  010D  082D               	movf	_selection_index^(0+128),w
  8514  010E  0020               	movlb	0	; select bank0
  8515  010F  00C2               	movwf	ImageFromPickupConf@selection_index
  8516  0110  305D               	movlw	(low (main@reset_pc_1191| 0))& (0+255)
  8517  0111                     L3:
  8518  0111  01C3               	clrf	ImageFromPickupConf@bracket
  8519  0112  0AC3               	incf	ImageFromPickupConf@bracket,f
  8520  0113  01C4               	clrf	ImageFromPickupConf@draw_empty
  8521  0114  318B  2367  3180   	fcall	_ImageFromPickupConf
  8522                           
  8523                           ;main.c: 367:         DisplayFrame();
  8524  0117  318B  2338  3180   	fcall	_DisplayFrame
  8525                           
  8526                           ;main.c: 368:         DELAY_milliseconds(2000);
  8527  011A  30D0               	movlw	208
  8528  011B  00F2               	movwf	DELAY_milliseconds@milliseconds
  8529  011C  3007               	movlw	7
  8530  011D  00F3               	movwf	DELAY_milliseconds@milliseconds+1
  8531  011E  318F  27AE  3180   	fcall	_DELAY_milliseconds
  8532  0121                     l5161:
  8533                           
  8534                           ;main.c: 384:     {;main.c: 385:         if(wake_up){
  8535  0121  0021               	movlb	1	; select bank1
  8536  0122  0859               	movf	_wake_up^(0+128),w
  8537  0123  1903               	btfsc	3,2
  8538  0124  2929               	goto	l5167
  8539                           
  8540                           ;main.c: 386:             wake_up = 0;
  8541  0125  01D9               	clrf	_wake_up^(0+128)
  8542                           
  8543                           ;main.c: 387:             WakeUp();
  8544  0126  3189  21F5  3180   	fcall	_WakeUp
  8545  0129                     l5167:
  8546                           
  8547                           ;main.c: 389:         RotaryEncoderEventHandler();
  8548  0129  21BC  3180         	fcall	_RotaryEncoderEventHandler
  8549                           
  8550                           ;main.c: 390:         ButtonCaseHandler();
  8551  012B  2136               	fcall	_ButtonCaseHandler
  8552                           
  8553                           ;main.c: 391:         ButtonEventHandler();
  8554  012C  318A  2297  3180   	fcall	_ButtonEventHandler
  8555                           
  8556                           ;main.c: 392:         SwitchEventHandler();
  8557  012F  2309  3180         	fcall	_SwitchEventHandler
  8558                           
  8559                           ;main.c: 393:         DisplayRefreshHandler();
  8560  0131  21A5  3180         	fcall	_DisplayRefreshHandler
  8561  0133  2921               	goto	l5161
  8562  0134                     l624:
  8563  0134  3180  2819         	ljmp	start
  8564  0136                     __end_of_main:
  8565  0136                     __ptext51:	
  8566 ;; *************** function _ButtonCaseHandler *****************
  8567 ;; Defined at:
  8568 ;;		line 161 in file "main.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;		None
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;		None
  8573 ;; Return value:  Size  Location     Type
  8574 ;;                  1    wreg      void 
  8575 ;; Registers used:
  8576 ;;		wreg, status,2, status,0, pclath, cstack
  8577 ;; Tracked objects:
  8578 ;;		On entry : 0/1
  8579 ;;		On exit  : 0/0
  8580 ;;		Unchanged: 0/0
  8581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8584 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8586 ;;Total ram usage:        1 bytes
  8587 ;; Hardware stack levels used: 1
  8588 ;; Hardware stack levels required when called: 5
  8589 ;; This function calls:
  8590 ;;		_ButtonEventReset
  8591 ;; This function is called by:
  8592 ;;		_main
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           
  8597                           ;psect for function _ButtonCaseHandler
  8598  0136                     _ButtonCaseHandler:
  8599                           
  8600                           ;main.c: 163:     if(button_clicked && click_type == 0){
  8601                           
  8602                           ;incstack = 0
  8603                           ; Regs used in _ButtonCaseHandler: [wreg+status,2+status,0+pclath+cstack]
  8604  0136  087A               	movf	_button_clicked,w	;volatile
  8605  0137  1903               	btfsc	3,2
  8606  0138  0008               	return
  8607  0139  0021               	movlb	1	; select bank1
  8608  013A  085B               	movf	_click_type^(0+128),w
  8609  013B  1D03               	btfss	3,2
  8610  013C  0008               	return
  8611                           
  8612                           ;main.c: 164:         if(PORTAbits.RA0 == 1){
  8613  013D  0020               	movlb	0	; select bank0
  8614  013E  1C0C               	btfss	12,0	;volatile
  8615  013F  2995               	goto	l4969
  8616                           
  8617                           ;main.c: 165:             if(click_timer < 50) ButtonEventReset();
  8618  0140  0021               	movlb	1	; select bank1
  8619  0141  084F               	movf	(_click_timer+1)^(0+128),w	;volatile
  8620  0142  3A80               	xorlw	128
  8621  0143  00F2               	movwf	??_ButtonCaseHandler
  8622  0144  3080               	movlw	128
  8623  0145  0272               	subwf	??_ButtonCaseHandler,w
  8624  0146  1D03               	skipz
  8625  0147  294A               	goto	u3845
  8626  0148  3032               	movlw	50
  8627  0149  024E               	subwf	_click_timer^(0+128),w	;volatile
  8628  014A                     u3845:
  8629  014A  1803               	skipnc
  8630  014B  294D               	goto	l4953
  8631  014C  2B5D               	ljmp	l4395
  8632  014D                     l4953:
  8633  014D  0021               	movlb	1	; select bank1
  8634  014E  084F               	movf	(_click_timer+1)^(0+128),w	;volatile
  8635  014F  3A80               	xorlw	128
  8636  0150  00F2               	movwf	??_ButtonCaseHandler
  8637  0151  3080               	movlw	128
  8638  0152  0272               	subwf	??_ButtonCaseHandler,w
  8639  0153  1D03               	skipz
  8640  0154  2957               	goto	u3855
  8641  0155  3032               	movlw	50
  8642  0156  024E               	subwf	_click_timer^(0+128),w	;volatile
  8643  0157                     u3855:
  8644  0157  1C03               	skipc
  8645  0158  2969               	goto	l4959
  8646  0159  0021               	movlb	1	; select bank1
  8647  015A  084F               	movf	(_click_timer+1)^(0+128),w	;volatile
  8648  015B  3A80               	xorlw	128
  8649  015C  00F2               	movwf	??_ButtonCaseHandler
  8650  015D  3083               	movlw	131
  8651  015E  0272               	subwf	??_ButtonCaseHandler,w
  8652  015F  1D03               	skipz
  8653  0160  2963               	goto	u3865
  8654  0161  30E7               	movlw	231
  8655  0162  024E               	subwf	_click_timer^(0+128),w	;volatile
  8656  0163                     u3865:
  8657  0163  1803               	skipnc
  8658  0164  2969               	goto	l4959
  8659  0165  0021               	movlb	1	; select bank1
  8660  0166  01DB               	clrf	_click_type^(0+128)
  8661  0167  0ADB               	incf	_click_type^(0+128),f
  8662  0168  0008               	return
  8663  0169                     l4959:
  8664  0169  0021               	movlb	1	; select bank1
  8665  016A  084F               	movf	(_click_timer+1)^(0+128),w	;volatile
  8666  016B  3A80               	xorlw	128
  8667  016C  00F2               	movwf	??_ButtonCaseHandler
  8668  016D  3083               	movlw	131
  8669  016E  0272               	subwf	??_ButtonCaseHandler,w
  8670  016F  1D03               	skipz
  8671  0170  2973               	goto	u3875
  8672  0171  30E8               	movlw	232
  8673  0172  024E               	subwf	_click_timer^(0+128),w	;volatile
  8674  0173                     u3875:
  8675  0173  1C03               	skipc
  8676  0174  2985               	goto	l4965
  8677  0175  0021               	movlb	1	; select bank1
  8678  0176  084F               	movf	(_click_timer+1)^(0+128),w	;volatile
  8679  0177  3A80               	xorlw	128
  8680  0178  00F2               	movwf	??_ButtonCaseHandler
  8681  0179  308B               	movlw	139
  8682  017A  0272               	subwf	??_ButtonCaseHandler,w
  8683  017B  1D03               	skipz
  8684  017C  297F               	goto	u3885
  8685  017D  30B7               	movlw	183
  8686  017E  024E               	subwf	_click_timer^(0+128),w	;volatile
  8687  017F                     u3885:
  8688  017F  1803               	skipnc
  8689  0180  2985               	goto	l4965
  8690  0181  3002               	movlw	2
  8691  0182  0021               	movlb	1	; select bank1
  8692  0183  00DB               	movwf	_click_type^(0+128)
  8693  0184  0008               	return
  8694  0185                     l4965:
  8695  0185  0021               	movlb	1	; select bank1
  8696  0186  084F               	movf	(_click_timer+1)^(0+128),w	;volatile
  8697  0187  3A80               	xorlw	128
  8698  0188  00F2               	movwf	??_ButtonCaseHandler
  8699  0189  308B               	movlw	139
  8700  018A  0272               	subwf	??_ButtonCaseHandler,w
  8701  018B  1D03               	skipz
  8702  018C  298F               	goto	u3895
  8703  018D  30B8               	movlw	184
  8704  018E  024E               	subwf	_click_timer^(0+128),w	;volatile
  8705  018F                     u3895:
  8706  018F  1C03               	skipc
  8707  0190  0008               	return
  8708  0191  3003               	movlw	3
  8709  0192  0021               	movlb	1	; select bank1
  8710  0193  00DB               	movwf	_click_type^(0+128)
  8711                           
  8712                           ;main.c: 169:         }
  8713  0194  0008               	return
  8714  0195                     l4969:
  8715  0195  0021               	movlb	1	; select bank1
  8716  0196  084F               	movf	(_click_timer+1)^(0+128),w	;volatile
  8717  0197  3A80               	xorlw	128
  8718  0198  00F2               	movwf	??_ButtonCaseHandler
  8719  0199  3093               	movlw	147
  8720  019A  0272               	subwf	??_ButtonCaseHandler,w
  8721  019B  1D03               	skipz
  8722  019C  299F               	goto	u3905
  8723  019D  3088               	movlw	136
  8724  019E  024E               	subwf	_click_timer^(0+128),w	;volatile
  8725  019F                     u3905:
  8726  019F  1C03               	skipc
  8727  01A0  0008               	return
  8728  01A1  3004               	movlw	4
  8729  01A2  0021               	movlb	1	; select bank1
  8730  01A3  00DB               	movwf	_click_type^(0+128)
  8731  01A4  0008               	return
  8732  01A5                     __end_of_ButtonCaseHandler:
  8733  01A5                     __ptext25:	
  8734 ;; *************** function _DisplayRefreshHandler *****************
  8735 ;; Defined at:
  8736 ;;		line 236 in file "main.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;		None
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;		None
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  1    wreg      void 
  8743 ;; Registers used:
  8744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8745 ;; Tracked objects:
  8746 ;;		On entry : 1D/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;Total ram usage:        0 bytes
  8755 ;; Hardware stack levels used: 1
  8756 ;; Hardware stack levels required when called: 10
  8757 ;; This function calls:
  8758 ;;		_DisplayFrame
  8759 ;;		_ImageFromPickupConf
  8760 ;; This function is called by:
  8761 ;;		_main
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           
  8766                           ;psect for function _DisplayRefreshHandler
  8767  01A5                     _DisplayRefreshHandler:
  8768                           
  8769                           ;main.c: 240:     if(time_to_refresh){
  8770                           
  8771                           ;incstack = 0
  8772                           ; Regs used in _DisplayRefreshHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8773  01A5  0021               	movlb	1	; select bank1
  8774  01A6  082C               	movf	_time_to_refresh^(0+128),w	;volatile
  8775  01A7  1903               	btfsc	3,2
  8776  01A8  0008               	return
  8777                           
  8778                           ;main.c: 241:         prev_switch_pos = switch_pos;
  8779  01A9  087B               	movf	_switch_pos,w
  8780  01AA  00DC               	movwf	_prev_switch_pos^(0+128)
  8781                           
  8782                           ;main.c: 242:         time_to_refresh = 0;
  8783  01AB  01AC               	clrf	_time_to_refresh^(0+128)	;volatile
  8784                           
  8785                           ;main.c: 243:         refresh_timer = 0;
  8786  01AC  01CC               	clrf	_refresh_timer^(0+128)	;volatile
  8787  01AD  01CD               	clrf	(_refresh_timer+1)^(0+128)	;volatile
  8788                           
  8789                           ;main.c: 244:         ImageFromPickupConf(&saved_pc[switch_pos], selection_index, 1, 0);
  8790  01AE  082D               	movf	_selection_index^(0+128),w
  8791  01AF  0020               	movlb	0	; select bank0
  8792  01B0  00C2               	movwf	ImageFromPickupConf@selection_index
  8793  01B1  01C3               	clrf	ImageFromPickupConf@bracket
  8794  01B2  0AC3               	incf	ImageFromPickupConf@bracket,f
  8795  01B3  01C4               	clrf	ImageFromPickupConf@draw_empty
  8796  01B4  087B               	movf	_switch_pos,w
  8797  01B5  0709               	addwf	9,w
  8798  01B6  0709               	addwf	9,w
  8799  01B7  3EAE               	addlw	(low (_saved_pc| 0))& (0+255)
  8800  01B8  318B  2367         	fcall	_ImageFromPickupConf
  8801                           
  8802                           ;main.c: 245:         DisplayFrame();
  8803  01BA  318B  2B38         	ljmp	l4371
  8804  01BC                     __end_of_DisplayRefreshHandler:
  8805  01BC                     __ptext18:	
  8806 ;; *************** function _RotaryEncoderEventHandler *****************
  8807 ;; Defined at:
  8808 ;;		line 271 in file "main.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;		None
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;		None
  8813 ;; Return value:  Size  Location     Type
  8814 ;;                  1    wreg      void 
  8815 ;; Registers used:
  8816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8817 ;; Tracked objects:
  8818 ;;		On entry : 1C/1
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8824 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8825 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8826 ;;Total ram usage:        2 bytes
  8827 ;; Hardware stack levels used: 1
  8828 ;; Hardware stack levels required when called: 10
  8829 ;; This function calls:
  8830 ;;		_DisplayFrame
  8831 ;;		_ImageFromPickupConf
  8832 ;;		_modulo
  8833 ;;		_read_rotary
  8834 ;;		_sendCoilsConfiguration
  8835 ;; This function is called by:
  8836 ;;		_main
  8837 ;; This function uses a non-reentrant model
  8838 ;;
  8839                           
  8840                           
  8841                           ;psect for function _RotaryEncoderEventHandler
  8842  01BC                     _RotaryEncoderEventHandler:
  8843                           
  8844                           ;main.c: 272:     static int8_t val;;main.c: 273:     if(selection_index >= 0){
  8845                           
  8846                           ;incstack = 0
  8847                           ; Regs used in _RotaryEncoderEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8848  01BC  0021               	movlb	1	; select bank1
  8849  01BD  1BAD               	btfsc	_selection_index^(0+128),7
  8850  01BE  0008               	return
  8851                           
  8852                           ;main.c: 274:         if((val = read_rotary())){
  8853  01BF  226F  3180         	fcall	_read_rotary
  8854  01C1  00D7               	movwf	RotaryEncoderEventHandler@val^(0+128)
  8855  01C2  0857               	movf	RotaryEncoderEventHandler@val^(0+128),w
  8856  01C3  1903               	btfsc	3,2
  8857  01C4  0008               	return
  8858  01C5  2A02               	goto	l5069
  8859  01C6                     l5059:
  8860                           
  8861                           ;main.c: 277:                     saved_pc[switch_pos].neck = modulo(saved_pc[switch_pos
      +                          ].neck + val, 17);
  8862  01C6  087B               	movf	_switch_pos,w
  8863  01C7  0709               	addwf	9,w
  8864  01C8  0709               	addwf	9,w
  8865  01C9  3EAE               	addlw	(low (_saved_pc| 0))& (0+255)
  8866  01CA  0086               	movwf	6
  8867  01CB  3011               	movlw	17
  8868  01CC  0187               	clrf	7
  8869  01CD  00A2               	movwf	modulo@N
  8870  01CE  087B               	movf	_switch_pos,w
  8871  01CF  0709               	addwf	9,w
  8872  01D0  0709               	addwf	9,w
  8873  01D1  3EAE               	addlw	(low (_saved_pc| 0))& (0+255)
  8874  01D2  29F9               	goto	L7
  8875  01D3                     l5061:	
  8876                           ;main.c: 279:                     break;
  8877                           
  8878                           
  8879                           ;main.c: 281:                     saved_pc[switch_pos].middle = modulo(saved_pc[switch_p
      +                          os].middle + val, 17);
  8880  01D3  087B               	movf	_switch_pos,w
  8881  01D4  0709               	addwf	9,w
  8882  01D5  0709               	addwf	9,w
  8883  01D6  3EAF               	addlw	(low ((_saved_pc| 0+1)))& (0+255)
  8884  01D7  0086               	movwf	6
  8885  01D8  3011               	movlw	17
  8886  01D9  0187               	clrf	7
  8887  01DA  00A2               	movwf	modulo@N
  8888  01DB  087B               	movf	_switch_pos,w
  8889  01DC  0709               	addwf	9,w
  8890  01DD  0709               	addwf	9,w
  8891  01DE  3EAF               	addlw	(low ((_saved_pc| 0+1)))& (0+255)
  8892  01DF  29F9               	goto	L7
  8893  01E0                     l5063:	
  8894                           ;main.c: 283:                     break;
  8895                           
  8896                           
  8897                           ;main.c: 285:                     saved_pc[switch_pos].bridge = modulo(saved_pc[switch_p
      +                          os].bridge + val, 17);
  8898  01E0  087B               	movf	_switch_pos,w
  8899  01E1  0709               	addwf	9,w
  8900  01E2  0709               	addwf	9,w
  8901  01E3  3EB0               	addlw	(low ((_saved_pc| 0+2)))& (0+255)
  8902  01E4  0086               	movwf	6
  8903  01E5  3011               	movlw	17
  8904  01E6  0187               	clrf	7
  8905  01E7  00A2               	movwf	modulo@N
  8906  01E8  087B               	movf	_switch_pos,w
  8907  01E9  0709               	addwf	9,w
  8908  01EA  0709               	addwf	9,w
  8909  01EB  3EB0               	addlw	(low ((_saved_pc| 0+2)))& (0+255)
  8910  01EC  29F9               	goto	L7
  8911  01ED                     l5065:	
  8912                           ;main.c: 287:                     break;
  8913                           
  8914                           
  8915                           ;main.c: 289:                     saved_pc[switch_pos].general = modulo(saved_pc[switch_
      +                          pos].general + val, 23);
  8916  01ED  087B               	movf	_switch_pos,w
  8917  01EE  0709               	addwf	9,w
  8918  01EF  0709               	addwf	9,w
  8919  01F0  3EB1               	addlw	(low ((_saved_pc| 0+3)))& (0+255)
  8920  01F1  0086               	movwf	6
  8921  01F2  3017               	movlw	23
  8922  01F3  0187               	clrf	7
  8923  01F4  00A2               	movwf	modulo@N
  8924  01F5  087B               	movf	_switch_pos,w
  8925  01F6  0709               	addwf	9,w
  8926  01F7  0709               	addwf	9,w
  8927  01F8  3EB1               	addlw	(low ((_saved_pc| 0+3)))& (0+255)
  8928  01F9                     L7:
  8929  01F9  0084               	movwf	4
  8930  01FA  0185               	clrf	5
  8931  01FB  0800               	movf	0,w
  8932  01FC  0021               	movlb	1	; select bank1
  8933  01FD  0757               	addwf	RotaryEncoderEventHandler@val^(0+128),w
  8934  01FE  222C  3180         	fcall	_modulo
  8935  0200  0081               	movwf	1
  8936  0201  2A17               	goto	l5071
  8937  0202                     l5069:
  8938  0202  082D               	movf	_selection_index^(0+128),w
  8939  0203  0020               	movlb	0	; select bank0
  8940  0204  00CB               	movwf	??_RotaryEncoderEventHandler
  8941  0205  01CC               	clrf	??_RotaryEncoderEventHandler+1
  8942  0206  1BCB               	btfsc	??_RotaryEncoderEventHandler,7
  8943  0207  03CC               	decf	??_RotaryEncoderEventHandler+1,f
  8944                           
  8945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8946                           ; Switch size 1, requested type "speed"
  8947                           ; Number of cases is 1, Range of values is 0 to 0
  8948                           ; switch strategies available:
  8949                           ; Name         Instructions Cycles
  8950                           ; simple_byte            4     3 (average)
  8951                           ; direct_byte            8     6 (fixed)
  8952                           ; jumptable            260     6 (fixed)
  8953                           ;	Chosen strategy is simple_byte
  8954  0208  084C               	movf	??_RotaryEncoderEventHandler+1,w
  8955  0209  3A00               	xorlw	0	; case 0
  8956  020A  1903               	skipnz
  8957  020B  2A0D               	goto	l5269
  8958  020C  2A17               	goto	l5071
  8959  020D                     l5269:
  8960                           
  8961                           ; Switch size 1, requested type "speed"
  8962                           ; Number of cases is 4, Range of values is 0 to 3
  8963                           ; switch strategies available:
  8964                           ; Name         Instructions Cycles
  8965                           ; direct_byte           14     6 (fixed)
  8966                           ; simple_byte           13     7 (average)
  8967                           ; jumptable            260     6 (fixed)
  8968                           ;	Chosen strategy is direct_byte
  8969  020D  084B               	movf	??_RotaryEncoderEventHandler,w
  8970  020E  0084               	movwf	4
  8971  020F  3004               	movlw	4
  8972  0210  0204               	subwf	4,w
  8973  0211  1803               	skipnc
  8974  0212  2A17               	goto	l5071
  8975  0213  3187               	movlp	high S5271
  8976  0214  3504               	lslf	4,w
  8977  0215  3EF5               	addlw	low S5271
  8978  0216  0082               	movwf	2
  8979  0217                     l5071:
  8980                           
  8981                           ;main.c: 294:             sendCoilsConfiguration(&saved_pc[switch_pos]);
  8982  0217  087B               	movf	_switch_pos,w
  8983  0218  0709               	addwf	9,w
  8984  0219  0709               	addwf	9,w
  8985  021A  3EAE               	addlw	(low (_saved_pc| 0))& (0+255)
  8986  021B  237E               	fcall	_sendCoilsConfiguration
  8987                           
  8988                           ;main.c: 295:             ImageFromPickupConf(&saved_pc[switch_pos], selection_index, 1,
      +                           0);
  8989  021C  0021               	movlb	1	; select bank1
  8990  021D  082D               	movf	_selection_index^(0+128),w
  8991  021E  0020               	movlb	0	; select bank0
  8992  021F  00C2               	movwf	ImageFromPickupConf@selection_index
  8993  0220  01C3               	clrf	ImageFromPickupConf@bracket
  8994  0221  0AC3               	incf	ImageFromPickupConf@bracket,f
  8995  0222  01C4               	clrf	ImageFromPickupConf@draw_empty
  8996  0223  087B               	movf	_switch_pos,w
  8997  0224  0709               	addwf	9,w
  8998  0225  0709               	addwf	9,w
  8999  0226  3EAE               	addlw	(low (_saved_pc| 0))& (0+255)
  9000  0227  318B  2367  3180   	fcall	_ImageFromPickupConf
  9001                           
  9002                           ;main.c: 296:             DisplayFrame();
  9003  022A  318B  2B38         	ljmp	l4371
  9004  022C                     __end_of_RotaryEncoderEventHandler:
  9005  022C                     __ptext22:	
  9006 ;; *************** function _modulo *****************
  9007 ;; Defined at:
  9008 ;;		line 129 in file "main.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  x               1    wreg     char 
  9011 ;;  N               1    2[BANK0 ] char 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  x               1    7[BANK0 ] char 
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  1    wreg      char 
  9016 ;; Registers used:
  9017 ;;		wreg, status,2, status,0, pclath, cstack
  9018 ;; Tracked objects:
  9019 ;;		On entry : 1F/1
  9020 ;;		On exit  : 1F/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9023 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9026 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9027 ;;Total ram usage:        6 bytes
  9028 ;; Hardware stack levels used: 1
  9029 ;; Hardware stack levels required when called: 5
  9030 ;; This function calls:
  9031 ;;		___abmod
  9032 ;;		___awmod
  9033 ;; This function is called by:
  9034 ;;		_RotaryEncoderEventHandler
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           
  9038                           
  9039                           ;psect for function _modulo
  9040  022C                     _modulo:
  9041                           
  9042                           ;incstack = 0
  9043                           ; Regs used in _modulo: [wreg+status,2+status,0+pclath+cstack]
  9044                           ;modulo@x stored from wreg
  9045  022C  0020               	movlb	0	; select bank0
  9046  022D  00A7               	movwf	modulo@x
  9047                           
  9048                           ;main.c: 130:     return (x % N + N) % N;
  9049  022E  0822               	movf	modulo@N,w
  9050  022F  00F6               	movwf	___awmod@divisor
  9051  0230  01F7               	clrf	___awmod@divisor+1
  9052  0231  1BF6               	btfsc	___awmod@divisor,7
  9053  0232  03F7               	decf	___awmod@divisor+1,f
  9054  0233  0822               	movf	modulo@N,w
  9055  0234  00A3               	movwf	??_modulo
  9056  0235  01A4               	clrf	??_modulo+1
  9057  0236  1BA3               	btfsc	??_modulo,7
  9058  0237  03A4               	decf	??_modulo+1,f
  9059  0238  0822               	movf	modulo@N,w
  9060  0239  00F2               	movwf	___abmod@divisor
  9061  023A  0827               	movf	modulo@x,w
  9062  023B  224A  3180         	fcall	___abmod
  9063  023D  00A5               	movwf	??_modulo+2
  9064  023E  01A6               	clrf	??_modulo+3
  9065  023F  1BA5               	btfsc	??_modulo+2,7
  9066  0240  03A6               	decf	??_modulo+3,f
  9067  0241  0823               	movf	??_modulo,w
  9068  0242  0725               	addwf	??_modulo+2,w
  9069  0243  00F8               	movwf	___awmod@dividend
  9070  0244  0824               	movf	??_modulo+1,w
  9071  0245  3D26               	addwfc	??_modulo+3,w
  9072  0246  00F9               	movwf	___awmod@dividend+1
  9073  0247  255C               	fcall	___awmod
  9074  0248  0876               	movf	?___awmod,w
  9075  0249  0008               	return
  9076  024A                     __end_of_modulo:
  9077  024A                     __ptext24:	
  9078 ;; *************** function ___abmod *****************
  9079 ;; Defined at:
  9080 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abmod.c"
  9081 ;; Parameters:    Size  Location     Type
  9082 ;;  dividend        1    wreg     char 
  9083 ;;  divisor         1    2[COMMON] char 
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;  dividend        1    5[COMMON] char 
  9086 ;;  sign            1    4[COMMON] unsigned char 
  9087 ;;  counter         1    3[COMMON] unsigned char 
  9088 ;; Return value:  Size  Location     Type
  9089 ;;                  1    wreg      char 
  9090 ;; Registers used:
  9091 ;;		wreg, status,2, status,0
  9092 ;; Tracked objects:
  9093 ;;		On entry : 1F/0
  9094 ;;		On exit  : 1F/0
  9095 ;;		Unchanged: 1F/0
  9096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9097 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9100 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9101 ;;Total ram usage:        4 bytes
  9102 ;; Hardware stack levels used: 1
  9103 ;; Hardware stack levels required when called: 4
  9104 ;; This function calls:
  9105 ;;		Nothing
  9106 ;; This function is called by:
  9107 ;;		_modulo
  9108 ;; This function uses a non-reentrant model
  9109 ;;
  9110                           
  9111                           
  9112                           ;psect for function ___abmod
  9113  024A                     ___abmod:
  9114                           
  9115                           ;incstack = 0
  9116                           ; Regs used in ___abmod: [wreg+status,2+status,0]
  9117                           ;___abmod@dividend stored from wreg
  9118  024A  00F5               	movwf	___abmod@dividend
  9119  024B  01F4               	clrf	___abmod@sign
  9120  024C  1FF5               	btfss	___abmod@dividend,7
  9121  024D  2A52               	goto	l4469
  9122  024E  09F5               	comf	___abmod@dividend,f
  9123  024F  0AF5               	incf	___abmod@dividend,f
  9124  0250  01F4               	clrf	___abmod@sign
  9125  0251  0AF4               	incf	___abmod@sign,f
  9126  0252                     l4469:
  9127  0252  1FF2               	btfss	___abmod@divisor,7
  9128  0253  2A56               	goto	l4473
  9129  0254  09F2               	comf	___abmod@divisor,f
  9130  0255  0AF2               	incf	___abmod@divisor,f
  9131  0256                     l4473:
  9132  0256  0872               	movf	___abmod@divisor,w
  9133  0257  1903               	btfsc	3,2
  9134  0258  2A68               	goto	l4489
  9135  0259  01F3               	clrf	___abmod@counter
  9136  025A                     l4477:
  9137  025A  0AF3               	incf	___abmod@counter,f
  9138  025B  1BF2               	btfsc	___abmod@divisor,7
  9139  025C  2A5F               	goto	l4481
  9140  025D  35F2               	lslf	___abmod@divisor,f
  9141  025E  2A5A               	goto	l4477
  9142  025F                     l4481:
  9143  025F  0872               	movf	___abmod@divisor,w
  9144  0260  0275               	subwf	___abmod@dividend,w
  9145  0261  1C03               	skipc
  9146  0262  2A65               	goto	l4485
  9147  0263  0872               	movf	___abmod@divisor,w
  9148  0264  02F5               	subwf	___abmod@dividend,f
  9149  0265                     l4485:
  9150  0265  36F2               	lsrf	___abmod@divisor,f
  9151  0266  0BF3               	decfsz	___abmod@counter,f
  9152  0267  2A5F               	goto	l4481
  9153  0268                     l4489:
  9154  0268  0874               	movf	___abmod@sign,w
  9155  0269  1903               	btfsc	3,2
  9156  026A  2A6D               	goto	l4493
  9157  026B  09F5               	comf	___abmod@dividend,f
  9158  026C  0AF5               	incf	___abmod@dividend,f
  9159  026D                     l4493:
  9160  026D  0875               	movf	___abmod@dividend,w
  9161  026E  0008               	return
  9162  026F                     __end_of___abmod:
  9163  026F                     __ptext21:	
  9164 ;; *************** function _read_rotary *****************
  9165 ;; Defined at:
  9166 ;;		line 249 in file "main.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;		None
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;		None
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  1    wreg      char 
  9173 ;; Registers used:
  9174 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9175 ;; Tracked objects:
  9176 ;;		On entry : 1F/1
  9177 ;;		On exit  : 1F/1
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;Total ram usage:        0 bytes
  9185 ;; Hardware stack levels used: 1
  9186 ;; Hardware stack levels required when called: 4
  9187 ;; This function calls:
  9188 ;;		Nothing
  9189 ;; This function is called by:
  9190 ;;		_RotaryEncoderEventHandler
  9191 ;; This function uses a non-reentrant model
  9192 ;;
  9193                           
  9194                           
  9195                           ;psect for function _read_rotary
  9196  026F                     _read_rotary:
  9197                           
  9198                           ;main.c: 250:     static int8_t rot_enc_table[] = {0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0};;mai
      +                          n.c: 251:     static uint8_t prevNextCode = 0;;main.c: 252:     static uint16_t store=0;
      +                          ;main.c: 254:     prevNextCode <<= 2;
  9199                           
  9200                           ;incstack = 0
  9201                           ; Regs used in _read_rotary: [wreg+fsr1l+fsr1h+status,2+status,0]
  9202  026F  35D8               	lslf	read_rotary@prevNextCode^(0+128),f
  9203  0270  35D8               	lslf	read_rotary@prevNextCode^(0+128),f
  9204                           
  9205                           ;main.c: 255:     if (PORTBbits.RB5) prevNextCode |= 0x02;
  9206  0271  0020               	movlb	0	; select bank0
  9207  0272  1E8D               	btfss	13,5	;volatile
  9208  0273  2A76               	goto	l564
  9209  0274  0021               	movlb	1	; select bank1
  9210  0275  14D8               	bsf	read_rotary@prevNextCode^(0+128),1
  9211  0276                     l564:
  9212                           
  9213                           ;main.c: 256:     if (PORTBbits.RB4) prevNextCode |= 0x01;
  9214  0276  0020               	movlb	0	; select bank0
  9215  0277  1E0D               	btfss	13,4	;volatile
  9216  0278  2A7B               	goto	l4879
  9217  0279  0021               	movlb	1	; select bank1
  9218  027A  1458               	bsf	read_rotary@prevNextCode^(0+128),0
  9219  027B                     l4879:
  9220                           
  9221                           ;main.c: 257:     prevNextCode &= 0x0f;
  9222  027B  300F               	movlw	15
  9223  027C  0021               	movlb	1	; select bank1
  9224  027D  05D8               	andwf	read_rotary@prevNextCode^(0+128),f
  9225                           
  9226                           ;main.c: 260:     if (rot_enc_table[prevNextCode] ) {
  9227  027E  0858               	movf	read_rotary@prevNextCode^(0+128),w
  9228  027F  3E4B               	addlw	(low (read_rotary@rot_enc_table| (0+256)))& (0+255)
  9229  0280  0086               	movwf	6
  9230  0281  3001               	movlw	1	; select bank2/3
  9231  0282  0087               	movwf	7
  9232  0283  0801               	movf	1,w
  9233  0284  1903               	btfsc	3,2
  9234  0285  3400               	retlw	0
  9235  0286  30F0               	movlw	240
  9236                           
  9237                           ;main.c: 261:         store <<= 4;
  9238  0287  0ECA               	swapf	read_rotary@store^(0+128),f
  9239  0288  0ECB               	swapf	(read_rotary@store+1)^(0+128),f
  9240  0289  05CB               	andwf	(read_rotary@store+1)^(0+128),f
  9241  028A  084A               	movf	read_rotary@store^(0+128),w
  9242  028B  390F               	andlw	15
  9243  028C  04CB               	iorwf	(read_rotary@store+1)^(0+128),f
  9244  028D  30F0               	movlw	240
  9245  028E  05CA               	andwf	read_rotary@store^(0+128),f
  9246                           
  9247                           ;main.c: 262:         store |= prevNextCode;
  9248  028F  0858               	movf	read_rotary@prevNextCode^(0+128),w
  9249  0290  04CA               	iorwf	read_rotary@store^(0+128),f
  9250                           
  9251                           ;main.c: 265:         if ((store&0xff)==0x2b) return -1;
  9252  0291  302B               	movlw	43
  9253  0292  064A               	xorwf	read_rotary@store^(0+128),w
  9254  0293  1903               	btfsc	3,2
  9255  0294  34FF               	retlw	255
  9256                           
  9257                           ;main.c: 266:         if ((store&0xff)==0x17) return 1;
  9258  0295  3017               	movlw	23
  9259  0296  064A               	xorwf	read_rotary@store^(0+128),w
  9260  0297  1903               	btfsc	3,2
  9261  0298  3401               	retlw	1
  9262                           
  9263                           ;main.c: 268:     return 0;
  9264  0299  3400               	retlw	0
  9265  029A                     __end_of_read_rotary:
  9266  029A                     __ptext16:	
  9267 ;; *************** function _IOCAF0_SetInterruptHandler *****************
  9268 ;; Defined at:
  9269 ;;		line 164 in file "mcc_generated_files/pin_manager.c"
  9270 ;; Parameters:    Size  Location     Type
  9271 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  9272 ;;		 -> Button_Callback(1), IOCAF0_DefaultInterruptHandler(1), 
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;		None
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  1    wreg      void 
  9277 ;; Registers used:
  9278 ;;		wreg
  9279 ;; Tracked objects:
  9280 ;;		On entry : 19/1
  9281 ;;		On exit  : 1F/1
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9287 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;Total ram usage:        2 bytes
  9289 ;; Hardware stack levels used: 1
  9290 ;; Hardware stack levels required when called: 4
  9291 ;; This function calls:
  9292 ;;		Nothing
  9293 ;; This function is called by:
  9294 ;;		_PIN_MANAGER_Initialize
  9295 ;;		_main
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           
  9300                           ;psect for function _IOCAF0_SetInterruptHandler
  9301  029A                     _IOCAF0_SetInterruptHandler:
  9302                           
  9303                           ;mcc_generated_files/pin_manager.c: 165:     IOCAF0_InterruptHandler = InterruptHandler;
  9304                           
  9305                           ;incstack = 0
  9306                           ; Regs used in _IOCAF0_SetInterruptHandler: [wreg]
  9307  029A  0873               	movf	IOCAF0_SetInterruptHandler@InterruptHandler+1,w
  9308  029B  0021               	movlb	1	; select bank1
  9309  029C  00D5               	movwf	(_IOCAF0_InterruptHandler+1)^(0+128)
  9310  029D  0872               	movf	IOCAF0_SetInterruptHandler@InterruptHandler,w
  9311  029E  00D4               	movwf	_IOCAF0_InterruptHandler^(0+128)
  9312  029F  0008               	return
  9313  02A0                     __end_of_IOCAF0_SetInterruptHandler:
  9314  02A0                     __ptext13:	
  9315 ;; *************** function _TMR1_SetInterruptHandler *****************
  9316 ;; Defined at:
  9317 ;;		line 171 in file "mcc_generated_files/tmr1.c"
  9318 ;; Parameters:    Size  Location     Type
  9319 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  9320 ;;		 -> TMR1_CallBack(1), TMR1_DefaultInterruptHandler(1), 
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;		None
  9323 ;; Return value:  Size  Location     Type
  9324 ;;                  1    wreg      void 
  9325 ;; Registers used:
  9326 ;;		wreg
  9327 ;; Tracked objects:
  9328 ;;		On entry : 1E/0
  9329 ;;		On exit  : 1F/1
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;Total ram usage:        2 bytes
  9337 ;; Hardware stack levels used: 1
  9338 ;; Hardware stack levels required when called: 4
  9339 ;; This function calls:
  9340 ;;		Nothing
  9341 ;; This function is called by:
  9342 ;;		_TMR1_Initialize
  9343 ;;		_main
  9344 ;; This function uses a non-reentrant model
  9345 ;;
  9346                           
  9347                           
  9348                           ;psect for function _TMR1_SetInterruptHandler
  9349  02A0                     _TMR1_SetInterruptHandler:
  9350                           
  9351                           ;mcc_generated_files/tmr1.c: 172:     TMR1_InterruptHandler = InterruptHandler;
  9352                           
  9353                           ;incstack = 0
  9354                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  9355  02A0  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  9356  02A1  0021               	movlb	1	; select bank1
  9357  02A2  00D1               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  9358  02A3  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  9359  02A4  00D0               	movwf	_TMR1_InterruptHandler^(0+128)
  9360  02A5  0008               	return
  9361  02A6                     __end_of_TMR1_SetInterruptHandler:
  9362  02A6                     __ptext10:	
  9363 ;; *************** function _SYSTEM_Initialize *****************
  9364 ;; Defined at:
  9365 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9366 ;; Parameters:    Size  Location     Type
  9367 ;;		None
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;		None
  9370 ;; Return value:  Size  Location     Type
  9371 ;;                  1    wreg      void 
  9372 ;; Registers used:
  9373 ;;		wreg, status,2, status,0, pclath, cstack
  9374 ;; Tracked objects:
  9375 ;;		On entry : B1F/0
  9376 ;;		On exit  : 1F/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9383 ;;Total ram usage:        0 bytes
  9384 ;; Hardware stack levels used: 1
  9385 ;; Hardware stack levels required when called: 6
  9386 ;; This function calls:
  9387 ;;		_OSCILLATOR_Initialize
  9388 ;;		_PIN_MANAGER_Initialize
  9389 ;;		_SPI_Initialize
  9390 ;;		_TMR1_Initialize
  9391 ;;		_WDT_Initialize
  9392 ;; This function is called by:
  9393 ;;		_main
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           
  9398                           ;psect for function _SYSTEM_Initialize
  9399  02A6                     _SYSTEM_Initialize:
  9400                           
  9401                           ;mcc_generated_files/mcc.c: 53:     SPI_Initialize();
  9402                           
  9403                           ;incstack = 0
  9404                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9405  02A6  22F4  3180         	fcall	_SPI_Initialize
  9406                           
  9407                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  9408  02A8  22B7  3180         	fcall	_PIN_MANAGER_Initialize
  9409                           
  9410                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  9411  02AA  22AF  3180         	fcall	_OSCILLATOR_Initialize
  9412                           
  9413                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  9414  02AC  2558  3180         	fcall	_WDT_Initialize
  9415                           
  9416                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  9417  02AE  2B63               	ljmp	l4605
  9418  02AF                     __end_of_SYSTEM_Initialize:
  9419  02AF                     __ptext17:	
  9420 ;; *************** function _OSCILLATOR_Initialize *****************
  9421 ;; Defined at:
  9422 ;;		line 60 in file "mcc_generated_files/mcc.c"
  9423 ;; Parameters:    Size  Location     Type
  9424 ;;		None
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;		None
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  1    wreg      void 
  9429 ;; Registers used:
  9430 ;;		wreg, status,2
  9431 ;; Tracked objects:
  9432 ;;		On entry : 1F/1C
  9433 ;;		On exit  : 1F/4
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9440 ;;Total ram usage:        0 bytes
  9441 ;; Hardware stack levels used: 1
  9442 ;; Hardware stack levels required when called: 4
  9443 ;; This function calls:
  9444 ;;		Nothing
  9445 ;; This function is called by:
  9446 ;;		_SYSTEM_Initialize
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450                           
  9451                           ;psect for function _OSCILLATOR_Initialize
  9452  02AF                     _OSCILLATOR_Initialize:
  9453                           
  9454                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x68;
  9455                           
  9456                           ;incstack = 0
  9457                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9458  02AF  3068               	movlw	104
  9459  02B0  0021               	movlb	1	; select bank1
  9460  02B1  0099               	movwf	25	;volatile
  9461                           
  9462                           ;mcc_generated_files/mcc.c: 65:     OSCSTAT = 0x00;
  9463  02B2  019A               	clrf	26	;volatile
  9464                           
  9465                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  9466  02B3  0198               	clrf	24	;volatile
  9467                           
  9468                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  9469  02B4  0024               	movlb	4	; select bank4
  9470  02B5  019D               	clrf	29	;volatile
  9471  02B6  0008               	return
  9472  02B7                     __end_of_OSCILLATOR_Initialize:
  9473  02B7                     __ptext15:	
  9474 ;; *************** function _PIN_MANAGER_Initialize *****************
  9475 ;; Defined at:
  9476 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;		None
  9479 ;; Auto vars:     Size  Location     Type
  9480 ;;		None
  9481 ;; Return value:  Size  Location     Type
  9482 ;;                  1    wreg      void 
  9483 ;; Registers used:
  9484 ;;		wreg, status,2, status,0, pclath, cstack
  9485 ;; Tracked objects:
  9486 ;;		On entry : B1F/4
  9487 ;;		On exit  : 1F/1C
  9488 ;;		Unchanged: 0/0
  9489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9494 ;;Total ram usage:        0 bytes
  9495 ;; Hardware stack levels used: 1
  9496 ;; Hardware stack levels required when called: 5
  9497 ;; This function calls:
  9498 ;;		_IOCAF0_SetInterruptHandler
  9499 ;; This function is called by:
  9500 ;;		_SYSTEM_Initialize
  9501 ;; This function uses a non-reentrant model
  9502 ;;
  9503                           
  9504                           
  9505                           ;psect for function _PIN_MANAGER_Initialize
  9506  02B7                     _PIN_MANAGER_Initialize:
  9507                           
  9508                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x26;
  9509                           
  9510                           ;incstack = 0
  9511                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9512  02B7  3026               	movlw	38
  9513  02B8  0022               	movlb	2	; select bank2
  9514  02B9  008C               	movwf	12	;volatile
  9515                           
  9516                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9517  02BA  018D               	clrf	13	;volatile
  9518                           
  9519                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9520  02BB  018E               	clrf	14	;volatile
  9521                           
  9522                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x01;
  9523  02BC  3001               	movlw	1
  9524  02BD  0021               	movlb	1	; select bank1
  9525  02BE  008C               	movwf	12	;volatile
  9526                           
  9527                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x30;
  9528  02BF  3030               	movlw	48
  9529  02C0  008D               	movwf	13	;volatile
  9530                           
  9531                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0x0F;
  9532  02C1  300F               	movlw	15
  9533  02C2  008E               	movwf	14	;volatile
  9534                           
  9535                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x00;
  9536  02C3  0023               	movlb	3	; select bank3
  9537  02C4  018E               	clrf	14	;volatile
  9538                           
  9539                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x00;
  9540  02C5  018D               	clrf	13	;volatile
  9541                           
  9542                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x00;
  9543  02C6  018C               	clrf	12	;volatile
  9544                           
  9545                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x30;
  9546  02C7  3030               	movlw	48
  9547  02C8  0024               	movlb	4	; select bank4
  9548  02C9  008D               	movwf	13	;volatile
  9549                           
  9550                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x01;
  9551  02CA  3001               	movlw	1
  9552  02CB  008C               	movwf	12	;volatile
  9553                           
  9554                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x07;
  9555  02CC  3007               	movlw	7
  9556  02CD  008E               	movwf	14	;volatile
  9557                           
  9558                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 0;
  9559  02CE  0021               	movlb	1	; select bank1
  9560  02CF  1395               	bcf	21,7	;volatile
  9561                           
  9562                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  9563  02D0  0025               	movlb	5	; select bank5
  9564  02D1  018C               	clrf	12	;volatile
  9565                           
  9566                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  9567  02D2  018D               	clrf	13	;volatile
  9568                           
  9569                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  9570  02D3  018E               	clrf	14	;volatile
  9571                           
  9572                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
  9573  02D4  3037               	movlw	55
  9574  02D5  0026               	movlb	6	; select bank6
  9575  02D6  008C               	movwf	12	;volatile
  9576                           
  9577                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
  9578  02D7  30F0               	movlw	240
  9579  02D8  008D               	movwf	13	;volatile
  9580                           
  9581                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  9582  02D9  30FF               	movlw	255
  9583  02DA  008E               	movwf	14	;volatile
  9584                           
  9585                           ;mcc_generated_files/pin_manager.c: 105:     INLVLA = 0x3F;
  9586  02DB  303F               	movlw	63
  9587  02DC  0027               	movlb	7	; select bank7
  9588  02DD  008C               	movwf	12	;volatile
  9589                           
  9590                           ;mcc_generated_files/pin_manager.c: 106:     INLVLB = 0xF0;
  9591  02DE  30F0               	movlw	240
  9592  02DF  008D               	movwf	13	;volatile
  9593                           
  9594                           ;mcc_generated_files/pin_manager.c: 107:     INLVLC = 0xFF;
  9595  02E0  30FF               	movlw	255
  9596  02E1  008E               	movwf	14	;volatile
  9597                           
  9598                           ;mcc_generated_files/pin_manager.c: 114:     IOCAFbits.IOCAF0 = 0;
  9599  02E2  1013               	bcf	19,0	;volatile
  9600                           
  9601                           ;mcc_generated_files/pin_manager.c: 116:     IOCANbits.IOCAN0 = 1;
  9602  02E3  1412               	bsf	18,0	;volatile
  9603                           
  9604                           ;mcc_generated_files/pin_manager.c: 118:     IOCAPbits.IOCAP0 = 1;
  9605  02E4  1411               	bsf	17,0	;volatile
  9606                           
  9607                           ;mcc_generated_files/pin_manager.c: 123:     IOCAF0_SetInterruptHandler(IOCAF0_DefaultIn
      +                          terruptHandler);
  9608  02E5  3000               	movlw	low _IOCAF0_DefaultInterruptHandler
  9609  02E6  00F2               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler
  9610  02E7  3008               	movlw	high _IOCAF0_DefaultInterruptHandler
  9611  02E8  00F3               	movwf	IOCAF0_SetInterruptHandler@InterruptHandler+1
  9612  02E9  229A               	fcall	_IOCAF0_SetInterruptHandler
  9613                           
  9614                           ;mcc_generated_files/pin_manager.c: 126:     INTCONbits.IOCIE = 1;
  9615  02EA  158B               	bsf	11,3	;volatile
  9616                           
  9617                           ;mcc_generated_files/pin_manager.c: 130:     RB6PPS = 0x12;
  9618  02EB  3012               	movlw	18
  9619  02EC  003D               	movlb	29	; select bank29
  9620  02ED  009E               	movwf	30	;volatile
  9621                           
  9622                           ;mcc_generated_files/pin_manager.c: 132:     RB7PPS = 0x14;
  9623  02EE  3014               	movlw	20
  9624  02EF  009F               	movwf	31	;volatile
  9625                           
  9626                           ;mcc_generated_files/pin_manager.c: 134:     SSPCLKPPS = 0x0E;
  9627  02F0  300E               	movlw	14
  9628  02F1  003C               	movlb	28	; select bank28
  9629  02F2  00A0               	movwf	32	;volatile
  9630  02F3  0008               	return
  9631  02F4                     __end_of_PIN_MANAGER_Initialize:
  9632  02F4                     __ptext14:	
  9633 ;; *************** function _SPI_Initialize *****************
  9634 ;; Defined at:
  9635 ;;		line 63 in file "mcc_generated_files/spi.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;		None
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;		None
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  1    wreg      void 
  9642 ;; Registers used:
  9643 ;;		wreg, status,2
  9644 ;; Tracked objects:
  9645 ;;		On entry : B1F/0
  9646 ;;		On exit  : B1F/4
  9647 ;;		Unchanged: B00/0
  9648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9653 ;;Total ram usage:        0 bytes
  9654 ;; Hardware stack levels used: 1
  9655 ;; Hardware stack levels required when called: 4
  9656 ;; This function calls:
  9657 ;;		Nothing
  9658 ;; This function is called by:
  9659 ;;		_SYSTEM_Initialize
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           
  9664                           ;psect for function _SPI_Initialize
  9665  02F4                     _SPI_Initialize:
  9666                           
  9667                           ;mcc_generated_files/spi.c: 66:     SSPCLKPPS = 14;
  9668                           
  9669                           ;incstack = 0
  9670                           ; Regs used in _SPI_Initialize: [wreg+status,2]
  9671  02F4  300E               	movlw	14
  9672  02F5  003C               	movlb	28	; select bank28
  9673  02F6  00A0               	movwf	32	;volatile
  9674                           
  9675                           ;mcc_generated_files/spi.c: 67:     SSPDATPPS = 3;
  9676  02F7  3003               	movlw	3
  9677  02F8  00A1               	movwf	33	;volatile
  9678                           
  9679                           ;mcc_generated_files/spi.c: 68:     RB6PPS = 18;
  9680  02F9  3012               	movlw	18
  9681  02FA  003D               	movlb	29	; select bank29
  9682  02FB  009E               	movwf	30	;volatile
  9683                           
  9684                           ;mcc_generated_files/spi.c: 69:     RB7PPS = 20;
  9685  02FC  3014               	movlw	20
  9686  02FD  009F               	movwf	31	;volatile
  9687                           
  9688                           ;mcc_generated_files/spi.c: 71:     SSP1STAT = 0x40;
  9689  02FE  3040               	movlw	64
  9690  02FF  0024               	movlb	4	; select bank4
  9691  0300  0094               	movwf	20	;volatile
  9692                           
  9693                           ;mcc_generated_files/spi.c: 72:     SSP1CON1 = 0x00;
  9694  0301  0195               	clrf	21	;volatile
  9695                           
  9696                           ;mcc_generated_files/spi.c: 73:     SSP1ADD = 0x01;
  9697  0302  3001               	movlw	1
  9698  0303  0092               	movwf	18	;volatile
  9699                           
  9700                           ;mcc_generated_files/spi.c: 74:     TRISBbits.TRISB6 = 0;
  9701  0304  0021               	movlb	1	; select bank1
  9702  0305  130D               	bcf	13,6	;volatile
  9703                           
  9704                           ;mcc_generated_files/spi.c: 75:     SSP1CON1bits.SSPEN = 0;
  9705  0306  0024               	movlb	4	; select bank4
  9706  0307  1295               	bcf	21,5	;volatile
  9707  0308  0008               	return
  9708  0309                     __end_of_SPI_Initialize:
  9709  0309                     __ptext9:	
  9710 ;; *************** function _SwitchEventHandler *****************
  9711 ;; Defined at:
  9712 ;;		line 222 in file "main.c"
  9713 ;; Parameters:    Size  Location     Type
  9714 ;;		None
  9715 ;; Auto vars:     Size  Location     Type
  9716 ;;  new_switch_p    1   50[BANK0 ] unsigned char 
  9717 ;;  a3              1   49[BANK0 ] _Bool 
  9718 ;;  a2              1   48[BANK0 ] _Bool 
  9719 ;;  a1              1   47[BANK0 ] _Bool 
  9720 ;; Return value:  Size  Location     Type
  9721 ;;                  1    wreg      void 
  9722 ;; Registers used:
  9723 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9724 ;; Tracked objects:
  9725 ;;		On entry : 1E/1
  9726 ;;		On exit  : 1D/0
  9727 ;;		Unchanged: 0/0
  9728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9730 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9731 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9732 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9733 ;;Total ram usage:       14 bytes
  9734 ;; Hardware stack levels used: 1
  9735 ;; Hardware stack levels required when called: 6
  9736 ;; This function calls:
  9737 ;;		_sendCoilsConfiguration
  9738 ;; This function is called by:
  9739 ;;		_main
  9740 ;; This function uses a non-reentrant model
  9741 ;;
  9742                           
  9743                           
  9744                           ;psect for function _SwitchEventHandler
  9745  0309                     _SwitchEventHandler:
  9746                           
  9747                           ;main.c: 224:     const uint8_t conv_table[6] = {0, 2, 1, 4, 0, 3};;main.c: 225:     _Bo
      +                          ol a1 = !PORTCbits.RC0;
  9748                           
  9749                           ;incstack = 0
  9750                           ; Regs used in _SwitchEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9751  0309  1003               	clrc
  9752  030A  0020               	movlb	0	; select bank0
  9753  030B  1C0E               	btfss	14,0	;volatile
  9754  030C  1403               	setc
  9755  030D  3000               	movlw	0
  9756  030E  1803               	btfsc	3,0
  9757  030F  3001               	movlw	1
  9758  0310  00CF               	movwf	SwitchEventHandler@a1
  9759                           
  9760                           ;main.c: 226:     _Bool a2 = !PORTCbits.RC1;
  9761  0311  1003               	clrc
  9762  0312  1C8E               	btfss	14,1	;volatile
  9763  0313  1403               	setc
  9764  0314  3000               	movlw	0
  9765  0315  1803               	btfsc	3,0
  9766  0316  3001               	movlw	1
  9767  0317  00D0               	movwf	SwitchEventHandler@a2
  9768                           
  9769                           ;main.c: 227:     _Bool a3 = !PORTCbits.RC2;
  9770  0318  1003               	clrc
  9771  0319  1D0E               	btfss	14,2	;volatile
  9772  031A  1403               	setc
  9773  031B  3000               	movlw	0
  9774  031C  1803               	btfsc	3,0
  9775  031D  3001               	movlw	1
  9776  031E  00D1               	movwf	SwitchEventHandler@a3
  9777                           
  9778                           ;main.c: 229:     uint8_t new_switch_pos = conv_table[((a3 << 2) | (a2 << 1) | a1) - 1];
  9779  031F  084F               	movf	SwitchEventHandler@a1,w
  9780  0320  00C5               	movwf	??_SwitchEventHandler
  9781  0321  01C6               	clrf	??_SwitchEventHandler+1
  9782  0322  0850               	movf	SwitchEventHandler@a2,w
  9783  0323  00C7               	movwf	??_SwitchEventHandler+2
  9784  0324  01C8               	clrf	??_SwitchEventHandler+3
  9785  0325  35C7               	lslf	??_SwitchEventHandler+2,f
  9786  0326  0DC8               	rlf	??_SwitchEventHandler+3,f
  9787  0327  0851               	movf	SwitchEventHandler@a3,w
  9788  0328  00C9               	movwf	??_SwitchEventHandler+4
  9789  0329  01CA               	clrf	??_SwitchEventHandler+5
  9790  032A  35C9               	lslf	??_SwitchEventHandler+4,f
  9791  032B  0DCA               	rlf	??_SwitchEventHandler+5,f
  9792  032C  35C9               	lslf	??_SwitchEventHandler+4,f
  9793  032D  0DCA               	rlf	??_SwitchEventHandler+5,f
  9794  032E  0847               	movf	??_SwitchEventHandler+2,w
  9795  032F  0449               	iorwf	??_SwitchEventHandler+4,w
  9796  0330  00CB               	movwf	??_SwitchEventHandler+6
  9797  0331  0848               	movf	??_SwitchEventHandler+3,w
  9798  0332  044A               	iorwf	??_SwitchEventHandler+5,w
  9799  0333  00CC               	movwf	??_SwitchEventHandler+7
  9800  0334  0845               	movf	??_SwitchEventHandler,w
  9801  0335  044B               	iorwf	??_SwitchEventHandler+6,w
  9802  0336  00CD               	movwf	??_SwitchEventHandler+8
  9803  0337  0846               	movf	??_SwitchEventHandler+1,w
  9804  0338  044C               	iorwf	??_SwitchEventHandler+7,w
  9805  0339  00CE               	movwf	??_SwitchEventHandler+9
  9806  033A  302A               	movlw	low ((SwitchEventHandler@conv_table+65535)| (0+32768))
  9807  033B  074D               	addwf	??_SwitchEventHandler+8,w
  9808  033C  0084               	movwf	4
  9809  033D  3098               	movlw	high ((SwitchEventHandler@conv_table+65535)| (0+32768))
  9810  033E  3D4E               	addwfc	??_SwitchEventHandler+9,w
  9811  033F  0085               	movwf	5
  9812  0340  0800               	movf	0,w	;code access
  9813  0341  00D2               	movwf	SwitchEventHandler@new_switch_pos
  9814                           
  9815                           ;main.c: 230:     if(new_switch_pos != switch_pos){
  9816  0342  067B               	xorwf	_switch_pos,w
  9817  0343  1903               	skipnz
  9818  0344  0008               	return
  9819                           
  9820                           ;main.c: 231:         switch_pos = new_switch_pos;
  9821  0345  0852               	movf	SwitchEventHandler@new_switch_pos,w
  9822  0346  00FB               	movwf	_switch_pos
  9823                           
  9824                           ;main.c: 232:         sendCoilsConfiguration(&saved_pc[switch_pos]);
  9825  0347  0709               	addwf	9,w
  9826  0348  0709               	addwf	9,w
  9827  0349  3EAE               	addlw	(low (_saved_pc| 0))& (0+255)
  9828  034A  2B7E               	ljmp	_sendCoilsConfiguration
  9829  034B                     __end_of_SwitchEventHandler:
  9830  034B                     __ptext1:	
  9831 ;; *************** function _spi_master_open *****************
  9832 ;; Defined at:
  9833 ;;		line 56 in file "mcc_generated_files/drivers/spi_master.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;  config          1    wreg     enum E377
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;  config          1    8[COMMON] enum E377
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  1    wreg      _Bool 
  9840 ;; Registers used:
  9841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9842 ;; Tracked objects:
  9843 ;;		On entry : 1F/1
  9844 ;;		On exit  : 1A/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9848 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9849 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9850 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9851 ;;Total ram usage:        3 bytes
  9852 ;; Hardware stack levels used: 1
  9853 ;; Hardware stack levels required when called: 6
  9854 ;; This function calls:
  9855 ;;		_EINK_open
  9856 ;; This function is called by:
  9857 ;;		_main
  9858 ;; This function uses a non-reentrant model
  9859 ;;
  9860                           
  9861                           
  9862                           ;psect for function _spi_master_open
  9863  034B                     _spi_master_open:
  9864                           
  9865                           ;incstack = 0
  9866                           ; Regs used in _spi_master_open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9867                           ;spi_master_open@config stored from wreg
  9868  034B  00F8               	movwf	spi_master_open@config
  9869                           
  9870                           ;mcc_generated_files/drivers/spi_master.c: 57:     switch(config){
  9871  034C  2B4F               	goto	l4913
  9872  034D                     l4903:
  9873                           
  9874                           ;mcc_generated_files/drivers/spi_master.c: 59:             return EINK_open();
  9875  034D  2B7C               	ljmp	l4533
  9876  034E                     l4907:
  9877                           
  9878                           ;mcc_generated_files/drivers/spi_master.c: 61:             return 0;
  9879  034E  3400               	retlw	0
  9880  034F                     l4913:
  9881  034F  0878               	movf	spi_master_open@config,w
  9882  0350  00F6               	movwf	??_spi_master_open
  9883  0351  01F7               	clrf	??_spi_master_open+1
  9884                           
  9885                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9886                           ; Switch size 1, requested type "speed"
  9887                           ; Number of cases is 1, Range of values is 0 to 0
  9888                           ; switch strategies available:
  9889                           ; Name         Instructions Cycles
  9890                           ; simple_byte            4     3 (average)
  9891                           ; direct_byte            8     6 (fixed)
  9892                           ; jumptable            260     6 (fixed)
  9893                           ;	Chosen strategy is simple_byte
  9894  0352  0877               	movf	??_spi_master_open+1,w
  9895  0353  3A00               	xorlw	0	; case 0
  9896  0354  1903               	skipnz
  9897  0355  2B57               	goto	l5267
  9898  0356  2B4E               	goto	l4907
  9899  0357                     l5267:
  9900                           
  9901                           ; Switch size 1, requested type "speed"
  9902                           ; Number of cases is 1, Range of values is 0 to 0
  9903                           ; switch strategies available:
  9904                           ; Name         Instructions Cycles
  9905                           ; simple_byte            4     3 (average)
  9906                           ; direct_byte            8     6 (fixed)
  9907                           ; jumptable            260     6 (fixed)
  9908                           ;	Chosen strategy is simple_byte
  9909  0357  0876               	movf	??_spi_master_open,w
  9910  0358  3A00               	xorlw	0	; case 0
  9911  0359  1903               	skipnz
  9912  035A  2B4D               	goto	l4903
  9913  035B  2B4E               	goto	l4907
  9914  035C  0008               	return
  9915  035D                     __end_of_spi_master_open:
  9916  035D                     __ptext52:	
  9917 ;; *************** function _ButtonEventReset *****************
  9918 ;; Defined at:
  9919 ;;		line 133 in file "main.c"
  9920 ;; Parameters:    Size  Location     Type
  9921 ;;		None
  9922 ;; Auto vars:     Size  Location     Type
  9923 ;;		None
  9924 ;; Return value:  Size  Location     Type
  9925 ;;                  1    wreg      void 
  9926 ;; Registers used:
  9927 ;;		status,2
  9928 ;; Tracked objects:
  9929 ;;		On entry : 0/2
  9930 ;;		On exit  : 1F/1
  9931 ;;		Unchanged: 0/0
  9932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9937 ;;Total ram usage:        0 bytes
  9938 ;; Hardware stack levels used: 1
  9939 ;; Hardware stack levels required when called: 4
  9940 ;; This function calls:
  9941 ;;		Nothing
  9942 ;; This function is called by:
  9943 ;;		_GotoSleep
  9944 ;;		_WakeUp
  9945 ;;		_ButtonCaseHandler
  9946 ;;		_ButtonEventHandler
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950                           
  9951                           ;psect for function _ButtonEventReset
  9952  035D                     _ButtonEventReset:
  9953  035D                     l4395:	
  9954                           ;incstack = 0
  9955                           ; Regs used in _ButtonEventReset: [status,2]
  9956                           
  9957                           
  9958                           ;main.c: 134:     click_type = 0;
  9959  035D  0021               	movlb	1	; select bank1
  9960  035E  01DB               	clrf	_click_type^(0+128)
  9961                           
  9962                           ;main.c: 135:     click_timer = 0;
  9963  035F  01CE               	clrf	_click_timer^(0+128)	;volatile
  9964  0360  01CF               	clrf	(_click_timer+1)^(0+128)	;volatile
  9965                           
  9966                           ;main.c: 136:     button_clicked = 0;
  9967  0361  01FA               	clrf	_button_clicked	;volatile
  9968  0362  0008               	return
  9969  0363                     __end_of_ButtonEventReset:
  9970  0363                     __ptext12:	
  9971 ;; *************** function _TMR1_Initialize *****************
  9972 ;; Defined at:
  9973 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;		None
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;		None
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  1    wreg      void 
  9980 ;; Registers used:
  9981 ;;		wreg, status,2, status,0, pclath, cstack
  9982 ;; Tracked objects:
  9983 ;;		On entry : 1F/1
  9984 ;;		On exit  : 1F/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9991 ;;Total ram usage:        0 bytes
  9992 ;; Hardware stack levels used: 1
  9993 ;; Hardware stack levels required when called: 5
  9994 ;; This function calls:
  9995 ;;		_TMR1_SetInterruptHandler
  9996 ;; This function is called by:
  9997 ;;		_SYSTEM_Initialize
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           
 10002                           ;psect for function _TMR1_Initialize
 10003  0363                     _TMR1_Initialize:
 10004  0363                     l4605:	
 10005                           ;incstack = 0
 10006                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10007                           
 10008                           
 10009                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 10010  0363  0020               	movlb	0	; select bank0
 10011  0364  0199               	clrf	25	;volatile
 10012                           
 10013                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFC;
 10014  0365  30FC               	movlw	252
 10015  0366  0097               	movwf	23	;volatile
 10016                           
 10017                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x18;
 10018  0367  3018               	movlw	24
 10019  0368  0096               	movwf	22	;volatile
 10020                           
 10021                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
 10022  0369  1011               	bcf	17,0	;volatile
 10023                           
 10024                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 10025  036A  0817               	movf	23,w	;volatile
 10026  036B  0021               	movlb	1	; select bank1
 10027  036C  00D3               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 10028  036D  01D2               	clrf	_timer1ReloadVal^(0+128)	;volatile
 10029  036E  0020               	movlb	0	; select bank0
 10030  036F  0816               	movf	22,w	;volatile
 10031  0370  0021               	movlb	1	; select bank1
 10032  0371  04D2               	iorwf	_timer1ReloadVal^(0+128),f	;volatile
 10033                           
 10034                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
 10035  0372  1411               	bsf	17,0	;volatile
 10036                           
 10037                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 10038  0373  3003               	movlw	low _TMR1_DefaultInterruptHandler
 10039  0374  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10040  0375  3000               	movlw	high _TMR1_DefaultInterruptHandler
 10041  0376  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10042  0377  22A0               	fcall	_TMR1_SetInterruptHandler
 10043                           
 10044                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x01;
 10045  0378  3001               	movlw	1
 10046  0379  0020               	movlb	0	; select bank0
 10047  037A  0098               	movwf	24	;volatile
 10048  037B  0008               	return
 10049  037C                     __end_of_TMR1_Initialize:
 10050  037C                     __ptext2:	
 10051 ;; *************** function _EINK_open *****************
 10052 ;; Defined at:
 10053 ;;		line 41 in file "mcc_generated_files/drivers/spi_master.c"
 10054 ;; Parameters:    Size  Location     Type
 10055 ;;		None
 10056 ;; Auto vars:     Size  Location     Type
 10057 ;;		None
 10058 ;; Return value:  Size  Location     Type
 10059 ;;                  1    wreg      _Bool 
 10060 ;; Registers used:
 10061 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10062 ;; Tracked objects:
 10063 ;;		On entry : 1F/1
 10064 ;;		On exit  : 1F/4
 10065 ;;		Unchanged: 0/0
 10066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10071 ;;Total ram usage:        0 bytes
 10072 ;; Hardware stack levels used: 1
 10073 ;; Hardware stack levels required when called: 5
 10074 ;; This function calls:
 10075 ;;		_SPI_Open
 10076 ;; This function is called by:
 10077 ;;		_spi_master_open
 10078 ;; This function uses a non-reentrant model
 10079 ;;
 10080                           
 10081                           
 10082                           ;psect for function _EINK_open
 10083  037C                     _EINK_open:
 10084  037C                     l4533:	
 10085                           ;incstack = 0
 10086                           ; Regs used in _EINK_open: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10087                           
 10088                           
 10089                           ;mcc_generated_files/drivers/spi_master.c: 42:     return SPI_Open(EINK_CONFIG);
 10090  037C  3000               	movlw	0
 10091  037D  2D95               	ljmp	_SPI_Open
 10092  037E                     __end_of_EINK_open:
 10093  037E                     __ptext19:	
 10094 ;; *************** function _sendCoilsConfiguration *****************
 10095 ;; Defined at:
 10096 ;;		line 323 in file "main.c"
 10097 ;; Parameters:    Size  Location     Type
 10098 ;;  pc              1    wreg     PTR struct PickupConfigu
 10099 ;;		 -> saved_pc(20), 
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;  pc              1   36[BANK0 ] PTR struct PickupConfigu
 10102 ;;		 -> saved_pc(20), 
 10103 ;; Return value:  Size  Location     Type
 10104 ;;                  1    wreg      void 
 10105 ;; Registers used:
 10106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10107 ;; Tracked objects:
 10108 ;;		On entry : 0/0
 10109 ;;		On exit  : 1F/2
 10110 ;;		Unchanged: 0/0
 10111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10113 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10114 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10115 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10116 ;;Total ram usage:       11 bytes
 10117 ;; Hardware stack levels used: 1
 10118 ;; Hardware stack levels required when called: 5
 10119 ;; This function calls:
 10120 ;;		_shiftOut
 10121 ;; This function is called by:
 10122 ;;		_WakeUp
 10123 ;;		_SwitchEventHandler
 10124 ;;		_RotaryEncoderEventHandler
 10125 ;; This function uses a non-reentrant model
 10126 ;;
 10127                           
 10128                           
 10129                           ;psect for function _sendCoilsConfiguration
 10130  037E                     _sendCoilsConfiguration:
 10131                           
 10132                           ;incstack = 0
 10133                           ; Regs used in _sendCoilsConfiguration: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10134                           ;sendCoilsConfiguration@pc stored from wreg
 10135  037E  0020               	movlb	0	; select bank0
 10136  037F  00C4               	movwf	sendCoilsConfiguration@pc
 10137                           
 10138                           ;main.c: 325:     coil_conf = 0;
 10139  0380  30C2               	movlw	low _coil_conf
 10140  0381  0086               	movwf	6
 10141  0382  3000               	movlw	high _coil_conf
 10142  0383  0087               	movwf	7
 10143  0384  3008               	movlw	8
 10144  0385  00BA               	movwf	??_sendCoilsConfiguration
 10145  0386  3000               	movlw	0
 10146  0387                     u3310:
 10147  0387  001E               	movwi fsr1++
 10148  0388  0BBA               	decfsz	??_sendCoilsConfiguration,f
 10149  0389  2B87               	goto	u3310
 10150                           
 10151                           ;main.c: 327:     coil_conf |= general_pickup_configuration_selectors[pc->general];
 10152  038A  0844               	movf	sendCoilsConfiguration@pc,w
 10153  038B  3E03               	addlw	3
 10154  038C  0086               	movwf	6
 10155  038D  0187               	clrf	7
 10156  038E  0801               	movf	1,w
 10157  038F  00BA               	movwf	??_sendCoilsConfiguration
 10158  0390  305A               	movlw	low (_general_pickup_configuration_selectors| (0+32768))
 10159  0391  01BB               	clrf	??_sendCoilsConfiguration+1
 10160  0392  35BA               	lslf	??_sendCoilsConfiguration,f
 10161  0393  0DBB               	rlf	??_sendCoilsConfiguration+1,f
 10162  0394  073A               	addwf	??_sendCoilsConfiguration,w
 10163  0395  0084               	movwf	4
 10164  0396  3097               	movlw	high (_general_pickup_configuration_selectors| (0+32768))
 10165  0397  3D3B               	addwfc	??_sendCoilsConfiguration+1,w
 10166  0398  0085               	movwf	5
 10167  0399  3F00               	moviw [0]fsr0
 10168  039A  00BC               	movwf	??_sendCoilsConfiguration+2
 10169  039B  3F01               	moviw [1]fsr0
 10170  039C  00BD               	movwf	??_sendCoilsConfiguration+3
 10171  039D  01BE               	clrf	??_sendCoilsConfiguration+4
 10172  039E  01BF               	clrf	??_sendCoilsConfiguration+5
 10173  039F  01C0               	clrf	??_sendCoilsConfiguration+6
 10174  03A0  01C1               	clrf	??_sendCoilsConfiguration+7
 10175  03A1  01C2               	clrf	??_sendCoilsConfiguration+8
 10176  03A2  01C3               	clrf	??_sendCoilsConfiguration+9
 10177  03A3  083C               	movf	??_sendCoilsConfiguration+2,w
 10178  03A4  0021               	movlb	1	; select bank1
 10179  03A5  04C2               	iorwf	_coil_conf^(0+128),f
 10180  03A6  0020               	movlb	0	; select bank0
 10181  03A7  083D               	movf	??_sendCoilsConfiguration+3,w
 10182  03A8  0021               	movlb	1	; select bank1
 10183  03A9  04C3               	iorwf	(_coil_conf+1)^(0+128),f
 10184  03AA  0020               	movlb	0	; select bank0
 10185  03AB  083E               	movf	??_sendCoilsConfiguration+4,w
 10186  03AC  0021               	movlb	1	; select bank1
 10187  03AD  04C4               	iorwf	(_coil_conf+2)^(0+128),f
 10188  03AE  0020               	movlb	0	; select bank0
 10189  03AF  083F               	movf	??_sendCoilsConfiguration+5,w
 10190  03B0  0021               	movlb	1	; select bank1
 10191  03B1  04C5               	iorwf	(_coil_conf+3)^(0+128),f
 10192  03B2  0020               	movlb	0	; select bank0
 10193  03B3  0840               	movf	??_sendCoilsConfiguration+6,w
 10194  03B4  0021               	movlb	1	; select bank1
 10195  03B5  04C6               	iorwf	(_coil_conf+4)^(0+128),f
 10196  03B6  0020               	movlb	0	; select bank0
 10197  03B7  0841               	movf	??_sendCoilsConfiguration+7,w
 10198  03B8  0021               	movlb	1	; select bank1
 10199  03B9  04C7               	iorwf	(_coil_conf+5)^(0+128),f
 10200  03BA  0020               	movlb	0	; select bank0
 10201  03BB  0842               	movf	??_sendCoilsConfiguration+8,w
 10202  03BC  0021               	movlb	1	; select bank1
 10203  03BD  04C8               	iorwf	(_coil_conf+6)^(0+128),f
 10204  03BE  0020               	movlb	0	; select bank0
 10205  03BF  0843               	movf	??_sendCoilsConfiguration+9,w
 10206  03C0  0021               	movlb	1	; select bank1
 10207  03C1  04C9               	iorwf	(_coil_conf+7)^(0+128),f
 10208                           
 10209                           ;main.c: 328:     coil_conf |= ((uint64_t)pickup_configuration_selectors[pc->bridge]) <<
      +                           12;
 10210  03C2  0020               	movlb	0	; select bank0
 10211  03C3  0844               	movf	sendCoilsConfiguration@pc,w
 10212  03C4  3E02               	addlw	2
 10213  03C5  0086               	movwf	6
 10214  03C6  0801               	movf	1,w
 10215  03C7  00BA               	movwf	??_sendCoilsConfiguration
 10216  03C8  3088               	movlw	low (_pickup_configuration_selectors| (0+32768))
 10217  03C9  01BB               	clrf	??_sendCoilsConfiguration+1
 10218  03CA  35BA               	lslf	??_sendCoilsConfiguration,f
 10219  03CB  0DBB               	rlf	??_sendCoilsConfiguration+1,f
 10220  03CC  073A               	addwf	??_sendCoilsConfiguration,w
 10221  03CD  0084               	movwf	4
 10222  03CE  3097               	movlw	high (_pickup_configuration_selectors| (0+32768))
 10223  03CF  3D3B               	addwfc	??_sendCoilsConfiguration+1,w
 10224  03D0  0085               	movwf	5
 10225  03D1  3F00               	moviw [0]fsr0
 10226  03D2  00BC               	movwf	??_sendCoilsConfiguration+2
 10227  03D3  3F01               	moviw [1]fsr0
 10228  03D4  00BD               	movwf	??_sendCoilsConfiguration+3
 10229  03D5  300C               	movlw	12
 10230  03D6  01BE               	clrf	??_sendCoilsConfiguration+4
 10231  03D7  01BF               	clrf	??_sendCoilsConfiguration+5
 10232  03D8  01C0               	clrf	??_sendCoilsConfiguration+6
 10233  03D9  01C1               	clrf	??_sendCoilsConfiguration+7
 10234  03DA  01C2               	clrf	??_sendCoilsConfiguration+8
 10235  03DB  01C3               	clrf	??_sendCoilsConfiguration+9
 10236  03DC                     u3325:
 10237  03DC  0020               	movlb	0	; select bank0
 10238  03DD  35BC               	lslf	??_sendCoilsConfiguration+2,f
 10239  03DE  0DBD               	rlf	??_sendCoilsConfiguration+3,f
 10240  03DF  0DBE               	rlf	??_sendCoilsConfiguration+4,f
 10241  03E0  0DBF               	rlf	??_sendCoilsConfiguration+5,f
 10242  03E1  0DC0               	rlf	??_sendCoilsConfiguration+6,f
 10243  03E2  0DC1               	rlf	??_sendCoilsConfiguration+7,f
 10244  03E3  0DC2               	rlf	??_sendCoilsConfiguration+8,f
 10245  03E4  0DC3               	rlf	??_sendCoilsConfiguration+9,f
 10246  03E5  0B89               	decfsz	9,f
 10247  03E6  2BDC               	goto	u3325
 10248  03E7  0020               	movlb	0	; select bank0
 10249  03E8  083C               	movf	??_sendCoilsConfiguration+2,w
 10250  03E9  0021               	movlb	1	; select bank1
 10251  03EA  04C2               	iorwf	_coil_conf^(0+128),f
 10252  03EB  0020               	movlb	0	; select bank0
 10253  03EC  083D               	movf	??_sendCoilsConfiguration+3,w
 10254  03ED  0021               	movlb	1	; select bank1
 10255  03EE  04C3               	iorwf	(_coil_conf+1)^(0+128),f
 10256  03EF  0020               	movlb	0	; select bank0
 10257  03F0  083E               	movf	??_sendCoilsConfiguration+4,w
 10258  03F1  0021               	movlb	1	; select bank1
 10259  03F2  04C4               	iorwf	(_coil_conf+2)^(0+128),f
 10260  03F3  0020               	movlb	0	; select bank0
 10261  03F4  083F               	movf	??_sendCoilsConfiguration+5,w
 10262  03F5  0021               	movlb	1	; select bank1
 10263  03F6  04C5               	iorwf	(_coil_conf+3)^(0+128),f
 10264  03F7  0020               	movlb	0	; select bank0
 10265  03F8  0840               	movf	??_sendCoilsConfiguration+6,w
 10266  03F9  0021               	movlb	1	; select bank1
 10267  03FA  04C6               	iorwf	(_coil_conf+4)^(0+128),f
 10268  03FB  0020               	movlb	0	; select bank0
 10269  03FC  0841               	movf	??_sendCoilsConfiguration+7,w
 10270  03FD  0021               	movlb	1	; select bank1
 10271  03FE  04C7               	iorwf	(_coil_conf+5)^(0+128),f
 10272  03FF  0020               	movlb	0	; select bank0
 10273  0400  0842               	movf	??_sendCoilsConfiguration+8,w
 10274  0401  0021               	movlb	1	; select bank1
 10275  0402  04C8               	iorwf	(_coil_conf+6)^(0+128),f
 10276  0403  0020               	movlb	0	; select bank0
 10277  0404  0843               	movf	??_sendCoilsConfiguration+9,w
 10278  0405  0021               	movlb	1	; select bank1
 10279  0406  04C9               	iorwf	(_coil_conf+7)^(0+128),f
 10280                           
 10281                           ;main.c: 329:     coil_conf |= ((uint64_t)pickup_configuration_selectors[pc->middle]) <<
      +                           24;
 10282  0407  0020               	movlb	0	; select bank0
 10283  0408  0A44               	incf	sendCoilsConfiguration@pc,w
 10284  0409  0086               	movwf	6
 10285  040A  0187               	clrf	7
 10286  040B  0801               	movf	1,w
 10287  040C  00BA               	movwf	??_sendCoilsConfiguration
 10288  040D  3088               	movlw	low (_pickup_configuration_selectors| (0+32768))
 10289  040E  01BB               	clrf	??_sendCoilsConfiguration+1
 10290  040F  35BA               	lslf	??_sendCoilsConfiguration,f
 10291  0410  0DBB               	rlf	??_sendCoilsConfiguration+1,f
 10292  0411  073A               	addwf	??_sendCoilsConfiguration,w
 10293  0412  0084               	movwf	4
 10294  0413  3097               	movlw	high (_pickup_configuration_selectors| (0+32768))
 10295  0414  3D3B               	addwfc	??_sendCoilsConfiguration+1,w
 10296  0415  0085               	movwf	5
 10297  0416  3F00               	moviw [0]fsr0
 10298  0417  00BC               	movwf	??_sendCoilsConfiguration+2
 10299  0418  3F01               	moviw [1]fsr0
 10300  0419  00BD               	movwf	??_sendCoilsConfiguration+3
 10301  041A  01BE               	clrf	??_sendCoilsConfiguration+4
 10302  041B  01BF               	clrf	??_sendCoilsConfiguration+5
 10303  041C  01C0               	clrf	??_sendCoilsConfiguration+6
 10304  041D  01C1               	clrf	??_sendCoilsConfiguration+7
 10305  041E  01C2               	clrf	??_sendCoilsConfiguration+8
 10306  041F  01C3               	clrf	??_sendCoilsConfiguration+9
 10307  0420  0840               	movf	??_sendCoilsConfiguration+6,w
 10308  0421  00C3               	movwf	??_sendCoilsConfiguration+9
 10309  0422  083F               	movf	??_sendCoilsConfiguration+5,w
 10310  0423  00C2               	movwf	??_sendCoilsConfiguration+8
 10311  0424  083E               	movf	??_sendCoilsConfiguration+4,w
 10312  0425  00C1               	movwf	??_sendCoilsConfiguration+7
 10313  0426  083D               	movf	??_sendCoilsConfiguration+3,w
 10314  0427  00C0               	movwf	??_sendCoilsConfiguration+6
 10315  0428  083C               	movf	??_sendCoilsConfiguration+2,w
 10316  0429  00BF               	movwf	??_sendCoilsConfiguration+5
 10317  042A  01BE               	clrf	??_sendCoilsConfiguration+4
 10318  042B  01BD               	clrf	??_sendCoilsConfiguration+3
 10319  042C  01BC               	clrf	??_sendCoilsConfiguration+2
 10320  042D  083C               	movf	??_sendCoilsConfiguration+2,w
 10321  042E  0021               	movlb	1	; select bank1
 10322  042F  04C2               	iorwf	_coil_conf^(0+128),f
 10323  0430  0020               	movlb	0	; select bank0
 10324  0431  083D               	movf	??_sendCoilsConfiguration+3,w
 10325  0432  0021               	movlb	1	; select bank1
 10326  0433  04C3               	iorwf	(_coil_conf+1)^(0+128),f
 10327  0434  0020               	movlb	0	; select bank0
 10328  0435  083E               	movf	??_sendCoilsConfiguration+4,w
 10329  0436  0021               	movlb	1	; select bank1
 10330  0437  04C4               	iorwf	(_coil_conf+2)^(0+128),f
 10331  0438  0020               	movlb	0	; select bank0
 10332  0439  083F               	movf	??_sendCoilsConfiguration+5,w
 10333  043A  0021               	movlb	1	; select bank1
 10334  043B  04C5               	iorwf	(_coil_conf+3)^(0+128),f
 10335  043C  0020               	movlb	0	; select bank0
 10336  043D  0840               	movf	??_sendCoilsConfiguration+6,w
 10337  043E  0021               	movlb	1	; select bank1
 10338  043F  04C6               	iorwf	(_coil_conf+4)^(0+128),f
 10339  0440  0020               	movlb	0	; select bank0
 10340  0441  0841               	movf	??_sendCoilsConfiguration+7,w
 10341  0442  0021               	movlb	1	; select bank1
 10342  0443  04C7               	iorwf	(_coil_conf+5)^(0+128),f
 10343  0444  0020               	movlb	0	; select bank0
 10344  0445  0842               	movf	??_sendCoilsConfiguration+8,w
 10345  0446  0021               	movlb	1	; select bank1
 10346  0447  04C8               	iorwf	(_coil_conf+6)^(0+128),f
 10347  0448  0020               	movlb	0	; select bank0
 10348  0449  0843               	movf	??_sendCoilsConfiguration+9,w
 10349  044A  0021               	movlb	1	; select bank1
 10350  044B  04C9               	iorwf	(_coil_conf+7)^(0+128),f
 10351                           
 10352                           ;main.c: 330:     coil_conf |= ((uint64_t)pickup_configuration_selectors[pc->neck]) << 3
      +                          6;
 10353  044C  0020               	movlb	0	; select bank0
 10354  044D  0844               	movf	sendCoilsConfiguration@pc,w
 10355  044E  0086               	movwf	6
 10356  044F  0801               	movf	1,w
 10357  0450  00BA               	movwf	??_sendCoilsConfiguration
 10358  0451  3088               	movlw	low (_pickup_configuration_selectors| (0+32768))
 10359  0452  01BB               	clrf	??_sendCoilsConfiguration+1
 10360  0453  35BA               	lslf	??_sendCoilsConfiguration,f
 10361  0454  0DBB               	rlf	??_sendCoilsConfiguration+1,f
 10362  0455  073A               	addwf	??_sendCoilsConfiguration,w
 10363  0456  0084               	movwf	4
 10364  0457  3097               	movlw	high (_pickup_configuration_selectors| (0+32768))
 10365  0458  3D3B               	addwfc	??_sendCoilsConfiguration+1,w
 10366  0459  0085               	movwf	5
 10367  045A  3F00               	moviw [0]fsr0
 10368  045B  00BC               	movwf	??_sendCoilsConfiguration+2
 10369  045C  3F01               	moviw [1]fsr0
 10370  045D  00BD               	movwf	??_sendCoilsConfiguration+3
 10371  045E  3024               	movlw	36
 10372  045F  01BE               	clrf	??_sendCoilsConfiguration+4
 10373  0460  01BF               	clrf	??_sendCoilsConfiguration+5
 10374  0461  01C0               	clrf	??_sendCoilsConfiguration+6
 10375  0462  01C1               	clrf	??_sendCoilsConfiguration+7
 10376  0463  01C2               	clrf	??_sendCoilsConfiguration+8
 10377  0464  01C3               	clrf	??_sendCoilsConfiguration+9
 10378  0465                     u3335:
 10379  0465  0020               	movlb	0	; select bank0
 10380  0466  35BC               	lslf	??_sendCoilsConfiguration+2,f
 10381  0467  0DBD               	rlf	??_sendCoilsConfiguration+3,f
 10382  0468  0DBE               	rlf	??_sendCoilsConfiguration+4,f
 10383  0469  0DBF               	rlf	??_sendCoilsConfiguration+5,f
 10384  046A  0DC0               	rlf	??_sendCoilsConfiguration+6,f
 10385  046B  0DC1               	rlf	??_sendCoilsConfiguration+7,f
 10386  046C  0DC2               	rlf	??_sendCoilsConfiguration+8,f
 10387  046D  0DC3               	rlf	??_sendCoilsConfiguration+9,f
 10388  046E  0B89               	decfsz	9,f
 10389  046F  2C65               	goto	u3335
 10390  0470  0020               	movlb	0	; select bank0
 10391  0471  083C               	movf	??_sendCoilsConfiguration+2,w
 10392  0472  0021               	movlb	1	; select bank1
 10393  0473  04C2               	iorwf	_coil_conf^(0+128),f
 10394  0474  0020               	movlb	0	; select bank0
 10395  0475  083D               	movf	??_sendCoilsConfiguration+3,w
 10396  0476  0021               	movlb	1	; select bank1
 10397  0477  04C3               	iorwf	(_coil_conf+1)^(0+128),f
 10398  0478  0020               	movlb	0	; select bank0
 10399  0479  083E               	movf	??_sendCoilsConfiguration+4,w
 10400  047A  0021               	movlb	1	; select bank1
 10401  047B  04C4               	iorwf	(_coil_conf+2)^(0+128),f
 10402  047C  0020               	movlb	0	; select bank0
 10403  047D  083F               	movf	??_sendCoilsConfiguration+5,w
 10404  047E  0021               	movlb	1	; select bank1
 10405  047F  04C5               	iorwf	(_coil_conf+3)^(0+128),f
 10406  0480  0020               	movlb	0	; select bank0
 10407  0481  0840               	movf	??_sendCoilsConfiguration+6,w
 10408  0482  0021               	movlb	1	; select bank1
 10409  0483  04C6               	iorwf	(_coil_conf+4)^(0+128),f
 10410  0484  0020               	movlb	0	; select bank0
 10411  0485  0841               	movf	??_sendCoilsConfiguration+7,w
 10412  0486  0021               	movlb	1	; select bank1
 10413  0487  04C7               	iorwf	(_coil_conf+5)^(0+128),f
 10414  0488  0020               	movlb	0	; select bank0
 10415  0489  0842               	movf	??_sendCoilsConfiguration+8,w
 10416  048A  0021               	movlb	1	; select bank1
 10417  048B  04C8               	iorwf	(_coil_conf+6)^(0+128),f
 10418  048C  0020               	movlb	0	; select bank0
 10419  048D  0843               	movf	??_sendCoilsConfiguration+9,w
 10420  048E  0021               	movlb	1	; select bank1
 10421  048F  04C9               	iorwf	(_coil_conf+7)^(0+128),f
 10422                           
 10423                           ;main.c: 331:     shiftOut(0, coil_conf);
 10424  0490  0842               	movf	_coil_conf^(0+128),w
 10425  0491  00F2               	movwf	shiftOut@val
 10426  0492  0843               	movf	(_coil_conf+1)^(0+128),w
 10427  0493  00F3               	movwf	shiftOut@val+1
 10428  0494  0844               	movf	(_coil_conf+2)^(0+128),w
 10429  0495  00F4               	movwf	shiftOut@val+2
 10430  0496  0845               	movf	(_coil_conf+3)^(0+128),w
 10431  0497  00F5               	movwf	shiftOut@val+3
 10432  0498  0846               	movf	(_coil_conf+4)^(0+128),w
 10433  0499  00F6               	movwf	shiftOut@val+4
 10434  049A  0847               	movf	(_coil_conf+5)^(0+128),w
 10435  049B  00F7               	movwf	shiftOut@val+5
 10436  049C  0848               	movf	(_coil_conf+6)^(0+128),w
 10437  049D  00F8               	movwf	shiftOut@val+6
 10438  049E  0849               	movf	(_coil_conf+7)^(0+128),w
 10439  049F  00F9               	movwf	shiftOut@val+7
 10440  04A0  3000               	movlw	0
 10441  04A1  2CA2               	ljmp	_shiftOut
 10442  04A2                     __end_of_sendCoilsConfiguration:
 10443  04A2                     __ptext20:	
 10444 ;; *************** function _shiftOut *****************
 10445 ;; Defined at:
 10446 ;;		line 301 in file "main.c"
 10447 ;; Parameters:    Size  Location     Type
 10448 ;;  bitOrder        1    wreg     unsigned char 
 10449 ;;  val             8    2[COMMON] unsigned long long 
 10450 ;; Auto vars:     Size  Location     Type
 10451 ;;  bitOrder        1   17[BANK0 ] unsigned char 
 10452 ;;  i               8   18[BANK0 ] unsigned long long 
 10453 ;; Return value:  Size  Location     Type
 10454 ;;                  1    wreg      void 
 10455 ;; Registers used:
 10456 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10457 ;; Tracked objects:
 10458 ;;		On entry : 1F/1
 10459 ;;		On exit  : 1F/2
 10460 ;;		Unchanged: 0/0
 10461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10462 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10463 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10464 ;;      Temps:          0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10465 ;;      Totals:         8      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10466 ;;Total ram usage:       34 bytes
 10467 ;; Hardware stack levels used: 1
 10468 ;; Hardware stack levels required when called: 4
 10469 ;; This function calls:
 10470 ;;		Nothing
 10471 ;; This function is called by:
 10472 ;;		_sendCoilsConfiguration
 10473 ;; This function uses a non-reentrant model
 10474 ;;
 10475                           
 10476                           
 10477                           ;psect for function _shiftOut
 10478  04A2                     _shiftOut:
 10479                           
 10480                           ;incstack = 0
 10481                           ; Regs used in _shiftOut: [wreg+fsr1l+fsr1h+status,2+status,0]
 10482                           ;shiftOut@bitOrder stored from wreg
 10483  04A2  0020               	movlb	0	; select bank0
 10484  04A3  00B1               	movwf	shiftOut@bitOrder
 10485                           
 10486                           ;main.c: 301: void shiftOut(uint8_t bitOrder, uint64_t val);main.c: 302: {;main.c: 303: 
      +                              uint64_t i;;main.c: 304:     do { LATAbits.LATA5 = 0; } while(0);
 10487  04A4  0022               	movlb	2	; select bank2
 10488  04A5  128C               	bcf	12,5	;volatile
 10489                           
 10490                           ;main.c: 305:     for (i = 0; i < 48; i++) {
 10491  04A6  3032               	movlw	low shiftOut@i
 10492  04A7  0086               	movwf	6
 10493  04A8  3000               	movlw	high shiftOut@i
 10494  04A9  0087               	movwf	7
 10495  04AA  3008               	movlw	8
 10496  04AB  0020               	movlb	0	; select bank0
 10497  04AC  00A0               	movwf	??_shiftOut
 10498  04AD  3000               	movlw	0
 10499  04AE                     u3050:
 10500  04AE  001E               	movwi fsr1++
 10501  04AF  0BA0               	decfsz	??_shiftOut,f
 10502  04B0  2CAE               	goto	u3050
 10503  04B1                     l4401:
 10504                           
 10505                           ;main.c: 306:         if (bitOrder == 0)
 10506  04B1  0020               	movlb	0	; select bank0
 10507  04B2  0831               	movf	shiftOut@bitOrder,w
 10508                           
 10509                           ;main.c: 307:             if (!!(val & ((uint64_t)1 << i)))
 10510  04B3  3072               	movlw	low shiftOut@val
 10511  04B4  0086               	movwf	6
 10512  04B5  3000               	movlw	high shiftOut@val
 10513  04B6  0087               	movwf	7
 10514  04B7  1D03               	btfss	3,2
 10515  04B8  2CE3               	goto	L10
 10516  04B9  3F40               	moviw [0]fsr1
 10517  04BA  00A0               	movwf	??_shiftOut
 10518  04BB  3F41               	moviw [1]fsr1
 10519  04BC  00A1               	movwf	??_shiftOut+1
 10520  04BD  3F42               	moviw [2]fsr1
 10521  04BE  00A2               	movwf	??_shiftOut+2
 10522  04BF  3F43               	moviw [3]fsr1
 10523  04C0  00A3               	movwf	??_shiftOut+3
 10524  04C1  3F44               	moviw [4]fsr1
 10525  04C2  00A4               	movwf	??_shiftOut+4
 10526  04C3  3F45               	moviw [5]fsr1
 10527  04C4  00A5               	movwf	??_shiftOut+5
 10528  04C5  3F46               	moviw [6]fsr1
 10529  04C6  00A6               	movwf	??_shiftOut+6
 10530  04C7  3F47               	moviw [7]fsr1
 10531  04C8  00A7               	movwf	??_shiftOut+7
 10532  04C9  0A32               	incf	shiftOut@i,w
 10533  04CA  00A8               	movwf	??_shiftOut+8
 10534  04CB  3001               	movlw	1
 10535  04CC  00A9               	movwf	??_shiftOut+9
 10536  04CD  3000               	movlw	0
 10537  04CE  00AA               	movwf	??_shiftOut+10
 10538  04CF  00AB               	movwf	??_shiftOut+11
 10539  04D0  00AC               	movwf	??_shiftOut+12
 10540  04D1  00AD               	movwf	??_shiftOut+13
 10541  04D2  00AE               	movwf	??_shiftOut+14
 10542  04D3  00AF               	movwf	??_shiftOut+15
 10543  04D4  00B0               	movwf	??_shiftOut+16
 10544  04D5  2CE0               	goto	u3070
 10545  04D6                     u3075:
 10546  04D6  1003               	clrc
 10547  04D7  0020               	movlb	0	; select bank0
 10548  04D8  0DA9               	rlf	??_shiftOut+9,f
 10549  04D9  0DAA               	rlf	??_shiftOut+10,f
 10550  04DA  0DAB               	rlf	??_shiftOut+11,f
 10551  04DB  0DAC               	rlf	??_shiftOut+12,f
 10552  04DC  0DAD               	rlf	??_shiftOut+13,f
 10553  04DD  0DAE               	rlf	??_shiftOut+14,f
 10554  04DE  0DAF               	rlf	??_shiftOut+15,f
 10555  04DF  0DB0               	rlf	??_shiftOut+16,f
 10556  04E0                     u3070:
 10557  04E0  0BA8               	decfsz	??_shiftOut+8,f
 10558  04E1  2CD6               	goto	u3075
 10559  04E2  2D0F               	goto	L9
 10560  04E3                     L10:	
 10561                           ;main.c: 312:             if (!!(val & ((uint64_t)1 << (47 - i))))
 10562                           
 10563                           ;main.c: 310:                 do { LATCbits.LATC6 = 0; } while(0);
 10564                           
 10565                           ;main.c: 308:                 do { LATCbits.LATC6 = 1; } while(0);
 10566                           
 10567  04E3  3F40               	moviw [0]fsr1
 10568  04E4  00A0               	movwf	??_shiftOut
 10569  04E5  3F41               	moviw [1]fsr1
 10570  04E6  00A1               	movwf	??_shiftOut+1
 10571  04E7  3F42               	moviw [2]fsr1
 10572  04E8  00A2               	movwf	??_shiftOut+2
 10573  04E9  3F43               	moviw [3]fsr1
 10574  04EA  00A3               	movwf	??_shiftOut+3
 10575  04EB  3F44               	moviw [4]fsr1
 10576  04EC  00A4               	movwf	??_shiftOut+4
 10577  04ED  3F45               	moviw [5]fsr1
 10578  04EE  00A5               	movwf	??_shiftOut+5
 10579  04EF  3F46               	moviw [6]fsr1
 10580  04F0  00A6               	movwf	??_shiftOut+6
 10581  04F1  3F47               	moviw [7]fsr1
 10582  04F2  00A7               	movwf	??_shiftOut+7
 10583  04F3  302F               	movlw	47
 10584  04F4  00A8               	movwf	??_shiftOut+8
 10585  04F5  0832               	movf	shiftOut@i,w
 10586  04F6  02A8               	subwf	??_shiftOut+8,f
 10587  04F7  3001               	movlw	1
 10588  04F8  0AA8               	incf	??_shiftOut+8,f
 10589  04F9  00A9               	movwf	??_shiftOut+9
 10590  04FA  3000               	movlw	0
 10591  04FB  00AA               	movwf	??_shiftOut+10
 10592  04FC  00AB               	movwf	??_shiftOut+11
 10593  04FD  00AC               	movwf	??_shiftOut+12
 10594  04FE  00AD               	movwf	??_shiftOut+13
 10595  04FF  00AE               	movwf	??_shiftOut+14
 10596  0500  00AF               	movwf	??_shiftOut+15
 10597  0501  00B0               	movwf	??_shiftOut+16
 10598  0502  2D0D               	goto	u3090
 10599  0503                     u3095:
 10600  0503  1003               	clrc
 10601  0504  0020               	movlb	0	; select bank0
 10602  0505  0DA9               	rlf	??_shiftOut+9,f
 10603  0506  0DAA               	rlf	??_shiftOut+10,f
 10604  0507  0DAB               	rlf	??_shiftOut+11,f
 10605  0508  0DAC               	rlf	??_shiftOut+12,f
 10606  0509  0DAD               	rlf	??_shiftOut+13,f
 10607  050A  0DAE               	rlf	??_shiftOut+14,f
 10608  050B  0DAF               	rlf	??_shiftOut+15,f
 10609  050C  0DB0               	rlf	??_shiftOut+16,f
 10610  050D                     u3090:
 10611  050D  0BA8               	decfsz	??_shiftOut+8,f
 10612  050E  2D03               	goto	u3095
 10613  050F                     L9:
 10614  050F  0020               	movlb	0	; select bank0
 10615  0510  0829               	movf	??_shiftOut+9,w
 10616  0511  05A0               	andwf	??_shiftOut,f
 10617  0512  082A               	movf	??_shiftOut+10,w
 10618  0513  05A1               	andwf	??_shiftOut+1,f
 10619  0514  082B               	movf	??_shiftOut+11,w
 10620  0515  05A2               	andwf	??_shiftOut+2,f
 10621  0516  082C               	movf	??_shiftOut+12,w
 10622  0517  05A3               	andwf	??_shiftOut+3,f
 10623  0518  082D               	movf	??_shiftOut+13,w
 10624  0519  05A4               	andwf	??_shiftOut+4,f
 10625  051A  082E               	movf	??_shiftOut+14,w
 10626  051B  05A5               	andwf	??_shiftOut+5,f
 10627  051C  082F               	movf	??_shiftOut+15,w
 10628  051D  05A6               	andwf	??_shiftOut+6,f
 10629  051E  0830               	movf	??_shiftOut+16,w
 10630  051F  05A7               	andwf	??_shiftOut+7,f
 10631  0520  0820               	movf	??_shiftOut,w
 10632  0521  0421               	iorwf	??_shiftOut+1,w
 10633  0522  0422               	iorwf	??_shiftOut+2,w
 10634  0523  0423               	iorwf	??_shiftOut+3,w
 10635  0524  0424               	iorwf	??_shiftOut+4,w
 10636  0525  0425               	iorwf	??_shiftOut+5,w
 10637  0526  0426               	iorwf	??_shiftOut+6,w
 10638  0527  0427               	iorwf	??_shiftOut+7,w
 10639  0528  1903               	skipnz
 10640  0529  2D2D               	goto	l602
 10641                           
 10642                           ;main.c: 313:                 do { LATCbits.LATC6 = 1; } while(0);
 10643  052A  0022               	movlb	2	; select bank2
 10644  052B  170E               	bsf	14,6	;volatile
 10645  052C  2D2F               	goto	l604
 10646  052D                     l602:	
 10647                           ;main.c: 315:                 do { LATCbits.LATC6 = 0; } while(0);
 10648                           
 10649  052D  0022               	movlb	2	; select bank2
 10650  052E  130E               	bcf	14,6	;volatile
 10651  052F                     l604:	
 10652                           ;main.c: 317:         do { LATCbits.LATC7 = 1; } while(0);
 10653                           
 10654  052F  178E               	bsf	14,7	;volatile
 10655                           
 10656                           ;main.c: 318:         do { LATCbits.LATC7 = 0; } while(0);
 10657  0530  138E               	bcf	14,7	;volatile
 10658                           
 10659                           ;main.c: 319:     }
 10660  0531  3001               	movlw	1
 10661  0532  0020               	movlb	0	; select bank0
 10662  0533  07B2               	addwf	shiftOut@i,f
 10663  0534  3000               	movlw	0
 10664  0535  3DB3               	addwfc	shiftOut@i+1,f
 10665  0536  3DB4               	addwfc	shiftOut@i+2,f
 10666  0537  3DB5               	addwfc	shiftOut@i+3,f
 10667  0538  3DB6               	addwfc	shiftOut@i+4,f
 10668  0539  3DB7               	addwfc	shiftOut@i+5,f
 10669  053A  3DB8               	addwfc	shiftOut@i+6,f
 10670  053B  3DB9               	addwfc	shiftOut@i+7,f
 10671  053C  0839               	movf	shiftOut@i+7,w
 10672  053D  1D03               	btfss	3,2
 10673  053E  2D55               	goto	l608
 10674  053F  0838               	movf	shiftOut@i+6,w
 10675  0540  1D03               	btfss	3,2
 10676  0541  2D55               	goto	l608
 10677  0542  0837               	movf	shiftOut@i+5,w
 10678  0543  1D03               	btfss	3,2
 10679  0544  2D55               	goto	l608
 10680  0545  0836               	movf	shiftOut@i+4,w
 10681  0546  1D03               	btfss	3,2
 10682  0547  2D55               	goto	l608
 10683  0548  0835               	movf	shiftOut@i+3,w
 10684  0549  1D03               	btfss	3,2
 10685  054A  2D55               	goto	l608
 10686  054B  0834               	movf	shiftOut@i+2,w
 10687  054C  1D03               	btfss	3,2
 10688  054D  2D55               	goto	l608
 10689  054E  0833               	movf	shiftOut@i+1,w
 10690  054F  1D03               	btfss	3,2
 10691  0550  2D55               	goto	l608
 10692  0551  3030               	movlw	48
 10693  0552  0232               	subwf	shiftOut@i,w
 10694  0553  1C03               	btfss	3,0
 10695  0554  2CB1               	goto	l4401
 10696  0555                     l608:	
 10697                           ;main.c: 320:     do { LATAbits.LATA5 = 1; } while(0);
 10698                           
 10699  0555  0022               	movlb	2	; select bank2
 10700  0556  168C               	bsf	12,5	;volatile
 10701  0557  0008               	return
 10702  0558                     __end_of_shiftOut:
 10703  0558                     __ptext11:	
 10704 ;; *************** function _WDT_Initialize *****************
 10705 ;; Defined at:
 10706 ;;		line 72 in file "mcc_generated_files/mcc.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;		None
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;		None
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      void 
 10713 ;; Registers used:
 10714 ;;		wreg
 10715 ;; Tracked objects:
 10716 ;;		On entry : 1F/4
 10717 ;;		On exit  : 1F/1
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10724 ;;Total ram usage:        0 bytes
 10725 ;; Hardware stack levels used: 1
 10726 ;; Hardware stack levels required when called: 4
 10727 ;; This function calls:
 10728 ;;		Nothing
 10729 ;; This function is called by:
 10730 ;;		_SYSTEM_Initialize
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           
 10734                           
 10735                           ;psect for function _WDT_Initialize
 10736  0558                     _WDT_Initialize:
 10737                           
 10738                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
 10739                           
 10740                           ;incstack = 0
 10741                           ; Regs used in _WDT_Initialize: [wreg]
 10742  0558  3016               	movlw	22
 10743  0559  0021               	movlb	1	; select bank1
 10744  055A  0097               	movwf	23	;volatile
 10745  055B  0008               	return
 10746  055C                     __end_of_WDT_Initialize:
 10747  055C                     __ptext23:	
 10748 ;; *************** function ___awmod *****************
 10749 ;; Defined at:
 10750 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
 10751 ;; Parameters:    Size  Location     Type
 10752 ;;  divisor         2    6[COMMON] int 
 10753 ;;  dividend        2    8[COMMON] int 
 10754 ;; Auto vars:     Size  Location     Type
 10755 ;;  sign            1    1[BANK0 ] unsigned char 
 10756 ;;  counter         1    0[BANK0 ] unsigned char 
 10757 ;; Return value:  Size  Location     Type
 10758 ;;                  2    6[COMMON] int 
 10759 ;; Registers used:
 10760 ;;		wreg, status,2, status,0
 10761 ;; Tracked objects:
 10762 ;;		On entry : 1F/0
 10763 ;;		On exit  : 1F/0
 10764 ;;		Unchanged: 0/0
 10765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10767 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10769 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10770 ;;Total ram usage:        6 bytes
 10771 ;; Hardware stack levels used: 1
 10772 ;; Hardware stack levels required when called: 4
 10773 ;; This function calls:
 10774 ;;		Nothing
 10775 ;; This function is called by:
 10776 ;;		_modulo
 10777 ;; This function uses a non-reentrant model
 10778 ;;
 10779                           
 10780                           
 10781                           ;psect for function ___awmod
 10782  055C                     ___awmod:
 10783                           
 10784                           ;incstack = 0
 10785                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10786  055C  01A1               	clrf	___awmod@sign
 10787  055D  1FF9               	btfss	___awmod@dividend+1,7
 10788  055E  2D66               	goto	l4505
 10789  055F  09F8               	comf	___awmod@dividend,f
 10790  0560  09F9               	comf	___awmod@dividend+1,f
 10791  0561  0AF8               	incf	___awmod@dividend,f
 10792  0562  1903               	skipnz
 10793  0563  0AF9               	incf	___awmod@dividend+1,f
 10794  0564  01A1               	clrf	___awmod@sign
 10795  0565  0AA1               	incf	___awmod@sign,f
 10796  0566                     l4505:
 10797  0566  1FF7               	btfss	___awmod@divisor+1,7
 10798  0567  2D6D               	goto	l4509
 10799  0568  09F6               	comf	___awmod@divisor,f
 10800  0569  09F7               	comf	___awmod@divisor+1,f
 10801  056A  0AF6               	incf	___awmod@divisor,f
 10802  056B  1903               	skipnz
 10803  056C  0AF7               	incf	___awmod@divisor+1,f
 10804  056D                     l4509:
 10805  056D  0876               	movf	___awmod@divisor,w
 10806  056E  0477               	iorwf	___awmod@divisor+1,w
 10807  056F  1903               	btfsc	3,2
 10808  0570  2D88               	goto	l4525
 10809  0571  01A0               	clrf	___awmod@counter
 10810  0572                     L11:
 10811  0572  0AA0               	incf	___awmod@counter,f
 10812  0573  1BF7               	btfsc	___awmod@divisor+1,7
 10813  0574  2D78               	goto	l4517
 10814  0575  35F6               	lslf	___awmod@divisor,f
 10815  0576  0DF7               	rlf	___awmod@divisor+1,f
 10816  0577  2D72               	goto	L11
 10817  0578                     l4517:
 10818  0578  0877               	movf	___awmod@divisor+1,w
 10819  0579  0279               	subwf	___awmod@dividend+1,w
 10820  057A  1D03               	skipz
 10821  057B  2D7E               	goto	u3285
 10822  057C  0876               	movf	___awmod@divisor,w
 10823  057D  0278               	subwf	___awmod@dividend,w
 10824  057E                     u3285:
 10825  057E  1C03               	skipc
 10826  057F  2D84               	goto	l4521
 10827  0580  0876               	movf	___awmod@divisor,w
 10828  0581  02F8               	subwf	___awmod@dividend,f
 10829  0582  0877               	movf	___awmod@divisor+1,w
 10830  0583  3BF9               	subwfb	___awmod@dividend+1,f
 10831  0584                     l4521:
 10832  0584  36F7               	lsrf	___awmod@divisor+1,f
 10833  0585  0CF6               	rrf	___awmod@divisor,f
 10834  0586  0BA0               	decfsz	___awmod@counter,f
 10835  0587  2D78               	goto	l4517
 10836  0588                     l4525:
 10837  0588  0821               	movf	___awmod@sign,w
 10838  0589  1903               	btfsc	3,2
 10839  058A  2D90               	goto	l4529
 10840  058B  09F8               	comf	___awmod@dividend,f
 10841  058C  09F9               	comf	___awmod@dividend+1,f
 10842  058D  0AF8               	incf	___awmod@dividend,f
 10843  058E  1903               	skipnz
 10844  058F  0AF9               	incf	___awmod@dividend+1,f
 10845  0590                     l4529:
 10846  0590  0879               	movf	___awmod@dividend+1,w
 10847  0591  00F7               	movwf	?___awmod+1
 10848  0592  0878               	movf	___awmod@dividend,w
 10849  0593  00F6               	movwf	?___awmod
 10850  0594  0008               	return
 10851  0595                     __end_of___awmod:
 10852  0595                     __ptext3:	
 10853 ;; *************** function _SPI_Open *****************
 10854 ;; Defined at:
 10855 ;;		line 78 in file "mcc_generated_files/spi.c"
 10856 ;; Parameters:    Size  Location     Type
 10857 ;;  spiUniqueCon    1    wreg     enum E355
 10858 ;; Auto vars:     Size  Location     Type
 10859 ;;  spiUniqueCon    1    5[COMMON] enum E355
 10860 ;; Return value:  Size  Location     Type
 10861 ;;                  1    wreg      _Bool 
 10862 ;; Registers used:
 10863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 10864 ;; Tracked objects:
 10865 ;;		On entry : 1F/1
 10866 ;;		On exit  : 1F/4
 10867 ;;		Unchanged: 0/0
 10868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10871 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10872 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;Total ram usage:        4 bytes
 10874 ;; Hardware stack levels used: 1
 10875 ;; Hardware stack levels required when called: 4
 10876 ;; This function calls:
 10877 ;;		Nothing
 10878 ;; This function is called by:
 10879 ;;		_EINK_open
 10880 ;; This function uses a non-reentrant model
 10881 ;;
 10882                           
 10883                           
 10884                           ;psect for function _SPI_Open
 10885  0595                     _SPI_Open:
 10886                           
 10887                           ;incstack = 0
 10888                           ; Regs used in _SPI_Open: [wreg-fsr0h+status,2+status,0+pclath]
 10889                           ;SPI_Open@spiUniqueConfiguration stored from wreg
 10890  0595  00F5               	movwf	SPI_Open@spiUniqueConfiguration
 10891                           
 10892                           ;mcc_generated_files/spi.c: 78: _Bool SPI_Open(spi_modes_t spiUniqueConfiguration);mcc_g
      +                          enerated_files/spi.c: 79: {;mcc_generated_files/spi.c: 80:     if(!SSP1CON1bits.SSPEN)
 10893  0596  0024               	movlb	4	; select bank4
 10894  0597  1A95               	btfsc	21,5	;volatile
 10895  0598  3400               	retlw	0
 10896                           
 10897                           ;mcc_generated_files/spi.c: 81:     {;mcc_generated_files/spi.c: 82:         SSP1STAT = 
      +                          spi_configuration[spiUniqueConfiguration].stat;
 10898  0599  0875               	movf	SPI_Open@spiUniqueConfiguration,w
 10899  059A  00F2               	movwf	??_SPI_Open
 10900  059B  3024               	movlw	low ((_spi_configuration+1)| (0+32768))
 10901  059C  01F3               	clrf	??_SPI_Open+1
 10902  059D  35F2               	lslf	??_SPI_Open,f
 10903  059E  0DF3               	rlf	??_SPI_Open+1,f
 10904  059F  35F2               	lslf	??_SPI_Open,f
 10905  05A0  0DF3               	rlf	??_SPI_Open+1,f
 10906  05A1  0772               	addwf	??_SPI_Open,w
 10907  05A2  0084               	movwf	4
 10908  05A3  3098               	movlw	high ((_spi_configuration+1)| (0+32768))
 10909  05A4  3D73               	addwfc	??_SPI_Open+1,w
 10910  05A5  0085               	movwf	5
 10911  05A6  0800               	movf	0,w	;code access
 10912  05A7  0094               	movwf	20	;volatile
 10913                           
 10914                           ;mcc_generated_files/spi.c: 83:         SSP1CON1 = spi_configuration[spiUniqueConfigurat
      +                          ion].con1;
 10915  05A8  0875               	movf	SPI_Open@spiUniqueConfiguration,w
 10916  05A9  00F2               	movwf	??_SPI_Open
 10917  05AA  3023               	movlw	low (_spi_configuration| (0+32768))
 10918  05AB  01F3               	clrf	??_SPI_Open+1
 10919  05AC  35F2               	lslf	??_SPI_Open,f
 10920  05AD  0DF3               	rlf	??_SPI_Open+1,f
 10921  05AE  35F2               	lslf	??_SPI_Open,f
 10922  05AF  0DF3               	rlf	??_SPI_Open+1,f
 10923  05B0  0772               	addwf	??_SPI_Open,w
 10924  05B1  0084               	movwf	4
 10925  05B2  3098               	movlw	high (_spi_configuration| (0+32768))
 10926  05B3  3D73               	addwfc	??_SPI_Open+1,w
 10927  05B4  0085               	movwf	5
 10928  05B5  0800               	movf	0,w	;code access
 10929  05B6  0095               	movwf	21	;volatile
 10930                           
 10931                           ;mcc_generated_files/spi.c: 84:         SSP1CON2 = 0x00;
 10932  05B7  0196               	clrf	22	;volatile
 10933                           
 10934                           ;mcc_generated_files/spi.c: 85:         SSP1ADD = spi_configuration[spiUniqueConfigurati
      +                          on].add;
 10935  05B8  0875               	movf	SPI_Open@spiUniqueConfiguration,w
 10936  05B9  00F2               	movwf	??_SPI_Open
 10937  05BA  3025               	movlw	low ((_spi_configuration+2)| (0+32768))
 10938  05BB  01F3               	clrf	??_SPI_Open+1
 10939  05BC  35F2               	lslf	??_SPI_Open,f
 10940  05BD  0DF3               	rlf	??_SPI_Open+1,f
 10941  05BE  35F2               	lslf	??_SPI_Open,f
 10942  05BF  0DF3               	rlf	??_SPI_Open+1,f
 10943  05C0  0772               	addwf	??_SPI_Open,w
 10944  05C1  0084               	movwf	4
 10945  05C2  3098               	movlw	high ((_spi_configuration+2)| (0+32768))
 10946  05C3  3D73               	addwfc	??_SPI_Open+1,w
 10947  05C4  0085               	movwf	5
 10948  05C5  0800               	movf	0,w	;code access
 10949  05C6  0092               	movwf	18	;volatile
 10950                           
 10951                           ;mcc_generated_files/spi.c: 86:         TRISBbits.TRISB6 = spi_configuration[spiUniqueCo
      +                          nfiguration].operation;
 10952  05C7  0875               	movf	SPI_Open@spiUniqueConfiguration,w
 10953  05C8  00F2               	movwf	??_SPI_Open
 10954  05C9  3026               	movlw	low ((_spi_configuration+3)| (0+32768))
 10955  05CA  01F3               	clrf	??_SPI_Open+1
 10956  05CB  35F2               	lslf	??_SPI_Open,f
 10957  05CC  0DF3               	rlf	??_SPI_Open+1,f
 10958  05CD  35F2               	lslf	??_SPI_Open,f
 10959  05CE  0DF3               	rlf	??_SPI_Open+1,f
 10960  05CF  0772               	addwf	??_SPI_Open,w
 10961  05D0  0084               	movwf	4
 10962  05D1  3098               	movlw	high ((_spi_configuration+3)| (0+32768))
 10963  05D2  3D73               	addwfc	??_SPI_Open+1,w
 10964  05D3  0085               	movwf	5
 10965  05D4  0800               	movf	0,w	;code access
 10966  05D5  00F4               	movwf	??_SPI_Open+2
 10967  05D6  0EF4               	swapf	??_SPI_Open+2,f
 10968  05D7  0DF4               	rlf	??_SPI_Open+2,f
 10969  05D8  0DF4               	rlf	??_SPI_Open+2,f
 10970  05D9  0021               	movlb	1	; select bank1
 10971  05DA  080D               	movf	13,w	;volatile
 10972  05DB  0674               	xorwf	??_SPI_Open+2,w
 10973  05DC  39BF               	andlw	-65
 10974  05DD  0674               	xorwf	??_SPI_Open+2,w
 10975  05DE  008D               	movwf	13	;volatile
 10976                           
 10977                           ;mcc_generated_files/spi.c: 87:         SSP1CON1bits.SSPEN = 1;
 10978  05DF  0024               	movlb	4	; select bank4
 10979  05E0  1695               	bsf	21,5	;volatile
 10980                           
 10981                           ;mcc_generated_files/spi.c: 88:         return 1;
 10982  05E1  3401               	retlw	1
 10983  05E2                     __end_of_SPI_Open:	
 10984                           ;mcc_generated_files/spi.c: 90:     return 0;
 10985                           
 10986                           
 10987                           	psect	bssCOMMON
 10988  007A                     __pbssCOMMON:
 10989  007A                     _button_clicked:
 10990  007A                     	ds	1
 10991  007B                     _switch_pos:
 10992  007B                     	ds	1
 10993                           
 10994                           	psect	bssBANK1
 10995  00C2                     __pbssBANK1:
 10996  00C2                     _coil_conf:
 10997  00C2                     	ds	8
 10998  00CA                     read_rotary@store:
 10999  00CA                     	ds	2
 11000  00CC                     _refresh_timer:
 11001  00CC                     	ds	2
 11002  00CE                     _click_timer:
 11003  00CE                     	ds	2
 11004  00D0                     _TMR1_InterruptHandler:
 11005  00D0                     	ds	2
 11006  00D2                     _timer1ReloadVal:
 11007  00D2                     	ds	2
 11008  00D4                     _IOCAF0_InterruptHandler:
 11009  00D4                     	ds	2
 11010  00D6                     _partial_refresh_count:
 11011  00D6                     	ds	1
 11012  00D7                     RotaryEncoderEventHandler@val:
 11013  00D7                     	ds	1
 11014  00D8                     read_rotary@prevNextCode:
 11015  00D8                     	ds	1
 11016  00D9                     _wake_up:
 11017  00D9                     	ds	1
 11018  00DA                     _sleeping:
 11019  00DA                     	ds	1
 11020  00DB                     _click_type:
 11021  00DB                     	ds	1
 11022  00DC                     _prev_switch_pos:
 11023  00DC                     	ds	1
 11024                           
 11025                           	psect	dataBANK1
 11026  00A0                     __pdataBANK1:
 11027  00A0                     main@F9492:
 11028  00A0                     	ds	4
 11029  00A4                     main@F9490:
 11030  00A4                     	ds	4
 11031  00A8                     main@F9488:
 11032  00A8                     	ds	4
 11033  00AC                     _time_to_refresh:
 11034  00AC                     	ds	1
 11035  00AD                     _selection_index:
 11036  00AD                     	ds	1
 11037  00AE                     _saved_pc:
 11038  00AE                     	ds	20
 11039                           
 11040                           	psect	dataBANK2
 11041  014B                     __pdataBANK2:
 11042  014B                     read_rotary@rot_enc_table:
 11043  014B                     	ds	16
 11044  015B                     _buffer:
 11045  015B                     	ds	16
 11046                           
 11047                           	psect	inittext
 11048  0801                     init_ram:
 11049  0801  00FE               	movwf	126
 11050  0802                     initloop:
 11051  0802  0012               	moviw fsr0++
 11052  0803  001E               	movwi fsr1++
 11053  0804  3001               	movlw	1
 11054  0805  02FE               	subwf	126,f
 11055  0806  3000               	movlw	0
 11056  0807  3BFF               	subwfb	127,f
 11057  0808  087F               	movf	127,w
 11058  0809  047E               	iorwf	126,w
 11059  080A  1903               	btfsc	3,2
 11060  080B  3400               	retlw	0
 11061  080C  2802               	goto	initloop
 11062                           
 11063                           	psect	clrtext
 11064  1F55                     clear_ram0:	
 11065                           ;	Called with FSR0 containing the base address, and
 11066                           ;	btemp/btemp+1 has the size to clear
 11067                           
 11068  1F55  0064               	clrwdt	;clear the watchdog before getting into this loop
 11069  1F56                     clrloop0:
 11070  1F56  3001               	movlw	1
 11071  1F57  0180               	clrf	0	;clear RAM location pointed to by FSR
 11072  1F58  3101               	addfsr 0,1
 11073  1F59  02FE               	subwf	126,f
 11074  1F5A  3000               	movlw	0
 11075  1F5B  3BFF               	subwfb	127,f
 11076  1F5C  087F               	movf	127,w
 11077  1F5D  047E               	iorwf	126,w
 11078  1F5E  1903               	btfsc	3,2
 11079  1F5F  3400               	retlw	0	;all done for this memory range, return
 11080  1F60  2F56               	goto	clrloop0	;have we reached the end yet?
 11081                           
 11082                           	psect	cstackBANK2
 11083  0120                     __pcstackBANK2:
 11084  0120                     ImageFromPickupConf@need_to_draw_row:
 11085                           
 11086                           ; 4 bytes @ 0x0
 11087  0120                     	ds	4
 11088  0124                     _ImageFromPickupConf$1279:
 11089                           
 11090                           ; 2 bytes @ 0x4
 11091  0124                     	ds	2
 11092  0126                     _ImageFromPickupConf$1280:
 11093                           
 11094                           ; 2 bytes @ 0x6
 11095  0126                     	ds	2
 11096  0128                     _ImageFromPickupConf$1281:
 11097                           
 11098                           ; 2 bytes @ 0x8
 11099  0128                     	ds	2
 11100  012A                     ImageFromPickupConf@arrow_type:
 11101                           
 11102                           ; 8 bytes @ 0xA
 11103  012A                     	ds	8
 11104  0132                     _ImageFromPickupConf$1283:
 11105                           
 11106                           ; 1 bytes @ 0x12
 11107  0132                     	ds	1
 11108  0133                     _ImageFromPickupConf$1284:
 11109                           
 11110                           ; 1 bytes @ 0x13
 11111  0133                     	ds	1
 11112  0134                     _ImageFromPickupConf$1285:
 11113                           
 11114                           ; 1 bytes @ 0x14
 11115  0134                     	ds	1
 11116  0135                     _ImageFromPickupConf$1287:
 11117                           
 11118                           ; 1 bytes @ 0x15
 11119  0135                     	ds	1
 11120  0136                     _ImageFromPickupConf$1288:
 11121                           
 11122                           ; 1 bytes @ 0x16
 11123  0136                     	ds	1
 11124  0137                     _ImageFromPickupConf$1289:
 11125                           
 11126                           ; 1 bytes @ 0x17
 11127  0137                     	ds	1
 11128  0138                     ImageFromPickupConf@need_to_skip_row:
 11129                           
 11130                           ; 4 bytes @ 0x18
 11131  0138                     	ds	4
 11132  013C                     ImageFromPickupConf@pickup_indexes:
 11133                           
 11134                           ; 4 bytes @ 0x1C
 11135  013C                     	ds	4
 11136  0140                     _ImageFromPickupConf$2142:
 11137                           
 11138                           ; 2 bytes @ 0x20
 11139  0140                     	ds	2
 11140  0142                     ImageFromPickupConf@max_index:
 11141                           
 11142                           ; 1 bytes @ 0x22
 11143  0142                     	ds	1
 11144  0143                     ImageFromPickupConf@index:
 11145                           
 11146                           ; 1 bytes @ 0x23
 11147  0143                     	ds	1
 11148  0144                     ImageFromPickupConf@start_y:
 11149                           
 11150                           ; 2 bytes @ 0x24
 11151  0144                     	ds	2
 11152  0146                     ImageFromPickupConf@i:
 11153                           
 11154                           ; 2 bytes @ 0x26
 11155  0146                     	ds	2
 11156  0148                     ImageFromPickupConf@start_x:
 11157                           
 11158                           ; 2 bytes @ 0x28
 11159  0148                     	ds	2
 11160  014A                     ImageFromPickupConf@pc:
 11161                           
 11162                           ; 1 bytes @ 0x2A
 11163  014A                     	ds	1
 11164                           
 11165                           	psect	cstackCOMMON
 11166  0070                     __pcstackCOMMON:
 11167  0070                     ?_EINK_open:
 11168  0070                     ?_SPI_Open:	
 11169                           ; 1 bytes @ 0x0
 11170                           
 11171  0070                     ?_SPI_Initialize:	
 11172                           ; 1 bytes @ 0x0
 11173                           
 11174  0070                     ?_PIN_MANAGER_Initialize:	
 11175                           ; 1 bytes @ 0x0
 11176                           
 11177  0070                     ?_OSCILLATOR_Initialize:	
 11178                           ; 1 bytes @ 0x0
 11179                           
 11180  0070                     ?_WDT_Initialize:	
 11181                           ; 1 bytes @ 0x0
 11182                           
 11183  0070                     ?_TMR1_Initialize:	
 11184                           ; 1 bytes @ 0x0
 11185                           
 11186  0070                     ?_IOCAF0_DefaultInterruptHandler:	
 11187                           ; 1 bytes @ 0x0
 11188                           
 11189  0070                     ??_IOCAF0_DefaultInterruptHandler:	
 11190                           ; 1 bytes @ 0x0
 11191                           
 11192  0070                     ?_IOCAF0_ISR:	
 11193                           ; 1 bytes @ 0x0
 11194                           
 11195  0070                     ??_IOCAF0_ISR:	
 11196                           ; 1 bytes @ 0x0
 11197                           
 11198  0070                     ?_TMR1_DefaultInterruptHandler:	
 11199                           ; 1 bytes @ 0x0
 11200                           
 11201  0070                     ??_TMR1_DefaultInterruptHandler:	
 11202                           ; 1 bytes @ 0x0
 11203                           
 11204  0070                     ?_ClearFrameMemory:	
 11205                           ; 1 bytes @ 0x0
 11206                           
 11207  0070                     ?_DisplayFrame:	
 11208                           ; 1 bytes @ 0x0
 11209                           
 11210  0070                     ?_SleepDisplay:	
 11211                           ; 1 bytes @ 0x0
 11212                           
 11213  0070                     ?_ButtonEventReset:	
 11214                           ; 1 bytes @ 0x0
 11215                           
 11216  0070                     ?_sendCoilsConfiguration:	
 11217                           ; 1 bytes @ 0x0
 11218                           
 11219  0070                     ?_ResetDisplay:	
 11220                           ; 1 bytes @ 0x0
 11221                           
 11222  0070                     ?_SendCommand:	
 11223                           ; 1 bytes @ 0x0
 11224                           
 11225  0070                     ?_SendData:	
 11226                           ; 1 bytes @ 0x0
 11227                           
 11228  0070                     ?_spi_master_open:	
 11229                           ; 1 bytes @ 0x0
 11230                           
 11231  0070                     ?_SYSTEM_Initialize:	
 11232                           ; 1 bytes @ 0x0
 11233                           
 11234  0070                     ?_PIN_MANAGER_IOC:	
 11235                           ; 1 bytes @ 0x0
 11236                           
 11237  0070                     ??_PIN_MANAGER_IOC:	
 11238                           ; 1 bytes @ 0x0
 11239                           
 11240  0070                     ?_TMR1_StartTimer:	
 11241                           ; 1 bytes @ 0x0
 11242                           
 11243  0070                     ?_TMR1_WriteTimer:	
 11244                           ; 1 bytes @ 0x0
 11245                           
 11246  0070                     ?_TMR1_ISR:	
 11247                           ; 1 bytes @ 0x0
 11248                           
 11249  0070                     ?_INTERRUPT_InterruptManager:	
 11250                           ; 1 bytes @ 0x0
 11251                           
 11252  0070                     ?_ReadConfigurationsFromMemory:	
 11253                           ; 1 bytes @ 0x0
 11254                           
 11255  0070                     ?_WriteConfigurationToMemory:	
 11256                           ; 1 bytes @ 0x0
 11257                           
 11258  0070                     ?_GotoSleep:	
 11259                           ; 1 bytes @ 0x0
 11260                           
 11261  0070                     ?_WakeUp:	
 11262                           ; 1 bytes @ 0x0
 11263                           
 11264  0070                     ?_TMR1_CallBack:	
 11265                           ; 1 bytes @ 0x0
 11266                           
 11267  0070                     ??_TMR1_CallBack:	
 11268                           ; 1 bytes @ 0x0
 11269                           
 11270  0070                     ?_Button_Callback:	
 11271                           ; 1 bytes @ 0x0
 11272                           
 11273  0070                     ??_Button_Callback:	
 11274                           ; 1 bytes @ 0x0
 11275                           
 11276  0070                     ?_ButtonCaseHandler:	
 11277                           ; 1 bytes @ 0x0
 11278                           
 11279  0070                     ?_ButtonEventHandler:	
 11280                           ; 1 bytes @ 0x0
 11281                           
 11282  0070                     ?_SwitchEventHandler:	
 11283                           ; 1 bytes @ 0x0
 11284                           
 11285  0070                     ?_DisplayRefreshHandler:	
 11286                           ; 1 bytes @ 0x0
 11287                           
 11288  0070                     ?_read_rotary:	
 11289                           ; 1 bytes @ 0x0
 11290                           
 11291  0070                     ?_RotaryEncoderEventHandler:	
 11292                           ; 1 bytes @ 0x0
 11293                           
 11294  0070                     ?_WaitUntilIdle:	
 11295                           ; 1 bytes @ 0x0
 11296                           
 11297  0070                     ?__unlock:	
 11298                           ; 1 bytes @ 0x0
 11299                           
 11300  0070                     ?_main:	
 11301                           ; 1 bytes @ 0x0
 11302                           
 11303  0070                     TMR1_WriteTimer@timerVal:	
 11304                           ; 2 bytes @ 0x0
 11305                           
 11306                           
 11307                           ; 2 bytes @ 0x0
 11308  0070                     	ds	2
 11309  0072                     ?_SPI_ExchangeByte:
 11310  0072                     ??_SPI_Open:	
 11311                           ; 1 bytes @ 0x2
 11312                           
 11313  0072                     ?_DELAY_milliseconds:	
 11314                           ; 1 bytes @ 0x2
 11315                           
 11316  0072                     ??_SPI_Initialize:	
 11317                           ; 1 bytes @ 0x2
 11318                           
 11319  0072                     ??_OSCILLATOR_Initialize:	
 11320                           ; 1 bytes @ 0x2
 11321                           
 11322  0072                     ??_WDT_Initialize:	
 11323                           ; 1 bytes @ 0x2
 11324                           
 11325  0072                     ?_IOCAF0_SetInterruptHandler:	
 11326                           ; 1 bytes @ 0x2
 11327                           
 11328  0072                     ?_TMR1_SetInterruptHandler:	
 11329                           ; 1 bytes @ 0x2
 11330                           
 11331  0072                     ??_ButtonEventReset:	
 11332                           ; 1 bytes @ 0x2
 11333                           
 11334  0072                     ??_TMR1_StartTimer:	
 11335                           ; 1 bytes @ 0x2
 11336                           
 11337  0072                     ??_TMR1_WriteTimer:	
 11338                           ; 1 bytes @ 0x2
 11339                           
 11340  0072                     ??_TMR1_ISR:	
 11341                           ; 1 bytes @ 0x2
 11342                           
 11343  0072                     ??_INTERRUPT_InterruptManager:	
 11344                           ; 1 bytes @ 0x2
 11345                           
 11346  0072                     ??_ButtonCaseHandler:	
 11347                           ; 1 bytes @ 0x2
 11348                           
 11349  0072                     ??_read_rotary:	
 11350                           ; 1 bytes @ 0x2
 11351                           
 11352  0072                     ?_shiftOut:	
 11353                           ; 1 bytes @ 0x2
 11354                           
 11355  0072                     ??__unlock:	
 11356                           ; 1 bytes @ 0x2
 11357                           
 11358  0072                     ?_FLASH_write:	
 11359                           ; 1 bytes @ 0x2
 11360                           
 11361  0072                     ?_FLASH_erase:	
 11362                           ; 1 bytes @ 0x2
 11363                           
 11364  0072                     ?___abmod:	
 11365                           ; 1 bytes @ 0x2
 11366                           
 11367  0072                     ?_FLASH_read:	
 11368                           ; 1 bytes @ 0x2
 11369                           
 11370  0072                     ?___wmul:	
 11371                           ; 2 bytes @ 0x2
 11372                           
 11373  0072                     SPI_ExchangeByte@data:	
 11374                           ; 2 bytes @ 0x2
 11375                           
 11376  0072                     ___abmod@divisor:	
 11377                           ; 1 bytes @ 0x2
 11378                           
 11379  0072                     IOCAF0_SetInterruptHandler@InterruptHandler:	
 11380                           ; 1 bytes @ 0x2
 11381                           
 11382  0072                     DELAY_milliseconds@milliseconds:	
 11383                           ; 2 bytes @ 0x2
 11384                           
 11385  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
 11386                           ; 2 bytes @ 0x2
 11387                           
 11388  0072                     FLASH_read@address:	
 11389                           ; 2 bytes @ 0x2
 11390                           
 11391  0072                     FLASH_write@address:	
 11392                           ; 2 bytes @ 0x2
 11393                           
 11394  0072                     FLASH_erase@address:	
 11395                           ; 2 bytes @ 0x2
 11396                           
 11397  0072                     ___wmul@multiplier:	
 11398                           ; 2 bytes @ 0x2
 11399                           
 11400  0072                     shiftOut@val:	
 11401                           ; 2 bytes @ 0x2
 11402                           
 11403                           
 11404                           ; 8 bytes @ 0x2
 11405  0072                     	ds	1
 11406  0073                     ??_SPI_ExchangeByte:
 11407  0073                     ??_SendCommand:	
 11408                           ; 1 bytes @ 0x3
 11409                           
 11410  0073                     ??_SendData:	
 11411                           ; 1 bytes @ 0x3
 11412                           
 11413  0073                     ??___abmod:	
 11414                           ; 1 bytes @ 0x3
 11415                           
 11416  0073                     SendCommand@command:	
 11417                           ; 1 bytes @ 0x3
 11418                           
 11419  0073                     SendData@data:	
 11420                           ; 1 bytes @ 0x3
 11421                           
 11422  0073                     ___abmod@counter:	
 11423                           ; 1 bytes @ 0x3
 11424                           
 11425                           
 11426                           ; 1 bytes @ 0x3
 11427  0073                     	ds	1
 11428  0074                     ??_DELAY_milliseconds:
 11429  0074                     ??_PIN_MANAGER_Initialize:	
 11430                           ; 1 bytes @ 0x4
 11431                           
 11432  0074                     ??_TMR1_Initialize:	
 11433                           ; 1 bytes @ 0x4
 11434                           
 11435  0074                     ??_IOCAF0_SetInterruptHandler:	
 11436                           ; 1 bytes @ 0x4
 11437                           
 11438  0074                     ??_TMR1_SetInterruptHandler:	
 11439                           ; 1 bytes @ 0x4
 11440                           
 11441  0074                     ?_HEFLASH_readBlock:	
 11442                           ; 1 bytes @ 0x4
 11443                           
 11444  0074                     ??_SleepDisplay:	
 11445                           ; 1 bytes @ 0x4
 11446                           
 11447  0074                     ??_ResetDisplay:	
 11448                           ; 1 bytes @ 0x4
 11449                           
 11450  0074                     ?_SetLut:	
 11451                           ; 1 bytes @ 0x4
 11452                           
 11453  0074                     ??_SetMemoryArea:	
 11454                           ; 1 bytes @ 0x4
 11455                           
 11456  0074                     ?_SetMemoryPointer:	
 11457                           ; 1 bytes @ 0x4
 11458                           
 11459  0074                     ??_SYSTEM_Initialize:	
 11460                           ; 1 bytes @ 0x4
 11461                           
 11462  0074                     ??_WaitUntilIdle:	
 11463                           ; 1 bytes @ 0x4
 11464                           
 11465  0074                     ??_FLASH_read:	
 11466                           ; 1 bytes @ 0x4
 11467                           
 11468  0074                     ??_FLASH_erase:	
 11469                           ; 1 bytes @ 0x4
 11470                           
 11471  0074                     FLASH_erase@temp:	
 11472                           ; 1 bytes @ 0x4
 11473                           
 11474  0074                     HEFLASH_readBlock@radd:	
 11475                           ; 1 bytes @ 0x4
 11476                           
 11477  0074                     ___abmod@sign:	
 11478                           ; 1 bytes @ 0x4
 11479                           
 11480  0074                     SetLut@lut:	
 11481                           ; 1 bytes @ 0x4
 11482                           
 11483  0074                     SetMemoryPointer@x:	
 11484                           ; 2 bytes @ 0x4
 11485                           
 11486  0074                     FLASH_write@data:	
 11487                           ; 2 bytes @ 0x4
 11488                           
 11489  0074                     ___wmul@multiplicand:	
 11490                           ; 2 bytes @ 0x4
 11491                           
 11492                           
 11493                           ; 2 bytes @ 0x4
 11494  0074                     	ds	1
 11495  0075                     SPI_Open@spiUniqueConfiguration:
 11496  0075                     HEFLASH_readBlock@count:	
 11497                           ; 1 bytes @ 0x5
 11498                           
 11499  0075                     ___abmod@dividend:	
 11500                           ; 1 bytes @ 0x5
 11501                           
 11502                           
 11503                           ; 1 bytes @ 0x5
 11504  0075                     	ds	1
 11505  0076                     ??_EINK_open:
 11506  0076                     ??_HEFLASH_readBlock:	
 11507                           ; 1 bytes @ 0x6
 11508                           
 11509  0076                     ??_SetLut:	
 11510                           ; 1 bytes @ 0x6
 11511                           
 11512  0076                     ??_spi_master_open:	
 11513                           ; 1 bytes @ 0x6
 11514                           
 11515  0076                     ??___wmul:	
 11516                           ; 1 bytes @ 0x6
 11517                           
 11518  0076                     ?___awmod:	
 11519                           ; 1 bytes @ 0x6
 11520                           
 11521  0076                     FLASH_write@latch:	
 11522                           ; 2 bytes @ 0x6
 11523                           
 11524  0076                     HEFLASH_readBlock@buffer:	
 11525                           ; 1 bytes @ 0x6
 11526                           
 11527  0076                     SetMemoryPointer@y:	
 11528                           ; 1 bytes @ 0x6
 11529                           
 11530  0076                     ___wmul@product:	
 11531                           ; 2 bytes @ 0x6
 11532                           
 11533  0076                     ___awmod@divisor:	
 11534                           ; 2 bytes @ 0x6
 11535                           
 11536                           
 11537                           ; 2 bytes @ 0x6
 11538  0076                     	ds	1
 11539  0077                     ??_FLASH_write:
 11540  0077                     FLASH_write@temp:	
 11541                           ; 1 bytes @ 0x7
 11542                           
 11543  0077                     SetLut@i:	
 11544                           ; 1 bytes @ 0x7
 11545                           
 11546  0077                     HEFLASH_readBlock@add:	
 11547                           ; 2 bytes @ 0x7
 11548                           
 11549                           
 11550                           ; 2 bytes @ 0x7
 11551  0077                     	ds	1
 11552  0078                     ?_HEFLASH_writeBlock:
 11553  0078                     ??_SetMemoryPointer:	
 11554                           ; 1 bytes @ 0x8
 11555                           
 11556  0078                     spi_master_open@config:	
 11557                           ; 1 bytes @ 0x8
 11558                           
 11559  0078                     HEFLASH_writeBlock@buffer:	
 11560                           ; 1 bytes @ 0x8
 11561                           
 11562  0078                     ___awmod@dividend:	
 11563                           ; 1 bytes @ 0x8
 11564                           
 11565                           
 11566                           ; 2 bytes @ 0x8
 11567  0078                     	ds	1
 11568  0079                     ??_InitDisplay:
 11569  0079                     ??_DisplayFrame:	
 11570                           ; 1 bytes @ 0x9
 11571                           
 11572  0079                     ??_ReadConfigurationsFromMemory:	
 11573                           ; 1 bytes @ 0x9
 11574                           
 11575  0079                     HEFLASH_writeBlock@count:	
 11576                           ; 1 bytes @ 0x9
 11577                           
 11578                           
 11579                           ; 1 bytes @ 0x9
 11580  0079                     	ds	1
 11581  007A                     ??_HEFLASH_writeBlock:
 11582  007A                     ??_ClearFrameMemory:	
 11583                           ; 1 bytes @ 0xA
 11584                           
 11585  007A                     ??_ClearFrameMemoryPartial:	
 11586                           ; 1 bytes @ 0xA
 11587                           
 11588  007A                     ??_WriteConfigurationToMemory:	
 11589                           ; 1 bytes @ 0xA
 11590                           
 11591  007A                     ??_GotoSleep:	
 11592                           ; 1 bytes @ 0xA
 11593                           
 11594  007A                     ??_WakeUp:	
 11595                           ; 1 bytes @ 0xA
 11596                           
 11597  007A                     ??_DisplayRefreshHandler:	
 11598                           ; 1 bytes @ 0xA
 11599                           
 11600  007A                     ??___awmod:	
 11601                           ; 1 bytes @ 0xA
 11602                           
 11603                           
 11604                           	psect	cstackBANK0
 11605  0020                     __pcstackBANK0:	
 11606                           ; 1 bytes @ 0xA
 11607                           
 11608  0020                     ?_InitDisplay:
 11609  0020                     ?_SetMemoryArea:	
 11610                           ; 1 bytes @ 0x0
 11611                           
 11612  0020                     ??_shiftOut:	
 11613                           ; 1 bytes @ 0x0
 11614                           
 11615  0020                     HEFLASH_writeBlock@radd:	
 11616                           ; 1 bytes @ 0x0
 11617                           
 11618  0020                     ___awmod@counter:	
 11619                           ; 1 bytes @ 0x0
 11620                           
 11621  0020                     InitDisplay@lut:	
 11622                           ; 1 bytes @ 0x0
 11623                           
 11624  0020                     SetMemoryArea@x_start:	
 11625                           ; 2 bytes @ 0x0
 11626                           
 11627                           
 11628                           ; 2 bytes @ 0x0
 11629  0020                     	ds	1
 11630  0021                     ___awmod@sign:
 11631  0021                     HEFLASH_writeBlock@add:	
 11632                           ; 1 bytes @ 0x1
 11633                           
 11634                           
 11635                           ; 2 bytes @ 0x1
 11636  0021                     	ds	1
 11637  0022                     ?_modulo:
 11638  0022                     modulo@N:	
 11639                           ; 1 bytes @ 0x2
 11640                           
 11641  0022                     SetMemoryArea@y_start:	
 11642                           ; 1 bytes @ 0x2
 11643                           
 11644                           
 11645                           ; 2 bytes @ 0x2
 11646  0022                     	ds	1
 11647  0023                     ??_modulo:
 11648                           
 11649                           ; 1 bytes @ 0x3
 11650  0023                     	ds	1
 11651  0024                     SetMemoryArea@x_end:
 11652                           
 11653                           ; 2 bytes @ 0x4
 11654  0024                     	ds	2
 11655  0026                     SetMemoryArea@y_end:
 11656                           
 11657                           ; 2 bytes @ 0x6
 11658  0026                     	ds	1
 11659  0027                     modulo@x:
 11660                           
 11661                           ; 1 bytes @ 0x7
 11662  0027                     	ds	1
 11663  0028                     ?_ClearFrameMemoryPartial:
 11664  0028                     ?_SetFrameMemoryPartial:	
 11665                           ; 1 bytes @ 0x8
 11666                           
 11667  0028                     ClearFrameMemory@color:	
 11668                           ; 1 bytes @ 0x8
 11669                           
 11670  0028                     SetFrameMemoryPartial@image_buffer:	
 11671                           ; 1 bytes @ 0x8
 11672                           
 11673  0028                     ClearFrameMemoryPartial@x_start:	
 11674                           ; 2 bytes @ 0x8
 11675                           
 11676                           
 11677                           ; 2 bytes @ 0x8
 11678  0028                     	ds	1
 11679  0029                     ClearFrameMemory@i:
 11680                           
 11681                           ; 2 bytes @ 0x9
 11682  0029                     	ds	1
 11683  002A                     SetFrameMemoryPartial@x:
 11684  002A                     ClearFrameMemoryPartial@y_start:	
 11685                           ; 2 bytes @ 0xA
 11686                           
 11687                           
 11688                           ; 2 bytes @ 0xA
 11689  002A                     	ds	2
 11690  002C                     SetFrameMemoryPartial@y:
 11691  002C                     ClearFrameMemoryPartial@x_end:	
 11692                           ; 2 bytes @ 0xC
 11693                           
 11694                           
 11695                           ; 2 bytes @ 0xC
 11696  002C                     	ds	2
 11697  002E                     SetFrameMemoryPartial@image_width:
 11698  002E                     ClearFrameMemoryPartial@y_end:	
 11699                           ; 2 bytes @ 0xE
 11700                           
 11701                           
 11702                           ; 2 bytes @ 0xE
 11703  002E                     	ds	2
 11704  0030                     ClearFrameMemoryPartial@color:
 11705  0030                     SetFrameMemoryPartial@image_height:	
 11706                           ; 1 bytes @ 0x10
 11707                           
 11708                           
 11709                           ; 2 bytes @ 0x10
 11710  0030                     	ds	1
 11711  0031                     shiftOut@bitOrder:
 11712  0031                     ClearFrameMemoryPartial@i:	
 11713                           ; 1 bytes @ 0x11
 11714                           
 11715                           
 11716                           ; 2 bytes @ 0x11
 11717  0031                     	ds	1
 11718  0032                     SetFrameMemoryPartial@invert_color:
 11719  0032                     shiftOut@i:	
 11720                           ; 1 bytes @ 0x12
 11721                           
 11722                           
 11723                           ; 8 bytes @ 0x12
 11724  0032                     	ds	1
 11725  0033                     ??_SetFrameMemoryPartial:
 11726  0033                     ?_ClearLine:	
 11727                           ; 1 bytes @ 0x13
 11728                           
 11729  0033                     ClearLine@start_x:	
 11730                           ; 1 bytes @ 0x13
 11731                           
 11732                           
 11733                           ; 2 bytes @ 0x13
 11734  0033                     	ds	2
 11735  0035                     ClearLine@max_character:
 11736                           
 11737                           ; 1 bytes @ 0x15
 11738  0035                     	ds	1
 11739  0036                     ??_ClearLine:
 11740                           
 11741                           ; 1 bytes @ 0x16
 11742  0036                     	ds	1
 11743  0037                     _SetFrameMemoryPartial$1386:
 11744                           
 11745                           ; 2 bytes @ 0x17
 11746  0037                     	ds	1
 11747  0038                     ClearLine@start_y:
 11748                           
 11749                           ; 2 bytes @ 0x18
 11750  0038                     	ds	1
 11751  0039                     SetFrameMemoryPartial@data:
 11752                           
 11753                           ; 1 bytes @ 0x19
 11754  0039                     	ds	1
 11755  003A                     ??_sendCoilsConfiguration:
 11756  003A                     SetFrameMemoryPartial@i:	
 11757                           ; 1 bytes @ 0x1A
 11758                           
 11759                           
 11760                           ; 2 bytes @ 0x1A
 11761  003A                     	ds	2
 11762  003C                     SetFrameMemoryPartial@j:
 11763                           
 11764                           ; 2 bytes @ 0x1C
 11765  003C                     	ds	2
 11766  003E                     SetFrameMemoryPartial@x_end:
 11767                           
 11768                           ; 2 bytes @ 0x1E
 11769  003E                     	ds	2
 11770  0040                     SetFrameMemoryPartial@y_end:
 11771                           
 11772                           ; 2 bytes @ 0x20
 11773  0040                     	ds	2
 11774  0042                     ?_ImageFromPickupConf:
 11775  0042                     ImageFromPickupConf@selection_index:	
 11776                           ; 1 bytes @ 0x22
 11777                           
 11778                           
 11779                           ; 1 bytes @ 0x22
 11780  0042                     	ds	1
 11781  0043                     ImageFromPickupConf@bracket:
 11782                           
 11783                           ; 1 bytes @ 0x23
 11784  0043                     	ds	1
 11785  0044                     sendCoilsConfiguration@pc:
 11786  0044                     ImageFromPickupConf@draw_empty:	
 11787                           ; 1 bytes @ 0x24
 11788                           
 11789                           
 11790                           ; 1 bytes @ 0x24
 11791  0044                     	ds	1
 11792  0045                     ??_ImageFromPickupConf:
 11793  0045                     ??_SwitchEventHandler:	
 11794                           ; 1 bytes @ 0x25
 11795                           
 11796                           
 11797                           ; 1 bytes @ 0x25
 11798  0045                     	ds	6
 11799  004B                     ??_ButtonEventHandler:
 11800  004B                     ??_RotaryEncoderEventHandler:	
 11801                           ; 1 bytes @ 0x2B
 11802                           
 11803                           
 11804                           ; 1 bytes @ 0x2B
 11805  004B                     	ds	2
 11806  004D                     _ButtonEventHandler$1108:
 11807                           
 11808                           ; 2 bytes @ 0x2D
 11809  004D                     	ds	2
 11810  004F                     SwitchEventHandler@a1:
 11811                           
 11812                           ; 1 bytes @ 0x2F
 11813  004F                     	ds	1
 11814  0050                     SwitchEventHandler@a2:
 11815                           
 11816                           ; 1 bytes @ 0x30
 11817  0050                     	ds	1
 11818  0051                     SwitchEventHandler@a3:
 11819                           
 11820                           ; 1 bytes @ 0x31
 11821  0051                     	ds	1
 11822  0052                     SwitchEventHandler@new_switch_pos:
 11823                           
 11824                           ; 1 bytes @ 0x32
 11825  0052                     	ds	1
 11826  0053                     ??_main:
 11827                           
 11828                           ; 1 bytes @ 0x33
 11829  0053                     	ds	1
 11830  0054                     main@reset_type:
 11831                           
 11832                           ; 1 bytes @ 0x34
 11833  0054                     	ds	1
 11834  0055                     main@stack_pc:
 11835                           
 11836                           ; 4 bytes @ 0x35
 11837  0055                     	ds	4
 11838  0059                     main@reset_pc:
 11839                           
 11840                           ; 4 bytes @ 0x39
 11841  0059                     	ds	4
 11842  005D                     main@reset_pc_1191:
 11843                           
 11844                           ; 4 bytes @ 0x3D
 11845  005D                     	ds	4
 11846                           
 11847                           	psect	text4
 11848  09F5                     __ptext4:	
 11849 ;; *************** function _WakeUp *****************
 11850 ;; Defined at:
 11851 ;;		line 108 in file "main.c"
 11852 ;; Parameters:    Size  Location     Type
 11853 ;;		None
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;		None
 11856 ;; Return value:  Size  Location     Type
 11857 ;;                  1    wreg      void 
 11858 ;; Registers used:
 11859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11860 ;; Tracked objects:
 11861 ;;		On entry : 1A/1
 11862 ;;		On exit  : 1F/2
 11863 ;;		Unchanged: 0/0
 11864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11869 ;;Total ram usage:        0 bytes
 11870 ;; Hardware stack levels used: 1
 11871 ;; Hardware stack levels required when called: 9
 11872 ;; This function calls:
 11873 ;;		_ButtonEventReset
 11874 ;;		_ClearFrameMemory
 11875 ;;		_DELAY_milliseconds
 11876 ;;		_DisplayFrame
 11877 ;;		_InitDisplay
 11878 ;;		_ReadConfigurationsFromMemory
 11879 ;;		_TMR1_StartTimer
 11880 ;;		_sendCoilsConfiguration
 11881 ;; This function is called by:
 11882 ;;		_main
 11883 ;; This function uses a non-reentrant model
 11884 ;;
 11885                           
 11886                           
 11887                           ;psect for function _WakeUp
 11888  09F5                     _WakeUp:
 11889                           
 11890                           ;main.c: 109:     selection_index = -1;
 11891                           
 11892                           ;incstack = 0
 11893                           ; Regs used in _WakeUp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11894  09F5  0021               	movlb	1	; select bank1
 11895  09F6  01AD               	clrf	_selection_index^(0+128)
 11896  09F7  03AD               	decf	_selection_index^(0+128),f
 11897                           
 11898                           ;main.c: 110:     do { LATAbits.LATA1 = 1; } while(0);
 11899  09F8  0022               	movlb	2	; select bank2
 11900  09F9  148C               	bsf	12,1	;volatile
 11901                           
 11902                           ;main.c: 111:     ButtonEventReset();
 11903  09FA  3183  235D  3189   	fcall	_ButtonEventReset
 11904                           
 11905                           ;main.c: 112:     TMR1_StartTimer();
 11906  09FD  3187  27FD  3189   	fcall	_TMR1_StartTimer
 11907                           
 11908                           ;main.c: 113:     InitDisplay(lut_full_update);
 11909  0A00  30C8               	movlw	low (_lut_full_update| (0+32768))
 11910  0A01  00A0               	movwf	InitDisplay@lut
 11911  0A02  3097               	movlw	high (_lut_full_update| (0+32768))
 11912  0A03  00A1               	movwf	InitDisplay@lut+1
 11913  0A04  2255  3189         	fcall	_InitDisplay
 11914                           
 11915                           ;main.c: 114:     DELAY_milliseconds(1000);
 11916  0A06  30E8               	movlw	232
 11917  0A07  00F2               	movwf	DELAY_milliseconds@milliseconds
 11918  0A08  3003               	movlw	3
 11919  0A09  00F3               	movwf	DELAY_milliseconds@milliseconds+1
 11920  0A0A  27AE  3189         	fcall	_DELAY_milliseconds
 11921                           
 11922                           ;main.c: 115:     ClearFrameMemory(0xFF);
 11923  0A0C  30FF               	movlw	255
 11924  0A0D  27BC  3189         	fcall	_ClearFrameMemory
 11925                           
 11926                           ;main.c: 116:     DisplayFrame();
 11927  0A0F  2338  3189         	fcall	_DisplayFrame
 11928                           
 11929                           ;main.c: 117:     ClearFrameMemory(0xFF);
 11930  0A11  30FF               	movlw	255
 11931  0A12  27BC  3189         	fcall	_ClearFrameMemory
 11932                           
 11933                           ;main.c: 118:     DisplayFrame();
 11934  0A14  2338  3189         	fcall	_DisplayFrame
 11935                           
 11936                           ;main.c: 119:     ReadConfigurationsFromMemory();
 11937  0A16  27FA  3189         	fcall	_ReadConfigurationsFromMemory
 11938                           
 11939                           ;main.c: 124:     InitDisplay(lut_partial_update);
 11940  0A18  30AA               	movlw	low (_lut_partial_update| (0+32768))
 11941  0A19  0020               	movlb	0	; select bank0
 11942  0A1A  00A0               	movwf	InitDisplay@lut
 11943  0A1B  3097               	movlw	high (_lut_partial_update| (0+32768))
 11944  0A1C  00A1               	movwf	InitDisplay@lut+1
 11945  0A1D  2255               	fcall	_InitDisplay
 11946                           
 11947                           ;main.c: 126:     sendCoilsConfiguration(&saved_pc[switch_pos]);
 11948  0A1E  087B               	movf	_switch_pos,w
 11949  0A1F  0709               	addwf	9,w
 11950  0A20  0709               	addwf	9,w
 11951  0A21  3EAE               	addlw	(low (_saved_pc| 0))& (0+255)
 11952  0A22  3183  2B7E         	ljmp	_sendCoilsConfiguration
 11953  0A24                     __end_of_WakeUp:
 11954  0A24                     __ptext47:	
 11955 ;; *************** function _SetMemoryArea *****************
 11956 ;; Defined at:
 11957 ;;		line 219 in file "waveshare29epaper.c"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;  x_start         2    0[BANK0 ] unsigned short 
 11960 ;;  y_start         2    2[BANK0 ] unsigned short 
 11961 ;;  x_end           2    4[BANK0 ] unsigned short 
 11962 ;;  y_end           2    6[BANK0 ] unsigned short 
 11963 ;; Auto vars:     Size  Location     Type
 11964 ;;		None
 11965 ;; Return value:  Size  Location     Type
 11966 ;;                  1    wreg      void 
 11967 ;; Registers used:
 11968 ;;		wreg, status,2, status,0, pclath, cstack
 11969 ;; Tracked objects:
 11970 ;;		On entry : 1F/0
 11971 ;;		On exit  : 1F/2
 11972 ;;		Unchanged: 0/0
 11973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11974 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11977 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11978 ;;Total ram usage:       10 bytes
 11979 ;; Hardware stack levels used: 1
 11980 ;; Hardware stack levels required when called: 6
 11981 ;; This function calls:
 11982 ;;		_SendCommand
 11983 ;;		_SendData
 11984 ;; This function is called by:
 11985 ;;		_SetFrameMemoryPartial
 11986 ;;		_ClearFrameMemory
 11987 ;;		_ClearFrameMemoryPartial
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           
 11992                           ;psect for function _SetMemoryArea
 11993  0A24                     _SetMemoryArea:
 11994                           
 11995                           ;waveshare29epaper.c: 220:     SendCommand(0x44);
 11996                           
 11997                           ;incstack = 0
 11998                           ; Regs used in _SetMemoryArea: [wreg+status,2+status,0+pclath+cstack]
 11999  0A24  3044               	movlw	68
 12000  0A25  2752  3189         	fcall	_SendCommand
 12001                           
 12002                           ;waveshare29epaper.c: 222:     SendData((x_start >> 3) & 0xFF);
 12003  0A27  0020               	movlb	0	; select bank0
 12004  0A28  0821               	movf	SetMemoryArea@x_start+1,w
 12005  0A29  00F5               	movwf	??_SetMemoryArea+1
 12006  0A2A  0820               	movf	SetMemoryArea@x_start,w
 12007  0A2B  00F4               	movwf	??_SetMemoryArea
 12008  0A2C  36F5               	lsrf	??_SetMemoryArea+1,f
 12009  0A2D  0CF4               	rrf	??_SetMemoryArea,f
 12010  0A2E  36F5               	lsrf	??_SetMemoryArea+1,f
 12011  0A2F  0CF4               	rrf	??_SetMemoryArea,f
 12012  0A30  36F5               	lsrf	??_SetMemoryArea+1,f
 12013  0A31  0CF4               	rrf	??_SetMemoryArea,f
 12014  0A32  0874               	movf	??_SetMemoryArea,w
 12015  0A33  228D  3189         	fcall	_SendData
 12016                           
 12017                           ;waveshare29epaper.c: 223:     SendData((x_end >> 3) & 0xFF);
 12018  0A35  0020               	movlb	0	; select bank0
 12019  0A36  0825               	movf	SetMemoryArea@x_end+1,w
 12020  0A37  00F5               	movwf	??_SetMemoryArea+1
 12021  0A38  0824               	movf	SetMemoryArea@x_end,w
 12022  0A39  00F4               	movwf	??_SetMemoryArea
 12023  0A3A  36F5               	lsrf	??_SetMemoryArea+1,f
 12024  0A3B  0CF4               	rrf	??_SetMemoryArea,f
 12025  0A3C  36F5               	lsrf	??_SetMemoryArea+1,f
 12026  0A3D  0CF4               	rrf	??_SetMemoryArea,f
 12027  0A3E  36F5               	lsrf	??_SetMemoryArea+1,f
 12028  0A3F  0CF4               	rrf	??_SetMemoryArea,f
 12029  0A40  0874               	movf	??_SetMemoryArea,w
 12030  0A41  228D  3189         	fcall	_SendData
 12031                           
 12032                           ;waveshare29epaper.c: 224:     SendCommand(0x45);
 12033  0A43  3045               	movlw	69
 12034  0A44  2752  3189         	fcall	_SendCommand
 12035                           
 12036                           ;waveshare29epaper.c: 225:     SendData(y_start & 0xFF);
 12037  0A46  0020               	movlb	0	; select bank0
 12038  0A47  0822               	movf	SetMemoryArea@y_start,w
 12039  0A48  228D  3189         	fcall	_SendData
 12040                           
 12041                           ;waveshare29epaper.c: 226:     SendData((y_start >> 8) & 0xFF);
 12042  0A4A  0020               	movlb	0	; select bank0
 12043  0A4B  0823               	movf	SetMemoryArea@y_start+1,w
 12044  0A4C  228D  3189         	fcall	_SendData
 12045                           
 12046                           ;waveshare29epaper.c: 227:     SendData(y_end & 0xFF);
 12047  0A4E  0020               	movlb	0	; select bank0
 12048  0A4F  0826               	movf	SetMemoryArea@y_end,w
 12049  0A50  228D  3189         	fcall	_SendData
 12050                           
 12051                           ;waveshare29epaper.c: 228:     SendData((y_end >> 8) & 0xFF);
 12052  0A52  0020               	movlb	0	; select bank0
 12053  0A53  0827               	movf	SetMemoryArea@y_end+1,w
 12054  0A54  2A8D               	ljmp	_SendData
 12055  0A55                     __end_of_SetMemoryArea:
 12056  0A55                     __ptext40:	
 12057 ;; *************** function _InitDisplay *****************
 12058 ;; Defined at:
 12059 ;;		line 34 in file "waveshare29epaper.c"
 12060 ;; Parameters:    Size  Location     Type
 12061 ;;  lut             2    0[BANK0 ] PTR const unsigned char 
 12062 ;;		 -> lut_partial_update(30), lut_full_update(30), 
 12063 ;; Auto vars:     Size  Location     Type
 12064 ;;		None
 12065 ;; Return value:  Size  Location     Type
 12066 ;;                  1    wreg      void 
 12067 ;; Registers used:
 12068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12069 ;; Tracked objects:
 12070 ;;		On entry : 1F/0
 12071 ;;		On exit  : 0/0
 12072 ;;		Unchanged: 0/0
 12073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12074 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12077 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12078 ;;Total ram usage:        2 bytes
 12079 ;; Hardware stack levels used: 1
 12080 ;; Hardware stack levels required when called: 7
 12081 ;; This function calls:
 12082 ;;		_ResetDisplay
 12083 ;;		_SendCommand
 12084 ;;		_SendData
 12085 ;;		_SetLut
 12086 ;; This function is called by:
 12087 ;;		_GotoSleep
 12088 ;;		_WakeUp
 12089 ;;		_DisplayFrame
 12090 ;; This function uses a non-reentrant model
 12091 ;;
 12092                           
 12093                           
 12094                           ;psect for function _InitDisplay
 12095  0A55                     _InitDisplay:
 12096  0A55                     l4229:	
 12097                           ;incstack = 0
 12098                           ; Regs used in _InitDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12099                           
 12100                           
 12101                           ;waveshare29epaper.c: 35:     ResetDisplay();
 12102  0A55  27E6  3189         	fcall	_ResetDisplay
 12103                           
 12104                           ;waveshare29epaper.c: 36:     SendCommand(0x01);
 12105  0A57  3001               	movlw	1
 12106  0A58  2752  3189         	fcall	_SendCommand
 12107                           
 12108                           ;waveshare29epaper.c: 37:     SendData((296 - 1) & 0xFF);
 12109  0A5A  3027               	movlw	39
 12110  0A5B  228D  3189         	fcall	_SendData
 12111                           
 12112                           ;waveshare29epaper.c: 38:     SendData(((296 - 1) >> 8) & 0xFF);
 12113  0A5D  3001               	movlw	1
 12114  0A5E  228D  3189         	fcall	_SendData
 12115                           
 12116                           ;waveshare29epaper.c: 39:     SendData(0x00);
 12117  0A60  3000               	movlw	0
 12118  0A61  228D  3189         	fcall	_SendData
 12119                           
 12120                           ;waveshare29epaper.c: 40:     SendCommand(0x0C);
 12121  0A63  300C               	movlw	12
 12122  0A64  2752  3189         	fcall	_SendCommand
 12123                           
 12124                           ;waveshare29epaper.c: 41:     SendData(0xD7);
 12125  0A66  30D7               	movlw	215
 12126  0A67  228D  3189         	fcall	_SendData
 12127                           
 12128                           ;waveshare29epaper.c: 42:     SendData(0xD6);
 12129  0A69  30D6               	movlw	214
 12130  0A6A  228D  3189         	fcall	_SendData
 12131                           
 12132                           ;waveshare29epaper.c: 43:     SendData(0x9D);
 12133  0A6C  309D               	movlw	157
 12134  0A6D  228D  3189         	fcall	_SendData
 12135                           
 12136                           ;waveshare29epaper.c: 44:     SendCommand(0x2C);
 12137  0A6F  302C               	movlw	44
 12138  0A70  2752  3189         	fcall	_SendCommand
 12139                           
 12140                           ;waveshare29epaper.c: 45:     SendData(0xA8);
 12141  0A72  30A8               	movlw	168
 12142  0A73  228D  3189         	fcall	_SendData
 12143                           
 12144                           ;waveshare29epaper.c: 46:     SendCommand(0x3A);
 12145  0A75  303A               	movlw	58
 12146  0A76  2752  3189         	fcall	_SendCommand
 12147                           
 12148                           ;waveshare29epaper.c: 47:     SendData(0x1A);
 12149  0A78  301A               	movlw	26
 12150  0A79  228D  3189         	fcall	_SendData
 12151                           
 12152                           ;waveshare29epaper.c: 48:     SendCommand(0x3B);
 12153  0A7B  303B               	movlw	59
 12154  0A7C  2752  3189         	fcall	_SendCommand
 12155                           
 12156                           ;waveshare29epaper.c: 49:     SendData(0x08);
 12157  0A7E  3008               	movlw	8
 12158  0A7F  228D  3189         	fcall	_SendData
 12159                           
 12160                           ;waveshare29epaper.c: 50:     SendCommand(0x11);
 12161  0A81  3011               	movlw	17
 12162  0A82  2752  3189         	fcall	_SendCommand
 12163                           
 12164                           ;waveshare29epaper.c: 51:     SendData(0x03);
 12165  0A84  3003               	movlw	3
 12166  0A85  228D               	fcall	_SendData
 12167                           
 12168                           ;waveshare29epaper.c: 52:     SetLut(lut);
 12169  0A86  0020               	movlb	0	; select bank0
 12170  0A87  0821               	movf	InitDisplay@lut+1,w
 12171  0A88  00F5               	movwf	SetLut@lut+1
 12172  0A89  0820               	movf	InitDisplay@lut,w
 12173  0A8A  00F4               	movwf	SetLut@lut
 12174  0A8B  3188  2828         	ljmp	l4193
 12175  0A8D                     __end_of_InitDisplay:
 12176  0A8D                     __ptext48:	
 12177 ;; *************** function _SendData *****************
 12178 ;; Defined at:
 12179 ;;		line 68 in file "waveshare29epaper.c"
 12180 ;; Parameters:    Size  Location     Type
 12181 ;;  data            1    wreg     unsigned char 
 12182 ;; Auto vars:     Size  Location     Type
 12183 ;;  data            1    3[COMMON] unsigned char 
 12184 ;; Return value:  Size  Location     Type
 12185 ;;                  1    wreg      void 
 12186 ;; Registers used:
 12187 ;;		wreg, status,2, status,0, pclath, cstack
 12188 ;; Tracked objects:
 12189 ;;		On entry : 0/0
 12190 ;;		On exit  : 1F/2
 12191 ;;		Unchanged: 0/0
 12192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12197 ;;Total ram usage:        1 bytes
 12198 ;; Hardware stack levels used: 1
 12199 ;; Hardware stack levels required when called: 5
 12200 ;; This function calls:
 12201 ;;		_SPI_ExchangeByte
 12202 ;; This function is called by:
 12203 ;;		_InitDisplay
 12204 ;;		_SetLut
 12205 ;;		_SetFrameMemoryPartial
 12206 ;;		_ClearFrameMemory
 12207 ;;		_ClearFrameMemoryPartial
 12208 ;;		_DisplayFrame
 12209 ;;		_SetMemoryArea
 12210 ;;		_SetMemoryPointer
 12211 ;; This function uses a non-reentrant model
 12212 ;;
 12213                           
 12214                           
 12215                           ;psect for function _SendData
 12216  0A8D                     _SendData:
 12217                           
 12218                           ;incstack = 0
 12219                           ; Regs used in _SendData: [wreg+status,2+status,0+pclath+cstack]
 12220                           ;SendData@data stored from wreg
 12221  0A8D  00F3               	movwf	SendData@data
 12222                           
 12223                           ;waveshare29epaper.c: 69:     do { LATCbits.LATC4 = 0; } while(0);
 12224  0A8E  0022               	movlb	2	; select bank2
 12225  0A8F  120E               	bcf	14,4	;volatile
 12226                           
 12227                           ;waveshare29epaper.c: 70:     do { LATAbits.LATA4 = 1; } while(0);
 12228  0A90  160C               	bsf	12,4	;volatile
 12229                           
 12230                           ;waveshare29epaper.c: 71:     SPI_ExchangeByte(data);
 12231  0A91  0873               	movf	SendData@data,w
 12232  0A92  00F2               	movwf	SPI_ExchangeByte@data
 12233  0A93  27A4               	fcall	_SPI_ExchangeByte
 12234  0A94  0022               	movlb	2	; select bank2
 12235  0A95  160E               	bsf	14,4	;volatile
 12236  0A96  0008               	return
 12237  0A97                     __end_of_SendData:
 12238  0A97                     __ptext26:	
 12239 ;; *************** function _ButtonEventHandler *****************
 12240 ;; Defined at:
 12241 ;;		line 175 in file "main.c"
 12242 ;; Parameters:    Size  Location     Type
 12243 ;;		None
 12244 ;; Auto vars:     Size  Location     Type
 12245 ;;		None
 12246 ;; Return value:  Size  Location     Type
 12247 ;;                  1    wreg      void 
 12248 ;; Registers used:
 12249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12250 ;; Tracked objects:
 12251 ;;		On entry : 0/1
 12252 ;;		On exit  : 1E/0
 12253 ;;		Unchanged: 0/0
 12254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12256 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12257 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12258 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12259 ;;Total ram usage:        4 bytes
 12260 ;; Hardware stack levels used: 1
 12261 ;; Hardware stack levels required when called: 10
 12262 ;; This function calls:
 12263 ;;		_ButtonEventReset
 12264 ;;		_DisplayFrame
 12265 ;;		_GotoSleep
 12266 ;;		_ImageFromPickupConf
 12267 ;;		_WriteConfigurationToMemory
 12268 ;; This function is called by:
 12269 ;;		_main
 12270 ;; This function uses a non-reentrant model
 12271 ;;
 12272                           
 12273                           
 12274                           ;psect for function _ButtonEventHandler
 12275  0A97                     _ButtonEventHandler:
 12276                           
 12277                           ;main.c: 176:     switch(click_type){
 12278                           
 12279                           ;incstack = 0
 12280                           ; Regs used in _ButtonEventHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12281  0A97  2B1B               	goto	l5021
 12282  0A98                     l532:	
 12283                           ;main.c: 177:         case 1:
 12284                           
 12285                           
 12286                           ;main.c: 178:             if(selection_index >= 0){
 12287  0A98  0021               	movlb	1	; select bank1
 12288  0A99  1BAD               	btfsc	_selection_index^(0+128),7
 12289  0A9A  2B35               	goto	l5023
 12290                           
 12291                           ;main.c: 181:                 ImageFromPickupConf(&saved_pc[switch_pos], selection_index
      +                          , 0, 0);
 12292  0A9B  082D               	movf	_selection_index^(0+128),w
 12293  0A9C  0020               	movlb	0	; select bank0
 12294  0A9D  00C2               	movwf	ImageFromPickupConf@selection_index
 12295  0A9E  01C3               	clrf	ImageFromPickupConf@bracket
 12296  0A9F  01C4               	clrf	ImageFromPickupConf@draw_empty
 12297  0AA0  087B               	movf	_switch_pos,w
 12298  0AA1  0709               	addwf	9,w
 12299  0AA2  0709               	addwf	9,w
 12300  0AA3  3EAE               	addlw	(low (_saved_pc| 0))& (0+255)
 12301  0AA4  2367  3189         	fcall	_ImageFromPickupConf
 12302                           
 12303                           ;main.c: 182:                 DisplayFrame();
 12304  0AA6  2338  3189         	fcall	_DisplayFrame
 12305                           
 12306                           ;main.c: 183:                 ImageFromPickupConf(&saved_pc[switch_pos], selection_index
      +                          , 0, 0);
 12307  0AA8  0021               	movlb	1	; select bank1
 12308  0AA9  082D               	movf	_selection_index^(0+128),w
 12309  0AAA  0020               	movlb	0	; select bank0
 12310  0AAB  00C2               	movwf	ImageFromPickupConf@selection_index
 12311  0AAC  01C3               	clrf	ImageFromPickupConf@bracket
 12312  0AAD  01C4               	clrf	ImageFromPickupConf@draw_empty
 12313  0AAE  087B               	movf	_switch_pos,w
 12314  0AAF  0709               	addwf	9,w
 12315  0AB0  0709               	addwf	9,w
 12316  0AB1  3EAE               	addlw	(low (_saved_pc| 0))& (0+255)
 12317  0AB2  2367  3189         	fcall	_ImageFromPickupConf
 12318                           
 12319                           ;main.c: 184:                 DisplayFrame();
 12320  0AB4  2338  3189         	fcall	_DisplayFrame
 12321                           
 12322                           ;main.c: 185:                 selection_index = (selection_index + 1) % 4;
 12323  0AB6  0021               	movlb	1	; select bank1
 12324  0AB7  3003               	movlw	3
 12325  0AB8  0AAD               	incf	_selection_index^(0+128),f
 12326  0AB9  05AD               	andwf	_selection_index^(0+128),f
 12327  0ABA                     L12:
 12328                           
 12329                           ;main.c: 186:                 ImageFromPickupConf(&saved_pc[switch_pos], selection_index
      +                          , 1, 0);
 12330  0ABA  082D               	movf	_selection_index^(0+128),w
 12331  0ABB  0020               	movlb	0	; select bank0
 12332  0ABC  00C2               	movwf	ImageFromPickupConf@selection_index
 12333  0ABD  01C3               	clrf	ImageFromPickupConf@bracket
 12334  0ABE  0AC3               	incf	ImageFromPickupConf@bracket,f
 12335  0ABF  01C4               	clrf	ImageFromPickupConf@draw_empty
 12336  0AC0  087B               	movf	_switch_pos,w
 12337  0AC1  0709               	addwf	9,w
 12338  0AC2  0709               	addwf	9,w
 12339  0AC3  3EAE               	addlw	(low (_saved_pc| 0))& (0+255)
 12340  0AC4  2367  3189         	fcall	_ImageFromPickupConf
 12341                           
 12342                           ;main.c: 187:                 DisplayFrame();
 12343  0AC6  2338  3189         	fcall	_DisplayFrame
 12344  0AC8  2B35               	goto	l5023
 12345  0AC9                     l4989:
 12346                           
 12347                           ;main.c: 193:             selection_index = selection_index == -1 ? 0 : -1;
 12348  0AC9  0021               	movlb	1	; select bank1
 12349  0ACA  0A2D               	incf	_selection_index^(0+128),w
 12350  0ACB  1903               	btfsc	3,2
 12351  0ACC  2AD2               	goto	l4993
 12352  0ACD  30FF               	movlw	255
 12353  0ACE  0020               	movlb	0	; select bank0
 12354  0ACF  00CD               	movwf	_ButtonEventHandler$1108
 12355  0AD0  00CE               	movwf	_ButtonEventHandler$1108+1
 12356  0AD1  2AD5               	goto	l4995
 12357  0AD2                     l4993:
 12358  0AD2  0020               	movlb	0	; select bank0
 12359  0AD3  01CD               	clrf	_ButtonEventHandler$1108
 12360  0AD4  01CE               	clrf	_ButtonEventHandler$1108+1
 12361  0AD5                     l4995:
 12362  0AD5  084D               	movf	_ButtonEventHandler$1108,w
 12363  0AD6  0021               	movlb	1	; select bank1
 12364  0AD7  00AD               	movwf	_selection_index^(0+128)
 12365                           
 12366                           ;main.c: 194:             if(selection_index == -1){
 12367  0AD8  0F2D               	incfsz	_selection_index^(0+128),w
 12368  0AD9  2AF6               	goto	l5005
 12369                           
 12370                           ;main.c: 195:                 ImageFromPickupConf(&saved_pc[switch_pos], selection_index
      +                          , 0, 0);
 12371  0ADA  082D               	movf	_selection_index^(0+128),w
 12372  0ADB  0020               	movlb	0	; select bank0
 12373  0ADC  00C2               	movwf	ImageFromPickupConf@selection_index
 12374  0ADD  01C3               	clrf	ImageFromPickupConf@bracket
 12375  0ADE  01C4               	clrf	ImageFromPickupConf@draw_empty
 12376  0ADF  087B               	movf	_switch_pos,w
 12377  0AE0  0709               	addwf	9,w
 12378  0AE1  0709               	addwf	9,w
 12379  0AE2  3EAE               	addlw	(low (_saved_pc| 0))& (0+255)
 12380  0AE3  2367  3189         	fcall	_ImageFromPickupConf
 12381                           
 12382                           ;main.c: 196:                 DisplayFrame();
 12383  0AE5  2338  3189         	fcall	_DisplayFrame
 12384                           
 12385                           ;main.c: 197:                 ImageFromPickupConf(&saved_pc[switch_pos], selection_index
      +                          , 0, 0);
 12386  0AE7  0021               	movlb	1	; select bank1
 12387  0AE8  082D               	movf	_selection_index^(0+128),w
 12388  0AE9  0020               	movlb	0	; select bank0
 12389  0AEA  00C2               	movwf	ImageFromPickupConf@selection_index
 12390  0AEB  01C3               	clrf	ImageFromPickupConf@bracket
 12391  0AEC  01C4               	clrf	ImageFromPickupConf@draw_empty
 12392  0AED  087B               	movf	_switch_pos,w
 12393  0AEE  0709               	addwf	9,w
 12394  0AEF  0709               	addwf	9,w
 12395  0AF0  3EAE               	addlw	(low (_saved_pc| 0))& (0+255)
 12396  0AF1  2367  3189         	fcall	_ImageFromPickupConf
 12397                           
 12398                           ;main.c: 198:                 DisplayFrame();
 12399  0AF3  2338  3189         	fcall	_DisplayFrame
 12400                           
 12401                           ;main.c: 199:             } else {
 12402  0AF5  2B35               	goto	l5023
 12403  0AF6                     l5005:
 12404                           
 12405                           ;main.c: 200:                 ImageFromPickupConf(&saved_pc[switch_pos], -1, 0, 1);
 12406  0AF6  0020               	movlb	0	; select bank0
 12407  0AF7  01C2               	clrf	ImageFromPickupConf@selection_index
 12408  0AF8  03C2               	decf	ImageFromPickupConf@selection_index,f
 12409  0AF9  01C3               	clrf	ImageFromPickupConf@bracket
 12410  0AFA  01C4               	clrf	ImageFromPickupConf@draw_empty
 12411  0AFB  0AC4               	incf	ImageFromPickupConf@draw_empty,f
 12412  0AFC  087B               	movf	_switch_pos,w
 12413  0AFD  0709               	addwf	9,w
 12414  0AFE  0709               	addwf	9,w
 12415  0AFF  3EAE               	addlw	(low (_saved_pc| 0))& (0+255)
 12416  0B00  2367  3189         	fcall	_ImageFromPickupConf
 12417                           
 12418                           ;main.c: 201:                 DisplayFrame();
 12419  0B02  2338  3189         	fcall	_DisplayFrame
 12420                           
 12421                           ;main.c: 202:                 ImageFromPickupConf(&saved_pc[switch_pos], -1, 0, 1);
 12422  0B04  0020               	movlb	0	; select bank0
 12423  0B05  01C2               	clrf	ImageFromPickupConf@selection_index
 12424  0B06  03C2               	decf	ImageFromPickupConf@selection_index,f
 12425  0B07  01C3               	clrf	ImageFromPickupConf@bracket
 12426  0B08  01C4               	clrf	ImageFromPickupConf@draw_empty
 12427  0B09  0AC4               	incf	ImageFromPickupConf@draw_empty,f
 12428  0B0A  087B               	movf	_switch_pos,w
 12429  0B0B  0709               	addwf	9,w
 12430  0B0C  0709               	addwf	9,w
 12431  0B0D  3EAE               	addlw	(low (_saved_pc| 0))& (0+255)
 12432  0B0E  2367  3189         	fcall	_ImageFromPickupConf
 12433                           
 12434                           ;main.c: 203:                 DisplayFrame();
 12435  0B10  2338  3189         	fcall	_DisplayFrame
 12436                           
 12437                           ;main.c: 204:                 ImageFromPickupConf(&saved_pc[switch_pos], selection_index
      +                          , 1, 0);
 12438  0B12  0021               	movlb	1	; select bank1
 12439  0B13  2ABA               	goto	L12
 12440  0B14                     l5015:
 12441                           
 12442                           ;main.c: 209:             WriteConfigurationToMemory();
 12443  0B14  27F3  3189         	fcall	_WriteConfigurationToMemory
 12444                           
 12445                           ;main.c: 210:             break;
 12446  0B16  2B35               	goto	l5023
 12447  0B17                     l5017:
 12448                           
 12449                           ;main.c: 214:             GotoSleep();
 12450  0B17  3180  2052  3189   	fcall	_GotoSleep
 12451                           
 12452                           ;main.c: 215:             break;
 12453  0B1A  2B35               	goto	l5023
 12454  0B1B                     l5021:
 12455  0B1B  0021               	movlb	1	; select bank1
 12456  0B1C  085B               	movf	_click_type^(0+128),w
 12457  0B1D  0020               	movlb	0	; select bank0
 12458  0B1E  00CB               	movwf	??_ButtonEventHandler
 12459  0B1F  01CC               	clrf	??_ButtonEventHandler+1
 12460  0B20  1BCB               	btfsc	??_ButtonEventHandler,7
 12461  0B21  03CC               	decf	??_ButtonEventHandler+1,f
 12462                           
 12463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12464                           ; Switch size 1, requested type "speed"
 12465                           ; Number of cases is 1, Range of values is 0 to 0
 12466                           ; switch strategies available:
 12467                           ; Name         Instructions Cycles
 12468                           ; simple_byte            4     3 (average)
 12469                           ; direct_byte            8     6 (fixed)
 12470                           ; jumptable            260     6 (fixed)
 12471                           ;	Chosen strategy is simple_byte
 12472  0B22  084C               	movf	??_ButtonEventHandler+1,w
 12473  0B23  3A00               	xorlw	0	; case 0
 12474  0B24  1903               	skipnz
 12475  0B25  2B27               	goto	l5273
 12476  0B26  2B37               	goto	l545
 12477  0B27                     l5273:
 12478                           
 12479                           ; Switch size 1, requested type "speed"
 12480                           ; Number of cases is 4, Range of values is 1 to 4
 12481                           ; switch strategies available:
 12482                           ; Name         Instructions Cycles
 12483                           ; simple_byte           13     7 (average)
 12484                           ; direct_byte           17     9 (fixed)
 12485                           ; jumptable            263     9 (fixed)
 12486                           ;	Chosen strategy is simple_byte
 12487  0B27  084B               	movf	??_ButtonEventHandler,w
 12488  0B28  3A01               	xorlw	1	; case 1
 12489  0B29  1903               	skipnz
 12490  0B2A  2A98               	goto	l532
 12491  0B2B  3A03               	xorlw	3	; case 2
 12492  0B2C  1903               	skipnz
 12493  0B2D  2AC9               	goto	l4989
 12494  0B2E  3A01               	xorlw	1	; case 3
 12495  0B2F  1903               	skipnz
 12496  0B30  2B14               	goto	l5015
 12497  0B31  3A07               	xorlw	7	; case 4
 12498  0B32  1903               	skipnz
 12499  0B33  2B17               	goto	l5017
 12500  0B34  2B37               	goto	l545
 12501  0B35                     l5023:
 12502                           
 12503                           ;main.c: 219:     ButtonEventReset();
 12504  0B35  3183  235D         	fcall	_ButtonEventReset
 12505  0B37                     l545:
 12506  0B37  0008               	return
 12507  0B38                     __end_of_ButtonEventHandler:
 12508  0B38                     __ptext39:	
 12509 ;; *************** function _DisplayFrame *****************
 12510 ;; Defined at:
 12511 ;;		line 192 in file "waveshare29epaper.c"
 12512 ;; Parameters:    Size  Location     Type
 12513 ;;		None
 12514 ;; Auto vars:     Size  Location     Type
 12515 ;;		None
 12516 ;; Return value:  Size  Location     Type
 12517 ;;                  1    wreg      void 
 12518 ;; Registers used:
 12519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12520 ;; Tracked objects:
 12521 ;;		On entry : 0/0
 12522 ;;		On exit  : 0/0
 12523 ;;		Unchanged: 0/0
 12524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12529 ;;Total ram usage:        0 bytes
 12530 ;; Hardware stack levels used: 1
 12531 ;; Hardware stack levels required when called: 8
 12532 ;; This function calls:
 12533 ;;		_InitDisplay
 12534 ;;		_SendCommand
 12535 ;;		_SendData
 12536 ;;		_WaitUntilIdle
 12537 ;; This function is called by:
 12538 ;;		_GotoSleep
 12539 ;;		_WakeUp
 12540 ;;		_ButtonEventHandler
 12541 ;;		_DisplayRefreshHandler
 12542 ;;		_RotaryEncoderEventHandler
 12543 ;;		_main
 12544 ;; This function uses a non-reentrant model
 12545 ;;
 12546                           
 12547                           
 12548                           ;psect for function _DisplayFrame
 12549  0B38                     _DisplayFrame:
 12550  0B38                     l4371:	
 12551                           ;incstack = 0
 12552                           ; Regs used in _DisplayFrame: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12553                           
 12554                           
 12555                           ;waveshare29epaper.c: 194:     partial_refresh_count++;
 12556  0B38  0021               	movlb	1	; select bank1
 12557  0B39  3006               	movlw	6
 12558  0B3A  0AD6               	incf	_partial_refresh_count^(0+128),f
 12559                           
 12560                           ;waveshare29epaper.c: 195:     if(partial_refresh_count >= 6)
 12561  0B3B  0256               	subwf	_partial_refresh_count^(0+128),w
 12562  0B3C  1C03               	skipc
 12563  0B3D  2B5A               	goto	l4391
 12564                           
 12565                           ;waveshare29epaper.c: 196:     {;waveshare29epaper.c: 197:         InitDisplay(lut_full_
      +                          update);
 12566  0B3E  30C8               	movlw	low (_lut_full_update| (0+32768))
 12567  0B3F  0020               	movlb	0	; select bank0
 12568  0B40  00A0               	movwf	InitDisplay@lut
 12569  0B41  3097               	movlw	high (_lut_full_update| (0+32768))
 12570  0B42  00A1               	movwf	InitDisplay@lut+1
 12571  0B43  2255  3189         	fcall	_InitDisplay
 12572                           
 12573                           ;waveshare29epaper.c: 198:         partial_refresh_count = 0;
 12574  0B45  0021               	movlb	1	; select bank1
 12575  0B46  3022               	movlw	34
 12576  0B47  01D6               	clrf	_partial_refresh_count^(0+128)
 12577                           
 12578                           ;waveshare29epaper.c: 199:         SendCommand(0x22);
 12579  0B48  2752  3189         	fcall	_SendCommand
 12580                           
 12581                           ;waveshare29epaper.c: 200:         SendData(0xC4);
 12582  0B4A  30C4               	movlw	196
 12583  0B4B  228D  3189         	fcall	_SendData
 12584                           
 12585                           ;waveshare29epaper.c: 201:         SendCommand(0x20);
 12586  0B4D  3020               	movlw	32
 12587  0B4E  2752  3189         	fcall	_SendCommand
 12588                           
 12589                           ;waveshare29epaper.c: 202:         SendCommand(0xFF);
 12590  0B50  30FF               	movlw	255
 12591  0B51  2752  3189         	fcall	_SendCommand
 12592                           
 12593                           ;waveshare29epaper.c: 203:         WaitUntilIdle();
 12594  0B53  279B  3189         	fcall	_WaitUntilIdle
 12595                           
 12596                           ;waveshare29epaper.c: 204:         InitDisplay(lut_partial_update);
 12597  0B55  30AA               	movlw	low (_lut_partial_update| (0+32768))
 12598  0B56  00A0               	movwf	InitDisplay@lut
 12599  0B57  3097               	movlw	high (_lut_partial_update| (0+32768))
 12600  0B58  00A1               	movwf	InitDisplay@lut+1
 12601  0B59  2A55               	ljmp	l4229
 12602  0B5A                     l4391:	
 12603                           ;waveshare29epaper.c: 205:     }
 12604                           
 12605                           
 12606                           ;waveshare29epaper.c: 207:     {;waveshare29epaper.c: 208:         SendCommand(0x22);
 12607  0B5A  3022               	movlw	34
 12608  0B5B  2752  3189         	fcall	_SendCommand
 12609                           
 12610                           ;waveshare29epaper.c: 209:         SendData(0xC4);
 12611  0B5D  30C4               	movlw	196
 12612  0B5E  228D  3189         	fcall	_SendData
 12613                           
 12614                           ;waveshare29epaper.c: 210:         SendCommand(0x20);
 12615  0B60  3020               	movlw	32
 12616  0B61  2752  3189         	fcall	_SendCommand
 12617                           
 12618                           ;waveshare29epaper.c: 211:         SendCommand(0xFF);
 12619  0B63  30FF               	movlw	255
 12620  0B64  2752  3189         	fcall	_SendCommand
 12621                           
 12622                           ;waveshare29epaper.c: 212:         WaitUntilIdle();
 12623  0B66  2F9B               	ljmp	l4183
 12624  0B67                     __end_of_DisplayFrame:
 12625  0B67                     __ptext32:	
 12626 ;; *************** function _ImageFromPickupConf *****************
 12627 ;; Defined at:
 12628 ;;		line 131 in file "guitar_image.c"
 12629 ;; Parameters:    Size  Location     Type
 12630 ;;  pc              1    wreg     PTR struct PickupConfigu
 12631 ;;		 -> main@reset_pc_1191(4), main@reset_pc(4), main@stack_pc(4), saved_pc(20), 
 12632 ;;  selection_in    1   34[BANK0 ] char 
 12633 ;;  bracket         1   35[BANK0 ] _Bool 
 12634 ;;  draw_empty      1   36[BANK0 ] _Bool 
 12635 ;; Auto vars:     Size  Location     Type
 12636 ;;  pc              1   42[BANK2 ] PTR struct PickupConfigu
 12637 ;;		 -> main@reset_pc_1191(4), main@reset_pc(4), main@stack_pc(4), saved_pc(20), 
 12638 ;;  need_to_skip    4   24[BANK2 ] _Bool [4]
 12639 ;;  need_to_draw    4    0[BANK2 ] _Bool [4]
 12640 ;;  i               2   38[BANK2 ] int 
 12641 ;;  arrow_type      8   10[BANK2 ] PTR unsigned char [4]
 12642 ;;		 -> g_arrow_rot(183), b_arrow_rot(183), m_arrow_rot(183), n_arrow_rot(183), 
 12643 ;;  pickup_index    4   28[BANK2 ] char [4]
 12644 ;;  start_x         2   40[BANK2 ] unsigned short 
 12645 ;;  start_y         2   36[BANK2 ] unsigned short 
 12646 ;;  index           1   35[BANK2 ] char 
 12647 ;;  max_index       1   34[BANK2 ] unsigned char 
 12648 ;; Return value:  Size  Location     Type
 12649 ;;                  1    wreg      void 
 12650 ;; Registers used:
 12651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12652 ;; Tracked objects:
 12653 ;;		On entry : 1F/0
 12654 ;;		On exit  : 0/0
 12655 ;;		Unchanged: 0/0
 12656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12657 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12658 ;;      Locals:         0       0       0      43       0       0       0       0       0       0       0       0       
      +0       0
 12659 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12660 ;;      Totals:         0       9       0      43       0       0       0       0       0       0       0       0       
      +0       0
 12661 ;;Total ram usage:       52 bytes
 12662 ;; Hardware stack levels used: 1
 12663 ;; Hardware stack levels required when called: 9
 12664 ;; This function calls:
 12665 ;;		_ClearFrameMemory
 12666 ;;		_ClearLine
 12667 ;;		_SetFrameMemoryPartial
 12668 ;;		___wmul
 12669 ;; This function is called by:
 12670 ;;		_ButtonEventHandler
 12671 ;;		_DisplayRefreshHandler
 12672 ;;		_RotaryEncoderEventHandler
 12673 ;;		_main
 12674 ;; This function uses a non-reentrant model
 12675 ;;
 12676                           
 12677                           
 12678                           ;psect for function _ImageFromPickupConf
 12679  0B67                     _ImageFromPickupConf:
 12680                           
 12681                           ;incstack = 0
 12682                           ; Regs used in _ImageFromPickupConf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12683                           ;ImageFromPickupConf@pc stored from wreg
 12684  0B67  0022               	movlb	2	; select bank2
 12685  0B68  00CA               	movwf	ImageFromPickupConf@pc^(0+256)
 12686                           
 12687                           ;guitar_image.c: 134:     int8_t index = 0;
 12688  0B69  01C3               	clrf	ImageFromPickupConf@index^(0+256)
 12689                           
 12690                           ;guitar_image.c: 135:     uint16_t start_x = 0;
 12691  0B6A  01C8               	clrf	ImageFromPickupConf@start_x^(0+256)
 12692  0B6B  01C9               	clrf	(ImageFromPickupConf@start_x+1)^(0+256)
 12693                           
 12694                           ;guitar_image.c: 136:     uint16_t start_y = 0;
 12695  0B6C  01C4               	clrf	ImageFromPickupConf@start_y^(0+256)
 12696  0B6D  01C5               	clrf	(ImageFromPickupConf@start_y+1)^(0+256)
 12697                           
 12698                           ;guitar_image.c: 138:     int8_t pickup_indexes[4];;guitar_image.c: 139:     pickup_inde
      +                          xes[0] = pc->neck;
 12699  0B6E  0086               	movwf	6
 12700  0B6F  0187               	clrf	7
 12701  0B70  0801               	movf	1,w
 12702  0B71  00BC               	movwf	ImageFromPickupConf@pickup_indexes^(0+256)
 12703                           
 12704                           ;guitar_image.c: 140:     pickup_indexes[1] = pc->middle;
 12705  0B72  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 12706  0B73  0086               	movwf	6
 12707  0B74  3F41               	moviw [1]fsr1
 12708  0B75  00BD               	movwf	(ImageFromPickupConf@pickup_indexes^(0+256)+1)
 12709                           
 12710                           ;guitar_image.c: 141:     pickup_indexes[2] = pc->bridge;
 12711  0B76  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 12712  0B77  0086               	movwf	6
 12713  0B78  3F42               	moviw [2]fsr1
 12714  0B79  00BE               	movwf	(ImageFromPickupConf@pickup_indexes^(0+256)+2)
 12715                           
 12716                           ;guitar_image.c: 142:     pickup_indexes[3] = pc->general;
 12717  0B7A  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 12718  0B7B  0086               	movwf	6
 12719  0B7C  3F43               	moviw [3]fsr1
 12720  0B7D  00BF               	movwf	(ImageFromPickupConf@pickup_indexes^(0+256)+3)
 12721                           
 12722                           ;guitar_image.c: 143:     unsigned char *arrow_type[4];;guitar_image.c: 144:     arrow_t
      +                          ype[0] = n_arrow_rot;
 12723  0B7E  300B               	movlw	low (_n_arrow_rot| (0+32768))
 12724  0B7F  00AA               	movwf	ImageFromPickupConf@arrow_type^(0+256)
 12725  0B80  3093               	movlw	high (_n_arrow_rot| (0+32768))
 12726  0B81  00AB               	movwf	(ImageFromPickupConf@arrow_type^(0+256)+1)
 12727                           
 12728                           ;guitar_image.c: 145:     arrow_type[1] = m_arrow_rot;
 12729  0B82  3054               	movlw	low (_m_arrow_rot| (0+32768))
 12730  0B83  00AC               	movwf	(low ((ImageFromPickupConf@arrow_type| (0+256)+2)))^0
 12731  0B84  3092               	movlw	high (_m_arrow_rot| (0+32768))
 12732  0B85  00AD               	movwf	((low ((ImageFromPickupConf@arrow_type| (0+256)+2)))^0+1)
 12733                           
 12734                           ;guitar_image.c: 146:     arrow_type[2] = b_arrow_rot;
 12735  0B86  309D               	movlw	low (_b_arrow_rot| (0+32768))
 12736  0B87  00AE               	movwf	(low ((ImageFromPickupConf@arrow_type| (0+256)+4)))^0
 12737  0B88  3091               	movlw	high (_b_arrow_rot| (0+32768))
 12738  0B89  00AF               	movwf	((low ((ImageFromPickupConf@arrow_type| (0+256)+4)))^0+1)
 12739                           
 12740                           ;guitar_image.c: 147:     arrow_type[3] = g_arrow_rot;
 12741  0B8A  30E6               	movlw	low (_g_arrow_rot| (0+32768))
 12742  0B8B  00B0               	movwf	(low ((ImageFromPickupConf@arrow_type| (0+256)+6)))^0
 12743  0B8C  3090               	movlw	high (_g_arrow_rot| (0+32768))
 12744  0B8D  00B1               	movwf	((low ((ImageFromPickupConf@arrow_type| (0+256)+6)))^0+1)
 12745                           
 12746                           ;guitar_image.c: 149:     if(selection_index >= 0){
 12747  0B8E  0020               	movlb	0	; select bank0
 12748  0B8F  1BC2               	btfsc	ImageFromPickupConf@selection_index,7
 12749  0B90  2D16               	goto	l4733
 12750                           
 12751                           ;guitar_image.c: 151:         start_x = (128 >> 1) - ((4 * character_width_rot) >> 1);
 12752  0B91  3010               	movlw	16
 12753  0B92  0022               	movlb	2	; select bank2
 12754  0B93  00C8               	movwf	ImageFromPickupConf@start_x^(0+256)
 12755  0B94  01C9               	clrf	(ImageFromPickupConf@start_x+1)^(0+256)
 12756  0B95  0020               	movlb	0	; select bank0
 12757  0B96  0842               	movf	ImageFromPickupConf@selection_index,w
 12758  0B97  00F2               	movwf	___wmul@multiplier
 12759  0B98  3018               	movlw	24
 12760  0B99  01F3               	clrf	___wmul@multiplier+1
 12761  0B9A  00F4               	movwf	___wmul@multiplicand
 12762  0B9B  01F5               	clrf	___wmul@multiplicand+1
 12763  0B9C  273D  3189         	fcall	___wmul
 12764  0B9E  0872               	movf	?___wmul,w
 12765  0B9F  0022               	movlb	2	; select bank2
 12766  0BA0  07C8               	addwf	ImageFromPickupConf@start_x^(0+256),f
 12767  0BA1  0873               	movf	?___wmul+1,w
 12768  0BA2  3DC9               	addwfc	(ImageFromPickupConf@start_x+1)^(0+256),f
 12769                           
 12770                           ;guitar_image.c: 154:         if(selection_index < 3){
 12771  0BA3  0020               	movlb	0	; select bank0
 12772  0BA4  0842               	movf	ImageFromPickupConf@selection_index,w
 12773  0BA5  3A80               	xorlw	128
 12774  0BA6  3E7D               	addlw	-131
 12775  0BA7  1803               	skipnc
 12776  0BA8  2BC7               	goto	l4695
 12777                           
 12778                           ;guitar_image.c: 155:             ClearLine(start_x, 5);
 12779  0BA9  0022               	movlb	2	; select bank2
 12780  0BAA  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 12781  0BAB  0020               	movlb	0	; select bank0
 12782  0BAC  00B4               	movwf	ClearLine@start_x+1
 12783  0BAD  0022               	movlb	2	; select bank2
 12784  0BAE  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 12785  0BAF  0020               	movlb	0	; select bank0
 12786  0BB0  00B3               	movwf	ClearLine@start_x
 12787  0BB1  3005               	movlw	5
 12788  0BB2  00B5               	movwf	ClearLine@max_character
 12789  0BB3  275C  3189         	fcall	_ClearLine
 12790                           
 12791                           ;guitar_image.c: 156:             max_index = pci[pickup_indexes[selection_index]].lengt
      +                          h;
 12792  0BB5  0842               	movf	ImageFromPickupConf@selection_index,w
 12793  0BB6  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 12794  0BB7  0086               	movwf	6
 12795  0BB8  3001               	movlw	1	; select bank2/3
 12796  0BB9  0087               	movwf	7
 12797  0BBA  0801               	movf	1,w
 12798  0BBB  00F2               	movwf	___wmul@multiplier
 12799  0BBC  3007               	movlw	7
 12800  0BBD  01F3               	clrf	___wmul@multiplier+1
 12801  0BBE  00F4               	movwf	___wmul@multiplicand
 12802  0BBF  01F5               	clrf	___wmul@multiplicand+1
 12803  0BC0  273D  3189         	fcall	___wmul
 12804  0BC2  3079               	movlw	121
 12805  0BC3  0020               	movlb	0	; select bank0
 12806  0BC4  00C5               	movwf	??_ImageFromPickupConf
 12807  0BC5  3023               	movlw	35
 12808  0BC6  2BE4               	goto	L13
 12809  0BC7                     l4695:	
 12810                           ;guitar_image.c: 157:         }
 12811                           
 12812                           
 12813                           ;guitar_image.c: 159:             ClearLine(start_x, 7);
 12814  0BC7  0022               	movlb	2	; select bank2
 12815  0BC8  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 12816  0BC9  0020               	movlb	0	; select bank0
 12817  0BCA  00B4               	movwf	ClearLine@start_x+1
 12818  0BCB  0022               	movlb	2	; select bank2
 12819  0BCC  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 12820  0BCD  0020               	movlb	0	; select bank0
 12821  0BCE  00B3               	movwf	ClearLine@start_x
 12822  0BCF  3007               	movlw	7
 12823  0BD0  00B5               	movwf	ClearLine@max_character
 12824  0BD1  275C  3189         	fcall	_ClearLine
 12825                           
 12826                           ;guitar_image.c: 160:             max_index = gpci[pickup_indexes[selection_index]].leng
      +                          th;
 12827  0BD3  0842               	movf	ImageFromPickupConf@selection_index,w
 12828  0BD4  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 12829  0BD5  0086               	movwf	6
 12830  0BD6  3001               	movlw	1	; select bank2/3
 12831  0BD7  0087               	movwf	7
 12832  0BD8  0801               	movf	1,w
 12833  0BD9  00F2               	movwf	___wmul@multiplier
 12834  0BDA  300B               	movlw	11
 12835  0BDB  01F3               	clrf	___wmul@multiplier+1
 12836  0BDC  00F4               	movwf	___wmul@multiplicand
 12837  0BDD  01F5               	clrf	___wmul@multiplicand+1
 12838  0BDE  273D  3189         	fcall	___wmul
 12839  0BE0  307C               	movlw	124
 12840  0BE1  0020               	movlb	0	; select bank0
 12841  0BE2  00C5               	movwf	??_ImageFromPickupConf
 12842  0BE3  3022               	movlw	34
 12843  0BE4                     L13:
 12844  0BE4  00C6               	movwf	??_ImageFromPickupConf+1
 12845  0BE5  0872               	movf	?___wmul,w
 12846  0BE6  0745               	addwf	??_ImageFromPickupConf,w
 12847  0BE7  0086               	movwf	6
 12848  0BE8  0873               	movf	?___wmul+1,w
 12849  0BE9  3D46               	addwfc	??_ImageFromPickupConf+1,w
 12850  0BEA  0087               	movwf	7
 12851  0BEB  0801               	movf	1,w
 12852  0BEC  0022               	movlb	2	; select bank2
 12853  0BED  00C2               	movwf	ImageFromPickupConf@max_index^(0+256)
 12854                           
 12855                           ;guitar_image.c: 163:         start_y = (296 >> 1) + (((max_index + 2) * character_heigh
      +                          t_rot + arrow_image_height_rot) >> 1);
 12856  0BEE  00F2               	movwf	___wmul@multiplier
 12857  0BEF  3019               	movlw	25
 12858  0BF0  01F3               	clrf	___wmul@multiplier+1
 12859  0BF1  00F4               	movwf	___wmul@multiplicand
 12860  0BF2  01F5               	clrf	___wmul@multiplicand+1
 12861  0BF3  273D  3189         	fcall	___wmul
 12862  0BF5  0872               	movf	?___wmul,w
 12863  0BF6  3E6F               	addlw	111
 12864  0BF7  0020               	movlb	0	; select bank0
 12865  0BF8  00C5               	movwf	??_ImageFromPickupConf
 12866  0BF9  3000               	movlw	0
 12867  0BFA  3D73               	addwfc	?___wmul+1,w
 12868  0BFB  00C6               	movwf	??_ImageFromPickupConf+1
 12869  0BFC  0D46               	rlf	??_ImageFromPickupConf+1,w
 12870  0BFD  0C46               	rrf	??_ImageFromPickupConf+1,w
 12871  0BFE  0022               	movlb	2	; select bank2
 12872  0BFF  00C5               	movwf	(ImageFromPickupConf@start_y+1)^(0+256)
 12873  0C00  0020               	movlb	0	; select bank0
 12874  0C01  0C45               	rrf	??_ImageFromPickupConf,w
 12875  0C02  0022               	movlb	2	; select bank2
 12876  0C03  00C4               	movwf	ImageFromPickupConf@start_y^(0+256)
 12877  0C04  3094               	movlw	148
 12878  0C05  07C4               	addwf	ImageFromPickupConf@start_y^(0+256),f
 12879  0C06  1803               	skipnc
 12880  0C07  0AC5               	incf	(ImageFromPickupConf@start_y+1)^(0+256),f
 12881  0C08  3019               	movlw	25
 12882  0C09  02C4               	subwf	ImageFromPickupConf@start_y^(0+256),f
 12883  0C0A  3000               	movlw	0
 12884  0C0B  3BC5               	subwfb	(ImageFromPickupConf@start_y+1)^(0+256),f
 12885                           
 12886                           ;guitar_image.c: 165:         if(bracket)
 12887  0C0C  0020               	movlb	0	; select bank0
 12888  0C0D  0843               	movf	ImageFromPickupConf@bracket,w
 12889  0C0E  1903               	btfsc	3,2
 12890  0C0F  2C2F               	goto	l4709
 12891  0C10  30B7               	movlw	low (_bracket_left_rot| (0+32768))
 12892  0C11  00A8               	movwf	SetFrameMemoryPartial@image_buffer
 12893  0C12  3094               	movlw	high (_bracket_left_rot| (0+32768))
 12894  0C13  00A9               	movwf	SetFrameMemoryPartial@image_buffer+1
 12895  0C14  0022               	movlb	2	; select bank2
 12896  0C15  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 12897  0C16  0020               	movlb	0	; select bank0
 12898  0C17  00AB               	movwf	SetFrameMemoryPartial@x+1
 12899  0C18  0022               	movlb	2	; select bank2
 12900  0C19  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 12901  0C1A  0020               	movlb	0	; select bank0
 12902  0C1B  00AA               	movwf	SetFrameMemoryPartial@x
 12903  0C1C  0022               	movlb	2	; select bank2
 12904  0C1D  0845               	movf	(ImageFromPickupConf@start_y+1)^(0+256),w
 12905  0C1E  0020               	movlb	0	; select bank0
 12906  0C1F  00AD               	movwf	SetFrameMemoryPartial@y+1
 12907  0C20  0022               	movlb	2	; select bank2
 12908  0C21  0844               	movf	ImageFromPickupConf@start_y^(0+256),w
 12909  0C22  0020               	movlb	0	; select bank0
 12910  0C23  00AC               	movwf	SetFrameMemoryPartial@y
 12911  0C24  3018               	movlw	24
 12912  0C25  00AE               	movwf	SetFrameMemoryPartial@image_width
 12913  0C26  3019               	movlw	25
 12914  0C27  01AF               	clrf	SetFrameMemoryPartial@image_width+1
 12915  0C28  00B0               	movwf	SetFrameMemoryPartial@image_height
 12916  0C29  01B1               	clrf	SetFrameMemoryPartial@image_height+1
 12917  0C2A  01B2               	clrf	SetFrameMemoryPartial@invert_color
 12918  0C2B  0AB2               	incf	SetFrameMemoryPartial@invert_color,f
 12919  0C2C  3189  210A  3189   	fcall	_SetFrameMemoryPartial
 12920  0C2F                     l4709:
 12921  0C2F  303D               	movlw	61
 12922  0C30  0022               	movlb	2	; select bank2
 12923  0C31  02C4               	subwf	ImageFromPickupConf@start_y^(0+256),f
 12924  0C32  3000               	movlw	0
 12925  0C33  3BC5               	subwfb	(ImageFromPickupConf@start_y+1)^(0+256),f
 12926  0C34  0020               	movlb	0	; select bank0
 12927  0C35  3542               	lslf	ImageFromPickupConf@selection_index,w
 12928  0C36  3E2A               	addlw	(low (ImageFromPickupConf@arrow_type| (0+256)))& (0+255)
 12929  0C37  0086               	movwf	6
 12930  0C38  3001               	movlw	1	; select bank2/3
 12931  0C39  0087               	movwf	7
 12932  0C3A  3F40               	moviw [0]fsr1
 12933  0C3B  00A8               	movwf	SetFrameMemoryPartial@image_buffer
 12934  0C3C  3F41               	moviw [1]fsr1
 12935  0C3D  00A9               	movwf	SetFrameMemoryPartial@image_buffer+1
 12936  0C3E  0022               	movlb	2	; select bank2
 12937  0C3F  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 12938  0C40  0020               	movlb	0	; select bank0
 12939  0C41  00AB               	movwf	SetFrameMemoryPartial@x+1
 12940  0C42  0022               	movlb	2	; select bank2
 12941  0C43  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 12942  0C44  0020               	movlb	0	; select bank0
 12943  0C45  00AA               	movwf	SetFrameMemoryPartial@x
 12944  0C46  0022               	movlb	2	; select bank2
 12945  0C47  0845               	movf	(ImageFromPickupConf@start_y+1)^(0+256),w
 12946  0C48  0020               	movlb	0	; select bank0
 12947  0C49  00AD               	movwf	SetFrameMemoryPartial@y+1
 12948  0C4A  0022               	movlb	2	; select bank2
 12949  0C4B  0844               	movf	ImageFromPickupConf@start_y^(0+256),w
 12950  0C4C  0020               	movlb	0	; select bank0
 12951  0C4D  00AC               	movwf	SetFrameMemoryPartial@y
 12952  0C4E  3018               	movlw	24
 12953  0C4F  00AE               	movwf	SetFrameMemoryPartial@image_width
 12954  0C50  303D               	movlw	61
 12955  0C51  01AF               	clrf	SetFrameMemoryPartial@image_width+1
 12956  0C52  00B0               	movwf	SetFrameMemoryPartial@image_height
 12957  0C53  01B1               	clrf	SetFrameMemoryPartial@image_height+1
 12958  0C54  01B2               	clrf	SetFrameMemoryPartial@invert_color
 12959  0C55  0AB2               	incf	SetFrameMemoryPartial@invert_color,f
 12960  0C56  3189  210A  3189   	fcall	_SetFrameMemoryPartial
 12961  0C59                     l4725:	
 12962                           ;guitar_image.c: 171:         while(index < max_index){
 12963                           
 12964                           
 12965                           ;guitar_image.c: 171:         while(index < max_index){
 12966  0C59  0022               	movlb	2	; select bank2
 12967  0C5A  0843               	movf	ImageFromPickupConf@index^(0+256),w
 12968  0C5B  0020               	movlb	0	; select bank0
 12969  0C5C  00C5               	movwf	??_ImageFromPickupConf
 12970  0C5D  01C6               	clrf	??_ImageFromPickupConf+1
 12971  0C5E  1BC5               	btfsc	??_ImageFromPickupConf,7
 12972  0C5F  03C6               	decf	??_ImageFromPickupConf+1,f
 12973  0C60  0846               	movf	??_ImageFromPickupConf+1,w
 12974  0C61  3A80               	xorlw	128
 12975  0C62  00C7               	movwf	??_ImageFromPickupConf+2
 12976  0C63  3080               	movlw	128
 12977  0C64  0247               	subwf	??_ImageFromPickupConf+2,w
 12978  0C65  1D03               	skipz
 12979  0C66  2C6B               	goto	u3385
 12980  0C67  0022               	movlb	2	; select bank2
 12981  0C68  0842               	movf	ImageFromPickupConf@max_index^(0+256),w
 12982  0C69  0020               	movlb	0	; select bank0
 12983  0C6A  0245               	subwf	??_ImageFromPickupConf,w
 12984  0C6B                     u3385:
 12985  0C6B  3019               	movlw	25
 12986  0C6C  1803               	btfsc	3,0
 12987  0C6D  2CF0               	goto	L17
 12988  0C6E  0022               	movlb	2	; select bank2
 12989  0C6F  02C4               	subwf	ImageFromPickupConf@start_y^(0+256),f
 12990  0C70  3000               	movlw	0
 12991  0C71  3BC5               	subwfb	(ImageFromPickupConf@start_y+1)^(0+256),f
 12992                           
 12993                           ;guitar_image.c: 173:             if(selection_index < 3)
 12994  0C72  0020               	movlb	0	; select bank0
 12995  0C73  0842               	movf	ImageFromPickupConf@selection_index,w
 12996  0C74  3A80               	xorlw	128
 12997  0C75  3E7D               	addlw	-131
 12998  0C76  1803               	skipnc
 12999  0C77  2CA2               	goto	l4719
 13000  0C78  0022               	movlb	2	; select bank2
 13001  0C79  0843               	movf	ImageFromPickupConf@index^(0+256),w
 13002  0C7A  0020               	movlb	0	; select bank0
 13003  0C7B  00C5               	movwf	??_ImageFromPickupConf
 13004  0C7C  01C6               	clrf	??_ImageFromPickupConf+1
 13005  0C7D  35C5               	lslf	??_ImageFromPickupConf,f
 13006  0C7E  0DC6               	rlf	??_ImageFromPickupConf+1,f
 13007  0C7F  0842               	movf	ImageFromPickupConf@selection_index,w
 13008  0C80  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 13009  0C81  0086               	movwf	6
 13010  0C82  3001               	movlw	1	; select bank2/3
 13011  0C83  0087               	movwf	7
 13012  0C84  0801               	movf	1,w
 13013  0C85  00F2               	movwf	___wmul@multiplier
 13014  0C86  3007               	movlw	7
 13015  0C87  01F3               	clrf	___wmul@multiplier+1
 13016  0C88  00F4               	movwf	___wmul@multiplicand
 13017  0C89  01F5               	clrf	___wmul@multiplicand+1
 13018  0C8A  273D  3189         	fcall	___wmul
 13019  0C8C  307A               	movlw	122
 13020  0C8D  0020               	movlb	0	; select bank0
 13021  0C8E  00C7               	movwf	??_ImageFromPickupConf+2
 13022  0C8F  3023               	movlw	35
 13023  0C90  00C8               	movwf	??_ImageFromPickupConf+3
 13024  0C91  0872               	movf	?___wmul,w
 13025  0C92  0747               	addwf	??_ImageFromPickupConf+2,w
 13026  0C93  00C9               	movwf	??_ImageFromPickupConf+4
 13027  0C94  0873               	movf	?___wmul+1,w
 13028  0C95  3D48               	addwfc	??_ImageFromPickupConf+3,w
 13029  0C96  00CA               	movwf	??_ImageFromPickupConf+5
 13030  0C97  0845               	movf	??_ImageFromPickupConf,w
 13031  0C98  0749               	addwf	??_ImageFromPickupConf+4,w
 13032  0C99  0086               	movwf	6
 13033  0C9A  0846               	movf	??_ImageFromPickupConf+1,w
 13034  0C9B  3D4A               	addwfc	??_ImageFromPickupConf+5,w
 13035  0C9C  0087               	movwf	7
 13036  0C9D  3F40               	moviw [0]fsr1
 13037  0C9E  0022               	movlb	2	; select bank2
 13038  0C9F  00C0               	movwf	_ImageFromPickupConf$2142^(0+256)
 13039  0CA0  3F41               	moviw [1]fsr1
 13040  0CA1  2CCB               	goto	L15
 13041  0CA2                     l4719:
 13042  0CA2  0022               	movlb	2	; select bank2
 13043  0CA3  0843               	movf	ImageFromPickupConf@index^(0+256),w
 13044  0CA4  0020               	movlb	0	; select bank0
 13045  0CA5  00C5               	movwf	??_ImageFromPickupConf
 13046  0CA6  01C6               	clrf	??_ImageFromPickupConf+1
 13047  0CA7  35C5               	lslf	??_ImageFromPickupConf,f
 13048  0CA8  0DC6               	rlf	??_ImageFromPickupConf+1,f
 13049  0CA9  0842               	movf	ImageFromPickupConf@selection_index,w
 13050  0CAA  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 13051  0CAB  0086               	movwf	6
 13052  0CAC  3001               	movlw	1	; select bank2/3
 13053  0CAD  0087               	movwf	7
 13054  0CAE  0801               	movf	1,w
 13055  0CAF  00F2               	movwf	___wmul@multiplier
 13056  0CB0  300B               	movlw	11
 13057  0CB1  01F3               	clrf	___wmul@multiplier+1
 13058  0CB2  00F4               	movwf	___wmul@multiplicand
 13059  0CB3  01F5               	clrf	___wmul@multiplicand+1
 13060  0CB4  273D  3189         	fcall	___wmul
 13061  0CB6  307D               	movlw	125
 13062  0CB7  0020               	movlb	0	; select bank0
 13063  0CB8  00C7               	movwf	??_ImageFromPickupConf+2
 13064  0CB9  3022               	movlw	34
 13065  0CBA  00C8               	movwf	??_ImageFromPickupConf+3
 13066  0CBB  0872               	movf	?___wmul,w
 13067  0CBC  0747               	addwf	??_ImageFromPickupConf+2,w
 13068  0CBD  00C9               	movwf	??_ImageFromPickupConf+4
 13069  0CBE  0873               	movf	?___wmul+1,w
 13070  0CBF  3D48               	addwfc	??_ImageFromPickupConf+3,w
 13071  0CC0  00CA               	movwf	??_ImageFromPickupConf+5
 13072  0CC1  0845               	movf	??_ImageFromPickupConf,w
 13073  0CC2  0749               	addwf	??_ImageFromPickupConf+4,w
 13074  0CC3  0086               	movwf	6
 13075  0CC4  0846               	movf	??_ImageFromPickupConf+1,w
 13076  0CC5  3D4A               	addwfc	??_ImageFromPickupConf+5,w
 13077  0CC6  0087               	movwf	7
 13078  0CC7  3F40               	moviw [0]fsr1
 13079  0CC8  0022               	movlb	2	; select bank2
 13080  0CC9  00C0               	movwf	_ImageFromPickupConf$2142^(0+256)
 13081  0CCA  3F41               	moviw [1]fsr1
 13082  0CCB                     L15:
 13083  0CCB  00C1               	movwf	(_ImageFromPickupConf$2142+1)^(0+256)
 13084  0CCC  0020               	movlb	0	; select bank0
 13085  0CCD  00A9               	movwf	SetFrameMemoryPartial@image_buffer+1
 13086  0CCE  0022               	movlb	2	; select bank2
 13087  0CCF  0840               	movf	_ImageFromPickupConf$2142^(0+256),w
 13088  0CD0  0020               	movlb	0	; select bank0
 13089  0CD1  00A8               	movwf	SetFrameMemoryPartial@image_buffer
 13090  0CD2  0022               	movlb	2	; select bank2
 13091  0CD3  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 13092  0CD4  0020               	movlb	0	; select bank0
 13093  0CD5  00AB               	movwf	SetFrameMemoryPartial@x+1
 13094  0CD6  0022               	movlb	2	; select bank2
 13095  0CD7  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 13096  0CD8  0020               	movlb	0	; select bank0
 13097  0CD9  00AA               	movwf	SetFrameMemoryPartial@x
 13098  0CDA  0022               	movlb	2	; select bank2
 13099  0CDB  0845               	movf	(ImageFromPickupConf@start_y+1)^(0+256),w
 13100  0CDC  0020               	movlb	0	; select bank0
 13101  0CDD  00AD               	movwf	SetFrameMemoryPartial@y+1
 13102  0CDE  0022               	movlb	2	; select bank2
 13103  0CDF  0844               	movf	ImageFromPickupConf@start_y^(0+256),w
 13104  0CE0  0020               	movlb	0	; select bank0
 13105  0CE1  00AC               	movwf	SetFrameMemoryPartial@y
 13106  0CE2  3018               	movlw	24
 13107  0CE3  00AE               	movwf	SetFrameMemoryPartial@image_width
 13108  0CE4  3019               	movlw	25
 13109  0CE5  01AF               	clrf	SetFrameMemoryPartial@image_width+1
 13110  0CE6  00B0               	movwf	SetFrameMemoryPartial@image_height
 13111  0CE7  01B1               	clrf	SetFrameMemoryPartial@image_height+1
 13112  0CE8  01B2               	clrf	SetFrameMemoryPartial@invert_color
 13113  0CE9  0AB2               	incf	SetFrameMemoryPartial@invert_color,f
 13114  0CEA  3189  210A  3189   	fcall	_SetFrameMemoryPartial
 13115                           
 13116                           ;guitar_image.c: 177:             index++;
 13117  0CED  0022               	movlb	2	; select bank2
 13118  0CEE  0AC3               	incf	ImageFromPickupConf@index^(0+256),f
 13119  0CEF  2C59               	goto	l4725
 13120  0CF0                     L17:
 13121  0CF0  0022               	movlb	2	; select bank2
 13122  0CF1  02C4               	subwf	ImageFromPickupConf@start_y^(0+256),f
 13123  0CF2  3000               	movlw	0
 13124  0CF3  3BC5               	subwfb	(ImageFromPickupConf@start_y+1)^(0+256),f
 13125                           
 13126                           ;guitar_image.c: 181:         if(bracket)
 13127  0CF4  0020               	movlb	0	; select bank0
 13128  0CF5  0843               	movf	ImageFromPickupConf@bracket,w
 13129  0CF6  1903               	btfsc	3,2
 13130  0CF7  0008               	return
 13131  0CF8  306C               	movlw	low (_bracket_right_rot| (0+32768))
 13132  0CF9  00A8               	movwf	SetFrameMemoryPartial@image_buffer
 13133  0CFA  3094               	movlw	high (_bracket_right_rot| (0+32768))
 13134  0CFB  00A9               	movwf	SetFrameMemoryPartial@image_buffer+1
 13135  0CFC  0022               	movlb	2	; select bank2
 13136  0CFD  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 13137  0CFE  0020               	movlb	0	; select bank0
 13138  0CFF  00AB               	movwf	SetFrameMemoryPartial@x+1
 13139  0D00  0022               	movlb	2	; select bank2
 13140  0D01  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 13141  0D02  0020               	movlb	0	; select bank0
 13142  0D03  00AA               	movwf	SetFrameMemoryPartial@x
 13143  0D04  0022               	movlb	2	; select bank2
 13144  0D05  0845               	movf	(ImageFromPickupConf@start_y+1)^(0+256),w
 13145  0D06  0020               	movlb	0	; select bank0
 13146  0D07  00AD               	movwf	SetFrameMemoryPartial@y+1
 13147  0D08  0022               	movlb	2	; select bank2
 13148  0D09  0844               	movf	ImageFromPickupConf@start_y^(0+256),w
 13149  0D0A  0020               	movlb	0	; select bank0
 13150  0D0B  00AC               	movwf	SetFrameMemoryPartial@y
 13151  0D0C  3018               	movlw	24
 13152  0D0D  00AE               	movwf	SetFrameMemoryPartial@image_width
 13153  0D0E  3019               	movlw	25
 13154  0D0F  01AF               	clrf	SetFrameMemoryPartial@image_width+1
 13155  0D10  00B0               	movwf	SetFrameMemoryPartial@image_height
 13156  0D11  01B1               	clrf	SetFrameMemoryPartial@image_height+1
 13157  0D12  01B2               	clrf	SetFrameMemoryPartial@invert_color
 13158  0D13  0AB2               	incf	SetFrameMemoryPartial@invert_color,f
 13159  0D14  3189  290A         	ljmp	l4415
 13160  0D16                     l4733:
 13161                           
 13162                           ;guitar_image.c: 185:         ClearFrameMemory(0xFF);
 13163  0D16  30FF               	movlw	255
 13164  0D17  27BC  3189         	fcall	_ClearFrameMemory
 13165                           
 13166                           ;guitar_image.c: 189:         start_x = (128 >> 1) - (((((pc->neck == 0) && !draw_empty 
      +                          ? 0 : 1) + ((pc->middle == 0) && !draw_empty ? 0 : 1) + ((pc->bridge == 0) && !draw_empt
      +                          y ? 0 : 1) + 1) * character_width_rot) >> 1);
 13167  0D19  0022               	movlb	2	; select bank2
 13168  0D1A  01A4               	clrf	_ImageFromPickupConf$1279^(0+256)
 13169  0D1B  0AA4               	incf	_ImageFromPickupConf$1279^(0+256),f
 13170  0D1C  01A5               	clrf	(_ImageFromPickupConf$1279+1)^(0+256)
 13171  0D1D  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 13172  0D1E  3E02               	addlw	2
 13173  0D1F  0086               	movwf	6
 13174  0D20  0187               	clrf	7
 13175  0D21  0801               	movf	1,w
 13176  0D22  1D03               	btfss	3,2
 13177  0D23  2D2B               	goto	l4743
 13178  0D24  0020               	movlb	0	; select bank0
 13179  0D25  0844               	movf	ImageFromPickupConf@draw_empty,w
 13180  0D26  1D03               	btfss	3,2
 13181  0D27  2D2B               	goto	l4743
 13182  0D28  0022               	movlb	2	; select bank2
 13183  0D29  01A4               	clrf	_ImageFromPickupConf$1279^(0+256)
 13184  0D2A  01A5               	clrf	(_ImageFromPickupConf$1279+1)^(0+256)
 13185  0D2B                     l4743:
 13186  0D2B  0022               	movlb	2	; select bank2
 13187  0D2C  01A6               	clrf	_ImageFromPickupConf$1280^(0+256)
 13188  0D2D  0AA6               	incf	_ImageFromPickupConf$1280^(0+256),f
 13189  0D2E  01A7               	clrf	(_ImageFromPickupConf$1280+1)^(0+256)
 13190  0D2F  0A4A               	incf	ImageFromPickupConf@pc^(0+256),w
 13191  0D30  0086               	movwf	6
 13192  0D31  0187               	clrf	7
 13193  0D32  0801               	movf	1,w
 13194  0D33  1D03               	btfss	3,2
 13195  0D34  2D3C               	goto	l4751
 13196  0D35  0020               	movlb	0	; select bank0
 13197  0D36  0844               	movf	ImageFromPickupConf@draw_empty,w
 13198  0D37  1D03               	btfss	3,2
 13199  0D38  2D3C               	goto	l4751
 13200  0D39  0022               	movlb	2	; select bank2
 13201  0D3A  01A6               	clrf	_ImageFromPickupConf$1280^(0+256)
 13202  0D3B  01A7               	clrf	(_ImageFromPickupConf$1280+1)^(0+256)
 13203  0D3C                     l4751:
 13204  0D3C  0022               	movlb	2	; select bank2
 13205  0D3D  01A8               	clrf	_ImageFromPickupConf$1281^(0+256)
 13206  0D3E  0AA8               	incf	_ImageFromPickupConf$1281^(0+256),f
 13207  0D3F  01A9               	clrf	(_ImageFromPickupConf$1281+1)^(0+256)
 13208  0D40  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 13209  0D41  0086               	movwf	6
 13210  0D42  0187               	clrf	7
 13211  0D43  0801               	movf	1,w
 13212  0D44  1D03               	btfss	3,2
 13213  0D45  2D4D               	goto	l4759
 13214  0D46  0020               	movlb	0	; select bank0
 13215  0D47  0844               	movf	ImageFromPickupConf@draw_empty,w
 13216  0D48  1D03               	btfss	3,2
 13217  0D49  2D4D               	goto	l4759
 13218  0D4A  0022               	movlb	2	; select bank2
 13219  0D4B  01A8               	clrf	_ImageFromPickupConf$1281^(0+256)
 13220  0D4C  01A9               	clrf	(_ImageFromPickupConf$1281+1)^(0+256)
 13221  0D4D                     l4759:
 13222  0D4D  3040               	movlw	64
 13223  0D4E  0022               	movlb	2	; select bank2
 13224  0D4F  00C8               	movwf	ImageFromPickupConf@start_x^(0+256)
 13225  0D50  01C9               	clrf	(ImageFromPickupConf@start_x+1)^(0+256)
 13226  0D51  0826               	movf	_ImageFromPickupConf$1280^(0+256),w
 13227  0D52  0728               	addwf	_ImageFromPickupConf$1281^(0+256),w
 13228  0D53  00F2               	movwf	___wmul@multiplier
 13229  0D54  0827               	movf	(_ImageFromPickupConf$1280+1)^(0+256),w
 13230  0D55  3D29               	addwfc	(_ImageFromPickupConf$1281+1)^(0+256),w
 13231  0D56  00F3               	movwf	___wmul@multiplier+1
 13232  0D57  0824               	movf	_ImageFromPickupConf$1279^(0+256),w
 13233  0D58  07F2               	addwf	___wmul@multiplier,f
 13234  0D59  0825               	movf	(_ImageFromPickupConf$1279+1)^(0+256),w
 13235  0D5A  3DF3               	addwfc	___wmul@multiplier+1,f
 13236  0D5B  0AF2               	incf	___wmul@multiplier,f
 13237  0D5C  1903               	skipnz
 13238  0D5D  0AF3               	incf	___wmul@multiplier+1,f
 13239  0D5E  3018               	movlw	24
 13240  0D5F  00F4               	movwf	___wmul@multiplicand
 13241  0D60  01F5               	clrf	___wmul@multiplicand+1
 13242  0D61  273D  3189         	fcall	___wmul
 13243  0D63  0872               	movf	?___wmul,w
 13244  0D64  0020               	movlb	0	; select bank0
 13245  0D65  00C5               	movwf	??_ImageFromPickupConf
 13246  0D66  0873               	movf	?___wmul+1,w
 13247  0D67  00C6               	movwf	??_ImageFromPickupConf+1
 13248  0D68  0D46               	rlf	??_ImageFromPickupConf+1,w
 13249  0D69  0CC6               	rrf	??_ImageFromPickupConf+1,f
 13250  0D6A  0CC5               	rrf	??_ImageFromPickupConf,f
 13251  0D6B  0845               	movf	??_ImageFromPickupConf,w
 13252  0D6C  0022               	movlb	2	; select bank2
 13253  0D6D  02C8               	subwf	ImageFromPickupConf@start_x^(0+256),f
 13254  0D6E  0020               	movlb	0	; select bank0
 13255  0D6F  0846               	movf	??_ImageFromPickupConf+1,w
 13256  0D70  0022               	movlb	2	; select bank2
 13257  0D71  3BC9               	subwfb	(ImageFromPickupConf@start_x+1)^(0+256),f
 13258                           
 13259                           ;guitar_image.c: 191:         _Bool need_to_draw_row[4];;guitar_image.c: 192:         ne
      +                          ed_to_draw_row[0] = pc->neck != 0 || draw_empty;
 13260  0D72  01B2               	clrf	_ImageFromPickupConf$1283^(0+256)
 13261  0D73  0AB2               	incf	_ImageFromPickupConf$1283^(0+256),f
 13262  0D74  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 13263  0D75  0086               	movwf	6
 13264  0D76  0187               	clrf	7
 13265  0D77  0801               	movf	1,w
 13266  0D78  1D03               	btfss	3,2
 13267  0D79  2D80               	goto	l4771
 13268  0D7A  0020               	movlb	0	; select bank0
 13269  0D7B  0844               	movf	ImageFromPickupConf@draw_empty,w
 13270  0D7C  1D03               	btfss	3,2
 13271  0D7D  2D80               	goto	l4771
 13272  0D7E  0022               	movlb	2	; select bank2
 13273  0D7F  01B2               	clrf	_ImageFromPickupConf$1283^(0+256)
 13274  0D80                     l4771:
 13275  0D80  0022               	movlb	2	; select bank2
 13276  0D81  0832               	movf	_ImageFromPickupConf$1283^(0+256),w
 13277  0D82  1903               	btfsc	3,2
 13278  0D83  2D86               	goto	u3480
 13279  0D84  3001               	movlw	1
 13280  0D85  2D87               	goto	u3490
 13281  0D86                     u3480:
 13282  0D86  3000               	movlw	0
 13283  0D87                     u3490:
 13284  0D87  00A0               	movwf	ImageFromPickupConf@need_to_draw_row^(0+256)
 13285                           
 13286                           ;guitar_image.c: 193:         need_to_draw_row[1] = pc->middle != 0 || draw_empty;
 13287  0D88  01B3               	clrf	_ImageFromPickupConf$1284^(0+256)
 13288  0D89  0AB3               	incf	_ImageFromPickupConf$1284^(0+256),f
 13289  0D8A  0A4A               	incf	ImageFromPickupConf@pc^(0+256),w
 13290  0D8B  0086               	movwf	6
 13291  0D8C  0187               	clrf	7
 13292  0D8D  0801               	movf	1,w
 13293  0D8E  1D03               	btfss	3,2
 13294  0D8F  2D96               	goto	l4781
 13295  0D90  0020               	movlb	0	; select bank0
 13296  0D91  0844               	movf	ImageFromPickupConf@draw_empty,w
 13297  0D92  1D03               	btfss	3,2
 13298  0D93  2D96               	goto	l4781
 13299  0D94  0022               	movlb	2	; select bank2
 13300  0D95  01B3               	clrf	_ImageFromPickupConf$1284^(0+256)
 13301  0D96                     l4781:
 13302  0D96  0022               	movlb	2	; select bank2
 13303  0D97  0833               	movf	_ImageFromPickupConf$1284^(0+256),w
 13304  0D98  1903               	btfsc	3,2
 13305  0D99  2D9C               	goto	u3520
 13306  0D9A  3001               	movlw	1
 13307  0D9B  2D9D               	goto	u3530
 13308  0D9C                     u3520:
 13309  0D9C  3000               	movlw	0
 13310  0D9D                     u3530:
 13311  0D9D  00A1               	movwf	(ImageFromPickupConf@need_to_draw_row^(0+256)+1)
 13312                           
 13313                           ;guitar_image.c: 194:         need_to_draw_row[2] = pc->bridge != 0 || draw_empty;
 13314  0D9E  01B4               	clrf	_ImageFromPickupConf$1285^(0+256)
 13315  0D9F  0AB4               	incf	_ImageFromPickupConf$1285^(0+256),f
 13316  0DA0  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 13317  0DA1  3E02               	addlw	2
 13318  0DA2  0086               	movwf	6
 13319  0DA3  0187               	clrf	7
 13320  0DA4  0801               	movf	1,w
 13321  0DA5  1D03               	btfss	3,2
 13322  0DA6  2DAD               	goto	l4791
 13323  0DA7  0020               	movlb	0	; select bank0
 13324  0DA8  0844               	movf	ImageFromPickupConf@draw_empty,w
 13325  0DA9  1D03               	btfss	3,2
 13326  0DAA  2DAD               	goto	l4791
 13327  0DAB  0022               	movlb	2	; select bank2
 13328  0DAC  01B4               	clrf	_ImageFromPickupConf$1285^(0+256)
 13329  0DAD                     l4791:
 13330  0DAD  0022               	movlb	2	; select bank2
 13331  0DAE  0834               	movf	_ImageFromPickupConf$1285^(0+256),w
 13332  0DAF  1903               	btfsc	3,2
 13333  0DB0  2DB3               	goto	u3560
 13334  0DB1  3001               	movlw	1
 13335  0DB2  2DB4               	goto	u3570
 13336  0DB3                     u3560:
 13337  0DB3  3000               	movlw	0
 13338  0DB4                     u3570:
 13339  0DB4  00A2               	movwf	(ImageFromPickupConf@need_to_draw_row^(0+256)+2)
 13340                           
 13341                           ;guitar_image.c: 195:         need_to_draw_row[3] = 1;
 13342  0DB5  01A3               	clrf	(ImageFromPickupConf@need_to_draw_row^(0+256)+3)
 13343  0DB6  0AA3               	incf	(ImageFromPickupConf@need_to_draw_row^(0+256)+3),f
 13344                           
 13345                           ;guitar_image.c: 196:         _Bool need_to_skip_row[4];;guitar_image.c: 197:         ne
      +                          ed_to_skip_row[0] = 0;
 13346  0DB7  01B8               	clrf	ImageFromPickupConf@need_to_skip_row^(0+256)
 13347                           
 13348                           ;guitar_image.c: 198:         need_to_skip_row[1] = pc->neck != 0 || draw_empty;
 13349  0DB8  01B5               	clrf	_ImageFromPickupConf$1287^(0+256)
 13350  0DB9  0AB5               	incf	_ImageFromPickupConf$1287^(0+256),f
 13351  0DBA  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 13352  0DBB  0086               	movwf	6
 13353  0DBC  0187               	clrf	7
 13354  0DBD  0801               	movf	1,w
 13355  0DBE  1D03               	btfss	3,2
 13356  0DBF  2DC6               	goto	l4805
 13357  0DC0  0020               	movlb	0	; select bank0
 13358  0DC1  0844               	movf	ImageFromPickupConf@draw_empty,w
 13359  0DC2  1D03               	btfss	3,2
 13360  0DC3  2DC6               	goto	l4805
 13361  0DC4  0022               	movlb	2	; select bank2
 13362  0DC5  01B5               	clrf	_ImageFromPickupConf$1287^(0+256)
 13363  0DC6                     l4805:
 13364  0DC6  0022               	movlb	2	; select bank2
 13365  0DC7  0835               	movf	_ImageFromPickupConf$1287^(0+256),w
 13366  0DC8  1903               	btfsc	3,2
 13367  0DC9  2DCC               	goto	u3600
 13368  0DCA  3001               	movlw	1
 13369  0DCB  2DCD               	goto	u3610
 13370  0DCC                     u3600:
 13371  0DCC  3000               	movlw	0
 13372  0DCD                     u3610:
 13373  0DCD  00B9               	movwf	(ImageFromPickupConf@need_to_skip_row^(0+256)+1)
 13374                           
 13375                           ;guitar_image.c: 199:         need_to_skip_row[2] = need_to_skip_row[1] || pc->middle !=
      +                           0;
 13376  0DCE  01B6               	clrf	_ImageFromPickupConf$1288^(0+256)
 13377  0DCF  0AB6               	incf	_ImageFromPickupConf$1288^(0+256),f
 13378  0DD0  0839               	movf	(ImageFromPickupConf@need_to_skip_row^(0+256)+1),w
 13379  0DD1  1D03               	btfss	3,2
 13380  0DD2  2DD9               	goto	l4815
 13381  0DD3  0A4A               	incf	ImageFromPickupConf@pc^(0+256),w
 13382  0DD4  0086               	movwf	6
 13383  0DD5  0187               	clrf	7
 13384  0DD6  0801               	movf	1,w
 13385  0DD7  1903               	btfsc	3,2
 13386  0DD8  01B6               	clrf	_ImageFromPickupConf$1288^(0+256)
 13387  0DD9                     l4815:
 13388  0DD9  0836               	movf	_ImageFromPickupConf$1288^(0+256),w
 13389  0DDA  1903               	btfsc	3,2
 13390  0DDB  2DDE               	goto	u3640
 13391  0DDC  3001               	movlw	1
 13392  0DDD  2DDF               	goto	u3650
 13393  0DDE                     u3640:
 13394  0DDE  3000               	movlw	0
 13395  0DDF                     u3650:
 13396  0DDF  00BA               	movwf	(ImageFromPickupConf@need_to_skip_row^(0+256)+2)
 13397                           
 13398                           ;guitar_image.c: 200:         need_to_skip_row[3] = need_to_skip_row[2] || pc->bridge !=
      +                           0;
 13399  0DE0  01B7               	clrf	_ImageFromPickupConf$1289^(0+256)
 13400  0DE1  0AB7               	incf	_ImageFromPickupConf$1289^(0+256),f
 13401  0DE2  083A               	movf	(ImageFromPickupConf@need_to_skip_row^(0+256)+2),w
 13402  0DE3  1D03               	btfss	3,2
 13403  0DE4  2DEC               	goto	l4825
 13404  0DE5  084A               	movf	ImageFromPickupConf@pc^(0+256),w
 13405  0DE6  3E02               	addlw	2
 13406  0DE7  0086               	movwf	6
 13407  0DE8  0187               	clrf	7
 13408  0DE9  0801               	movf	1,w
 13409  0DEA  1903               	btfsc	3,2
 13410  0DEB  01B7               	clrf	_ImageFromPickupConf$1289^(0+256)
 13411  0DEC                     l4825:
 13412  0DEC  0837               	movf	_ImageFromPickupConf$1289^(0+256),w
 13413  0DED  1903               	btfsc	3,2
 13414  0DEE  2DF1               	goto	u3680
 13415  0DEF  3001               	movlw	1
 13416  0DF0  2DF2               	goto	u3690
 13417  0DF1                     u3680:
 13418  0DF1  3000               	movlw	0
 13419  0DF2                     u3690:
 13420  0DF2  00BB               	movwf	(ImageFromPickupConf@need_to_skip_row^(0+256)+3)
 13421                           
 13422                           ;guitar_image.c: 201:         int i;;guitar_image.c: 202:         for(i = 0; i < 4; ++i)
 13423  0DF3  01C6               	clrf	ImageFromPickupConf@i^(0+256)
 13424  0DF4  01C7               	clrf	(ImageFromPickupConf@i+1)^(0+256)
 13425  0DF5                     l4829:
 13426  0DF5  0847               	movf	(ImageFromPickupConf@i+1)^(0+256),w
 13427  0DF6  3A80               	xorlw	128
 13428  0DF7  0020               	movlb	0	; select bank0
 13429  0DF8  00C5               	movwf	??_ImageFromPickupConf
 13430  0DF9  3080               	movlw	128
 13431  0DFA  0245               	subwf	??_ImageFromPickupConf,w
 13432  0DFB  1D03               	skipz
 13433  0DFC  2E00               	goto	u3705
 13434  0DFD  3004               	movlw	4
 13435  0DFE  0022               	movlb	2	; select bank2
 13436  0DFF  0246               	subwf	ImageFromPickupConf@i^(0+256),w
 13437  0E00                     u3705:
 13438  0E00  1803               	btfsc	3,0
 13439  0E01  0008               	return
 13440                           
 13441                           ;guitar_image.c: 203:         {;guitar_image.c: 204:             if(need_to_draw_row[i])
 13442  0E02  0022               	movlb	2	; select bank2
 13443  0E03  0846               	movf	ImageFromPickupConf@i^(0+256),w
 13444  0E04  3E20               	addlw	(low (ImageFromPickupConf@need_to_draw_row| (0+256)))& (0+255)
 13445  0E05  0086               	movwf	6
 13446  0E06  3001               	movlw	1	; select bank2/3
 13447  0E07  0087               	movwf	7
 13448  0E08  0801               	movf	1,w
 13449  0E09  1903               	btfsc	3,2
 13450  0E0A  2F38               	goto	l4869
 13451                           
 13452                           ;guitar_image.c: 205:             {;guitar_image.c: 206:                 if(i < 3)
 13453  0E0B  0847               	movf	(ImageFromPickupConf@i+1)^(0+256),w
 13454  0E0C  3A80               	xorlw	128
 13455  0E0D  0020               	movlb	0	; select bank0
 13456  0E0E  00C5               	movwf	??_ImageFromPickupConf
 13457  0E0F  3080               	movlw	128
 13458  0E10  0245               	subwf	??_ImageFromPickupConf,w
 13459  0E11  1D03               	skipz
 13460  0E12  2E16               	goto	u3725
 13461  0E13  3003               	movlw	3
 13462  0E14  0022               	movlb	2	; select bank2
 13463  0E15  0246               	subwf	ImageFromPickupConf@i^(0+256),w
 13464  0E16                     u3725:
 13465  0E16  1803               	skipnc
 13466  0E17  2E2B               	goto	l4839
 13467                           
 13468                           ;guitar_image.c: 207:                     max_index = pci[pickup_indexes[i]].length;
 13469  0E18  0022               	movlb	2	; select bank2
 13470  0E19  0846               	movf	ImageFromPickupConf@i^(0+256),w
 13471  0E1A  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 13472  0E1B  0086               	movwf	6
 13473  0E1C  3001               	movlw	1	; select bank2/3
 13474  0E1D  0087               	movwf	7
 13475  0E1E  0801               	movf	1,w
 13476  0E1F  00F2               	movwf	___wmul@multiplier
 13477  0E20  3007               	movlw	7
 13478  0E21  01F3               	clrf	___wmul@multiplier+1
 13479  0E22  00F4               	movwf	___wmul@multiplicand
 13480  0E23  01F5               	clrf	___wmul@multiplicand+1
 13481  0E24  273D  3189         	fcall	___wmul
 13482  0E26  3079               	movlw	121
 13483  0E27  0020               	movlb	0	; select bank0
 13484  0E28  00C5               	movwf	??_ImageFromPickupConf
 13485  0E29  3023               	movlw	35
 13486  0E2A  2E3D               	goto	L14
 13487  0E2B                     l4839:
 13488                           
 13489                           ;guitar_image.c: 209:                     max_index = gpci[pickup_indexes[i]].length;
 13490  0E2B  0022               	movlb	2	; select bank2
 13491  0E2C  0846               	movf	ImageFromPickupConf@i^(0+256),w
 13492  0E2D  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 13493  0E2E  0086               	movwf	6
 13494  0E2F  3001               	movlw	1	; select bank2/3
 13495  0E30  0087               	movwf	7
 13496  0E31  0801               	movf	1,w
 13497  0E32  00F2               	movwf	___wmul@multiplier
 13498  0E33  300B               	movlw	11
 13499  0E34  01F3               	clrf	___wmul@multiplier+1
 13500  0E35  00F4               	movwf	___wmul@multiplicand
 13501  0E36  01F5               	clrf	___wmul@multiplicand+1
 13502  0E37  273D  3189         	fcall	___wmul
 13503  0E39  307C               	movlw	124
 13504  0E3A  0020               	movlb	0	; select bank0
 13505  0E3B  00C5               	movwf	??_ImageFromPickupConf
 13506  0E3C  3022               	movlw	34
 13507  0E3D                     L14:
 13508  0E3D  00C6               	movwf	??_ImageFromPickupConf+1
 13509  0E3E  0872               	movf	?___wmul,w
 13510  0E3F  0745               	addwf	??_ImageFromPickupConf,w
 13511  0E40  0086               	movwf	6
 13512  0E41  0873               	movf	?___wmul+1,w
 13513  0E42  3D46               	addwfc	??_ImageFromPickupConf+1,w
 13514  0E43  0087               	movwf	7
 13515  0E44  0801               	movf	1,w
 13516  0E45  0022               	movlb	2	; select bank2
 13517  0E46  00C2               	movwf	ImageFromPickupConf@max_index^(0+256)
 13518                           
 13519                           ;guitar_image.c: 210:                 if(need_to_skip_row[i])
 13520  0E47  0846               	movf	ImageFromPickupConf@i^(0+256),w
 13521  0E48  3E38               	addlw	(low (ImageFromPickupConf@need_to_skip_row| (0+256)))& (0+255)
 13522  0E49  0086               	movwf	6
 13523  0E4A  3001               	movlw	1	; select bank2/3
 13524  0E4B  0087               	movwf	7
 13525  0E4C  0801               	movf	1,w
 13526  0E4D  1903               	btfsc	3,2
 13527  0E4E  2E53               	goto	l4845
 13528  0E4F  3018               	movlw	24
 13529  0E50  07C8               	addwf	ImageFromPickupConf@start_x^(0+256),f
 13530  0E51  1803               	skipnc
 13531  0E52  0AC9               	incf	(ImageFromPickupConf@start_x+1)^(0+256),f
 13532  0E53                     l4845:
 13533  0E53  0842               	movf	ImageFromPickupConf@max_index^(0+256),w
 13534  0E54  00F2               	movwf	___wmul@multiplier
 13535  0E55  3019               	movlw	25
 13536  0E56  01F3               	clrf	___wmul@multiplier+1
 13537  0E57  00F4               	movwf	___wmul@multiplicand
 13538  0E58  01F5               	clrf	___wmul@multiplicand+1
 13539  0E59  273D  3189         	fcall	___wmul
 13540  0E5B  0872               	movf	?___wmul,w
 13541  0E5C  3E3D               	addlw	61
 13542  0E5D  0020               	movlb	0	; select bank0
 13543  0E5E  00C5               	movwf	??_ImageFromPickupConf
 13544  0E5F  3000               	movlw	0
 13545  0E60  3D73               	addwfc	?___wmul+1,w
 13546  0E61  00C6               	movwf	??_ImageFromPickupConf+1
 13547  0E62  0D46               	rlf	??_ImageFromPickupConf+1,w
 13548  0E63  0C46               	rrf	??_ImageFromPickupConf+1,w
 13549  0E64  0022               	movlb	2	; select bank2
 13550  0E65  00C5               	movwf	(ImageFromPickupConf@start_y+1)^(0+256)
 13551  0E66  0020               	movlb	0	; select bank0
 13552  0E67  0C45               	rrf	??_ImageFromPickupConf,w
 13553  0E68  0022               	movlb	2	; select bank2
 13554  0E69  00C4               	movwf	ImageFromPickupConf@start_y^(0+256)
 13555  0E6A  3094               	movlw	148
 13556  0E6B  07C4               	addwf	ImageFromPickupConf@start_y^(0+256),f
 13557  0E6C  1803               	skipnc
 13558  0E6D  0AC5               	incf	(ImageFromPickupConf@start_y+1)^(0+256),f
 13559  0E6E  303D               	movlw	61
 13560  0E6F  02C4               	subwf	ImageFromPickupConf@start_y^(0+256),f
 13561  0E70  3000               	movlw	0
 13562  0E71  3BC5               	subwfb	(ImageFromPickupConf@start_y+1)^(0+256),f
 13563  0E72  3546               	lslf	ImageFromPickupConf@i^(0+256),w
 13564  0E73  3E2A               	addlw	(low (ImageFromPickupConf@arrow_type| (0+256)))& (0+255)
 13565  0E74  0086               	movwf	6
 13566  0E75  3001               	movlw	1	; select bank2/3
 13567  0E76  0087               	movwf	7
 13568  0E77  3F40               	moviw [0]fsr1
 13569  0E78  0020               	movlb	0	; select bank0
 13570  0E79  00A8               	movwf	SetFrameMemoryPartial@image_buffer
 13571  0E7A  3F41               	moviw [1]fsr1
 13572  0E7B  00A9               	movwf	SetFrameMemoryPartial@image_buffer+1
 13573  0E7C  0022               	movlb	2	; select bank2
 13574  0E7D  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 13575  0E7E  0020               	movlb	0	; select bank0
 13576  0E7F  00AB               	movwf	SetFrameMemoryPartial@x+1
 13577  0E80  0022               	movlb	2	; select bank2
 13578  0E81  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 13579  0E82  0020               	movlb	0	; select bank0
 13580  0E83  00AA               	movwf	SetFrameMemoryPartial@x
 13581  0E84  0022               	movlb	2	; select bank2
 13582  0E85  0845               	movf	(ImageFromPickupConf@start_y+1)^(0+256),w
 13583  0E86  0020               	movlb	0	; select bank0
 13584  0E87  00AD               	movwf	SetFrameMemoryPartial@y+1
 13585  0E88  0022               	movlb	2	; select bank2
 13586  0E89  0844               	movf	ImageFromPickupConf@start_y^(0+256),w
 13587  0E8A  0020               	movlb	0	; select bank0
 13588  0E8B  00AC               	movwf	SetFrameMemoryPartial@y
 13589  0E8C  3018               	movlw	24
 13590  0E8D  00AE               	movwf	SetFrameMemoryPartial@image_width
 13591  0E8E  303D               	movlw	61
 13592  0E8F  01AF               	clrf	SetFrameMemoryPartial@image_width+1
 13593  0E90  00B0               	movwf	SetFrameMemoryPartial@image_height
 13594  0E91  01B1               	clrf	SetFrameMemoryPartial@image_height+1
 13595  0E92  01B2               	clrf	SetFrameMemoryPartial@invert_color
 13596  0E93  0AB2               	incf	SetFrameMemoryPartial@invert_color,f
 13597  0E94  3189  210A  3189   	fcall	_SetFrameMemoryPartial
 13598                           
 13599                           ;guitar_image.c: 215:                 index = 0;
 13600  0E97  0022               	movlb	2	; select bank2
 13601  0E98  01C3               	clrf	ImageFromPickupConf@index^(0+256)
 13602  0E99                     l4867:	
 13603                           ;guitar_image.c: 216:                 while(index < max_index)
 13604                           
 13605                           
 13606                           ;guitar_image.c: 216:                 while(index < max_index)
 13607  0E99  0843               	movf	ImageFromPickupConf@index^(0+256),w
 13608  0E9A  0020               	movlb	0	; select bank0
 13609  0E9B  00C5               	movwf	??_ImageFromPickupConf
 13610  0E9C  01C6               	clrf	??_ImageFromPickupConf+1
 13611  0E9D  1BC5               	btfsc	??_ImageFromPickupConf,7
 13612  0E9E  03C6               	decf	??_ImageFromPickupConf+1,f
 13613  0E9F  0846               	movf	??_ImageFromPickupConf+1,w
 13614  0EA0  3A80               	xorlw	128
 13615  0EA1  00C7               	movwf	??_ImageFromPickupConf+2
 13616  0EA2  3080               	movlw	128
 13617  0EA3  0247               	subwf	??_ImageFromPickupConf+2,w
 13618  0EA4  1D03               	skipz
 13619  0EA5  2EAA               	goto	u3755
 13620  0EA6  0022               	movlb	2	; select bank2
 13621  0EA7  0842               	movf	ImageFromPickupConf@max_index^(0+256),w
 13622  0EA8  0020               	movlb	0	; select bank0
 13623  0EA9  0245               	subwf	??_ImageFromPickupConf,w
 13624  0EAA                     u3755:
 13625  0EAA  1803               	btfsc	3,0
 13626  0EAB  2F38               	goto	l4869
 13627  0EAC  3019               	movlw	25
 13628  0EAD  0022               	movlb	2	; select bank2
 13629  0EAE  02C4               	subwf	ImageFromPickupConf@start_y^(0+256),f
 13630  0EAF  3000               	movlw	0
 13631  0EB0  3BC5               	subwfb	(ImageFromPickupConf@start_y+1)^(0+256),f
 13632                           
 13633                           ;guitar_image.c: 219:                     if(i < 3)
 13634  0EB1  0847               	movf	(ImageFromPickupConf@i+1)^(0+256),w
 13635  0EB2  3A80               	xorlw	128
 13636  0EB3  0020               	movlb	0	; select bank0
 13637  0EB4  00C5               	movwf	??_ImageFromPickupConf
 13638  0EB5  3080               	movlw	128
 13639  0EB6  0245               	subwf	??_ImageFromPickupConf,w
 13640  0EB7  1D03               	skipz
 13641  0EB8  2EBC               	goto	u3745
 13642  0EB9  3003               	movlw	3
 13643  0EBA  0022               	movlb	2	; select bank2
 13644  0EBB  0246               	subwf	ImageFromPickupConf@i^(0+256),w
 13645  0EBC                     u3745:
 13646  0EBC  1803               	skipnc
 13647  0EBD  2EE9               	goto	l4861
 13648  0EBE  0022               	movlb	2	; select bank2
 13649  0EBF  0843               	movf	ImageFromPickupConf@index^(0+256),w
 13650  0EC0  0020               	movlb	0	; select bank0
 13651  0EC1  00C5               	movwf	??_ImageFromPickupConf
 13652  0EC2  01C6               	clrf	??_ImageFromPickupConf+1
 13653  0EC3  35C5               	lslf	??_ImageFromPickupConf,f
 13654  0EC4  0DC6               	rlf	??_ImageFromPickupConf+1,f
 13655  0EC5  0022               	movlb	2	; select bank2
 13656  0EC6  0846               	movf	ImageFromPickupConf@i^(0+256),w
 13657  0EC7  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 13658  0EC8  0086               	movwf	6
 13659  0EC9  3001               	movlw	1	; select bank2/3
 13660  0ECA  0087               	movwf	7
 13661  0ECB  0801               	movf	1,w
 13662  0ECC  00F2               	movwf	___wmul@multiplier
 13663  0ECD  3007               	movlw	7
 13664  0ECE  01F3               	clrf	___wmul@multiplier+1
 13665  0ECF  00F4               	movwf	___wmul@multiplicand
 13666  0ED0  01F5               	clrf	___wmul@multiplicand+1
 13667  0ED1  273D  3189         	fcall	___wmul
 13668  0ED3  307A               	movlw	122
 13669  0ED4  0020               	movlb	0	; select bank0
 13670  0ED5  00C7               	movwf	??_ImageFromPickupConf+2
 13671  0ED6  3023               	movlw	35
 13672  0ED7  00C8               	movwf	??_ImageFromPickupConf+3
 13673  0ED8  0872               	movf	?___wmul,w
 13674  0ED9  0747               	addwf	??_ImageFromPickupConf+2,w
 13675  0EDA  00C9               	movwf	??_ImageFromPickupConf+4
 13676  0EDB  0873               	movf	?___wmul+1,w
 13677  0EDC  3D48               	addwfc	??_ImageFromPickupConf+3,w
 13678  0EDD  00CA               	movwf	??_ImageFromPickupConf+5
 13679  0EDE  0845               	movf	??_ImageFromPickupConf,w
 13680  0EDF  0749               	addwf	??_ImageFromPickupConf+4,w
 13681  0EE0  0086               	movwf	6
 13682  0EE1  0846               	movf	??_ImageFromPickupConf+1,w
 13683  0EE2  3D4A               	addwfc	??_ImageFromPickupConf+5,w
 13684  0EE3  0087               	movwf	7
 13685  0EE4  3F40               	moviw [0]fsr1
 13686  0EE5  0022               	movlb	2	; select bank2
 13687  0EE6  00C0               	movwf	_ImageFromPickupConf$2142^(0+256)
 13688  0EE7  3F41               	moviw [1]fsr1
 13689  0EE8  2F13               	goto	L16
 13690  0EE9                     l4861:
 13691  0EE9  0022               	movlb	2	; select bank2
 13692  0EEA  0843               	movf	ImageFromPickupConf@index^(0+256),w
 13693  0EEB  0020               	movlb	0	; select bank0
 13694  0EEC  00C5               	movwf	??_ImageFromPickupConf
 13695  0EED  01C6               	clrf	??_ImageFromPickupConf+1
 13696  0EEE  35C5               	lslf	??_ImageFromPickupConf,f
 13697  0EEF  0DC6               	rlf	??_ImageFromPickupConf+1,f
 13698  0EF0  0022               	movlb	2	; select bank2
 13699  0EF1  0846               	movf	ImageFromPickupConf@i^(0+256),w
 13700  0EF2  3E3C               	addlw	(low (ImageFromPickupConf@pickup_indexes| (0+256)))& (0+255)
 13701  0EF3  0086               	movwf	6
 13702  0EF4  3001               	movlw	1	; select bank2/3
 13703  0EF5  0087               	movwf	7
 13704  0EF6  0801               	movf	1,w
 13705  0EF7  00F2               	movwf	___wmul@multiplier
 13706  0EF8  300B               	movlw	11
 13707  0EF9  01F3               	clrf	___wmul@multiplier+1
 13708  0EFA  00F4               	movwf	___wmul@multiplicand
 13709  0EFB  01F5               	clrf	___wmul@multiplicand+1
 13710  0EFC  273D  3189         	fcall	___wmul
 13711  0EFE  307D               	movlw	125
 13712  0EFF  0020               	movlb	0	; select bank0
 13713  0F00  00C7               	movwf	??_ImageFromPickupConf+2
 13714  0F01  3022               	movlw	34
 13715  0F02  00C8               	movwf	??_ImageFromPickupConf+3
 13716  0F03  0872               	movf	?___wmul,w
 13717  0F04  0747               	addwf	??_ImageFromPickupConf+2,w
 13718  0F05  00C9               	movwf	??_ImageFromPickupConf+4
 13719  0F06  0873               	movf	?___wmul+1,w
 13720  0F07  3D48               	addwfc	??_ImageFromPickupConf+3,w
 13721  0F08  00CA               	movwf	??_ImageFromPickupConf+5
 13722  0F09  0845               	movf	??_ImageFromPickupConf,w
 13723  0F0A  0749               	addwf	??_ImageFromPickupConf+4,w
 13724  0F0B  0086               	movwf	6
 13725  0F0C  0846               	movf	??_ImageFromPickupConf+1,w
 13726  0F0D  3D4A               	addwfc	??_ImageFromPickupConf+5,w
 13727  0F0E  0087               	movwf	7
 13728  0F0F  3F40               	moviw [0]fsr1
 13729  0F10  0022               	movlb	2	; select bank2
 13730  0F11  00C0               	movwf	_ImageFromPickupConf$2142^(0+256)
 13731  0F12  3F41               	moviw [1]fsr1
 13732  0F13                     L16:
 13733  0F13  00C1               	movwf	(_ImageFromPickupConf$2142+1)^(0+256)
 13734  0F14  0020               	movlb	0	; select bank0
 13735  0F15  00A9               	movwf	SetFrameMemoryPartial@image_buffer+1
 13736  0F16  0022               	movlb	2	; select bank2
 13737  0F17  0840               	movf	_ImageFromPickupConf$2142^(0+256),w
 13738  0F18  0020               	movlb	0	; select bank0
 13739  0F19  00A8               	movwf	SetFrameMemoryPartial@image_buffer
 13740  0F1A  0022               	movlb	2	; select bank2
 13741  0F1B  0849               	movf	(ImageFromPickupConf@start_x+1)^(0+256),w
 13742  0F1C  0020               	movlb	0	; select bank0
 13743  0F1D  00AB               	movwf	SetFrameMemoryPartial@x+1
 13744  0F1E  0022               	movlb	2	; select bank2
 13745  0F1F  0848               	movf	ImageFromPickupConf@start_x^(0+256),w
 13746  0F20  0020               	movlb	0	; select bank0
 13747  0F21  00AA               	movwf	SetFrameMemoryPartial@x
 13748  0F22  0022               	movlb	2	; select bank2
 13749  0F23  0845               	movf	(ImageFromPickupConf@start_y+1)^(0+256),w
 13750  0F24  0020               	movlb	0	; select bank0
 13751  0F25  00AD               	movwf	SetFrameMemoryPartial@y+1
 13752  0F26  0022               	movlb	2	; select bank2
 13753  0F27  0844               	movf	ImageFromPickupConf@start_y^(0+256),w
 13754  0F28  0020               	movlb	0	; select bank0
 13755  0F29  00AC               	movwf	SetFrameMemoryPartial@y
 13756  0F2A  3018               	movlw	24
 13757  0F2B  00AE               	movwf	SetFrameMemoryPartial@image_width
 13758  0F2C  3019               	movlw	25
 13759  0F2D  01AF               	clrf	SetFrameMemoryPartial@image_width+1
 13760  0F2E  00B0               	movwf	SetFrameMemoryPartial@image_height
 13761  0F2F  01B1               	clrf	SetFrameMemoryPartial@image_height+1
 13762  0F30  01B2               	clrf	SetFrameMemoryPartial@invert_color
 13763  0F31  0AB2               	incf	SetFrameMemoryPartial@invert_color,f
 13764  0F32  3189  210A  3189   	fcall	_SetFrameMemoryPartial
 13765                           
 13766                           ;guitar_image.c: 223:                     index++;
 13767  0F35  0022               	movlb	2	; select bank2
 13768  0F36  0AC3               	incf	ImageFromPickupConf@index^(0+256),f
 13769  0F37  2E99               	goto	l4867
 13770  0F38                     l4869:
 13771                           
 13772                           ;guitar_image.c: 226:         }
 13773  0F38  0022               	movlb	2	; select bank2
 13774  0F39  0AC6               	incf	ImageFromPickupConf@i^(0+256),f
 13775  0F3A  1903               	skipnz
 13776  0F3B  0AC7               	incf	(ImageFromPickupConf@i+1)^(0+256),f
 13777  0F3C  2DF5               	goto	l4829
 13778  0F3D                     __end_of_ImageFromPickupConf:
 13779  0F3D                     __ptext36:	
 13780 ;; *************** function ___wmul *****************
 13781 ;; Defined at:
 13782 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 13783 ;; Parameters:    Size  Location     Type
 13784 ;;  multiplier      2    2[COMMON] unsigned int 
 13785 ;;  multiplicand    2    4[COMMON] unsigned int 
 13786 ;; Auto vars:     Size  Location     Type
 13787 ;;  product         2    6[COMMON] unsigned int 
 13788 ;; Return value:  Size  Location     Type
 13789 ;;                  2    2[COMMON] unsigned int 
 13790 ;; Registers used:
 13791 ;;		wreg, status,2, status,0
 13792 ;; Tracked objects:
 13793 ;;		On entry : 1D/0
 13794 ;;		On exit  : 1D/0
 13795 ;;		Unchanged: 1D/0
 13796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13798 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13800 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13801 ;;Total ram usage:        6 bytes
 13802 ;; Hardware stack levels used: 1
 13803 ;; Hardware stack levels required when called: 4
 13804 ;; This function calls:
 13805 ;;		Nothing
 13806 ;; This function is called by:
 13807 ;;		_ClearLine
 13808 ;;		_ImageFromPickupConf
 13809 ;;		_SetFrameMemoryPartial
 13810 ;;		_ClearFrameMemoryPartial
 13811 ;; This function uses a non-reentrant model
 13812 ;;
 13813                           
 13814                           
 13815                           ;psect for function ___wmul
 13816  0F3D                     ___wmul:
 13817                           
 13818                           ;incstack = 0
 13819                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13820  0F3D  01F6               	clrf	___wmul@product
 13821  0F3E  01F7               	clrf	___wmul@product+1
 13822  0F3F                     l4215:
 13823  0F3F  1C72               	btfss	___wmul@multiplier,0
 13824  0F40  2F45               	goto	l4219
 13825  0F41  0874               	movf	___wmul@multiplicand,w
 13826  0F42  07F6               	addwf	___wmul@product,f
 13827  0F43  0875               	movf	___wmul@multiplicand+1,w
 13828  0F44  3DF7               	addwfc	___wmul@product+1,f
 13829  0F45                     l4219:
 13830  0F45  35F4               	lslf	___wmul@multiplicand,f
 13831  0F46  0DF5               	rlf	___wmul@multiplicand+1,f
 13832  0F47  36F3               	lsrf	___wmul@multiplier+1,f
 13833  0F48  0CF2               	rrf	___wmul@multiplier,f
 13834  0F49  0872               	movf	___wmul@multiplier,w
 13835  0F4A  0473               	iorwf	___wmul@multiplier+1,w
 13836  0F4B  1D03               	btfss	3,2
 13837  0F4C  2F3F               	goto	l4215
 13838  0F4D  0877               	movf	___wmul@product+1,w
 13839  0F4E  00F3               	movwf	?___wmul+1
 13840  0F4F  0876               	movf	___wmul@product,w
 13841  0F50  00F2               	movwf	?___wmul
 13842  0F51  0008               	return
 13843  0F52                     __end_of___wmul:
 13844  0F52                     __ptext49:	
 13845 ;; *************** function _SendCommand *****************
 13846 ;; Defined at:
 13847 ;;		line 58 in file "waveshare29epaper.c"
 13848 ;; Parameters:    Size  Location     Type
 13849 ;;  command         1    wreg     unsigned char 
 13850 ;; Auto vars:     Size  Location     Type
 13851 ;;  command         1    3[COMMON] unsigned char 
 13852 ;; Return value:  Size  Location     Type
 13853 ;;                  1    wreg      void 
 13854 ;; Registers used:
 13855 ;;		wreg, status,2, status,0, pclath, cstack
 13856 ;; Tracked objects:
 13857 ;;		On entry : 0/0
 13858 ;;		On exit  : 1F/2
 13859 ;;		Unchanged: 0/0
 13860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13864 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13865 ;;Total ram usage:        1 bytes
 13866 ;; Hardware stack levels used: 1
 13867 ;; Hardware stack levels required when called: 5
 13868 ;; This function calls:
 13869 ;;		_SPI_ExchangeByte
 13870 ;; This function is called by:
 13871 ;;		_InitDisplay
 13872 ;;		_SetLut
 13873 ;;		_SetFrameMemoryPartial
 13874 ;;		_ClearFrameMemory
 13875 ;;		_ClearFrameMemoryPartial
 13876 ;;		_DisplayFrame
 13877 ;;		_SetMemoryArea
 13878 ;;		_SetMemoryPointer
 13879 ;;		_SleepDisplay
 13880 ;; This function uses a non-reentrant model
 13881 ;;
 13882                           
 13883                           
 13884                           ;psect for function _SendCommand
 13885  0F52                     _SendCommand:
 13886                           
 13887                           ;incstack = 0
 13888                           ; Regs used in _SendCommand: [wreg+status,2+status,0+pclath+cstack]
 13889                           ;SendCommand@command stored from wreg
 13890  0F52  00F3               	movwf	SendCommand@command
 13891                           
 13892                           ;waveshare29epaper.c: 59:     do { LATCbits.LATC4 = 0; } while(0);
 13893  0F53  0022               	movlb	2	; select bank2
 13894  0F54  120E               	bcf	14,4	;volatile
 13895                           
 13896                           ;waveshare29epaper.c: 60:     do { LATAbits.LATA4 = 0; } while(0);
 13897  0F55  120C               	bcf	12,4	;volatile
 13898                           
 13899                           ;waveshare29epaper.c: 61:     SPI_ExchangeByte(command);
 13900  0F56  0873               	movf	SendCommand@command,w
 13901  0F57  00F2               	movwf	SPI_ExchangeByte@data
 13902  0F58  27A4               	fcall	_SPI_ExchangeByte
 13903  0F59  0022               	movlb	2	; select bank2
 13904  0F5A  160E               	bsf	14,4	;volatile
 13905  0F5B  0008               	return
 13906  0F5C                     __end_of_SendCommand:
 13907  0F5C                     __ptext34:	
 13908 ;; *************** function _ClearLine *****************
 13909 ;; Defined at:
 13910 ;;		line 125 in file "guitar_image.c"
 13911 ;; Parameters:    Size  Location     Type
 13912 ;;  start_x         2   19[BANK0 ] unsigned short 
 13913 ;;  max_characte    1   21[BANK0 ] unsigned char 
 13914 ;; Auto vars:     Size  Location     Type
 13915 ;;  start_y         2   24[BANK0 ] unsigned short 
 13916 ;; Return value:  Size  Location     Type
 13917 ;;                  1    wreg      void 
 13918 ;; Registers used:
 13919 ;;		wreg, status,2, status,0, pclath, cstack
 13920 ;; Tracked objects:
 13921 ;;		On entry : 1F/0
 13922 ;;		On exit  : 1F/0
 13923 ;;		Unchanged: 0/0
 13924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13925 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13926 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13927 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13928 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13929 ;;Total ram usage:        7 bytes
 13930 ;; Hardware stack levels used: 1
 13931 ;; Hardware stack levels required when called: 8
 13932 ;; This function calls:
 13933 ;;		_ClearFrameMemoryPartial
 13934 ;;		___wmul
 13935 ;; This function is called by:
 13936 ;;		_ImageFromPickupConf
 13937 ;; This function uses a non-reentrant model
 13938 ;;
 13939                           
 13940                           
 13941                           ;psect for function _ClearLine
 13942  0F5C                     _ClearLine:
 13943                           
 13944                           ;incstack = 0
 13945                           ; Regs used in _ClearLine: [wreg+status,2+status,0+pclath+cstack]
 13946  0F5C  0835               	movf	ClearLine@max_character,w
 13947  0F5D  00F2               	movwf	___wmul@multiplier
 13948  0F5E  3019               	movlw	25
 13949  0F5F  01F3               	clrf	___wmul@multiplier+1
 13950  0F60  00F4               	movwf	___wmul@multiplicand
 13951  0F61  01F5               	clrf	___wmul@multiplicand+1
 13952  0F62  273D  3189         	fcall	___wmul
 13953  0F64  0872               	movf	?___wmul,w
 13954  0F65  3E3D               	addlw	61
 13955  0F66  0020               	movlb	0	; select bank0
 13956  0F67  00B6               	movwf	??_ClearLine
 13957  0F68  3000               	movlw	0
 13958  0F69  3D73               	addwfc	?___wmul+1,w
 13959  0F6A  00B7               	movwf	??_ClearLine+1
 13960  0F6B  0D37               	rlf	??_ClearLine+1,w
 13961  0F6C  0C37               	rrf	??_ClearLine+1,w
 13962  0F6D  00B9               	movwf	ClearLine@start_y+1
 13963  0F6E  0C36               	rrf	??_ClearLine,w
 13964  0F6F  00B8               	movwf	ClearLine@start_y
 13965  0F70  3094               	movlw	148
 13966  0F71  07B8               	addwf	ClearLine@start_y,f
 13967  0F72  1803               	skipnc
 13968  0F73  0AB9               	incf	ClearLine@start_y+1,f
 13969  0F74  0835               	movf	ClearLine@max_character,w
 13970  0F75  00F2               	movwf	___wmul@multiplier
 13971  0F76  30E7               	movlw	231
 13972  0F77  01F3               	clrf	___wmul@multiplier+1
 13973  0F78  00F4               	movwf	___wmul@multiplicand
 13974  0F79  30FF               	movlw	255
 13975  0F7A  00F5               	movwf	___wmul@multiplicand+1
 13976  0F7B  273D               	fcall	___wmul
 13977  0F7C  0873               	movf	?___wmul+1,w
 13978  0F7D  0020               	movlb	0	; select bank0
 13979  0F7E  00AB               	movwf	ClearFrameMemoryPartial@y_start+1
 13980  0F7F  0872               	movf	?___wmul,w
 13981  0F80  00AA               	movwf	ClearFrameMemoryPartial@y_start
 13982  0F81  0838               	movf	ClearLine@start_y,w
 13983  0F82  07AA               	addwf	ClearFrameMemoryPartial@y_start,f
 13984  0F83  0839               	movf	ClearLine@start_y+1,w
 13985  0F84  3DAB               	addwfc	ClearFrameMemoryPartial@y_start+1,f
 13986  0F85  30C3               	movlw	195
 13987  0F86  07AA               	addwf	ClearFrameMemoryPartial@y_start,f
 13988  0F87  30FF               	movlw	255
 13989  0F88  3DAB               	addwfc	ClearFrameMemoryPartial@y_start+1,f
 13990  0F89  0834               	movf	ClearLine@start_x+1,w
 13991  0F8A  00A9               	movwf	ClearFrameMemoryPartial@x_start+1
 13992  0F8B  0833               	movf	ClearLine@start_x,w
 13993  0F8C  00A8               	movwf	ClearFrameMemoryPartial@x_start
 13994  0F8D  0833               	movf	ClearLine@start_x,w
 13995  0F8E  3E13               	addlw	19
 13996  0F8F  00AC               	movwf	ClearFrameMemoryPartial@x_end
 13997  0F90  3000               	movlw	0
 13998  0F91  3D34               	addwfc	ClearLine@start_x+1,w
 13999  0F92  00AD               	movwf	ClearFrameMemoryPartial@x_end+1
 14000  0F93  0839               	movf	ClearLine@start_y+1,w
 14001  0F94  00AF               	movwf	ClearFrameMemoryPartial@y_end+1
 14002  0F95  0838               	movf	ClearLine@start_y,w
 14003  0F96  00AE               	movwf	ClearFrameMemoryPartial@y_end
 14004  0F97  30FF               	movlw	255
 14005  0F98  00B0               	movwf	ClearFrameMemoryPartial@color
 14006  0F99  3188  28C1         	ljmp	l4233
 14007  0F9B                     __end_of_ClearLine:
 14008  0F9B                     __ptext45:	
 14009 ;; *************** function _WaitUntilIdle *****************
 14010 ;; Defined at:
 14011 ;;		line 78 in file "waveshare29epaper.c"
 14012 ;; Parameters:    Size  Location     Type
 14013 ;;		None
 14014 ;; Auto vars:     Size  Location     Type
 14015 ;;		None
 14016 ;; Return value:  Size  Location     Type
 14017 ;;                  1    wreg      void 
 14018 ;; Registers used:
 14019 ;;		wreg, status,2, status,0, pclath, cstack
 14020 ;; Tracked objects:
 14021 ;;		On entry : 1F/2
 14022 ;;		On exit  : 1F/0
 14023 ;;		Unchanged: 0/0
 14024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14029 ;;Total ram usage:        0 bytes
 14030 ;; Hardware stack levels used: 1
 14031 ;; Hardware stack levels required when called: 5
 14032 ;; This function calls:
 14033 ;;		_DELAY_milliseconds
 14034 ;; This function is called by:
 14035 ;;		_DisplayFrame
 14036 ;;		_SetMemoryPointer
 14037 ;;		_SleepDisplay
 14038 ;; This function uses a non-reentrant model
 14039 ;;
 14040                           
 14041                           
 14042                           ;psect for function _WaitUntilIdle
 14043  0F9B                     _WaitUntilIdle:
 14044  0F9B                     l4183:	
 14045                           ;incstack = 0
 14046                           ; Regs used in _WaitUntilIdle: [wreg+status,2+status,0+pclath+cstack]
 14047                           
 14048  0F9B                     l4187:	
 14049                           ;waveshare29epaper.c: 79:     while (PORTCbits.RC3 == 1) {
 14050                           
 14051                           
 14052                           ;waveshare29epaper.c: 79:     while (PORTCbits.RC3 == 1) {
 14053  0F9B  0020               	movlb	0	; select bank0
 14054  0F9C  1D8E               	btfss	14,3	;volatile
 14055  0F9D  0008               	return
 14056                           
 14057                           ;waveshare29epaper.c: 80:         DELAY_milliseconds(10);
 14058  0F9E  300A               	movlw	10
 14059  0F9F  00F2               	movwf	DELAY_milliseconds@milliseconds
 14060  0FA0  01F3               	clrf	DELAY_milliseconds@milliseconds+1
 14061  0FA1  27AE  3189         	fcall	_DELAY_milliseconds
 14062  0FA3  2F9B               	goto	l4187
 14063  0FA4                     __end_of_WaitUntilIdle:
 14064  0FA4                     __ptext50:	
 14065 ;; *************** function _SPI_ExchangeByte *****************
 14066 ;; Defined at:
 14067 ;;		line 98 in file "mcc_generated_files/spi.c"
 14068 ;; Parameters:    Size  Location     Type
 14069 ;;  data            1    2[COMMON] unsigned char 
 14070 ;; Auto vars:     Size  Location     Type
 14071 ;;		None
 14072 ;; Return value:  Size  Location     Type
 14073 ;;                  1    wreg      unsigned char 
 14074 ;; Registers used:
 14075 ;;		wreg
 14076 ;; Tracked objects:
 14077 ;;		On entry : 1F/2
 14078 ;;		On exit  : 1F/4
 14079 ;;		Unchanged: 0/0
 14080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14081 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14085 ;;Total ram usage:        1 bytes
 14086 ;; Hardware stack levels used: 1
 14087 ;; Hardware stack levels required when called: 4
 14088 ;; This function calls:
 14089 ;;		Nothing
 14090 ;; This function is called by:
 14091 ;;		_SendCommand
 14092 ;;		_SendData
 14093 ;;		_SPI_WriteBlock
 14094 ;;		_SPI_ReadBlock
 14095 ;; This function uses a non-reentrant model
 14096 ;;
 14097                           
 14098                           
 14099                           ;psect for function _SPI_ExchangeByte
 14100  0FA4                     _SPI_ExchangeByte:
 14101                           
 14102                           ;mcc_generated_files/spi.c: 98: uint8_t SPI_ExchangeByte(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 99: {;mcc_generated_files/spi.c: 100:     SSP1BUF = data;
 14103                           
 14104                           ;incstack = 0
 14105                           ; Regs used in _SPI_ExchangeByte: [wreg]
 14106  0FA4  0872               	movf	SPI_ExchangeByte@data,w
 14107  0FA5  0024               	movlb	4	; select bank4
 14108  0FA6  0091               	movwf	17	;volatile
 14109  0FA7                     l214:	
 14110                           ;mcc_generated_files/spi.c: 101:     while(!PIR1bits.SSP1IF);
 14111                           
 14112  0FA7  0020               	movlb	0	; select bank0
 14113  0FA8  1D91               	btfss	17,3	;volatile
 14114  0FA9  2FA7               	goto	l214
 14115                           
 14116                           ;mcc_generated_files/spi.c: 102:     PIR1bits.SSP1IF = 0;
 14117  0FAA  1191               	bcf	17,3	;volatile
 14118                           
 14119                           ;mcc_generated_files/spi.c: 103:     return SSP1BUF;
 14120  0FAB  0024               	movlb	4	; select bank4
 14121  0FAC  0811               	movf	17,w	;volatile
 14122  0FAD  0008               	return
 14123  0FAE                     __end_of_SPI_ExchangeByte:
 14124  0FAE                     __ptext46:	
 14125 ;; *************** function _DELAY_milliseconds *****************
 14126 ;; Defined at:
 14127 ;;		line 38 in file "mcc_generated_files/delay.c"
 14128 ;; Parameters:    Size  Location     Type
 14129 ;;  milliseconds    2    2[COMMON] unsigned short 
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;		None
 14132 ;; Return value:  Size  Location     Type
 14133 ;;                  1    wreg      void 
 14134 ;; Registers used:
 14135 ;;		wreg, status,2, status,0
 14136 ;; Tracked objects:
 14137 ;;		On entry : 0/0
 14138 ;;		On exit  : 0/0
 14139 ;;		Unchanged: 0/0
 14140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14141 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14145 ;;Total ram usage:        2 bytes
 14146 ;; Hardware stack levels used: 1
 14147 ;; Hardware stack levels required when called: 4
 14148 ;; This function calls:
 14149 ;;		Nothing
 14150 ;; This function is called by:
 14151 ;;		_GotoSleep
 14152 ;;		_WakeUp
 14153 ;;		_main
 14154 ;;		_WaitUntilIdle
 14155 ;;		_ResetDisplay
 14156 ;; This function uses a non-reentrant model
 14157 ;;
 14158                           
 14159                           
 14160                           ;psect for function _DELAY_milliseconds
 14161  0FAE                     _DELAY_milliseconds:
 14162  0FAE                     l4163:	
 14163                           ;incstack = 0
 14164                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 14165                           
 14166  0FAE                     l4167:	
 14167                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 14168                           
 14169                           
 14170                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
 14171  0FAE  3001               	movlw	1
 14172  0FAF  02F2               	subwf	DELAY_milliseconds@milliseconds,f
 14173  0FB0  3000               	movlw	0
 14174  0FB1  3BF3               	subwfb	DELAY_milliseconds@milliseconds+1,f
 14175  0FB2  0F72               	incfsz	DELAY_milliseconds@milliseconds,w
 14176  0FB3  2FB7               	goto	l4165
 14177  0FB4  0A73               	incf	DELAY_milliseconds@milliseconds+1,w
 14178  0FB5  1903               	btfsc	3,2
 14179  0FB6  0008               	return
 14180  0FB7                     l4165:
 14181                           
 14182                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(4000000/4000.0)));
 14183  0FB7  30C8               	movlw	200
 14184  0FB8                     u4117:
 14185  0FB8  3200               	nop2
 14186  0FB9  0B89               	decfsz	9,f
 14187  0FBA  2FB8               	goto	u4117
 14188  0FBB  2FAE               	goto	l4167
 14189  0FBC                     __end_of_DELAY_milliseconds:
 14190  0FBC                     __ptext43:	
 14191 ;; *************** function _ClearFrameMemory *****************
 14192 ;; Defined at:
 14193 ;;		line 163 in file "waveshare29epaper.c"
 14194 ;; Parameters:    Size  Location     Type
 14195 ;;  color           1    wreg     unsigned char 
 14196 ;; Auto vars:     Size  Location     Type
 14197 ;;  color           1    8[BANK0 ] unsigned char 
 14198 ;;  i               2    9[BANK0 ] unsigned short 
 14199 ;; Return value:  Size  Location     Type
 14200 ;;                  1    wreg      void 
 14201 ;; Registers used:
 14202 ;;		wreg, status,2, status,0, pclath, cstack
 14203 ;; Tracked objects:
 14204 ;;		On entry : 0/0
 14205 ;;		On exit  : 1F/0
 14206 ;;		Unchanged: 0/0
 14207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14209 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14211 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14212 ;;Total ram usage:        3 bytes
 14213 ;; Hardware stack levels used: 1
 14214 ;; Hardware stack levels required when called: 7
 14215 ;; This function calls:
 14216 ;;		_SendCommand
 14217 ;;		_SendData
 14218 ;;		_SetMemoryArea
 14219 ;;		_SetMemoryPointer
 14220 ;; This function is called by:
 14221 ;;		_GotoSleep
 14222 ;;		_WakeUp
 14223 ;;		_ImageFromPickupConf
 14224 ;; This function uses a non-reentrant model
 14225 ;;
 14226                           
 14227                           
 14228                           ;psect for function _ClearFrameMemory
 14229  0FBC                     _ClearFrameMemory:
 14230                           
 14231                           ;incstack = 0
 14232                           ; Regs used in _ClearFrameMemory: [wreg+status,2+status,0+pclath+cstack]
 14233                           ;ClearFrameMemory@color stored from wreg
 14234  0FBC  0020               	movlb	0	; select bank0
 14235  0FBD  00A8               	movwf	ClearFrameMemory@color
 14236  0FBE  307F               	movlw	127
 14237                           
 14238                           ;waveshare29epaper.c: 164:     SetMemoryArea(0, 0, 128 - 1, 296 - 1);
 14239  0FBF  01A0               	clrf	SetMemoryArea@x_start
 14240  0FC0  01A1               	clrf	SetMemoryArea@x_start+1
 14241  0FC1  01A2               	clrf	SetMemoryArea@y_start
 14242  0FC2  01A3               	clrf	SetMemoryArea@y_start+1
 14243  0FC3  00A4               	movwf	SetMemoryArea@x_end
 14244  0FC4  3027               	movlw	39
 14245  0FC5  01A5               	clrf	SetMemoryArea@x_end+1
 14246  0FC6  00A6               	movwf	SetMemoryArea@y_end
 14247  0FC7  3001               	movlw	1
 14248  0FC8  00A7               	movwf	SetMemoryArea@y_end+1
 14249  0FC9  2224               	fcall	_SetMemoryArea
 14250                           
 14251                           ;waveshare29epaper.c: 165:     SetMemoryPointer(0, 0);
 14252  0FCA  01F4               	clrf	SetMemoryPointer@x
 14253  0FCB  01F5               	clrf	SetMemoryPointer@x+1
 14254  0FCC  01F6               	clrf	SetMemoryPointer@y
 14255  0FCD  01F7               	clrf	SetMemoryPointer@y+1
 14256  0FCE  3189  21D6  3189   	fcall	_SetMemoryPointer
 14257                           
 14258                           ;waveshare29epaper.c: 166:     SendCommand(0x24);
 14259  0FD1  3024               	movlw	36
 14260  0FD2  2752  3189         	fcall	_SendCommand
 14261                           
 14262                           ;waveshare29epaper.c: 168:     uint16_t i;;waveshare29epaper.c: 169:     for (i = 0; i <
      +                           128 / 8 * 296; i++) {
 14263  0FD4  0020               	movlb	0	; select bank0
 14264  0FD5  01A9               	clrf	ClearFrameMemory@i
 14265  0FD6  01AA               	clrf	ClearFrameMemory@i+1
 14266  0FD7                     l4365:
 14267                           
 14268                           ;waveshare29epaper.c: 170:         SendData(color);
 14269  0FD7  0828               	movf	ClearFrameMemory@color,w
 14270  0FD8  228D  3189         	fcall	_SendData
 14271                           
 14272                           ;waveshare29epaper.c: 171:     }
 14273  0FDA  0020               	movlb	0	; select bank0
 14274  0FDB  0AA9               	incf	ClearFrameMemory@i,f
 14275  0FDC  1903               	skipnz
 14276  0FDD  0AAA               	incf	ClearFrameMemory@i+1,f
 14277  0FDE  3012               	movlw	18
 14278  0FDF  022A               	subwf	ClearFrameMemory@i+1,w
 14279  0FE0  3080               	movlw	128
 14280  0FE1  1903               	skipnz
 14281  0FE2  0229               	subwf	ClearFrameMemory@i,w
 14282  0FE3  1803               	btfsc	3,0
 14283  0FE4  0008               	return
 14284  0FE5  2FD7               	goto	l4365
 14285  0FE6                     __end_of_ClearFrameMemory:
 14286  0FE6                     __ptext42:	
 14287 ;; *************** function _ResetDisplay *****************
 14288 ;; Defined at:
 14289 ;;		line 89 in file "waveshare29epaper.c"
 14290 ;; Parameters:    Size  Location     Type
 14291 ;;		None
 14292 ;; Auto vars:     Size  Location     Type
 14293 ;;		None
 14294 ;; Return value:  Size  Location     Type
 14295 ;;                  1    wreg      void 
 14296 ;; Registers used:
 14297 ;;		wreg, status,2, status,0, pclath, cstack
 14298 ;; Tracked objects:
 14299 ;;		On entry : 1F/0
 14300 ;;		On exit  : 0/0
 14301 ;;		Unchanged: 0/0
 14302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14307 ;;Total ram usage:        0 bytes
 14308 ;; Hardware stack levels used: 1
 14309 ;; Hardware stack levels required when called: 5
 14310 ;; This function calls:
 14311 ;;		_DELAY_milliseconds
 14312 ;; This function is called by:
 14313 ;;		_InitDisplay
 14314 ;; This function uses a non-reentrant model
 14315 ;;
 14316                           
 14317                           
 14318                           ;psect for function _ResetDisplay
 14319  0FE6                     _ResetDisplay:
 14320                           
 14321                           ;incstack = 0
 14322                           ; Regs used in _ResetDisplay: [wreg+status,2+status,0+pclath+cstack]
 14323                           ;waveshare29epaper.c: 90:     do { LATCbits.LATC5 = 0; } while(0);
 14324  0FE6  0022               	movlb	2	; select bank2
 14325  0FE7  128E               	bcf	14,5	;volatile
 14326                           
 14327                           ;waveshare29epaper.c: 91:     DELAY_milliseconds(200);
 14328  0FE8  30C8               	movlw	200
 14329  0FE9  00F2               	movwf	DELAY_milliseconds@milliseconds
 14330  0FEA  01F3               	clrf	DELAY_milliseconds@milliseconds+1
 14331  0FEB  27AE  3189         	fcall	_DELAY_milliseconds
 14332  0FED  0022               	movlb	2	; select bank2
 14333  0FEE  168E               	bsf	14,5	;volatile
 14334                           
 14335                           ;waveshare29epaper.c: 93:     DELAY_milliseconds(200);
 14336  0FEF  30C8               	movlw	200
 14337  0FF0  00F2               	movwf	DELAY_milliseconds@milliseconds
 14338  0FF1  01F3               	clrf	DELAY_milliseconds@milliseconds+1
 14339  0FF2  2FAE               	ljmp	l4163
 14340  0FF3                     __end_of_ResetDisplay:
 14341  0FF3                     __ptext27:	
 14342 ;; *************** function _WriteConfigurationToMemory *****************
 14343 ;; Defined at:
 14344 ;;		line 83 in file "main.c"
 14345 ;; Parameters:    Size  Location     Type
 14346 ;;		None
 14347 ;; Auto vars:     Size  Location     Type
 14348 ;;		None
 14349 ;; Return value:  Size  Location     Type
 14350 ;;                  1    wreg      void 
 14351 ;; Registers used:
 14352 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14353 ;; Tracked objects:
 14354 ;;		On entry : 0/0
 14355 ;;		On exit  : 1C/0
 14356 ;;		Unchanged: 0/0
 14357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14362 ;;Total ram usage:        0 bytes
 14363 ;; Hardware stack levels used: 1
 14364 ;; Hardware stack levels required when called: 7
 14365 ;; This function calls:
 14366 ;;		_HEFLASH_writeBlock
 14367 ;; This function is called by:
 14368 ;;		_ButtonEventHandler
 14369 ;; This function uses a non-reentrant model
 14370 ;;
 14371                           
 14372                           
 14373                           ;psect for function _WriteConfigurationToMemory
 14374  0FF3                     _WriteConfigurationToMemory:
 14375                           
 14376                           ;main.c: 84:     HEFLASH_writeBlock(0, (void*)&saved_pc, sizeof(saved_pc));
 14377                           
 14378                           ;incstack = 0
 14379                           ; Regs used in _WriteConfigurationToMemory: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 14380  0FF3  30AE               	movlw	(low (_saved_pc| 0))& (0+255)
 14381  0FF4  00F8               	movwf	HEFLASH_writeBlock@buffer
 14382  0FF5  3014               	movlw	20
 14383  0FF6  00F9               	movwf	HEFLASH_writeBlock@count
 14384  0FF7  3000               	movlw	0
 14385  0FF8  3187  2F56         	ljmp	_HEFLASH_writeBlock
 14386  0FFA                     __end_of_WriteConfigurationToMemory:
 14387  0FFA                     __ptext6:	
 14388 ;; *************** function _ReadConfigurationsFromMemory *****************
 14389 ;; Defined at:
 14390 ;;		line 79 in file "main.c"
 14391 ;; Parameters:    Size  Location     Type
 14392 ;;		None
 14393 ;; Auto vars:     Size  Location     Type
 14394 ;;		None
 14395 ;; Return value:  Size  Location     Type
 14396 ;;                  1    wreg      void 
 14397 ;; Registers used:
 14398 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14399 ;; Tracked objects:
 14400 ;;		On entry : 0/0
 14401 ;;		On exit  : 0/0
 14402 ;;		Unchanged: 0/0
 14403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14408 ;;Total ram usage:        0 bytes
 14409 ;; Hardware stack levels used: 1
 14410 ;; Hardware stack levels required when called: 6
 14411 ;; This function calls:
 14412 ;;		_HEFLASH_readBlock
 14413 ;; This function is called by:
 14414 ;;		_WakeUp
 14415 ;; This function uses a non-reentrant model
 14416 ;;
 14417                           
 14418                           
 14419                           ;psect for function _ReadConfigurationsFromMemory
 14420  0FFA                     _ReadConfigurationsFromMemory:
 14421                           
 14422                           ;incstack = 0
 14423                           ; Regs used in _ReadConfigurationsFromMemory: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 14424  0FFA  3014               	movlw	20
 14425                           
 14426                           ;main.c: 80:     HEFLASH_readBlock((void*)&saved_pc, 0, sizeof(saved_pc));
 14427  0FFB  01F4               	clrf	HEFLASH_readBlock@radd
 14428  0FFC  00F5               	movwf	HEFLASH_readBlock@count
 14429  0FFD  30AE               	movlw	(low (_saved_pc| 0))& (0+255)
 14430  0FFE  3188  2889         	ljmp	_HEFLASH_readBlock
 14431  1000                     __end_of_ReadConfigurationsFromMemory:
 14432                           
 14433                           	psect	text5
 14434  07FD                     __ptext5:	
 14435 ;; *************** function _TMR1_StartTimer *****************
 14436 ;; Defined at:
 14437 ;;		line 93 in file "mcc_generated_files/tmr1.c"
 14438 ;; Parameters:    Size  Location     Type
 14439 ;;		None
 14440 ;; Auto vars:     Size  Location     Type
 14441 ;;		None
 14442 ;; Return value:  Size  Location     Type
 14443 ;;                  1    wreg      void 
 14444 ;; Registers used:
 14445 ;;		None
 14446 ;; Tracked objects:
 14447 ;;		On entry : 1F/1
 14448 ;;		On exit  : 1F/0
 14449 ;;		Unchanged: 0/0
 14450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14455 ;;Total ram usage:        0 bytes
 14456 ;; Hardware stack levels used: 1
 14457 ;; Hardware stack levels required when called: 4
 14458 ;; This function calls:
 14459 ;;		Nothing
 14460 ;; This function is called by:
 14461 ;;		_WakeUp
 14462 ;; This function uses a non-reentrant model
 14463 ;;
 14464                           
 14465                           
 14466                           ;psect for function _TMR1_StartTimer
 14467  07FD                     _TMR1_StartTimer:
 14468                           
 14469                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
 14470                           
 14471                           ;incstack = 0
 14472                           ; Regs used in _TMR1_StartTimer: []
 14473  07FD  0020               	movlb	0	; select bank0
 14474  07FE  1418               	bsf	24,0	;volatile
 14475  07FF  0008               	return
 14476  0800                     __end_of_TMR1_StartTimer:
 14477                           
 14478                           	psect	text7
 14479  0889                     __ptext7:	
 14480 ;; *************** function _HEFLASH_readBlock *****************
 14481 ;; Defined at:
 14482 ;;		line 37 in file "HEFlash.c"
 14483 ;; Parameters:    Size  Location     Type
 14484 ;;  buffer          1    wreg     PTR unsigned char 
 14485 ;;		 -> saved_pc(20), 
 14486 ;;  radd            1    4[COMMON] unsigned char 
 14487 ;;  count           1    5[COMMON] unsigned char 
 14488 ;; Auto vars:     Size  Location     Type
 14489 ;;  buffer          1    6[COMMON] PTR unsigned char 
 14490 ;;		 -> saved_pc(20), 
 14491 ;;  add             2    7[COMMON] unsigned int 
 14492 ;; Return value:  Size  Location     Type
 14493 ;;                  1    wreg      unsigned char 
 14494 ;; Registers used:
 14495 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14496 ;; Tracked objects:
 14497 ;;		On entry : 0/0
 14498 ;;		On exit  : 0/0
 14499 ;;		Unchanged: 0/0
 14500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14502 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14504 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14505 ;;Total ram usage:        5 bytes
 14506 ;; Hardware stack levels used: 1
 14507 ;; Hardware stack levels required when called: 5
 14508 ;; This function calls:
 14509 ;;		_FLASH_read
 14510 ;; This function is called by:
 14511 ;;		_ReadConfigurationsFromMemory
 14512 ;; This function uses a non-reentrant model
 14513 ;;
 14514                           
 14515                           
 14516                           ;psect for function _HEFLASH_readBlock
 14517  0889                     _HEFLASH_readBlock:
 14518                           
 14519                           ;incstack = 0
 14520                           ; Regs used in _HEFLASH_readBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14521                           ;HEFLASH_readBlock@buffer stored from wreg
 14522  0889  00F6               	movwf	HEFLASH_readBlock@buffer
 14523                           
 14524                           ;HEFlash.c: 37: char HEFLASH_readBlock(char* buffer, char radd, char count);HEFlash.c: 3
      +                          8: {;HEFlash.c: 40:     unsigned add = radd * 32 + 0x1F80;
 14525  088A  0874               	movf	HEFLASH_readBlock@radd,w
 14526  088B  00F7               	movwf	HEFLASH_readBlock@add
 14527  088C  3005               	movlw	5
 14528  088D  01F8               	clrf	HEFLASH_readBlock@add+1
 14529  088E                     u2955:
 14530  088E  35F7               	lslf	HEFLASH_readBlock@add,f
 14531  088F  0DF8               	rlf	HEFLASH_readBlock@add+1,f
 14532  0890  0B89               	decfsz	9,f
 14533  0891  288E               	goto	u2955
 14534  0892  3080               	movlw	128
 14535  0893  07F7               	addwf	HEFLASH_readBlock@add,f
 14536  0894  301F               	movlw	31
 14537  0895  3DF8               	addwfc	HEFLASH_readBlock@add+1,f
 14538                           
 14539                           ;HEFlash.c: 42:     if ((count > 32)||(radd >= (0x1FFF -0x1F80 +1)/32))
 14540  0896  3021               	movlw	33
 14541  0897  0275               	subwf	HEFLASH_readBlock@count,w
 14542  0898  1803               	skipnc
 14543  0899  0008               	return
 14544  089A  3004               	movlw	4
 14545  089B  0274               	subwf	HEFLASH_readBlock@radd,w
 14546  089C  1803               	btfsc	3,0
 14547  089D  0008               	return
 14548  089E                     l4333:
 14549                           
 14550                           ;HEFlash.c: 45:     while (count > 0)
 14551  089E  0875               	movf	HEFLASH_readBlock@count,w
 14552  089F  1903               	btfsc	3,2
 14553  08A0  0008               	return
 14554                           
 14555                           ;HEFlash.c: 46:     {;HEFlash.c: 47:         *buffer++ = (char)FLASH_read (add++);
 14556  08A1  0876               	movf	HEFLASH_readBlock@buffer,w
 14557  08A2  0086               	movwf	6
 14558  08A3  0187               	clrf	7
 14559  08A4  0878               	movf	HEFLASH_readBlock@add+1,w
 14560  08A5  00F3               	movwf	FLASH_read@address+1
 14561  08A6  0877               	movf	HEFLASH_readBlock@add,w
 14562  08A7  00F2               	movwf	FLASH_read@address
 14563  08A8  20B2  3188         	fcall	_FLASH_read
 14564  08AA  0872               	movf	?_FLASH_read,w
 14565  08AB  0081               	movwf	1
 14566  08AC  0AF7               	incf	HEFLASH_readBlock@add,f
 14567  08AD  1903               	skipnz
 14568  08AE  0AF8               	incf	HEFLASH_readBlock@add+1,f
 14569  08AF  0AF6               	incf	HEFLASH_readBlock@buffer,f
 14570                           
 14571                           ;HEFlash.c: 48:         count--;
 14572  08B0  03F5               	decf	HEFLASH_readBlock@count,f
 14573  08B1  289E               	goto	l4333
 14574  08B2                     __end_of_HEFLASH_readBlock:
 14575  08B2                     __ptext8:	
 14576 ;; *************** function _FLASH_read *****************
 14577 ;; Defined at:
 14578 ;;		line 24 in file "Flash.c"
 14579 ;; Parameters:    Size  Location     Type
 14580 ;;  address         2    2[COMMON] unsigned int 
 14581 ;; Auto vars:     Size  Location     Type
 14582 ;;		None
 14583 ;; Return value:  Size  Location     Type
 14584 ;;                  2    2[COMMON] unsigned int 
 14585 ;; Registers used:
 14586 ;;		wreg
 14587 ;; Tracked objects:
 14588 ;;		On entry : 0/0
 14589 ;;		On exit  : 1F/3
 14590 ;;		Unchanged: 0/0
 14591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14595 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14596 ;;Total ram usage:        2 bytes
 14597 ;; Hardware stack levels used: 1
 14598 ;; Hardware stack levels required when called: 4
 14599 ;; This function calls:
 14600 ;;		Nothing
 14601 ;; This function is called by:
 14602 ;;		_HEFLASH_readBlock
 14603 ;; This function uses a non-reentrant model
 14604 ;;
 14605                           
 14606                           
 14607                           ;psect for function _FLASH_read
 14608  08B2                     _FLASH_read:
 14609                           
 14610                           ;Flash.c: 24: unsigned FLASH_read (unsigned address);Flash.c: 25: {;Flash.c: 27:     PMA
      +                          DR = address;
 14611                           
 14612                           ;incstack = 0
 14613                           ; Regs used in _FLASH_read: [wreg]
 14614  08B2  0873               	movf	FLASH_read@address+1,w
 14615  08B3  0023               	movlb	3	; select bank3
 14616  08B4  0092               	movwf	18	;volatile
 14617  08B5  0872               	movf	FLASH_read@address,w
 14618  08B6  0091               	movwf	17	;volatile
 14619                           
 14620                           ;Flash.c: 28:     PMCON1bits.CFGS = 0;
 14621  08B7  1315               	bcf	21,6	;volatile
 14622                           
 14623                           ;Flash.c: 29:     PMCON1bits.RD = 1;
 14624  08B8  1415               	bsf	21,0	;volatile
 14625                           
 14626                           ;Flash.c: 30:     __nop();
 14627  08B9  0000               	nop
 14628                           
 14629                           ;Flash.c: 31:     __nop();
 14630  08BA  0000               	nop
 14631                           
 14632                           ;Flash.c: 33:     return PMDAT;
 14633  08BB  0023               	movlb	3	; select bank3
 14634  08BC  0814               	movf	20,w	;volatile
 14635  08BD  00F3               	movwf	?_FLASH_read+1
 14636  08BE  0813               	movf	19,w	;volatile
 14637  08BF  00F2               	movwf	?_FLASH_read
 14638  08C0  0008               	return
 14639  08C1                     __end_of_FLASH_read:
 14640                           
 14641                           	psect	swtext1
 14642  07F5                     __pswtext1:
 14643  07F5                     S5271:
 14644  07F5  3181  29C6         	ljmp	l5059
 14645  07F7  3181  29D3         	ljmp	l5061
 14646  07F9  3181  29E0         	ljmp	l5063
 14647  07FB  3181  29ED         	ljmp	l5065
 14648                           
 14649                           	psect	text28
 14650  0756                     __ptext28:	
 14651 ;; *************** function _HEFLASH_writeBlock *****************
 14652 ;; Defined at:
 14653 ;;		line 14 in file "HEFlash.c"
 14654 ;; Parameters:    Size  Location     Type
 14655 ;;  radd            1    wreg     unsigned char 
 14656 ;;  buffer          1    8[COMMON] PTR unsigned char 
 14657 ;;		 -> saved_pc(20), 
 14658 ;;  count           1    9[COMMON] unsigned char 
 14659 ;; Auto vars:     Size  Location     Type
 14660 ;;  radd            1    0[BANK0 ] unsigned char 
 14661 ;;  add             2    1[BANK0 ] unsigned int 
 14662 ;; Return value:  Size  Location     Type
 14663 ;;                  1    wreg      unsigned char 
 14664 ;; Registers used:
 14665 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14666 ;; Tracked objects:
 14667 ;;		On entry : 0/0
 14668 ;;		On exit  : 1C/0
 14669 ;;		Unchanged: 0/0
 14670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14672 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14674 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14675 ;;Total ram usage:        5 bytes
 14676 ;; Hardware stack levels used: 1
 14677 ;; Hardware stack levels required when called: 6
 14678 ;; This function calls:
 14679 ;;		_FLASH_erase
 14680 ;;		_FLASH_write
 14681 ;; This function is called by:
 14682 ;;		_WriteConfigurationToMemory
 14683 ;; This function uses a non-reentrant model
 14684 ;;
 14685                           
 14686                           
 14687                           ;psect for function _HEFLASH_writeBlock
 14688  0756                     _HEFLASH_writeBlock:
 14689                           
 14690                           ;incstack = 0
 14691                           ; Regs used in _HEFLASH_writeBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14692                           ;HEFLASH_writeBlock@radd stored from wreg
 14693  0756  0020               	movlb	0	; select bank0
 14694  0757  00A0               	movwf	HEFLASH_writeBlock@radd
 14695                           
 14696                           ;HEFlash.c: 14: char HEFLASH_writeBlock(char radd, char* buffer, char count);HEFlash.c: 
      +                          15: {;HEFlash.c: 17:     unsigned add = radd * 32 + 0x1F80;
 14697  0758  00A1               	movwf	HEFLASH_writeBlock@add
 14698  0759  3005               	movlw	5
 14699  075A  01A2               	clrf	HEFLASH_writeBlock@add+1
 14700  075B                     u2995:
 14701  075B  35A1               	lslf	HEFLASH_writeBlock@add,f
 14702  075C  0DA2               	rlf	HEFLASH_writeBlock@add+1,f
 14703  075D  0B89               	decfsz	9,f
 14704  075E  2F5B               	goto	u2995
 14705  075F  3080               	movlw	128
 14706  0760  07A1               	addwf	HEFLASH_writeBlock@add,f
 14707  0761  301F               	movlw	31
 14708  0762  3DA2               	addwfc	HEFLASH_writeBlock@add+1,f
 14709                           
 14710                           ;HEFlash.c: 19:     if ((count > 32)||(radd >= (0x1FFF -0x1F80 +1)/32))
 14711  0763  3021               	movlw	33
 14712  0764  0279               	subwf	HEFLASH_writeBlock@count,w
 14713  0765  1803               	skipnc
 14714  0766  0008               	return
 14715  0767  3004               	movlw	4
 14716  0768  0220               	subwf	HEFLASH_writeBlock@radd,w
 14717  0769  1803               	btfsc	3,0
 14718  076A  0008               	return
 14719                           
 14720                           ;HEFlash.c: 22:     FLASH_erase(add);
 14721  076B  0822               	movf	HEFLASH_writeBlock@add+1,w
 14722  076C  00F3               	movwf	FLASH_erase@address+1
 14723  076D  0821               	movf	HEFLASH_writeBlock@add,w
 14724  076E  00F2               	movwf	FLASH_erase@address
 14725  076F  27B6  3187         	fcall	_FLASH_erase
 14726  0771                     l4349:	
 14727                           ;HEFlash.c: 24:     while (count > 1)
 14728                           
 14729                           
 14730                           ;HEFlash.c: 24:     while (count > 1)
 14731  0771  3002               	movlw	2
 14732  0772  0279               	subwf	HEFLASH_writeBlock@count,w
 14733  0773  1C03               	btfss	3,0
 14734  0774  2F8B               	goto	l4351
 14735                           
 14736                           ;HEFlash.c: 25:     {;HEFlash.c: 27:         FLASH_write(add++, (unsigned)*buffer++, 1);
 14737  0775  0020               	movlb	0	; select bank0
 14738  0776  0822               	movf	HEFLASH_writeBlock@add+1,w
 14739  0777  00F3               	movwf	FLASH_write@address+1
 14740  0778  0821               	movf	HEFLASH_writeBlock@add,w
 14741  0779  00F2               	movwf	FLASH_write@address
 14742  077A  0878               	movf	HEFLASH_writeBlock@buffer,w
 14743  077B  0086               	movwf	6
 14744  077C  0187               	clrf	7
 14745  077D  0801               	movf	1,w
 14746  077E  00F4               	movwf	FLASH_write@data
 14747  077F  01F5               	clrf	FLASH_write@data+1
 14748  0780  01F6               	clrf	FLASH_write@latch
 14749  0781  0AF6               	incf	FLASH_write@latch,f
 14750  0782  279B  3187         	fcall	_FLASH_write
 14751  0784  0AF8               	incf	HEFLASH_writeBlock@buffer,f
 14752  0785  0020               	movlb	0	; select bank0
 14753  0786  0AA1               	incf	HEFLASH_writeBlock@add,f
 14754  0787  1903               	skipnz
 14755  0788  0AA2               	incf	HEFLASH_writeBlock@add+1,f
 14756                           
 14757                           ;HEFlash.c: 28:         count--;
 14758  0789  03F9               	decf	HEFLASH_writeBlock@count,f
 14759  078A  2F71               	goto	l4349
 14760  078B                     l4351:
 14761                           
 14762                           ;HEFlash.c: 32:     FLASH_write (add, (unsigned) *buffer, 0);
 14763  078B  0020               	movlb	0	; select bank0
 14764  078C  0822               	movf	HEFLASH_writeBlock@add+1,w
 14765  078D  00F3               	movwf	FLASH_write@address+1
 14766  078E  0821               	movf	HEFLASH_writeBlock@add,w
 14767  078F  00F2               	movwf	FLASH_write@address
 14768  0790  0878               	movf	HEFLASH_writeBlock@buffer,w
 14769  0791  0086               	movwf	6
 14770  0792  0187               	clrf	7
 14771  0793  0801               	movf	1,w
 14772  0794  00F4               	movwf	FLASH_write@data
 14773  0795  01F5               	clrf	FLASH_write@data+1
 14774  0796  01F6               	clrf	FLASH_write@latch
 14775  0797  279B               	fcall	_FLASH_write
 14776                           
 14777                           ;HEFlash.c: 35:     return PMCON1bits.WRERR;;	Return value of _HEFLASH_writeBlock is nev
      +                          er used
 14778  0798  0023               	movlb	3	; select bank3
 14779  0799  0815               	movf	21,w	;volatile
 14780  079A  0008               	return
 14781  079B                     __end_of_HEFLASH_writeBlock:
 14782  079B                     __ptext29:	
 14783 ;; *************** function _FLASH_write *****************
 14784 ;; Defined at:
 14785 ;;		line 57 in file "Flash.c"
 14786 ;; Parameters:    Size  Location     Type
 14787 ;;  address         2    2[COMMON] unsigned int 
 14788 ;;  data            2    4[COMMON] unsigned int 
 14789 ;;  latch           1    6[COMMON] unsigned char 
 14790 ;; Auto vars:     Size  Location     Type
 14791 ;;  temp            1    7[COMMON] unsigned char 
 14792 ;; Return value:  Size  Location     Type
 14793 ;;                  1    wreg      void 
 14794 ;; Registers used:
 14795 ;;		wreg, status,2, status,0, pclath, cstack
 14796 ;; Tracked objects:
 14797 ;;		On entry : 1F/0
 14798 ;;		On exit  : 0/0
 14799 ;;		Unchanged: 0/0
 14800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14801 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14804 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14805 ;;Total ram usage:        6 bytes
 14806 ;; Hardware stack levels used: 1
 14807 ;; Hardware stack levels required when called: 5
 14808 ;; This function calls:
 14809 ;;		__unlock
 14810 ;; This function is called by:
 14811 ;;		_HEFLASH_writeBlock
 14812 ;; This function uses a non-reentrant model
 14813 ;;
 14814                           
 14815                           
 14816                           ;psect for function _FLASH_write
 14817  079B                     _FLASH_write:
 14818                           
 14819                           ;Flash.c: 57: void FLASH_write (unsigned address, unsigned data, char latch);Flash.c: 58
      +                          : {;Flash.c: 60:     char temp = INTCONbits.GIE;
 14820                           
 14821                           ;incstack = 0
 14822                           ; Regs used in _FLASH_write: [wreg+status,2+status,0+pclath+cstack]
 14823  079B  3000               	movlw	0
 14824  079C  1B8B               	btfsc	11,7	;volatile
 14825  079D  3001               	movlw	1
 14826  079E  00F7               	movwf	FLASH_write@temp
 14827                           
 14828                           ;Flash.c: 61:     INTCONbits.GIE = 0;
 14829  079F  138B               	bcf	11,7	;volatile
 14830                           
 14831                           ;Flash.c: 63:     PMADR = address;
 14832  07A0  0873               	movf	FLASH_write@address+1,w
 14833  07A1  0023               	movlb	3	; select bank3
 14834  07A2  0092               	movwf	18	;volatile
 14835  07A3  0872               	movf	FLASH_write@address,w
 14836  07A4  0091               	movwf	17	;volatile
 14837                           
 14838                           ;Flash.c: 64:     PMDAT = data;
 14839  07A5  0875               	movf	FLASH_write@data+1,w
 14840  07A6  0094               	movwf	20	;volatile
 14841  07A7  0874               	movf	FLASH_write@data,w
 14842  07A8  0093               	movwf	19	;volatile
 14843                           
 14844                           ;Flash.c: 65:     PMCON1bits.LWLO = latch;
 14845  07A9  0C76               	rrf	FLASH_write@latch,w
 14846  07AA  1C03               	skipc
 14847  07AB  1295               	bcf	21,5	;volatile
 14848  07AC  1803               	skipnc
 14849  07AD  1695               	bsf	21,5	;volatile
 14850                           
 14851                           ;Flash.c: 66:     PMCON1bits.CFGS = 0;
 14852  07AE  1315               	bcf	21,6	;volatile
 14853                           
 14854                           ;Flash.c: 67:     PMCON1bits.FREE = 0;
 14855  07AF  1215               	bcf	21,4	;volatile
 14856                           
 14857                           ;Flash.c: 68:     PMCON1bits.WREN = 1;
 14858  07B0  1515               	bsf	21,2	;volatile
 14859                           
 14860                           ;Flash.c: 70:     _unlock();
 14861  07B1  27CA               	fcall	__unlock
 14862                           
 14863                           ;Flash.c: 72:     if (temp)
 14864  07B2  0877               	movf	FLASH_write@temp,w
 14865  07B3  1D03               	btfss	3,2
 14866                           
 14867                           ;Flash.c: 73:         INTCONbits.GIE = 1;
 14868  07B4  178B               	bsf	11,7	;volatile
 14869  07B5  0008               	return
 14870  07B6                     __end_of_FLASH_write:
 14871  07B6                     __ptext30:	
 14872 ;; *************** function _FLASH_erase *****************
 14873 ;; Defined at:
 14874 ;;		line 75 in file "Flash.c"
 14875 ;; Parameters:    Size  Location     Type
 14876 ;;  address         2    2[COMMON] unsigned int 
 14877 ;; Auto vars:     Size  Location     Type
 14878 ;;  temp            1    4[COMMON] unsigned char 
 14879 ;; Return value:  Size  Location     Type
 14880 ;;                  1    wreg      void 
 14881 ;; Registers used:
 14882 ;;		wreg, status,2, status,0, pclath, cstack
 14883 ;; Tracked objects:
 14884 ;;		On entry : 1F/0
 14885 ;;		On exit  : 1F/3
 14886 ;;		Unchanged: 0/0
 14887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14891 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14892 ;;Total ram usage:        3 bytes
 14893 ;; Hardware stack levels used: 1
 14894 ;; Hardware stack levels required when called: 5
 14895 ;; This function calls:
 14896 ;;		__unlock
 14897 ;; This function is called by:
 14898 ;;		_HEFLASH_writeBlock
 14899 ;; This function uses a non-reentrant model
 14900 ;;
 14901                           
 14902                           
 14903                           ;psect for function _FLASH_erase
 14904  07B6                     _FLASH_erase:
 14905                           
 14906                           ;Flash.c: 75: void FLASH_erase (unsigned address);Flash.c: 76: {;Flash.c: 78:     char t
      +                          emp = INTCONbits.GIE;
 14907                           
 14908                           ;incstack = 0
 14909                           ; Regs used in _FLASH_erase: [wreg+status,2+status,0+pclath+cstack]
 14910  07B6  3000               	movlw	0
 14911  07B7  1B8B               	btfsc	11,7	;volatile
 14912  07B8  3001               	movlw	1
 14913  07B9  00F4               	movwf	FLASH_erase@temp
 14914                           
 14915                           ;Flash.c: 79:     INTCONbits.GIE = 0;
 14916  07BA  138B               	bcf	11,7	;volatile
 14917                           
 14918                           ;Flash.c: 81:     PMADR = address;
 14919  07BB  0873               	movf	FLASH_erase@address+1,w
 14920  07BC  0023               	movlb	3	; select bank3
 14921  07BD  0092               	movwf	18	;volatile
 14922  07BE  0872               	movf	FLASH_erase@address,w
 14923  07BF  0091               	movwf	17	;volatile
 14924                           
 14925                           ;Flash.c: 82:     PMCON1bits.CFGS = 0;
 14926  07C0  1315               	bcf	21,6	;volatile
 14927                           
 14928                           ;Flash.c: 83:     PMCON1bits.FREE = 1;
 14929  07C1  1615               	bsf	21,4	;volatile
 14930                           
 14931                           ;Flash.c: 84:     PMCON1bits.WREN = 1;
 14932  07C2  1515               	bsf	21,2	;volatile
 14933                           
 14934                           ;Flash.c: 86:     _unlock();
 14935  07C3  27CA               	fcall	__unlock
 14936                           
 14937                           ;Flash.c: 88:     PMCON1bits.WREN = 0;
 14938  07C4  0023               	movlb	3	; select bank3
 14939  07C5  1115               	bcf	21,2	;volatile
 14940                           
 14941                           ;Flash.c: 89:     if (temp)
 14942  07C6  0874               	movf	FLASH_erase@temp,w
 14943  07C7  1D03               	btfss	3,2
 14944                           
 14945                           ;Flash.c: 90:         INTCONbits.GIE = 1;
 14946  07C8  178B               	bsf	11,7	;volatile
 14947  07C9  0008               	return
 14948  07CA                     __end_of_FLASH_erase:
 14949  07CA                     __ptext31:	
 14950 ;; *************** function __unlock *****************
 14951 ;; Defined at:
 14952 ;;		line 46 in file "Flash.c"
 14953 ;; Parameters:    Size  Location     Type
 14954 ;;		None
 14955 ;; Auto vars:     Size  Location     Type
 14956 ;;		None
 14957 ;; Return value:  Size  Location     Type
 14958 ;;                  1    wreg      void 
 14959 ;; Registers used:
 14960 ;;		None
 14961 ;; Tracked objects:
 14962 ;;		On entry : 1F/3
 14963 ;;		On exit  : 0/0
 14964 ;;		Unchanged: 0/0
 14965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14970 ;;Total ram usage:        0 bytes
 14971 ;; Hardware stack levels used: 1
 14972 ;; Hardware stack levels required when called: 4
 14973 ;; This function calls:
 14974 ;;		Nothing
 14975 ;; This function is called by:
 14976 ;;		_FLASH_write
 14977 ;;		_FLASH_erase
 14978 ;; This function uses a non-reentrant model
 14979 ;;
 14980                           
 14981                           
 14982                           ;psect for function __unlock
 14983  07CA                     __unlock:
 14984                           
 14985                           ;incstack = 0
 14986                           ; Regs used in __unlock: []
 14987  07CA  0023               	banksel	406	;# 
 14988  07CB  3055               	movlw	85	;# 
 14989  07CC  0096               	movwf	22	;# 
 14990  07CD  30AA               	movlw	170	;# 
 14991  07CE  0096               	movwf	22	;# 
 14992  07CF  1495               	bsf	21,1	; set WR bit ;# 
 14993  07D0  0000               	nop	;# 
 14994  07D1  0000               	nop	;# 
 14995  07D2  0008               	return
 14996  07D3                     __end_of__unlock:
 14997                           
 14998                           	psect	text35
 14999  08C1                     __ptext35:	
 15000 ;; *************** function _ClearFrameMemoryPartial *****************
 15001 ;; Defined at:
 15002 ;;		line 174 in file "waveshare29epaper.c"
 15003 ;; Parameters:    Size  Location     Type
 15004 ;;  x_start         2    8[BANK0 ] unsigned short 
 15005 ;;  y_start         2   10[BANK0 ] unsigned short 
 15006 ;;  x_end           2   12[BANK0 ] unsigned short 
 15007 ;;  y_end           2   14[BANK0 ] unsigned short 
 15008 ;;  color           1   16[BANK0 ] unsigned char 
 15009 ;; Auto vars:     Size  Location     Type
 15010 ;;  i               2   17[BANK0 ] unsigned short 
 15011 ;; Return value:  Size  Location     Type
 15012 ;;                  1    wreg      void 
 15013 ;; Registers used:
 15014 ;;		wreg, status,2, status,0, pclath, cstack
 15015 ;; Tracked objects:
 15016 ;;		On entry : 1F/0
 15017 ;;		On exit  : 1F/0
 15018 ;;		Unchanged: 0/0
 15019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15020 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15021 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15023 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15024 ;;Total ram usage:       11 bytes
 15025 ;; Hardware stack levels used: 1
 15026 ;; Hardware stack levels required when called: 7
 15027 ;; This function calls:
 15028 ;;		_SendCommand
 15029 ;;		_SendData
 15030 ;;		_SetMemoryArea
 15031 ;;		_SetMemoryPointer
 15032 ;;		___wmul
 15033 ;; This function is called by:
 15034 ;;		_ClearLine
 15035 ;; This function uses a non-reentrant model
 15036 ;;
 15037                           
 15038                           
 15039                           ;psect for function _ClearFrameMemoryPartial
 15040  08C1                     _ClearFrameMemoryPartial:
 15041  08C1                     l4233:	
 15042                           ;incstack = 0
 15043                           ; Regs used in _ClearFrameMemoryPartial: [wreg+status,2+status,0+pclath+cstack]
 15044                           
 15045                           
 15046                           ;waveshare29epaper.c: 175:     SetMemoryArea(x_start, y_start, x_end, y_end);
 15047  08C1  0829               	movf	ClearFrameMemoryPartial@x_start+1,w
 15048  08C2  00A1               	movwf	SetMemoryArea@x_start+1
 15049  08C3  0828               	movf	ClearFrameMemoryPartial@x_start,w
 15050  08C4  00A0               	movwf	SetMemoryArea@x_start
 15051  08C5  082B               	movf	ClearFrameMemoryPartial@y_start+1,w
 15052  08C6  00A3               	movwf	SetMemoryArea@y_start+1
 15053  08C7  082A               	movf	ClearFrameMemoryPartial@y_start,w
 15054  08C8  00A2               	movwf	SetMemoryArea@y_start
 15055  08C9  082D               	movf	ClearFrameMemoryPartial@x_end+1,w
 15056  08CA  00A5               	movwf	SetMemoryArea@x_end+1
 15057  08CB  082C               	movf	ClearFrameMemoryPartial@x_end,w
 15058  08CC  00A4               	movwf	SetMemoryArea@x_end
 15059  08CD  082F               	movf	ClearFrameMemoryPartial@y_end+1,w
 15060  08CE  00A7               	movwf	SetMemoryArea@y_end+1
 15061  08CF  082E               	movf	ClearFrameMemoryPartial@y_end,w
 15062  08D0  00A6               	movwf	SetMemoryArea@y_end
 15063  08D1  318A  2224  3188   	fcall	_SetMemoryArea
 15064                           
 15065                           ;waveshare29epaper.c: 176:     SetMemoryPointer(x_start, y_start);
 15066  08D4  0020               	movlb	0	; select bank0
 15067  08D5  0829               	movf	ClearFrameMemoryPartial@x_start+1,w
 15068  08D6  00F5               	movwf	SetMemoryPointer@x+1
 15069  08D7  0828               	movf	ClearFrameMemoryPartial@x_start,w
 15070  08D8  00F4               	movwf	SetMemoryPointer@x
 15071  08D9  082B               	movf	ClearFrameMemoryPartial@y_start+1,w
 15072  08DA  00F7               	movwf	SetMemoryPointer@y+1
 15073  08DB  082A               	movf	ClearFrameMemoryPartial@y_start,w
 15074  08DC  00F6               	movwf	SetMemoryPointer@y
 15075  08DD  21D6               	fcall	_SetMemoryPointer
 15076                           
 15077                           ;waveshare29epaper.c: 177:     SendCommand(0x24);
 15078  08DE  3024               	movlw	36
 15079  08DF  318F  2752  3188   	fcall	_SendCommand
 15080                           
 15081                           ;waveshare29epaper.c: 179:     uint16_t i;;waveshare29epaper.c: 180:     for (i = 0; i <
      +                           (x_end - x_start) * (y_end - y_start); i++) {
 15082  08E2  0020               	movlb	0	; select bank0
 15083  08E3  01B1               	clrf	ClearFrameMemoryPartial@i
 15084  08E4  01B2               	clrf	ClearFrameMemoryPartial@i+1
 15085  08E5                     l4241:
 15086  08E5  082F               	movf	ClearFrameMemoryPartial@y_end+1,w
 15087  08E6  00F5               	movwf	___wmul@multiplicand+1
 15088  08E7  082E               	movf	ClearFrameMemoryPartial@y_end,w
 15089  08E8  00F4               	movwf	___wmul@multiplicand
 15090  08E9  082A               	movf	ClearFrameMemoryPartial@y_start,w
 15091  08EA  02F4               	subwf	___wmul@multiplicand,f
 15092  08EB  082B               	movf	ClearFrameMemoryPartial@y_start+1,w
 15093  08EC  3BF5               	subwfb	___wmul@multiplicand+1,f
 15094  08ED  082D               	movf	ClearFrameMemoryPartial@x_end+1,w
 15095  08EE  00F3               	movwf	___wmul@multiplier+1
 15096  08EF  082C               	movf	ClearFrameMemoryPartial@x_end,w
 15097  08F0  00F2               	movwf	___wmul@multiplier
 15098  08F1  0828               	movf	ClearFrameMemoryPartial@x_start,w
 15099  08F2  02F2               	subwf	___wmul@multiplier,f
 15100  08F3  0829               	movf	ClearFrameMemoryPartial@x_start+1,w
 15101  08F4  3BF3               	subwfb	___wmul@multiplier+1,f
 15102  08F5  318F  273D  3188   	fcall	___wmul
 15103  08F8  0873               	movf	?___wmul+1,w
 15104  08F9  0020               	movlb	0	; select bank0
 15105  08FA  0232               	subwf	ClearFrameMemoryPartial@i+1,w
 15106  08FB  1D03               	skipz
 15107  08FC  28FF               	goto	u2915
 15108  08FD  0872               	movf	?___wmul,w
 15109  08FE  0231               	subwf	ClearFrameMemoryPartial@i,w
 15110  08FF                     u2915:
 15111  08FF  1803               	btfsc	3,0
 15112  0900  0008               	return
 15113                           
 15114                           ;waveshare29epaper.c: 181:         SendData(color);
 15115  0901  0830               	movf	ClearFrameMemoryPartial@color,w
 15116  0902  318A  228D  3188   	fcall	_SendData
 15117                           
 15118                           ;waveshare29epaper.c: 182:     }
 15119  0905  0020               	movlb	0	; select bank0
 15120  0906  0AB1               	incf	ClearFrameMemoryPartial@i,f
 15121  0907  1903               	skipnz
 15122  0908  0AB2               	incf	ClearFrameMemoryPartial@i+1,f
 15123  0909  28E5               	goto	l4241
 15124  090A                     __end_of_ClearFrameMemoryPartial:
 15125  090A                     __ptext33:	
 15126 ;; *************** function _SetFrameMemoryPartial *****************
 15127 ;; Defined at:
 15128 ;;		line 110 in file "waveshare29epaper.c"
 15129 ;; Parameters:    Size  Location     Type
 15130 ;;  image_buffer    2    8[BANK0 ] PTR const unsigned char 
 15131 ;;		 -> bracket_right_rot(75), bracket_left_rot(75), g_arrow_rot(183), b_arrow_rot(183), 
 15132 ;;		 -> m_arrow_rot(183), n_arrow_rot(183), b_rot(75), m_rot(75), 
 15133 ;;		 -> parallel_rot(75), serie_rot(75), s_prime_rot(75), n_prime_rot(75), 
 15134 ;;		 -> s_rot(75), n_rot(75), 
 15135 ;;  x               2   10[BANK0 ] unsigned short 
 15136 ;;  y               2   12[BANK0 ] unsigned short 
 15137 ;;  image_width     2   14[BANK0 ] unsigned short 
 15138 ;;  image_height    2   16[BANK0 ] unsigned short 
 15139 ;;  invert_color    1   18[BANK0 ] _Bool 
 15140 ;; Auto vars:     Size  Location     Type
 15141 ;;  y_end           2   32[BANK0 ] unsigned short 
 15142 ;;  x_end           2   30[BANK0 ] unsigned short 
 15143 ;;  j               2   28[BANK0 ] unsigned short 
 15144 ;;  i               2   26[BANK0 ] unsigned short 
 15145 ;;  data            1   25[BANK0 ] unsigned char 
 15146 ;; Return value:  Size  Location     Type
 15147 ;;                  1    wreg      void 
 15148 ;; Registers used:
 15149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15150 ;; Tracked objects:
 15151 ;;		On entry : 1F/0
 15152 ;;		On exit  : 1F/0
 15153 ;;		Unchanged: 0/0
 15154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15155 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15156 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15157 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15158 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15159 ;;Total ram usage:       26 bytes
 15160 ;; Hardware stack levels used: 1
 15161 ;; Hardware stack levels required when called: 7
 15162 ;; This function calls:
 15163 ;;		_SendCommand
 15164 ;;		_SendData
 15165 ;;		_SetMemoryArea
 15166 ;;		_SetMemoryPointer
 15167 ;;		___wmul
 15168 ;; This function is called by:
 15169 ;;		_ImageFromPickupConf
 15170 ;; This function uses a non-reentrant model
 15171 ;;
 15172                           
 15173                           
 15174                           ;psect for function _SetFrameMemoryPartial
 15175  090A                     _SetFrameMemoryPartial:
 15176  090A                     l4415:	
 15177                           ;incstack = 0
 15178                           ; Regs used in _SetFrameMemoryPartial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15179                           
 15180                           
 15181                           ;waveshare29epaper.c: 111:     uint16_t x_end, y_end;;waveshare29epaper.c: 114:     x &=
      +                           0xF8;
 15182  090A  30F8               	movlw	248
 15183  090B  05AA               	andwf	SetFrameMemoryPartial@x,f
 15184  090C  01AB               	clrf	SetFrameMemoryPartial@x+1
 15185                           
 15186                           ;waveshare29epaper.c: 115:     image_width &= 0xF8;
 15187  090D  05AE               	andwf	SetFrameMemoryPartial@image_width,f
 15188  090E  01AF               	clrf	SetFrameMemoryPartial@image_width+1
 15189                           
 15190                           ;waveshare29epaper.c: 116:     if (x + image_width >= 128) {
 15191  090F  082E               	movf	SetFrameMemoryPartial@image_width,w
 15192  0910  072A               	addwf	SetFrameMemoryPartial@x,w
 15193  0911  00B3               	movwf	??_SetFrameMemoryPartial
 15194  0912  082F               	movf	SetFrameMemoryPartial@image_width+1,w
 15195  0913  3D2B               	addwfc	SetFrameMemoryPartial@x+1,w
 15196  0914  00B4               	movwf	??_SetFrameMemoryPartial+1
 15197  0915  3000               	movlw	0
 15198  0916  0234               	subwf	??_SetFrameMemoryPartial+1,w
 15199  0917  3080               	movlw	128
 15200  0918  1903               	skipnz
 15201  0919  0233               	subwf	??_SetFrameMemoryPartial,w
 15202  091A  1C03               	skipc
 15203  091B  2920               	goto	l4421
 15204                           
 15205                           ;waveshare29epaper.c: 117:         x_end = 128 - 1;
 15206  091C  307F               	movlw	127
 15207  091D  00BE               	movwf	SetFrameMemoryPartial@x_end
 15208  091E  01BF               	clrf	SetFrameMemoryPartial@x_end+1
 15209                           
 15210                           ;waveshare29epaper.c: 118:     } else {
 15211  091F  2929               	goto	l4425
 15212  0920                     l4421:
 15213                           
 15214                           ;waveshare29epaper.c: 119:         x_end = x + image_width - 1;
 15215  0920  082E               	movf	SetFrameMemoryPartial@image_width,w
 15216  0921  072A               	addwf	SetFrameMemoryPartial@x,w
 15217  0922  00BE               	movwf	SetFrameMemoryPartial@x_end
 15218  0923  082F               	movf	SetFrameMemoryPartial@image_width+1,w
 15219  0924  3D2B               	addwfc	SetFrameMemoryPartial@x+1,w
 15220  0925  00BF               	movwf	SetFrameMemoryPartial@x_end+1
 15221  0926  30FF               	movlw	255
 15222  0927  07BE               	addwf	SetFrameMemoryPartial@x_end,f
 15223  0928  3DBF               	addwfc	SetFrameMemoryPartial@x_end+1,f
 15224  0929                     l4425:
 15225                           
 15226                           ;waveshare29epaper.c: 121:     if (y + image_height >= 296) {
 15227  0929  0830               	movf	SetFrameMemoryPartial@image_height,w
 15228  092A  072C               	addwf	SetFrameMemoryPartial@y,w
 15229  092B  00B3               	movwf	??_SetFrameMemoryPartial
 15230  092C  0831               	movf	SetFrameMemoryPartial@image_height+1,w
 15231  092D  3D2D               	addwfc	SetFrameMemoryPartial@y+1,w
 15232  092E  00B4               	movwf	??_SetFrameMemoryPartial+1
 15233  092F  3001               	movlw	1
 15234  0930  0234               	subwf	??_SetFrameMemoryPartial+1,w
 15235  0931  3028               	movlw	40
 15236  0932  1903               	skipnz
 15237  0933  0233               	subwf	??_SetFrameMemoryPartial,w
 15238  0934  1C03               	skipc
 15239  0935  293B               	goto	l4429
 15240                           
 15241                           ;waveshare29epaper.c: 122:         y_end = 296 - 1;
 15242  0936  3027               	movlw	39
 15243  0937  00C0               	movwf	SetFrameMemoryPartial@y_end
 15244  0938  3001               	movlw	1
 15245  0939  00C1               	movwf	SetFrameMemoryPartial@y_end+1
 15246                           
 15247                           ;waveshare29epaper.c: 123:     } else {
 15248  093A  2944               	goto	l4433
 15249  093B                     l4429:
 15250                           
 15251                           ;waveshare29epaper.c: 124:         y_end = y + image_height - 1;
 15252  093B  0830               	movf	SetFrameMemoryPartial@image_height,w
 15253  093C  072C               	addwf	SetFrameMemoryPartial@y,w
 15254  093D  00C0               	movwf	SetFrameMemoryPartial@y_end
 15255  093E  0831               	movf	SetFrameMemoryPartial@image_height+1,w
 15256  093F  3D2D               	addwfc	SetFrameMemoryPartial@y+1,w
 15257  0940  00C1               	movwf	SetFrameMemoryPartial@y_end+1
 15258  0941  30FF               	movlw	255
 15259  0942  07C0               	addwf	SetFrameMemoryPartial@y_end,f
 15260  0943  3DC1               	addwfc	SetFrameMemoryPartial@y_end+1,f
 15261  0944                     l4433:
 15262                           
 15263                           ;waveshare29epaper.c: 126:     SetMemoryArea(x, y, x_end, y_end);
 15264  0944  082B               	movf	SetFrameMemoryPartial@x+1,w
 15265  0945  00A1               	movwf	SetMemoryArea@x_start+1
 15266  0946  082A               	movf	SetFrameMemoryPartial@x,w
 15267  0947  00A0               	movwf	SetMemoryArea@x_start
 15268  0948  082D               	movf	SetFrameMemoryPartial@y+1,w
 15269  0949  00A3               	movwf	SetMemoryArea@y_start+1
 15270  094A  082C               	movf	SetFrameMemoryPartial@y,w
 15271  094B  00A2               	movwf	SetMemoryArea@y_start
 15272  094C  083F               	movf	SetFrameMemoryPartial@x_end+1,w
 15273  094D  00A5               	movwf	SetMemoryArea@x_end+1
 15274  094E  083E               	movf	SetFrameMemoryPartial@x_end,w
 15275  094F  00A4               	movwf	SetMemoryArea@x_end
 15276  0950  0841               	movf	SetFrameMemoryPartial@y_end+1,w
 15277  0951  00A7               	movwf	SetMemoryArea@y_end+1
 15278  0952  0840               	movf	SetFrameMemoryPartial@y_end,w
 15279  0953  00A6               	movwf	SetMemoryArea@y_end
 15280  0954  318A  2224  3188   	fcall	_SetMemoryArea
 15281                           
 15282                           ;waveshare29epaper.c: 127:     SetMemoryPointer(x, y);
 15283  0957  0020               	movlb	0	; select bank0
 15284  0958  082B               	movf	SetFrameMemoryPartial@x+1,w
 15285  0959  00F5               	movwf	SetMemoryPointer@x+1
 15286  095A  082A               	movf	SetFrameMemoryPartial@x,w
 15287  095B  00F4               	movwf	SetMemoryPointer@x
 15288  095C  082D               	movf	SetFrameMemoryPartial@y+1,w
 15289  095D  00F7               	movwf	SetMemoryPointer@y+1
 15290  095E  082C               	movf	SetFrameMemoryPartial@y,w
 15291  095F  00F6               	movwf	SetMemoryPointer@y
 15292  0960  21D6               	fcall	_SetMemoryPointer
 15293                           
 15294                           ;waveshare29epaper.c: 128:     SendCommand(0x24);
 15295  0961  3024               	movlw	36
 15296  0962  318F  2752  3188   	fcall	_SendCommand
 15297                           
 15298                           ;waveshare29epaper.c: 130:     uint8_t data;;waveshare29epaper.c: 131:     uint16_t i, j
      +                          ;;waveshare29epaper.c: 132:     for (j = 0; j < y_end - y + 1; j++) {
 15299  0965  0020               	movlb	0	; select bank0
 15300  0966  01BC               	clrf	SetFrameMemoryPartial@j
 15301  0967  01BD               	clrf	SetFrameMemoryPartial@j+1
 15302  0968                     l4459:
 15303  0968  082C               	movf	SetFrameMemoryPartial@y,w
 15304  0969  0240               	subwf	SetFrameMemoryPartial@y_end,w
 15305  096A  00B3               	movwf	??_SetFrameMemoryPartial
 15306  096B  082D               	movf	SetFrameMemoryPartial@y+1,w
 15307  096C  3B41               	subwfb	SetFrameMemoryPartial@y_end+1,w
 15308  096D  00B4               	movwf	??_SetFrameMemoryPartial+1
 15309  096E  0833               	movf	??_SetFrameMemoryPartial,w
 15310  096F  3E01               	addlw	1
 15311  0970  00B5               	movwf	??_SetFrameMemoryPartial+2
 15312  0971  3000               	movlw	0
 15313  0972  3D34               	addwfc	??_SetFrameMemoryPartial+1,w
 15314  0973  00B6               	movwf	??_SetFrameMemoryPartial+3
 15315  0974  023D               	subwf	SetFrameMemoryPartial@j+1,w
 15316  0975  1D03               	skipz
 15317  0976  2979               	goto	u3165
 15318  0977  0835               	movf	??_SetFrameMemoryPartial+2,w
 15319  0978  023C               	subwf	SetFrameMemoryPartial@j,w
 15320  0979                     u3165:
 15321  0979  1803               	btfsc	3,0
 15322  097A  0008               	return
 15323                           
 15324                           ;waveshare29epaper.c: 133:         for (i = 0; i < (x_end - x + 1) / 8; i++) {
 15325  097B  01BA               	clrf	SetFrameMemoryPartial@i
 15326  097C  01BB               	clrf	SetFrameMemoryPartial@i+1
 15327  097D                     l4455:
 15328  097D  082A               	movf	SetFrameMemoryPartial@x,w
 15329  097E  023E               	subwf	SetFrameMemoryPartial@x_end,w
 15330  097F  00B3               	movwf	??_SetFrameMemoryPartial
 15331  0980  082B               	movf	SetFrameMemoryPartial@x+1,w
 15332  0981  3B3F               	subwfb	SetFrameMemoryPartial@x_end+1,w
 15333  0982  00B4               	movwf	??_SetFrameMemoryPartial+1
 15334  0983  0833               	movf	??_SetFrameMemoryPartial,w
 15335  0984  3E01               	addlw	1
 15336  0985  00B5               	movwf	??_SetFrameMemoryPartial+2
 15337  0986  3000               	movlw	0
 15338  0987  3D34               	addwfc	??_SetFrameMemoryPartial+1,w
 15339  0988  00B6               	movwf	??_SetFrameMemoryPartial+3
 15340  0989  36B6               	lsrf	??_SetFrameMemoryPartial+3,f
 15341  098A  0CB5               	rrf	??_SetFrameMemoryPartial+2,f
 15342  098B  36B6               	lsrf	??_SetFrameMemoryPartial+3,f
 15343  098C  0CB5               	rrf	??_SetFrameMemoryPartial+2,f
 15344  098D  36B6               	lsrf	??_SetFrameMemoryPartial+3,f
 15345  098E  0CB5               	rrf	??_SetFrameMemoryPartial+2,f
 15346  098F  0836               	movf	??_SetFrameMemoryPartial+3,w
 15347  0990  023B               	subwf	SetFrameMemoryPartial@i+1,w
 15348  0991  1D03               	skipz
 15349  0992  2995               	goto	u3155
 15350  0993  0835               	movf	??_SetFrameMemoryPartial+2,w
 15351  0994  023A               	subwf	SetFrameMemoryPartial@i,w
 15352  0995                     u3155:
 15353  0995  1803               	btfsc	3,0
 15354  0996  29D2               	goto	l4457
 15355                           
 15356                           ;waveshare29epaper.c: 134:             data = image_buffer[i + j * (image_width / 8)];
 15357  0997  082F               	movf	SetFrameMemoryPartial@image_width+1,w
 15358  0998  00B4               	movwf	??_SetFrameMemoryPartial+1
 15359  0999  082E               	movf	SetFrameMemoryPartial@image_width,w
 15360  099A  00B3               	movwf	??_SetFrameMemoryPartial
 15361  099B  36B4               	lsrf	??_SetFrameMemoryPartial+1,f
 15362  099C  0CB3               	rrf	??_SetFrameMemoryPartial,f
 15363  099D  36B4               	lsrf	??_SetFrameMemoryPartial+1,f
 15364  099E  0CB3               	rrf	??_SetFrameMemoryPartial,f
 15365  099F  36B4               	lsrf	??_SetFrameMemoryPartial+1,f
 15366  09A0  0CB3               	rrf	??_SetFrameMemoryPartial,f
 15367  09A1  0833               	movf	??_SetFrameMemoryPartial,w
 15368  09A2  00F2               	movwf	___wmul@multiplier
 15369  09A3  0834               	movf	??_SetFrameMemoryPartial+1,w
 15370  09A4  00F3               	movwf	___wmul@multiplier+1
 15371  09A5  083D               	movf	SetFrameMemoryPartial@j+1,w
 15372  09A6  00F5               	movwf	___wmul@multiplicand+1
 15373  09A7  083C               	movf	SetFrameMemoryPartial@j,w
 15374  09A8  00F4               	movwf	___wmul@multiplicand
 15375  09A9  318F  273D  3188   	fcall	___wmul
 15376  09AC  0872               	movf	?___wmul,w
 15377  09AD  0020               	movlb	0	; select bank0
 15378  09AE  0728               	addwf	SetFrameMemoryPartial@image_buffer,w
 15379  09AF  00B5               	movwf	??_SetFrameMemoryPartial+2
 15380  09B0  0873               	movf	?___wmul+1,w
 15381  09B1  3D29               	addwfc	SetFrameMemoryPartial@image_buffer+1,w
 15382  09B2  00B6               	movwf	??_SetFrameMemoryPartial+3
 15383  09B3  0835               	movf	??_SetFrameMemoryPartial+2,w
 15384  09B4  073A               	addwf	SetFrameMemoryPartial@i,w
 15385  09B5  0084               	movwf	4
 15386  09B6  0836               	movf	??_SetFrameMemoryPartial+3,w
 15387  09B7  3D3B               	addwfc	SetFrameMemoryPartial@i+1,w
 15388  09B8  0085               	movwf	5
 15389  09B9  0800               	movf	0,w	;code access
 15390  09BA  00B9               	movwf	SetFrameMemoryPartial@data
 15391                           
 15392                           ;waveshare29epaper.c: 135:             SendData(invert_color ? ~data : data);
 15393  09BB  0832               	movf	SetFrameMemoryPartial@invert_color,w
 15394  09BC  1D03               	btfss	3,2
 15395  09BD  29C2               	goto	l4449
 15396  09BE  0839               	movf	SetFrameMemoryPartial@data,w
 15397  09BF  00B7               	movwf	_SetFrameMemoryPartial$1386
 15398  09C0  01B8               	clrf	_SetFrameMemoryPartial$1386+1
 15399  09C1  29C9               	goto	l4451
 15400  09C2                     l4449:
 15401  09C2  0839               	movf	SetFrameMemoryPartial@data,w
 15402  09C3  00B3               	movwf	??_SetFrameMemoryPartial
 15403  09C4  01B4               	clrf	??_SetFrameMemoryPartial+1
 15404  09C5  0933               	comf	??_SetFrameMemoryPartial,w
 15405  09C6  00B7               	movwf	_SetFrameMemoryPartial$1386
 15406  09C7  0934               	comf	??_SetFrameMemoryPartial+1,w
 15407  09C8  00B8               	movwf	_SetFrameMemoryPartial$1386+1
 15408  09C9                     l4451:
 15409  09C9  0837               	movf	_SetFrameMemoryPartial$1386,w
 15410  09CA  318A  228D  3188   	fcall	_SendData
 15411                           
 15412                           ;waveshare29epaper.c: 136:         }
 15413  09CD  0020               	movlb	0	; select bank0
 15414  09CE  0ABA               	incf	SetFrameMemoryPartial@i,f
 15415  09CF  1903               	skipnz
 15416  09D0  0ABB               	incf	SetFrameMemoryPartial@i+1,f
 15417  09D1  297D               	goto	l4455
 15418  09D2                     l4457:
 15419                           
 15420                           ;waveshare29epaper.c: 137:     }
 15421  09D2  0ABC               	incf	SetFrameMemoryPartial@j,f
 15422  09D3  1903               	skipnz
 15423  09D4  0ABD               	incf	SetFrameMemoryPartial@j+1,f
 15424  09D5  2968               	goto	l4459
 15425  09D6                     __end_of_SetFrameMemoryPartial:
 15426  09D6                     __ptext44:	
 15427 ;; *************** function _SetMemoryPointer *****************
 15428 ;; Defined at:
 15429 ;;		line 234 in file "waveshare29epaper.c"
 15430 ;; Parameters:    Size  Location     Type
 15431 ;;  x               2    4[COMMON] unsigned short 
 15432 ;;  y               2    6[COMMON] unsigned short 
 15433 ;; Auto vars:     Size  Location     Type
 15434 ;;		None
 15435 ;; Return value:  Size  Location     Type
 15436 ;;                  1    wreg      void 
 15437 ;; Registers used:
 15438 ;;		wreg, status,2, status,0, pclath, cstack
 15439 ;; Tracked objects:
 15440 ;;		On entry : 1D/0
 15441 ;;		On exit  : 1F/0
 15442 ;;		Unchanged: 0/0
 15443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15446 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15447 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15448 ;;Total ram usage:        6 bytes
 15449 ;; Hardware stack levels used: 1
 15450 ;; Hardware stack levels required when called: 6
 15451 ;; This function calls:
 15452 ;;		_SendCommand
 15453 ;;		_SendData
 15454 ;;		_WaitUntilIdle
 15455 ;; This function is called by:
 15456 ;;		_SetFrameMemoryPartial
 15457 ;;		_ClearFrameMemory
 15458 ;;		_ClearFrameMemoryPartial
 15459 ;; This function uses a non-reentrant model
 15460 ;;
 15461                           
 15462                           
 15463                           ;psect for function _SetMemoryPointer
 15464  09D6                     _SetMemoryPointer:
 15465                           
 15466                           ;waveshare29epaper.c: 235:     SendCommand(0x4E);
 15467                           
 15468                           ;incstack = 0
 15469                           ; Regs used in _SetMemoryPointer: [wreg+status,2+status,0+pclath+cstack]
 15470  09D6  304E               	movlw	78
 15471  09D7  318F  2752  3188   	fcall	_SendCommand
 15472                           
 15473                           ;waveshare29epaper.c: 237:     SendData((x >> 3) & 0xFF);
 15474  09DA  0875               	movf	SetMemoryPointer@x+1,w
 15475  09DB  00F9               	movwf	??_SetMemoryPointer+1
 15476  09DC  0874               	movf	SetMemoryPointer@x,w
 15477  09DD  00F8               	movwf	??_SetMemoryPointer
 15478  09DE  36F9               	lsrf	??_SetMemoryPointer+1,f
 15479  09DF  0CF8               	rrf	??_SetMemoryPointer,f
 15480  09E0  36F9               	lsrf	??_SetMemoryPointer+1,f
 15481  09E1  0CF8               	rrf	??_SetMemoryPointer,f
 15482  09E2  36F9               	lsrf	??_SetMemoryPointer+1,f
 15483  09E3  0CF8               	rrf	??_SetMemoryPointer,f
 15484  09E4  0878               	movf	??_SetMemoryPointer,w
 15485  09E5  318A  228D  3188   	fcall	_SendData
 15486                           
 15487                           ;waveshare29epaper.c: 238:     SendCommand(0x4F);
 15488  09E8  304F               	movlw	79
 15489  09E9  318F  2752  3188   	fcall	_SendCommand
 15490                           
 15491                           ;waveshare29epaper.c: 239:     SendData(y & 0xFF);
 15492  09EC  0876               	movf	SetMemoryPointer@y,w
 15493  09ED  318A  228D  3188   	fcall	_SendData
 15494                           
 15495                           ;waveshare29epaper.c: 240:     SendData((y >> 8) & 0xFF);
 15496  09F0  0877               	movf	SetMemoryPointer@y+1,w
 15497  09F1  318A  228D         	fcall	_SendData
 15498                           
 15499                           ;waveshare29epaper.c: 241:     WaitUntilIdle();
 15500  09F3  318F  2F9B         	ljmp	l4183
 15501  09F5                     __end_of_SetMemoryPointer:
 15502                           
 15503                           	psect	text41
 15504  0828                     __ptext41:	
 15505 ;; *************** function _SetLut *****************
 15506 ;; Defined at:
 15507 ;;		line 99 in file "waveshare29epaper.c"
 15508 ;; Parameters:    Size  Location     Type
 15509 ;;  lut             2    4[COMMON] PTR const unsigned char 
 15510 ;;		 -> lut_partial_update(30), lut_full_update(30), 
 15511 ;; Auto vars:     Size  Location     Type
 15512 ;;  i               2    7[COMMON] int 
 15513 ;; Return value:  Size  Location     Type
 15514 ;;                  1    wreg      void 
 15515 ;; Registers used:
 15516 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15517 ;; Tracked objects:
 15518 ;;		On entry : 1F/0
 15519 ;;		On exit  : 0/0
 15520 ;;		Unchanged: 0/0
 15521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15524 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15525 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15526 ;;Total ram usage:        5 bytes
 15527 ;; Hardware stack levels used: 1
 15528 ;; Hardware stack levels required when called: 6
 15529 ;; This function calls:
 15530 ;;		_SendCommand
 15531 ;;		_SendData
 15532 ;; This function is called by:
 15533 ;;		_InitDisplay
 15534 ;; This function uses a non-reentrant model
 15535 ;;
 15536                           
 15537                           
 15538                           ;psect for function _SetLut
 15539  0828                     _SetLut:
 15540  0828                     l4193:	
 15541                           ;incstack = 0
 15542                           ; Regs used in _SetLut: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15543                           
 15544                           
 15545                           ;waveshare29epaper.c: 100:     SendCommand(0x32);
 15546  0828  3032               	movlw	50
 15547  0829  318F  2752  3188   	fcall	_SendCommand
 15548                           
 15549                           ;waveshare29epaper.c: 101:     int i;;waveshare29epaper.c: 102:     for (i = 0; i < 30; 
      +                          i++)
 15550  082C  01F7               	clrf	SetLut@i
 15551  082D  01F8               	clrf	SetLut@i+1
 15552  082E                     l4201:
 15553                           
 15554                           ;waveshare29epaper.c: 103:         SendData(lut[i]);
 15555  082E  0874               	movf	SetLut@lut,w
 15556  082F  0777               	addwf	SetLut@i,w
 15557  0830  0084               	movwf	4
 15558  0831  0875               	movf	SetLut@lut+1,w
 15559  0832  3D78               	addwfc	SetLut@i+1,w
 15560  0833  0085               	movwf	5
 15561  0834  0800               	movf	0,w	;code access
 15562  0835  318A  228D  3188   	fcall	_SendData
 15563  0838  0AF7               	incf	SetLut@i,f
 15564  0839  1903               	skipnz
 15565  083A  0AF8               	incf	SetLut@i+1,f
 15566  083B  0878               	movf	SetLut@i+1,w
 15567  083C  3A80               	xorlw	128
 15568  083D  00F6               	movwf	??_SetLut
 15569  083E  3080               	movlw	128
 15570  083F  0276               	subwf	??_SetLut,w
 15571  0840  1D03               	skipz
 15572  0841  2844               	goto	u2885
 15573  0842  301E               	movlw	30
 15574  0843  0277               	subwf	SetLut@i,w
 15575  0844                     u2885:
 15576  0844  1803               	btfsc	3,0
 15577  0845  0008               	return
 15578  0846  282E               	goto	l4201
 15579  0847                     __end_of_SetLut:
 15580                           
 15581                           	psect	intentry
 15582  0004                     __pintentry:	
 15583 ;; *************** function _INTERRUPT_InterruptManager *****************
 15584 ;; Defined at:
 15585 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15586 ;; Parameters:    Size  Location     Type
 15587 ;;		None
 15588 ;; Auto vars:     Size  Location     Type
 15589 ;;		None
 15590 ;; Return value:  Size  Location     Type
 15591 ;;                  1    wreg      void 
 15592 ;; Registers used:
 15593 ;;		wreg, status,2, status,0, pclath, cstack
 15594 ;; Tracked objects:
 15595 ;;		On entry : 0/0
 15596 ;;		On exit  : 0/0
 15597 ;;		Unchanged: 0/0
 15598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15603 ;;Total ram usage:        0 bytes
 15604 ;; Hardware stack levels used: 1
 15605 ;; Hardware stack levels required when called: 3
 15606 ;; This function calls:
 15607 ;;		_PIN_MANAGER_IOC
 15608 ;;		_TMR1_ISR
 15609 ;; This function is called by:
 15610 ;;		Interrupt level 1
 15611 ;; This function uses a non-reentrant model
 15612 ;;
 15613                           
 15614  0004                     _INTERRUPT_InterruptManager:
 15615                           
 15616                           ;incstack = 0
 15617  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 15618                           
 15619                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 15620  0005  3180               	pagesel	$
 15621                           
 15622                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.IOCIE == 1 && INTCONbits
      +                          .IOCIF == 1)
 15623  0006  198B               	btfsc	11,3	;volatile
 15624  0007  1C0B               	btfss	11,0	;volatile
 15625  0008  280D               	goto	i1l336
 15626                           
 15627                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
 15628  0009  319F  276F  3180   	fcall	_PIN_MANAGER_IOC
 15629                           
 15630                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 15631  000C  2817               	goto	i1l342
 15632  000D                     i1l336:	
 15633                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
 15634                           
 15635  000D  1F0B               	btfss	11,6	;volatile
 15636  000E  2817               	goto	i1l342
 15637                           
 15638                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 15639  000F  0021               	movlb	1	; select bank1
 15640  0010  1C11               	btfss	17,0	;volatile
 15641  0011  2817               	goto	i1l342
 15642  0012  0020               	movlb	0	; select bank0
 15643  0013  1C11               	btfss	17,0	;volatile
 15644  0014  2817               	goto	i1l342
 15645                           
 15646                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
 15647  0015  3188  2067         	fcall	_TMR1_ISR
 15648  0017                     i1l342:	
 15649                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
 15650                           
 15651                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 15652                           
 15653  0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 15654  0018  0009               	retfie
 15655  0019                     __end_of_INTERRUPT_InterruptManager:
 15656                           
 15657                           	psect	text54
 15658  0867                     __ptext54:	
 15659 ;; *************** function _TMR1_ISR *****************
 15660 ;; Defined at:
 15661 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 15662 ;; Parameters:    Size  Location     Type
 15663 ;;		None
 15664 ;; Auto vars:     Size  Location     Type
 15665 ;;		None
 15666 ;; Return value:  Size  Location     Type
 15667 ;;                  1    wreg      void 
 15668 ;; Registers used:
 15669 ;;		wreg, status,2, status,0, pclath, cstack
 15670 ;; Tracked objects:
 15671 ;;		On entry : 1F/0
 15672 ;;		On exit  : 0/0
 15673 ;;		Unchanged: 0/0
 15674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15679 ;;Total ram usage:        0 bytes
 15680 ;; Hardware stack levels used: 1
 15681 ;; Hardware stack levels required when called: 1
 15682 ;; This function calls:
 15683 ;;		Absolute function
 15684 ;;		_TMR1_CallBack
 15685 ;;		_TMR1_DefaultInterruptHandler
 15686 ;;		_TMR1_WriteTimer
 15687 ;; This function is called by:
 15688 ;;		_INTERRUPT_InterruptManager
 15689 ;; This function uses a non-reentrant model
 15690 ;;
 15691                           
 15692                           
 15693                           ;psect for function _TMR1_ISR
 15694  0867                     _TMR1_ISR:
 15695                           
 15696                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
 15697                           
 15698                           ;incstack = 0
 15699                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 15700  0867  1011               	bcf	17,0	;volatile
 15701                           
 15702                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
 15703  0868  0021               	movlb	1	; select bank1
 15704  0869  0853               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 15705  086A  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 15706  086B  0852               	movf	_timer1ReloadVal^(0+128),w	;volatile
 15707  086C  00F0               	movwf	TMR1_WriteTimer@timerVal
 15708  086D  207A  3188         	fcall	_TMR1_WriteTimer
 15709                           
 15710                           ;mcc_generated_files/tmr1.c: 164:     if(TMR1_InterruptHandler)
 15711  086F  0021               	movlb	1	; select bank1
 15712  0870  0850               	movf	_TMR1_InterruptHandler^(0+128),w
 15713  0871  0451               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 15714  0872  1903               	btfsc	3,2
 15715  0873  0008               	return
 15716                           
 15717                           ;mcc_generated_files/tmr1.c: 165:     {;mcc_generated_files/tmr1.c: 166:         TMR1_In
      +                          terruptHandler();
 15718  0874  0851               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 15719  0875  008A               	movwf	10
 15720  0876  0850               	movf	_TMR1_InterruptHandler^(0+128),w
 15721  0877  000A               	callw
 15722  0878  3188               	pagesel	$
 15723  0879  0008               	return
 15724  087A                     __end_of_TMR1_ISR:
 15725  087A                     __ptext55:	
 15726 ;; *************** function _TMR1_WriteTimer *****************
 15727 ;; Defined at:
 15728 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 15729 ;; Parameters:    Size  Location     Type
 15730 ;;  timerVal        2    0[COMMON] unsigned short 
 15731 ;; Auto vars:     Size  Location     Type
 15732 ;;		None
 15733 ;; Return value:  Size  Location     Type
 15734 ;;                  1    wreg      void 
 15735 ;; Registers used:
 15736 ;;		wreg
 15737 ;; Tracked objects:
 15738 ;;		On entry : 1F/1
 15739 ;;		On exit  : 1F/0
 15740 ;;		Unchanged: 0/0
 15741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15745 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15746 ;;Total ram usage:        2 bytes
 15747 ;; Hardware stack levels used: 1
 15748 ;; This function calls:
 15749 ;;		Nothing
 15750 ;; This function is called by:
 15751 ;;		_TMR1_ISR
 15752 ;; This function uses a non-reentrant model
 15753 ;;
 15754                           
 15755                           
 15756                           ;psect for function _TMR1_WriteTimer
 15757  087A                     _TMR1_WriteTimer:
 15758                           
 15759                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
 15760                           
 15761                           ;incstack = 0
 15762                           ; Regs used in _TMR1_WriteTimer: [wreg]
 15763  087A  0020               	movlb	0	; select bank0
 15764  087B  1D18               	btfss	24,2	;volatile
 15765  087C  2884               	goto	i1l3487
 15766                           
 15767                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
 15768  087D  1018               	bcf	24,0	;volatile
 15769                           
 15770                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
 15771  087E  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15772  087F  0097               	movwf	23	;volatile
 15773                           
 15774                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
 15775  0880  0870               	movf	TMR1_WriteTimer@timerVal,w
 15776  0881  0096               	movwf	22	;volatile
 15777                           
 15778                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
 15779  0882  1418               	bsf	24,0	;volatile
 15780                           
 15781                           ;mcc_generated_files/tmr1.c: 133:     }
 15782  0883  0008               	return
 15783  0884                     i1l3487:
 15784                           
 15785                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 15786  0884  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15787  0885  0097               	movwf	23	;volatile
 15788                           
 15789                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
 15790  0886  0870               	movf	TMR1_WriteTimer@timerVal,w
 15791  0887  0096               	movwf	22	;volatile
 15792  0888  0008               	return
 15793  0889                     __end_of_TMR1_WriteTimer:
 15794                           
 15795                           	psect	text56
 15796  080D                     __ptext56:	
 15797 ;; *************** function _TMR1_CallBack *****************
 15798 ;; Defined at:
 15799 ;;		line 140 in file "main.c"
 15800 ;; Parameters:    Size  Location     Type
 15801 ;;		None
 15802 ;; Auto vars:     Size  Location     Type
 15803 ;;		None
 15804 ;; Return value:  Size  Location     Type
 15805 ;;                  1    wreg      void 
 15806 ;; Registers used:
 15807 ;;		wreg, status,2, status,0
 15808 ;; Tracked objects:
 15809 ;;		On entry : 1F/1
 15810 ;;		On exit  : 1F/1
 15811 ;;		Unchanged: 0/0
 15812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15815 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15816 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15817 ;;Total ram usage:        2 bytes
 15818 ;; Hardware stack levels used: 1
 15819 ;; This function calls:
 15820 ;;		Nothing
 15821 ;; This function is called by:
 15822 ;;		_main
 15823 ;;		_TMR1_ISR
 15824 ;; This function uses a non-reentrant model
 15825 ;;
 15826                           
 15827                           
 15828                           ;psect for function _TMR1_CallBack
 15829  080D                     _TMR1_CallBack:
 15830                           
 15831                           ;main.c: 142:     if(button_clicked) ++click_timer;
 15832                           
 15833                           ;incstack = 0
 15834                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0]
 15835  080D  087A               	movf	_button_clicked,w	;volatile
 15836  080E  1903               	btfsc	3,2
 15837  080F  2813               	goto	i1l3533
 15838  0810  0ACE               	incf	_click_timer^(0+128),f	;volatile
 15839  0811  1903               	skipnz
 15840  0812  0ACF               	incf	(_click_timer+1)^(0+128),f	;volatile
 15841  0813                     i1l3533:
 15842                           
 15843                           ;main.c: 143:     if(switch_pos != prev_switch_pos){
 15844  0813  087B               	movf	_switch_pos,w
 15845  0814  065C               	xorwf	_prev_switch_pos^(0+128),w
 15846  0815  1903               	skipnz
 15847  0816  0008               	return
 15848                           
 15849                           ;main.c: 144:         if(refresh_timer++ >= 1000) time_to_refresh = 1;
 15850  0817  084D               	movf	(_refresh_timer+1)^(0+128),w	;volatile
 15851  0818  00F1               	movwf	??_TMR1_CallBack+1
 15852  0819  084C               	movf	_refresh_timer^(0+128),w	;volatile
 15853  081A  00F0               	movwf	??_TMR1_CallBack
 15854  081B  0ACC               	incf	_refresh_timer^(0+128),f	;volatile
 15855  081C  1903               	skipnz
 15856  081D  0ACD               	incf	(_refresh_timer+1)^(0+128),f	;volatile
 15857  081E  3003               	movlw	3
 15858  081F  0271               	subwf	??_TMR1_CallBack+1,w
 15859  0820  30E8               	movlw	232
 15860  0821  1903               	skipnz
 15861  0822  0270               	subwf	??_TMR1_CallBack,w
 15862  0823  1C03               	skipc
 15863  0824  0008               	return
 15864  0825  3001               	movlw	1
 15865  0826  00AC               	movwf	_time_to_refresh^(0+128)	;volatile
 15866  0827  0008               	return
 15867  0828                     __end_of_TMR1_CallBack:
 15868                           
 15869                           	psect	text57
 15870  0003                     __ptext57:	
 15871 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 15872 ;; Defined at:
 15873 ;;		line 175 in file "mcc_generated_files/tmr1.c"
 15874 ;; Parameters:    Size  Location     Type
 15875 ;;		None
 15876 ;; Auto vars:     Size  Location     Type
 15877 ;;		None
 15878 ;; Return value:  Size  Location     Type
 15879 ;;                  1    wreg      void 
 15880 ;; Registers used:
 15881 ;;		None
 15882 ;; Tracked objects:
 15883 ;;		On entry : 1F/1
 15884 ;;		On exit  : 1F/1
 15885 ;;		Unchanged: 1F/0
 15886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15891 ;;Total ram usage:        0 bytes
 15892 ;; Hardware stack levels used: 1
 15893 ;; This function calls:
 15894 ;;		Nothing
 15895 ;; This function is called by:
 15896 ;;		_TMR1_Initialize
 15897 ;;		_TMR1_ISR
 15898 ;; This function uses a non-reentrant model
 15899 ;;
 15900                           
 15901                           
 15902                           ;psect for function _TMR1_DefaultInterruptHandler
 15903  0003                     _TMR1_DefaultInterruptHandler:
 15904                           
 15905                           ;incstack = 0
 15906                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 15907  0003  0008               	return
 15908  0004                     __end_of_TMR1_DefaultInterruptHandler:
 15909                           
 15910                           	psect	text58
 15911  1F6F                     __ptext58:	
 15912 ;; *************** function _PIN_MANAGER_IOC *****************
 15913 ;; Defined at:
 15914 ;;		line 137 in file "mcc_generated_files/pin_manager.c"
 15915 ;; Parameters:    Size  Location     Type
 15916 ;;		None
 15917 ;; Auto vars:     Size  Location     Type
 15918 ;;		None
 15919 ;; Return value:  Size  Location     Type
 15920 ;;                  1    wreg      void 
 15921 ;; Registers used:
 15922 ;;		wreg, status,2, status,0, pclath, cstack
 15923 ;; Tracked objects:
 15924 ;;		On entry : 0/0
 15925 ;;		On exit  : 1F/7
 15926 ;;		Unchanged: 0/0
 15927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15932 ;;Total ram usage:        0 bytes
 15933 ;; Hardware stack levels used: 1
 15934 ;; Hardware stack levels required when called: 2
 15935 ;; This function calls:
 15936 ;;		_IOCAF0_ISR
 15937 ;; This function is called by:
 15938 ;;		_INTERRUPT_InterruptManager
 15939 ;; This function uses a non-reentrant model
 15940 ;;
 15941                           
 15942                           
 15943                           ;psect for function _PIN_MANAGER_IOC
 15944  1F6F                     _PIN_MANAGER_IOC:
 15945                           
 15946                           ;mcc_generated_files/pin_manager.c: 140:     if(IOCAFbits.IOCAF0 == 1)
 15947                           
 15948                           ;incstack = 0
 15949                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
 15950  1F6F  0027               	movlb	7	; select bank7
 15951  1F70  1C13               	btfss	19,0	;volatile
 15952  1F71  0008               	return
 15953                           
 15954                           ;mcc_generated_files/pin_manager.c: 141:     {;mcc_generated_files/pin_manager.c: 142:  
      +                                 IOCAF0_ISR();
 15955  1F72  2F73               	ljmp	i1l3471
 15956  1F73                     __end_of_PIN_MANAGER_IOC:
 15957  1F73                     __ptext59:	
 15958 ;; *************** function _IOCAF0_ISR *****************
 15959 ;; Defined at:
 15960 ;;		line 149 in file "mcc_generated_files/pin_manager.c"
 15961 ;; Parameters:    Size  Location     Type
 15962 ;;		None
 15963 ;; Auto vars:     Size  Location     Type
 15964 ;;		None
 15965 ;; Return value:  Size  Location     Type
 15966 ;;                  1    wreg      void 
 15967 ;; Registers used:
 15968 ;;		wreg, status,2, status,0, pclath, cstack
 15969 ;; Tracked objects:
 15970 ;;		On entry : 1F/7
 15971 ;;		On exit  : 1F/7
 15972 ;;		Unchanged: 0/0
 15973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15978 ;;Total ram usage:        0 bytes
 15979 ;; Hardware stack levels used: 1
 15980 ;; Hardware stack levels required when called: 1
 15981 ;; This function calls:
 15982 ;;		Absolute function
 15983 ;;		_Button_Callback
 15984 ;;		_IOCAF0_DefaultInterruptHandler
 15985 ;; This function is called by:
 15986 ;;		_PIN_MANAGER_IOC
 15987 ;; This function uses a non-reentrant model
 15988 ;;
 15989                           
 15990                           
 15991                           ;psect for function _IOCAF0_ISR
 15992  1F73                     _IOCAF0_ISR:
 15993  1F73                     i1l3471:	
 15994                           ;incstack = 0
 15995                           ; Regs used in _IOCAF0_ISR: [wreg+status,2+status,0+pclath+cstack]
 15996                           
 15997                           
 15998                           ;mcc_generated_files/pin_manager.c: 154:     if(IOCAF0_InterruptHandler)
 15999  1F73  0021               	movlb	1	; select bank1
 16000  1F74  0854               	movf	_IOCAF0_InterruptHandler^(0+128),w
 16001  1F75  0455               	iorwf	(_IOCAF0_InterruptHandler+1)^(0+128),w
 16002  1F76  1903               	btfsc	3,2
 16003  1F77  2F7D               	goto	i1l3475
 16004                           
 16005                           ;mcc_generated_files/pin_manager.c: 155:     {;mcc_generated_files/pin_manager.c: 156:  
      +                                 IOCAF0_InterruptHandler();
 16006  1F78  0855               	movf	(_IOCAF0_InterruptHandler+1)^(0+128),w
 16007  1F79  008A               	movwf	10
 16008  1F7A  0854               	movf	_IOCAF0_InterruptHandler^(0+128),w
 16009  1F7B  000A               	callw
 16010  1F7C  319F               	pagesel	$
 16011  1F7D                     i1l3475:
 16012                           
 16013                           ;mcc_generated_files/pin_manager.c: 158:     IOCAFbits.IOCAF0 = 0;
 16014  1F7D  0027               	movlb	7	; select bank7
 16015  1F7E  1013               	bcf	19,0	;volatile
 16016  1F7F  0008               	return
 16017  1F80                     __end_of_IOCAF0_ISR:
 16018                           
 16019                           	psect	text60
 16020  1F61                     __ptext60:	
 16021 ;; *************** function _Button_Callback *****************
 16022 ;; Defined at:
 16023 ;;		line 149 in file "main.c"
 16024 ;; Parameters:    Size  Location     Type
 16025 ;;		None
 16026 ;; Auto vars:     Size  Location     Type
 16027 ;;		None
 16028 ;; Return value:  Size  Location     Type
 16029 ;;                  1    wreg      void 
 16030 ;; Registers used:
 16031 ;;		wreg, status,2, status,0
 16032 ;; Tracked objects:
 16033 ;;		On entry : 1F/1
 16034 ;;		On exit  : 1E/0
 16035 ;;		Unchanged: 0/0
 16036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16041 ;;Total ram usage:        0 bytes
 16042 ;; Hardware stack levels used: 1
 16043 ;; This function calls:
 16044 ;;		Nothing
 16045 ;; This function is called by:
 16046 ;;		_main
 16047 ;;		_IOCAF0_ISR
 16048 ;; This function uses a non-reentrant model
 16049 ;;
 16050                           
 16051                           
 16052                           ;psect for function _Button_Callback
 16053  1F61                     _Button_Callback:
 16054                           
 16055                           ;main.c: 150:     if (PORTAbits.RA0 == 0){
 16056                           
 16057                           ;incstack = 0
 16058                           ; Regs used in _Button_Callback: [wreg+status,2+status,0]
 16059  1F61  0020               	movlb	0	; select bank0
 16060  1F62  180C               	btfsc	12,0	;volatile
 16061  1F63  0008               	return
 16062                           
 16063                           ;main.c: 151:         if(sleeping){
 16064  1F64  0021               	movlb	1	; select bank1
 16065  1F65  085A               	movf	_sleeping^(0+128),w
 16066  1F66  1903               	btfsc	3,2
 16067  1F67  2F6C               	goto	i1l3243
 16068                           
 16069                           ;main.c: 152:             sleeping = 0;
 16070  1F68  01DA               	clrf	_sleeping^(0+128)
 16071                           
 16072                           ;main.c: 153:             wake_up = 1;
 16073  1F69  01D9               	clrf	_wake_up^(0+128)
 16074  1F6A  0AD9               	incf	_wake_up^(0+128),f
 16075                           
 16076                           ;main.c: 154:         } else {
 16077  1F6B  0008               	return
 16078  1F6C                     i1l3243:
 16079                           
 16080                           ;main.c: 155:             button_clicked = 1;
 16081  1F6C  3001               	movlw	1
 16082  1F6D  00FA               	movwf	_button_clicked	;volatile
 16083  1F6E  0008               	return
 16084  1F6F                     __end_of_Button_Callback:
 16085                           
 16086                           	psect	text61
 16087  0800                     __ptext61:	
 16088 ;; *************** function _IOCAF0_DefaultInterruptHandler *****************
 16089 ;; Defined at:
 16090 ;;		line 171 in file "mcc_generated_files/pin_manager.c"
 16091 ;; Parameters:    Size  Location     Type
 16092 ;;		None
 16093 ;; Auto vars:     Size  Location     Type
 16094 ;;		None
 16095 ;; Return value:  Size  Location     Type
 16096 ;;                  1    wreg      void 
 16097 ;; Registers used:
 16098 ;;		None
 16099 ;; Tracked objects:
 16100 ;;		On entry : 1F/1
 16101 ;;		On exit  : 1F/1
 16102 ;;		Unchanged: 1F/0
 16103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16108 ;;Total ram usage:        0 bytes
 16109 ;; Hardware stack levels used: 1
 16110 ;; This function calls:
 16111 ;;		Nothing
 16112 ;; This function is called by:
 16113 ;;		_PIN_MANAGER_Initialize
 16114 ;;		_IOCAF0_ISR
 16115 ;; This function uses a non-reentrant model
 16116 ;;
 16117                           
 16118                           
 16119                           ;psect for function _IOCAF0_DefaultInterruptHandler
 16120  0800                     _IOCAF0_DefaultInterruptHandler:
 16121                           
 16122                           ;incstack = 0
 16123                           ; Regs used in _IOCAF0_DefaultInterruptHandler: []
 16124  0800  0008               	return
 16125  0801                     __end_of_IOCAF0_DefaultInterruptHandler:
 16126  007E                     btemp	set	126	;btemp
 16127  007E                     int$flags	set	126
 16128  007E                     wtemp0	set	126
 16129  227C                     
 16130                           	psect	config
 16131                           
 16132                           ;Config register CONFIG1 @ 0x8007
 16133                           ;	Oscillator Selection Bits
 16134                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 16135                           ;	Watchdog Timer Enable
 16136                           ;	WDTE = OFF, WDT disabled
 16137                           ;	Power-up Timer Enable
 16138                           ;	PWRTE = OFF, PWRT disabled
 16139                           ;	MCLR Pin Function Select
 16140                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 16141                           ;	Flash Program Memory Code Protection
 16142                           ;	CP = OFF, Program memory code protection is disabled
 16143                           ;	Brown-out Reset Enable
 16144                           ;	BOREN = ON, Brown-out Reset enabled
 16145                           ;	Clock Out Enable
 16146                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 16147                           ;	Internal/External Switchover Mode
 16148                           ;	IESO = ON, Internal/External Switchover Mode is enabled
 16149                           ;	Fail-Safe Clock Monitor Enable
 16150                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 16151  8007                     	org	32775
 16152  8007  3FE4               	dw	16356
 16153                           
 16154                           ;Config register CONFIG2 @ 0x8008
 16155                           ;	Flash Memory Self-Write Protection
 16156                           ;	WRT = OFF, Write protection off
 16157                           ;	Peripheral Pin Select one-way control
 16158                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 16159                           ;	Zero-cross detect disable
 16160                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
 16161                           ;	Phase Lock Loop enable
 16162                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
 16163                           ;	Stack Overflow/Underflow Reset Enable
 16164                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 16165                           ;	Brown-out Reset Voltage Selection
 16166                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 16167                           ;	Low-Power Brown Out Reset
 16168                           ;	LPBOR = OFF, Low-Power BOR is disabled
 16169                           ;	Low-Voltage Programming Enable
 16170                           ;	LVP = ON, Low-voltage programming enabled
 16171  8008                     	org	32776
 16172  8008  3EFF               	dw	16127

Data Sizes:
    Strings     66
    Constant    2036
    Data        438
    BSS         29
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     65      65
    BANK1            80      0      61
    BANK2            80     43      75
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            76      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    S33$3$0	PTR void  size(1) Largest target is 16
		 -> buffer(BANK2[16]), 

    S33$4$0	PTR void  size(1) Largest target is 0

    S33$5$0	PTR void  size(1) Largest target is 0

    Absolute function$0	PTR FTN()void  size(2) Largest target is 0

    ImageFromPickupConf$2144	PTR const unsigned char  size(2) Largest target is 75
		 -> b_rot(CODE[75]), m_rot(CODE[75]), parallel_rot(CODE[75]), serie_rot(CODE[75]), 
		 -> s_prime_rot(CODE[75]), n_prime_rot(CODE[75]), s_rot(CODE[75]), n_rot(CODE[75]), 

    ImageFromPickupConf$2142	PTR const unsigned char  size(2) Largest target is 183
		 -> g_arrow_rot(CODE[183]), b_arrow_rot(CODE[183]), m_arrow_rot(CODE[183]), n_arrow_rot(CODE[183]), 
		 -> b_rot(CODE[75]), m_rot(CODE[75]), parallel_rot(CODE[75]), serie_rot(CODE[75]), 
		 -> s_prime_rot(CODE[75]), n_prime_rot(CODE[75]), s_rot(CODE[75]), n_rot(CODE[75]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMMON[1]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_7(CODE[21]), STR_5(CODE[25]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    HEFLASH_readBlock@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> saved_pc(BANK1[20]), 

    HEFLASH_writeBlock@buffer	PTR unsigned char  size(1) Largest target is 20
		 -> saved_pc(BANK1[20]), 

    SetFrameMemoryPartial@image_buffer	PTR const unsigned char  size(2) Largest target is 183
		 -> bracket_right_rot(CODE[75]), bracket_left_rot(CODE[75]), g_arrow_rot(CODE[183]), b_arrow_rot(CODE[183]), 
		 -> m_arrow_rot(CODE[183]), n_arrow_rot(CODE[183]), b_rot(CODE[75]), m_rot(CODE[75]), 
		 -> parallel_rot(CODE[75]), serie_rot(CODE[75]), s_prime_rot(CODE[75]), n_prime_rot(CODE[75]), 
		 -> s_rot(CODE[75]), n_rot(CODE[75]), 

    SetLut@lut	PTR const unsigned char  size(2) Largest target is 30
		 -> lut_partial_update(CODE[30]), lut_full_update(CODE[30]), 

    InitDisplay@lut	PTR const unsigned char  size(2) Largest target is 30
		 -> lut_partial_update(CODE[30]), lut_full_update(CODE[30]), 

    ImageFromPickupConf@arrow_type	PTR unsigned char [4] size(2) Largest target is 183
		 -> g_arrow_rot(CODE[183]), b_arrow_rot(CODE[183]), m_arrow_rot(CODE[183]), n_arrow_rot(CODE[183]), 

    ImageFromPickupConf@pc	PTR struct PickupConfiguration size(1) Largest target is 20
		 -> main@reset_pc_1191(BANK0[4]), main@reset_pc(BANK0[4]), main@stack_pc(BANK0[4]), saved_pc(BANK1[20]), 

    S1204GeneralPickupConfigurationImage$image_pointers	PTR const unsigned char [5] size(2) Largest target is 75
		 -> b_rot(CODE[75]), m_rot(CODE[75]), parallel_rot(CODE[75]), serie_rot(CODE[75]), 
		 -> n_rot(CODE[75]), 

    gpci.image_pointers	PTR const unsigned char [5] size(2) Largest target is 75
		 -> b_rot(CODE[75]), m_rot(CODE[75]), parallel_rot(CODE[75]), serie_rot(CODE[75]), 
		 -> n_rot(CODE[75]), 

    S1201PickupConfigurationImage$image_pointers	PTR const unsigned char [3] size(2) Largest target is 75
		 -> parallel_rot(CODE[75]), serie_rot(CODE[75]), s_prime_rot(CODE[75]), n_prime_rot(CODE[75]), 
		 -> s_rot(CODE[75]), n_rot(CODE[75]), 

    pci.image_pointers	PTR const unsigned char [3] size(2) Largest target is 75
		 -> parallel_rot(CODE[75]), serie_rot(CODE[75]), s_prime_rot(CODE[75]), n_prime_rot(CODE[75]), 
		 -> s_rot(CODE[75]), n_rot(CODE[75]), 

    sendCoilsConfiguration@pc	PTR struct PickupConfiguration size(1) Largest target is 20
		 -> saved_pc(BANK1[20]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_CallBack(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_CallBack(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    IOCAF0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Button_Callback(), IOCAF0_DefaultInterruptHandler(), 

    IOCAF0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Button_Callback(), IOCAF0_DefaultInterruptHandler(), Absolute function(), 

    S33$spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    spiMaster.spiISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S33$setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    spiMaster.setSpiISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> Absolute function(), 

    S33$readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI_ReadByte(), 

    spiMaster.readByte	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> SPI_ReadByte(), 

    S33$writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI_WriteByte(), 

    spiMaster.writeByte	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> SPI_WriteByte(), 

    S33$readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI_ReadBlock(), 

    spiMaster.readBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI_ReadBlock(), 

    S33$writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI_WriteBlock(), 

    spiMaster.writeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI_WriteBlock(), 

    S33$exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI_ExchangeBlock(), 

    spiMaster.exchangeBlock	PTR FTN(PTR void ,unsigned int ,)void  size(2) Largest target is 1
		 -> SPI_ExchangeBlock(), 

    S33$exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI_ExchangeByte(), 

    spiMaster.exchangeByte	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> SPI_ExchangeByte(), 

    S33$spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EINK_open(), 

    spiMaster.spiOpen	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EINK_open(), 

    S33$spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI_Close(), 

    spiMaster.spiClose	PTR FTN()void  size(2) Largest target is 1
		 -> SPI_Close(), 


Critical Paths under _main in COMMON

    _EINK_open->_SPI_Open
    _ReadConfigurationsFromMemory->_HEFLASH_readBlock
    _HEFLASH_readBlock->_FLASH_read
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCAF0_SetInterruptHandler
    _sendCoilsConfiguration->_shiftOut
    _modulo->___awmod
    ___awmod->___abmod
    _WriteConfigurationToMemory->_HEFLASH_writeBlock
    _HEFLASH_writeBlock->_FLASH_write
    _SetFrameMemoryPartial->_SetMemoryPointer
    _ClearFrameMemoryPartial->_SetMemoryPointer
    _SleepDisplay->_SendCommand
    _InitDisplay->_SetLut
    _SetLut->_SendCommand
    _SetLut->_SendData
    _ResetDisplay->_DELAY_milliseconds
    _ClearFrameMemory->_SetMemoryPointer
    _SetMemoryPointer->_SendCommand
    _SetMemoryPointer->_SendData
    _WaitUntilIdle->_DELAY_milliseconds
    _SetMemoryArea->_SendCommand
    _SetMemoryArea->_SendData
    _SendData->_SPI_ExchangeByte
    _SendCommand->_SPI_ExchangeByte

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_CallBack
    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_SwitchEventHandler
    _WakeUp->_sendCoilsConfiguration
    _SwitchEventHandler->_sendCoilsConfiguration
    _RotaryEncoderEventHandler->_ImageFromPickupConf
    _sendCoilsConfiguration->_shiftOut
    _modulo->___awmod
    _DisplayRefreshHandler->_ImageFromPickupConf
    _ButtonEventHandler->_ImageFromPickupConf
    _WriteConfigurationToMemory->_HEFLASH_writeBlock
    _ImageFromPickupConf->_SetFrameMemoryPartial
    _SetFrameMemoryPartial->_SetMemoryArea
    _ClearLine->_ClearFrameMemoryPartial
    _ClearFrameMemoryPartial->_SetMemoryArea
    _GotoSleep->_ClearFrameMemory
    _DisplayFrame->_InitDisplay
    _ClearFrameMemory->_SetMemoryArea

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_ImageFromPickupConf
    _RotaryEncoderEventHandler->_ImageFromPickupConf
    _DisplayRefreshHandler->_ImageFromPickupConf
    _ButtonEventHandler->_ImageFromPickupConf

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0  257578
                                             51 BANK0     14    14      0
                  _ButtonCaseHandler
                 _ButtonEventHandler
                 _DELAY_milliseconds
                       _DisplayFrame
              _DisplayRefreshHandler
         _IOCAF0_SetInterruptHandler
                _ImageFromPickupConf
          _RotaryEncoderEventHandler
                  _SYSTEM_Initialize
                 _SwitchEventHandler
           _TMR1_SetInterruptHandler
                             _WakeUp
                    _spi_master_open
 ---------------------------------------------------------------------------------
 (1) _spi_master_open                                      3     3      0     155
                                              6 COMMON     3     3      0
                          _EINK_open
 ---------------------------------------------------------------------------------
 (2) _EINK_open                                            0     0      0     124
                           _SPI_Open
 ---------------------------------------------------------------------------------
 (3) _SPI_Open                                             4     4      0     124
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _WakeUp                                               0     0      0   15912
                   _ButtonEventReset
                   _ClearFrameMemory
                 _DELAY_milliseconds
                       _DisplayFrame
                        _InitDisplay
       _ReadConfigurationsFromMemory
                    _TMR1_StartTimer
             _sendCoilsConfiguration
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ReadConfigurationsFromMemory                         0     0      0     681
                  _HEFLASH_readBlock
 ---------------------------------------------------------------------------------
 (3) _HEFLASH_readBlock                                    5     3      2     681
                                              4 COMMON     5     3      2
                         _FLASH_read
 ---------------------------------------------------------------------------------
 (4) _FLASH_read                                           2     0      2     261
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SwitchEventHandler                                  14    14      0     712
                                             37 BANK0     14    14      0
             _sendCoilsConfiguration
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     422
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     211
         _IOCAF0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF0_SetInterruptHandler                           2     0      2     211
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RotaryEncoderEventHandler                            2     2      0   57010
                                             43 BANK0      2     2      0
                       _DisplayFrame
                _ImageFromPickupConf
                             _modulo
                        _read_rotary
             _sendCoilsConfiguration
 ---------------------------------------------------------------------------------
 (2) _sendCoilsConfiguration                              11    11      0     545
                                             26 BANK0     11    11      0
                           _shiftOut
 ---------------------------------------------------------------------------------
 (3) _shiftOut                                            34    26      8     313
                                              2 COMMON     8     0      8
                                              0 BANK0     26    26      0
 ---------------------------------------------------------------------------------
 (2) _read_rotary                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _modulo                                               6     5      1    1620
                                              2 BANK0      6     5      1
                            ___abmod
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     613
                                              6 COMMON     4     0      4
                                              0 BANK0      2     2      0
                            ___abmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___abmod                                              4     3      1     523
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _DisplayRefreshHandler                                0     0      0   54845
                       _DisplayFrame
                _ImageFromPickupConf
 ---------------------------------------------------------------------------------
 (1) _ButtonEventHandler                                   4     4      0   72110
                                             43 BANK0      4     4      0
                   _ButtonEventReset
                       _DisplayFrame
                          _GotoSleep
                _ImageFromPickupConf
         _WriteConfigurationToMemory
 ---------------------------------------------------------------------------------
 (2) _WriteConfigurationToMemory                           0     0      0    1299
                 _HEFLASH_writeBlock
 ---------------------------------------------------------------------------------
 (3) _HEFLASH_writeBlock                                   5     3      2    1299
                                              8 COMMON     2     0      2
                                              0 BANK0      3     3      0
                        _FLASH_erase
                        _FLASH_write
 ---------------------------------------------------------------------------------
 (4) _FLASH_write                                          6     1      5     667
                                              2 COMMON     6     1      5
                            __unlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_erase                                          3     1      2     155
                                              2 COMMON     3     1      2
                            __unlock
 ---------------------------------------------------------------------------------
 (5) __unlock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ImageFromPickupConf                                 52    49      3   49970
                                             34 BANK0      9     6      3
                                              0 BANK2     43    43      0
                   _ClearFrameMemory
                          _ClearLine
              _SetFrameMemoryPartial
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _SetFrameMemoryPartial                               26    15     11   15544
                                              8 BANK0     26    15     11
                        _SendCommand
                           _SendData
                      _SetMemoryArea
                   _SetMemoryPointer
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _ClearLine                                            7     4      3   16383
                                             19 BANK0      7     4      3
            _ClearFrameMemoryPartial
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _ClearFrameMemoryPartial                             11     2      9   11201
                                              8 BANK0     11     2      9
                        _SendCommand
                           _SendData
                      _SetMemoryArea
                   _SetMemoryPointer
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    4630
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _GotoSleep                                            0     0      0   15929
                   _ButtonEventReset
                   _ClearFrameMemory
                 _DELAY_milliseconds
                       _DisplayFrame
                        _InitDisplay
                       _SleepDisplay
 ---------------------------------------------------------------------------------
 (3) _SleepDisplay                                         0     0      0    1243
                        _SendCommand
                      _WaitUntilIdle
 ---------------------------------------------------------------------------------
 (2) _DisplayFrame                                         0     0      0    4875
                        _InitDisplay
                        _SendCommand
                           _SendData
                      _WaitUntilIdle
 ---------------------------------------------------------------------------------
 (2) _InitDisplay                                          2     0      2    3210
                                              0 BANK0      2     0      2
                       _ResetDisplay
                        _SendCommand
                           _SendData
                             _SetLut
 ---------------------------------------------------------------------------------
 (3) _SetLut                                               5     3      2    1064
                                              4 COMMON     5     3      2
                        _SendCommand
                           _SendData
 ---------------------------------------------------------------------------------
 (3) _ResetDisplay                                         0     0      0     821
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (2) _ClearFrameMemory                                     3     3      0    5780
                                              8 BANK0      3     3      0
                        _SendCommand
                           _SendData
                      _SetMemoryArea
                   _SetMemoryPointer
 ---------------------------------------------------------------------------------
 (3) _SetMemoryPointer                                     6     2      4    2441
                                              4 COMMON     6     2      4
                        _SendCommand
                           _SendData
                      _WaitUntilIdle
 ---------------------------------------------------------------------------------
 (3) _WaitUntilIdle                                        0     0      0     821
                 _DELAY_milliseconds
 ---------------------------------------------------------------------------------
 (4) _DELAY_milliseconds                                   2     0      2     821
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _SetMemoryArea                                       10     2      8    2396
                                              4 COMMON     2     2      0
                                              0 BANK0      8     0      8
                        _SendCommand
                           _SendData
 ---------------------------------------------------------------------------------
 (4) _SendData                                             1     1      0     422
                                              3 COMMON     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (4) _SendCommand                                          1     1      0     422
                                              3 COMMON     1     1      0
                   _SPI_ExchangeByte
 ---------------------------------------------------------------------------------
 (5) _SPI_ExchangeByte                                     1     0      1     391
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (1) _ButtonCaseHandler                                    1     1      0       0
                                              2 COMMON     1     1      0
                   _ButtonEventReset
 ---------------------------------------------------------------------------------
 (2) _ButtonEventReset                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0     229
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR1_ISR                                             0     0      0     229
                   Absolute function *
                      _TMR1_CallBack *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (10) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR1_CallBack                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF0_ISR
 ---------------------------------------------------------------------------------
 (10) _IOCAF0_ISR                                          0     0      0       0
                   Absolute function *
                    _Button_Callback *
     _IOCAF0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (11) _IOCAF0_DefaultInterruptHandler                      0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _Button_Callback                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ButtonCaseHandler
     _ButtonEventReset
   _ButtonEventHandler
     _ButtonEventReset
     _DisplayFrame
       _InitDisplay
         _ResetDisplay
           _DELAY_milliseconds
         _SendCommand
           _SPI_ExchangeByte
         _SendData
           _SPI_ExchangeByte
         _SetLut
           _SendCommand
           _SendData
       _SendCommand
       _SendData
       _WaitUntilIdle
         _DELAY_milliseconds
     _GotoSleep
       _ButtonEventReset
       _ClearFrameMemory
         _SendCommand
         _SendData
         _SetMemoryArea
           _SendCommand
           _SendData
         _SetMemoryPointer
           _SendCommand
           _SendData
           _WaitUntilIdle
       _DELAY_milliseconds
       _DisplayFrame
       _InitDisplay
       _SleepDisplay
         _SendCommand
         _WaitUntilIdle
     _ImageFromPickupConf
       _ClearFrameMemory
       _ClearLine
         _ClearFrameMemoryPartial
           _SendCommand
           _SendData
           _SetMemoryArea
           _SetMemoryPointer
           ___wmul
         ___wmul
       _SetFrameMemoryPartial
         _SendCommand
         _SendData
         _SetMemoryArea
         _SetMemoryPointer
         ___wmul
       ___wmul
     _WriteConfigurationToMemory
       _HEFLASH_writeBlock
         _FLASH_erase
           __unlock
         _FLASH_write
           __unlock
   _DELAY_milliseconds
   _DisplayFrame
   _DisplayRefreshHandler
     _DisplayFrame
     _ImageFromPickupConf
   _IOCAF0_SetInterruptHandler
   _ImageFromPickupConf
   _RotaryEncoderEventHandler
     _DisplayFrame
     _ImageFromPickupConf
     _modulo
       ___abmod
       ___awmod
         ___abmod (ARG)
     _read_rotary
     _sendCoilsConfiguration
       _shiftOut
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF0_SetInterruptHandler
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _SwitchEventHandler
     _sendCoilsConfiguration
   _TMR1_SetInterruptHandler
   _WakeUp
     _ButtonEventReset
     _ClearFrameMemory
     _DELAY_milliseconds
     _DisplayFrame
     _InitDisplay
     _ReadConfigurationsFromMemory
       _HEFLASH_readBlock
         _FLASH_read
     _TMR1_StartTimer
     _sendCoilsConfiguration
   _spi_master_open
     _EINK_open
       _SPI_Open

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF0_ISR
       Absolute function(Fake) *
       _Button_Callback *
       _IOCAF0_DefaultInterruptHandler *
   _TMR1_ISR
     Absolute function(Fake) *
     _TMR1_CallBack *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     41      41       5       81.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      3D       7       76.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     2B      4B       9       93.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               4C      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D5      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D5      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun May 30 12:42:50 2021

                 ImageFromPickupConf@arrow_type 012A                                  _SPI_Initialize 02F4  
                              ___abmod@dividend 0075                                               pc 0002  
                  ImageFromPickupConf@max_index 0142                             ___wmul@multiplicand 0074  
                    __end_of_lut_partial_update 17C8                 __size_of_sendCoilsConfiguration 0124  
           ImageFromPickupConf@need_to_skip_row 0138                                             l214 0FA7  
                                           l602 052D                                             l532 0A98  
                                           l604 052F                                             l608 0555  
                                           l624 0134                                             l545 0B37  
                                           l618 0093                                             l564 0276  
                    __end_of_DELAY_milliseconds 0FBC                                 _timer1ReloadVal 00D2  
                                           _pci 2379                                    ___awmod@sign 0021  
                                           wreg 0009                                            S5271 07F5  
                      sendCoilsConfiguration@pc 0044                               FLASH_read@address 0072  
                                          l4201 082E                         _ButtonEventHandler$1108 004D  
                                          l5005 0AF6                                            l5021 0B1B  
                                          l4215 0F3F                                            l5015 0B14  
                                          l5023 0B35                                            l4241 08E5  
                                          l4233 08C1                                            l5017 0B17  
                                          l4401 04B1                                            l5113 00AA  
                                          l4163 0FAE                                            l4219 0F45  
                                          l5107 0099                                            l4165 0FB7  
                                          l4229 0A55                                            l4421 0920  
                                          l5061 01D3                                            l4333 089E  
                                          l5141 00DE                                            l4167 0FAE  
                                          l4183 0F9B                                            l4415 090A  
                                          l4351 078B                                            l5063 01E0  
                                          l5071 0217                                            l5151 00F8  
                                          l4193 0828                                            l4433 0944  
                                          l4425 0929                                            l4521 0584  
                                          l4505 0566                                            l5065 01ED  
                                          l5161 0121                                            l4187 0F9B  
                                          l4371 0B38                                            l4451 09C9  
                                          l5059 01C6                                            l4365 0FD7  
                                          l4429 093B                                            l4349 0771  
                                          l4517 0578                                            l4525 0588  
                                          l4509 056D                                            l5069 0202  
                                          l4605 0363                                            l4533 037C  
                                          l4391 0B5A                                            l4455 097D  
                                          l5167 0129                                            l4457 09D2  
                                          l4449 09C2                                            l5273 0B27  
                                          l4481 025F                                            l4473 0256  
                                          l4529 0590                                            l4395 035D  
                                          l4459 0968                                            l5267 0357  
                                          l5099 007D                                            l4805 0DC6  
                                          l4725 0C59                                            l4709 0C2F  
                                          l4733 0D16                                            l4493 026D  
                                          l4485 0265                                            l4477 025A  
                                          l4469 0252                                            l5269 020D  
                                          l4815 0DD9                                            l4751 0D3C  
                                          l4743 0D2B                                            l4719 0CA2  
                                          l4903 034D                                            l4825 0DEC  
                                          l4489 0268                                            l4913 034F  
                                          l4771 0D80                                            l4907 034E  
                                          l4861 0EE9                                            l4845 0E53  
                                          l4829 0DF5                                            l4781 0D96  
                                          l4839 0E2B                                            l4791 0DAD  
                                          l4759 0D4D                                            l4695 0BC7  
                                          l4953 014D                                            l4867 0E99  
                                          l4965 0185                                            l4869 0F38  
                                          l4959 0169                                            l4879 027B  
                                          l4969 0195                                            l4993 0AD2  
                                          l4995 0AD5                                            l4989 0AC9  
                                          STR_1 1831                                            STR_5 17E6  
                                          STR_6 1814                                            STR_7 17FF  
                                          _LATA 010C                                            _LATB 010D  
                                          _LATC 010E                                            u4000 0083  
                                          u3050 04AE                                            u4010 008B  
                                          u4002 0084                                            u4012 008C  
                                          u3070 04E0                                            u3310 0387  
                                          u3090 050D                                            u3155 0995  
                                          u3075 04D6                                            u4117 0FB8  
                                          u3165 0979                                            u3325 03DC  
                                          u3095 0503                                            u3335 0465  
                                          u3600 0DCC                                            u3520 0D9C  
                                          u3610 0DCD                                            u3530 0D9D  
                                          u3285 057E                                            u3640 0DDE  
                                          u3560 0DB3                                            u3480 0D86  
                                          u3705 0E00                                            u3385 0C6B  
                                          u3650 0DDF                                            u3570 0DB4  
                                          u3490 0D87                                            u2915 08FF  
                                          u3725 0E16                                            u3680 0DF1  
                                          u3905 019F                                            u3745 0EBC  
                            __size_of_EINK_open 0002                                            u3690 0DF2  
                                          u3755 0EAA                                            u2955 088E  
                                          u3845 014A                                            u2885 0844  
                                          u3855 0157                                            _PCON 0096  
                                          u3865 0163                                            u3875 0173  
                                          u2995 075B                                            u3885 017F  
                                          u3895 018F                      __end_of_HEFLASH_writeBlock 079B  
                                          _WPUA 020C                                            _WPUB 020D  
                                          _WPUC 020E                                            _gpci 227C  
                                          _main 007D                                read_rotary@store 00CA  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          btemp 007E                                   ??_InitDisplay 0079  
                                          start 0019                          __end_of_SPI_Initialize 0309  
                    ??_TMR1_SetInterruptHandler 0074                                   _SPI_WriteByte 0000  
                             ?_ClearFrameMemory 0070                                _ButtonEventReset 035D  
                        SetFrameMemoryPartial@i 003A                          SetFrameMemoryPartial@j 003C  
                        SetFrameMemoryPartial@x 002A                          SetFrameMemoryPartial@y 002C  
                            ??_ClearFrameMemory 007A                             __size_of_FLASH_read 000F  
                      ClearFrameMemoryPartial@i 0031                             __size_of_IOCAF0_ISR 000D  
                __size_of_OSCILLATOR_Initialize 0008                                           PMCON1 0195  
                                         PMCON2 0196                   __end_of_OSCILLATOR_Initialize 02B7  
                               __end_of___abmod 026F                                           ?_main 0070  
                               __end_of___awmod 0595                                 _TMR1_StartTimer 07FD  
                                         _T1CON 0018                                           i1l342 0017  
                                         i1l336 000D                                           _PMADR 0191  
                                         _PMDAT 0193                                           _TMR1H 0017  
                                         _TMR1L 0016                                           _TRISA 008C  
                                         _TRISB 008D                                           _TRISC 008E  
                      ImageFromPickupConf@index 0143                       __size_of_SetMemoryPointer 001F  
                               __end_of__unlock 07D3                                __end_of_TMR1_ISR 087A  
                __size_of_SetFrameMemoryPartial 00CC                                           _b_rot 1502  
                 __end_of_SetFrameMemoryPartial 09D6                         __end_of_PIN_MANAGER_IOC 1F73  
                                _WDT_Initialize 0558                                           _m_rot 154D  
                                         _n_rot 170F                                    main@reset_pc 0059  
                                  ?_read_rotary 0070                                           _s_rot 1679  
                              __end_of_SPI_Open 05E2                         __end_of_TMR1_Initialize 037C  
                     ??_ClearFrameMemoryPartial 007A                                           pclath 000A  
                        _sendCoilsConfiguration 037E                                    main@stack_pc 0055  
                    __size_of_ButtonCaseHandler 006F                        __end_of_bracket_left_rot 1502  
                        HEFLASH_writeBlock@radd 0020                                           status 0003  
                                         wtemp0 007E                     ?_WriteConfigurationToMemory 0070  
                               _TMR1_WriteTimer 087A               __end_of_possible_general_conf_str 10E6  
                         ClearFrameMemory@color 0028                           spi_master_open@config 0078  
                                _SPI_WriteBlock 0000                                 ?_SPI_Initialize 0070  
                               __initialization 001B                       SetFrameMemoryPartial@data 0039  
                      __size_of_Button_Callback 000E                                   ??_SendCommand 0073  
                                  __end_of_main 0136                             __end_of_InitDisplay 0A8D  
                   ?_INTERRUPT_InterruptManager 0070                              __size_of_ClearLine 003F  
                             __end_of_EINK_open 037E                           __end_of_WaitUntilIdle 0FA4  
                              __end_of_SendData 0A97                            __size_of_FLASH_erase 0014  
                                        ??_main 0053                            __size_of_FLASH_write 001B  
                        __end_of_WDT_Initialize 055C                            HEFLASH_readBlock@add 0077  
                          __end_of_DisplayFrame 0B67                    ??_IOCAF0_SetInterruptHandler 0074  
                      __end_of_SPI_ExchangeByte 0FAE                                          _ANSELA 018C  
                                        _ANSELB 018D                                          _ANSELC 018E  
                                        _BORCON 021D                                          _T1GCON 0019  
                       TMR1_WriteTimer@timerVal 0070                                          _RB6PPS 0E9E  
                                        _RB7PPS 0E9F                                          _ODCONA 028C  
                                        _ODCONB 028D                                          _ODCONC 028E  
                                        i1l3243 1F6C                                          i1l3533 0813  
                                        i1l3471 1F73                                          i1l3475 1F7D  
                                        i1l3487 0884                                          _INLVLA 038C  
                                        _INLVLB 038D                                          _INLVLC 038E  
                                        _OSCCON 0099                                          _WDTCON 0097  
                                        _STATUS 0003                                          _STKOVF 04B7  
                                        _STKUNF 04B6                              __size_of_GotoSleep 0025  
                  ClearFrameMemoryPartial@color 0030                                          _SetLut 0828  
                                        _WakeUp 09F5                        _possible_pickup_conf_str 13C2  
          __end_of_TMR1_DefaultInterruptHandler 0004           __size_of_TMR1_DefaultInterruptHandler 0001  
                  _TMR1_DefaultInterruptHandler 0003                    ClearFrameMemoryPartial@x_end 002C  
                  ClearFrameMemoryPartial@y_end 002E                                       ??___abmod 0073  
                       __end_of_TMR1_StartTimer 0800                                          ___wmul 0F3D  
                                     ??___awmod 007A                              FLASH_write@address 0072  
                                        _buffer 015B                                          _modulo 022C  
                               ___awmod@divisor 0076             __size_of_IOCAF0_SetInterruptHandler 0006  
                               ___awmod@counter 0020                                       ??__unlock 0072  
                           __end_of_SendCommand 0F5C                                    __pdataBIGRAM 227C  
                __size_of_DisplayRefreshHandler 0017                                __end_of_shiftOut 0558  
                 __end_of_DisplayRefreshHandler 01BC                                 ?_WDT_Initialize 0070  
                  __size_of_ImageFromPickupConf 03D6                         HEFLASH_writeBlock@count 0079  
                                  ??_FLASH_read 0074        TMR1_SetInterruptHandler@InterruptHandler 0072  
    IOCAF0_SetInterruptHandler@InterruptHandler 0072                                ?_PIN_MANAGER_IOC 0070  
                       __end_of_TMR1_WriteTimer 0889                                    ??_IOCAF0_ISR 0070  
                         __end_of_TMR1_CallBack 0828                                 _lut_full_update 17C8  
                              ?_TMR1_Initialize 0070                               _SYSTEM_Initialize 02A6  
                             __end_of_ClearLine 0F9B                         __end_of__initialization 004F  
                            _ButtonEventHandler 0A97                              ?_SYSTEM_Initialize 0070  
                                   _InitDisplay 0A55                      ?_RotaryEncoderEventHandler 0070  
                            _SwitchEventHandler 0309                             ?_ButtonEventHandler 0070  
                                __pcstackCOMMON 0070                                    __pidataBANK1 07D3  
                                  __pidataBANK2 0847                             ??_SYSTEM_Initialize 0074  
                    SetFrameMemoryPartial@x_end 003E                      SetFrameMemoryPartial@y_end 0040  
                                 __end_of_b_rot 154D                                       ?_TMR1_ISR 0070  
                 ?_TMR1_DefaultInterruptHandler 0070                                   __end_of_m_rot 1598  
                                 __end_of_n_rot 175A                                   __end_of_s_rot 16C4  
                           ?_SwitchEventHandler 0070                              __end_of_FLASH_read 08C1  
                                 ?_ResetDisplay 0070                                       ?_SPI_Open 0070  
                            __end_of_IOCAF0_ISR 1F80                               ??_Button_Callback 0070  
                             __end_of_GotoSleep 0077                                  _OPTION_REGbits 0095  
           __size_of_WriteConfigurationToMemory 0007                                _SetMemoryPointer 09D6  
                          ??_ButtonEventHandler 004B                        __end_of_ButtonEventReset 0363  
                     __end_of_SYSTEM_Initialize 02AF                                   ?_SleepDisplay 0070  
                            _lut_partial_update 17AA                          __size_of_SetMemoryArea 0031  
                          ??_SwitchEventHandler 0045               SetFrameMemoryPartial@image_height 0030  
                                    __pbssBANK1 00C2               SetFrameMemoryPartial@image_buffer 0028  
                            _DELAY_milliseconds 0FAE                            __size_of_read_rotary 002B  
                      __size_of_spi_master_open 0012                                       ?_SendData 0070  
                       HEFLASH_readBlock@buffer 0076                                         ?_SetLut 0074  
                                       ?_WakeUp 0070               __end_of_RotaryEncoderEventHandler 022C  
                           ?_DELAY_milliseconds 0072                           HEFLASH_readBlock@radd 0074  
                                    __pmaintext 007D                              _HEFLASH_writeBlock 0756  
                                   _SendCommand 0F52                                         ?___wmul 0072  
                              ?_TMR1_StartTimer 0070                                      ??_TMR1_ISR 0072  
                                    _click_type 00DB                                      __pintentry 0004  
                                ??_ResetDisplay 0074                                         ?_modulo 0022  
                                    ??_SPI_Open 0072                           __size_of_DisplayFrame 002F  
                           ?_HEFLASH_writeBlock 0078                       __size_of_ClearFrameMemory 002A  
            __end_of_IOCAF0_SetInterruptHandler 02A0                      _IOCAF0_SetInterruptHandler 029A  
                       __end_of_lut_full_update 17E6                                shiftOut@bitOrder 0031  
                          ??_DELAY_milliseconds 0074                SetFrameMemoryPartial@image_width 002E  
                                       _OSCSTAT 009A                                         _OSCTUNE 0098  
                                       _SSP1ADD 0212                         ?_sendCoilsConfiguration 0070  
                                       _SLRCONA 030C                                         _SLRCONB 030D  
                                       _SLRCONC 030E                                         _SSP1BUF 0211  
                                ??_SleepDisplay 0074                                ?_TMR1_WriteTimer 0070  
                              ClearLine@start_x 0033                                ClearLine@start_y 0038  
          __end_ofSwitchEventHandler@conv_table 1831                    SwitchEventHandler@conv_table 182B  
                              ??_SPI_Initialize 0072                            ??_HEFLASH_writeBlock 007A  
                               _time_to_refresh 00AC                          ClearLine@max_character 0035  
                                    ??_SendData 0073                                         SetLut@i 0077  
                                     ?_shiftOut 0072                                 __size_of_SetLut 001F  
                                  _DisplayFrame 0B38                                 __size_of_WakeUp 002F  
                                       ___abmod 024A                                         ___awmod 055C  
                               __size_of___wmul 0015                                   _SetMemoryArea 0A24  
                               __size_of_modulo 001E                                     shiftOut@val 0072  
                                       __ptext1 034B                                         __ptext2 037C  
                                       __ptext3 0595                                         __ptext4 09F5  
                                       __ptext5 07FD                                         __ptext6 0FFA  
                                       __ptext7 0889                                         __ptext8 08B2  
                                       __ptext9 0309                                         __unlock 07CA  
                ??_TMR1_DefaultInterruptHandler 0070                                       _T1CONbits 0018  
                         _OSCILLATOR_Initialize 02AF                                       _EINK_open 037C  
                              ___awmod@dividend 0078               __size_of_TMR1_SetInterruptHandler 0006  
                __end_of_sendCoilsConfiguration 04A2                        ??_PIN_MANAGER_Initialize 0074  
                     ?_TMR1_SetInterruptHandler 0072                                       _IOCAFbits 0393  
                                     _IOCANbits 0392                                         _wake_up 00D9  
                                main@reset_type 0054                                       _IOCAPbits 0391  
            ImageFromPickupConf@selection_index 0042                               main@reset_pc_1191 005D  
                    __size_of_SYSTEM_Initialize 0009                                         clrloop0 1F56  
                             ?_SPI_ExchangeByte 0072                            ImageFromPickupConf@i 0146  
                          end_of_initialization 004F              __end_of_WriteConfigurationToMemory 0FFA  
                    _WriteConfigurationToMemory 0FF3                           _SetFrameMemoryPartial 090A  
                            ??_SPI_ExchangeByte 0073                             __end_of_b_arrow_rot 1254  
                                       init_ram 0801                      _SetFrameMemoryPartial$1386 0037  
                                       initloop 0802                               __end_of_serie_rot 162E  
                            SendCommand@command 0073                        read_rotary@rot_enc_table 014B  
                          __end_of_parallel_rot 15E3                                    SendData@data 0073  
                                       modulo@N 0022                                         modulo@x 0027  
                                    ??_shiftOut 0020                        HEFLASH_writeBlock@buffer 0078  
                           _ImageFromPickupConf 0B67          __end_of_pickup_configuration_selectors 17AA  
                _pickup_configuration_selectors 1788  __end_of_general_pickup_configuration_selectors 1788  
        _general_pickup_configuration_selectors 175A                                  ?_SetMemoryArea 0020  
                                 ??_FLASH_erase 0074                               ??_spi_master_open 0076  
                                 ??_FLASH_write 0077                                ??_WDT_Initialize 0072  
                                     _PORTAbits 000C                                       _PORTBbits 000D  
                                     _PORTCbits 000E                               _spi_configuration 1823  
             ImageFromPickupConf@pickup_indexes 013C                                       _SSPDATPPS 0E21  
                                     _SSPCLKPPS 0E20                                      ?_EINK_open 0070  
                       _IOCAF0_InterruptHandler 00D4                                       _SPI_Close 0000  
                                     _TRISBbits 008D                        ?_ClearFrameMemoryPartial 0028  
                          ?_ImageFromPickupConf 0042                                 ___abmod@divisor 0072  
                               ___abmod@counter 0073                            SetMemoryArea@x_start 0020  
                          SetMemoryArea@y_start 0022                            __end_of_ResetDisplay 0FF3  
                             SetMemoryPointer@x 0074                               SetMemoryPointer@y 0076  
                        __size_of_WaitUntilIdle 0009                                    ?_InitDisplay 0020  
                                     _ClearLine 0F5C                                 _Button_Callback 1F61  
                   ??_RotaryEncoderEventHandler 004B                        __end_of_SetMemoryPointer 09F5  
                           __end_of_g_arrow_rot 119D                                      _switch_pos 007B  
                                __end_of_SetLut 0847                                  __end_of_WakeUp 0A24  
                          SPI_ExchangeByte@data 0072                            __end_of_SleepDisplay 007D  
             SetFrameMemoryPartial@invert_color 0032                       __end_of_spi_configuration 182B  
                                 __pidataBIGRAM 05E2                                  __end_of___wmul 0F52  
                             __size_of_TMR1_ISR 0013                      ImageFromPickupConf@bracket 0043  
                        ?_OSCILLATOR_Initialize 0070                                  __end_of_modulo 024A  
                         HEFLASH_writeBlock@add 0021                             __end_of_FLASH_erase 07CA  
                             __size_of_SPI_Open 004D                                _ClearFrameMemory 0FBC  
                           start_initialization 001B                           ??_ImageFromPickupConf 0045  
                           __end_of_FLASH_write 07B6                 __size_of_PIN_MANAGER_Initialize 003D  
                                   _b_arrow_rot 119D                           _DisplayRefreshHandler 01A5  
                             ClearFrameMemory@i 0029                                       _GotoSleep 0052  
                             ?_ButtonEventReset 0070                                       SetLut@lut 0074  
                    ImageFromPickupConf@start_x 0148                      ImageFromPickupConf@start_y 0144  
                        ?_SetFrameMemoryPartial 0028                                 _selection_index 00AD  
                            ??_ButtonEventReset 0072                                   _refresh_timer 00CC  
                      __size_of_PIN_MANAGER_IOC 0004                                      ?_ClearLine 0033  
                SPI_Open@spiUniqueConfiguration 0075                                        ??_SetLut 0076  
                               ??_SetMemoryArea 0074                                        ??_WakeUp 007A  
                             _HEFLASH_readBlock 0889                        __size_of_TMR1_Initialize 0019  
                             __size_of_SendData 000A                                 _prev_switch_pos 00DC  
                                  ?_SendCommand 0070                                        ??___wmul 0076  
                            ?_HEFLASH_readBlock 0074                                     __pdataBANK1 00A0  
                                   __pdataBANK2 014B                                        ??_modulo 0023  
              ??_IOCAF0_DefaultInterruptHandler 0070                 ?_IOCAF0_DefaultInterruptHandler 0070  
                        __size_of_TMR1_CallBack 001B                 __end_of_ClearFrameMemoryPartial 090A  
                                 _WaitUntilIdle 0F9B                             ??_HEFLASH_readBlock 0076  
                                   ??_EINK_open 0076                       _RotaryEncoderEventHandler 01BC  
                                   __pbssCOMMON 007A                                       ___latbits 0002  
                   ?_IOCAF0_SetInterruptHandler 0072                                   __pcstackBANK0 0020  
                                 __pcstackBANK2 0120                         read_rotary@prevNextCode 00D8  
                   __size_of_ButtonEventHandler 00A1                                  _button_clicked 007A  
                                    ?_GotoSleep 0070                             __end_of_m_arrow_rot 130B  
                                 ??_read_rotary 0072                __end_of_possible_pickup_conf_str 146C  
                       __end_of_Button_Callback 1F6F                     __size_of_SwitchEventHandler 0042  
                                   _g_arrow_rot 10E6                             __end_of_n_arrow_rot 13C2  
                     __end_of_HEFLASH_readBlock 08B2                    ??_WriteConfigurationToMemory 007A  
                        _PIN_MANAGER_Initialize 02B7                          HEFLASH_readBlock@count 0075  
                                      ?___abmod 0072                __end_of_TMR1_SetInterruptHandler 02A6  
                                      ?___awmod 0076                               __size_of_shiftOut 00B6  
                          SwitchEventHandler@a1 004F                            SwitchEventHandler@a2 0050  
                          SwitchEventHandler@a3 0051                                     _FLASH_erase 07B6  
                                     _coil_conf 00C2                          __p_configurations_text 1F80  
                                   _click_timer 00CE                                     _FLASH_write 079B  
                  ??_INTERRUPT_InterruptManager 0072                                  ?_WaitUntilIdle 0070  
                                     __pswtext1 07F5                                        ?__unlock 0070  
                                InitDisplay@lut 0020                    RotaryEncoderEventHandler@val 00D7  
                      __size_of_TMR1_StartTimer 0003                                    _parallel_rot 1598  
                        ?_DisplayRefreshHandler 0070                     __size_of_DELAY_milliseconds 000E  
                         __size_of_ResetDisplay 000D                             __end_of_n_prime_rot 170F  
                                 _TMR1_CallBack 080D                                 _spi_master_open 034B  
                                ___wmul@product 0076                                        _LATAbits 010C  
                                      _LATCbits 010E                     __size_of_HEFLASH_writeBlock 0045  
                                     clear_ram0 1F55                             __end_of_read_rotary 029A  
                                      _PIE1bits 0091                           __size_of_SleepDisplay 0006  
                                   ??_ClearLine 0036                        __size_of_TMR1_WriteTimer 000F  
           __size_of_INTERRUPT_InterruptManager 0015                                        _PCONbits 0096  
                                      _PIR1bits 0011                                 FLASH_erase@temp 0074  
                                     _serie_rot 15E3                            __size_of_InitDisplay 0038  
          __end_of_ReadConfigurationsFromMemory 1000           __size_of_ReadConfigurationsFromMemory 0006  
                  _ReadConfigurationsFromMemory 0FFA                  DELAY_milliseconds@milliseconds 0072  
                     __size_of_SPI_ExchangeByte 000A                                       main@F9490 00A4  
                                     main@F9492 00A0                                       main@F9488 00A8  
                                      _SSP1CON1 0215                                        _SSP1CON2 0216  
                                      _TMR1_ISR 0867                                        _SSP1STAT 0214  
                             ??_PIN_MANAGER_IOC 0070                                        _SPI_Open 0595  
                             ??_TMR1_Initialize 0074                                    _ResetDisplay 0FE6  
                             ___wmul@multiplier 0072                                     _m_arrow_rot 1254  
                                   ??_GotoSleep 007A                                     _n_arrow_rot 130B  
                                  _SleepDisplay 0077                                  ?_TMR1_CallBack 0070  
                              ?_Button_Callback 0070                             __end_of_s_prime_rot 1679  
                    __size_of_HEFLASH_readBlock 0029                                        _SendData 0A8D  
              __size_of_ClearFrameMemoryPartial 0049                        __end_of_ClearFrameMemory 0FE6  
                             _bracket_right_rot 146C                               ?_SetMemoryPointer 0074  
                              FLASH_write@latch 0076                         __size_of_SPI_Initialize 0015  
                       ??_OSCILLATOR_Initialize 0072                                __size_of___abmod 0025  
                 ?_ReadConfigurationsFromMemory 0070                                 ??_WaitUntilIdle 0074  
                            ??_SetMemoryPointer 0078                                __size_of___awmod 0039  
                          __size_of_SendCommand 000A                        _TMR1_SetInterruptHandler 02A0  
                                   _n_prime_rot 16C4                           _TMR1_InterruptHandler 00D0  
                              __size_of__unlock 0009                SwitchEventHandler@new_switch_pos 0052  
                       ??_SetFrameMemoryPartial 0033                       _possible_general_conf_str 1000  
                       __end_of_spi_master_open 035D                                        __ptext10 02A6  
                                      __ptext11 0558                                        __ptext20 04A2  
                                      __ptext12 0363                                        __ptext21 026F  
                                      __ptext13 02A0                                        __ptext30 07B6  
                                      __ptext22 022C                                        __ptext14 02F4  
                                      __ptext31 07CA                                        __ptext23 055C  
                                      __ptext15 02B7                                        __ptext40 0A55  
                                      __ptext32 0B67                                        __ptext24 024A  
                                      __ptext16 029A                                        __ptext41 0828  
                                      __ptext33 090A                                        __ptext25 01A5  
                                      __ptext17 02AF                                        __ptext50 0FA4  
                                      __ptext42 0FE6                                        __ptext34 0F5C  
                                      __ptext26 0A97                                        __ptext18 01BC  
                                      __ptext51 0136                                        __ptext43 0FBC  
                                      __ptext35 08C1                                        __ptext27 0FF3  
                                      __ptext19 037E                                        __ptext60 1F61  
                                      __ptext52 035D                                        __ptext44 09D6  
                                      __ptext36 0F3D                                        __ptext28 0756  
                                      __ptext61 0800                                        __ptext45 0F9B  
                                      __ptext37 0052                                        __ptext29 079B  
                                      __ptext54 0867                                        __ptext46 0FAE  
                                      __ptext38 0077                                        __ptext55 087A  
                                      __ptext47 0A24                                        __ptext39 0B38  
                                      __ptext56 080D                                        __ptext48 0A8D  
                                      __ptext57 0003                                        __ptext49 0F52  
                                      __ptext58 1F6F                                        __ptext59 1F73  
                                  _SSP1CON1bits 0215                                      _FLASH_read 08B2  
                                   _read_rotary 026F                                      _IOCAF0_ISR 1F73  
                             ??_TMR1_StartTimer 0072                              FLASH_erase@address 0072  
            __size_of_RotaryEncoderEventHandler 0070                                   __size_of_main 00B9  
                                     shiftOut@i 0032                       __end_of_bracket_right_rot 14B7  
                                      _saved_pc 00AE                                        _shiftOut 04A2  
                     __size_of_ButtonEventReset 0006                                        _sleeping 00DA  
                             _SPI_ExchangeBlock 0000                                        int$flags 007E  
                            SetMemoryArea@x_end 0024                              SetMemoryArea@y_end 0026  
            __end_of_INTERRUPT_InterruptManager 0019                      _INTERRUPT_InterruptManager 0004  
                             ??_TMR1_WriteTimer 0072                        ??_sendCoilsConfiguration 003A  
                   __end_of_ImageFromPickupConf 0F3D                                _bracket_left_rot 14B7  
                         ImageFromPickupConf@pc 014A                                      _INTCONbits 000B  
                               FLASH_write@data 0074                                  __pstringtext10 13C2  
                                __pstringtext11 146C                                  __pstringtext20 170F  
                                __pstringtext12 14B7                                  __pstringtext21 17AA  
                                __pstringtext13 1502                                  __pstringtext22 17C8  
                                __pstringtext14 154D                                  __pstringtext23 17E6  
                                __pstringtext15 1598                                  __pstringtext24 17FF  
                                __pstringtext16 15E3                                  __pstringtext25 1814  
                                __pstringtext17 162E                                  __pstringtext26 1831  
                                __pstringtext18 1679                                  __pstringtext27 0000  
                                __pstringtext19 16C4                                 FLASH_write@temp 0077  
                                   _s_prime_rot 162E                                 ??_TMR1_CallBack 0070  
                                _configurations 1F80                         __size_of_WDT_Initialize 0004  
                                      intlevel1 0000          __end_of_IOCAF0_DefaultInterruptHandler 0801  
       __size_of_IOCAF0_DefaultInterruptHandler 0001                  _IOCAF0_DefaultInterruptHandler 0800  
                                    _PMCON1bits 0195                         ?_PIN_MANAGER_Initialize 0070  
                             _ButtonCaseHandler 0136                              ?_ButtonCaseHandler 0070  
                                 ?_DisplayFrame 0070                                _SPI_ExchangeByte 0FA4  
                         __end_of_SetMemoryArea 0A55                                    ___abmod@sign 0074  
                                  ?_FLASH_erase 0072                             ??_ButtonCaseHandler 0072  
                                  ?_FLASH_write 0072                                   __pstringtext1 175A  
                                 __pstringtext2 1788                                   __pstringtext3 1823  
                                 __pstringtext4 182B                                   __pstringtext5 1000  
                                 __pstringtext6 10E6                                   __pstringtext7 119D  
                                 __pstringtext8 1254                                   __pstringtext9 130B  
                       ??_DisplayRefreshHandler 007A                  ??_ReadConfigurationsFromMemory 0079  
                    __end_of_ButtonEventHandler 0B38                        _ImageFromPickupConf$2142 0140  
                      _ImageFromPickupConf$1280 0126                        _ImageFromPickupConf$1281 0128  
                      _ImageFromPickupConf$1283 0132                        _ImageFromPickupConf$1284 0133  
                      _ImageFromPickupConf$1285 0134                        _ImageFromPickupConf$1287 0135  
                      _ImageFromPickupConf$1279 0124                        _ImageFromPickupConf$1288 0136  
                      _ImageFromPickupConf$1289 0137                          __end_of_configurations 1F94  
                    __end_of_SwitchEventHandler 034B                                ?_spi_master_open 0070  
                                   ?_FLASH_read 0072                                     ?_IOCAF0_ISR 0070  
                __end_of_PIN_MANAGER_Initialize 02F4                       __end_of_ButtonCaseHandler 01A5  
                               _PIN_MANAGER_IOC 1F6F                  ClearFrameMemoryPartial@x_start 0028  
                       _ClearFrameMemoryPartial 08C1                   ImageFromPickupConf@draw_empty 0044  
                ClearFrameMemoryPartial@y_start 002A                          _configurations_absaddr 1F80  
           ImageFromPickupConf@need_to_draw_row 0120                                   _SPI_ReadBlock 0000  
                         _partial_refresh_count 00D6                                 _TMR1_Initialize 0363  
                                ??_DisplayFrame 0079                                    _SPI_ReadByte 0000  
